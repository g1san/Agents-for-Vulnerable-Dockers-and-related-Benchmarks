{
    "files": [
        {
            "location": "./../../dockers/CVE-2014-3120/custom_no_tool/docker-compose.yml",
            "content": "services:\n  web:\n    build: ./web\n    ports:\n      - \"5000:5000\"\n    depends_on:\n      - db\n      - elasticsearch\n    environment:\n      - DB_HOST=db\n      - DB_USER=root\n      - DB_PASSWORD=example\n      - DB_NAME=vuln\n      - ES_HOST=elasticsearch\n  db:\n    image: mysql:5.7\n    environment:\n      MYSQL_ROOT_PASSWORD: example\n      MYSQL_DATABASE: vuln\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\n    ports:\n      - \"3306:3306\"\n  elasticsearch:\n    image: docker.elastic.co/elasticsearch/elasticsearch:1.2.2\n    ports:\n      - \"9200:9200\"\n    environment:\n      - discovery.type=single-node\nvolumes:\n  db_data:"
        },
        {
            "location": "./../../dockers/CVE-2014-3120/custom_no_tool/web/Dockerfile",
            "content": "FROM python:3.8-buster\nWORKDIR /app\nCOPY app.py .\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends libffi-dev libssl-dev build-essential python3-dev && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir flask pymysql requests && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*\nEXPOSE 5000\nCMD [\"python3\", \"app.py\"]"
        },
        {
            "location": "./../../dockers/CVE-2014-3120/custom_no_tool/web/app.py",
            "content": "import os\nfrom flask import Flask, request, jsonify\nimport pymysql\nimport requests\n\napp = Flask(__name__)\n\ndef get_db():\n    return pymysql.connect(host='db', user='root', password='example', database='vuln', cursorclass=pymysql.cursors.DictCursor)\n\nES_HOST = os.getenv('ES_HOST', 'elasticsearch')\n\n@app.route('/')\ndef index():\n    query = request.args.get('query')\n    if query:\n        # Forward the user\u2011supplied query to Elasticsearch using the vulnerable 'source' parameter (CVE\u20112014\u20113120)\n        url = f'http://{ES_HOST}:9200/_search'\n        try:\n            resp = requests.get(url, params={'source': query})\n            return resp.text, resp.status_code, {'Content-Type': resp.headers.get('Content-Type', 'application/json')}\n        except Exception as e:\n            return str(e), 500\n    return \"Vulnerable Flask app ready. Use ?query=... to trigger CVE-2014-3120.\"\n\n@app.route('/users')\ndef users():\n    db = get_db()\n    with db.cursor() as cur:\n        cur.execute(\"SELECT * FROM users\")\n        rows = cur.fetchall()\n    return jsonify({\"users\": rows})\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)"
        },
        {
            "location": "./../../dockers/CVE-2014-3120/custom_no_tool/db/init.sql",
            "content": "CREATE TABLE users (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  username VARCHAR(50),\n  password VARCHAR(50)\n);\nINSERT INTO users (username, password) VALUES ('alice', 'alicepass'), ('bob', 'bobpass');"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2014-3120/custom_no_tool"
}