from flask import Flask, request, jsonify
import redis
import os
import requests

app = Flask(__name__)

# Redis client
r = redis.Redis(
    host=os.getenv('REDIS_HOST'),
    port=int(os.getenv('REDIS_PORT')),
    password=os.getenv('REDIS_PASS')
)

# GeoServer connection details
GEOSERVER_HOST = os.getenv('GEOSERVER_HOST')
GEOSERVER_PORT = os.getenv('GEOSERVER_PORT')
GEOSERVER_USER = os.getenv('GEOSERVER_USER')
GEOSERVER_PASS = os.getenv('GEOSERVER_PASS')
GEOSERVER_BASE = f"http://{GEOSERVER_HOST}:{GEOSERVER_PORT}/geoserver"

def geoserver_request(path):
    url = f"{GEOSERVER_BASE}{path}"
    try:
        resp = requests.get(url, auth=(GEOSERVER_USER, GEOSERVER_PASS), timeout=5)
        resp.raise_for_status()
        return resp.text
    except Exception as e:
        return str(e)

@app.route('/set', methods=['POST'])
def set_key():
    key = request.json.get('key')
    value = request.json.get('value')
    r.set(key, value)
    return jsonify({'status': 'ok'})

@app.route('/get/<key>', methods=['GET'])
def get_key(key):
    value = r.get(key)
    return jsonify({'key': key, 'value': value.decode() if value else None})

@app.route('/geoserver/info', methods=['GET'])
def geoserver_info():
    # Example: fetch version information from GeoServer REST API
    info = geoserver_request('/rest/about/version.json')
    return jsonify({'geoserver_info': info})

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8080)