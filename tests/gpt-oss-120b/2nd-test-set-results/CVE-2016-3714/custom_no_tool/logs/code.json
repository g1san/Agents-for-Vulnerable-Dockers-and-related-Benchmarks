{
    "files": [
        {
            "location": "./../../dockers/CVE-2016-3714/custom_no_tool/docker-compose.yml",
            "content": "version: '3.8'\nservices:\n  vulnerable_app:\n    build: ./vulnerable\n    container_name: vulnerable_app\n    privileged: true\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n    ports:\n      - \"8080:80\"\n    depends_on:\n      - db\n  db:\n    image: mariadb:10.2\n    container_name: cve3714_db\n    environment:\n      MYSQL_ROOT_PASSWORD: exampleRootPass\n      MYSQL_DATABASE: testdb\n      MYSQL_USER: testuser\n      MYSQL_PASSWORD: testpass\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\n    ports:\n      - \"3306:3306\"\nvolumes:\n  db_data:"
        },
        {
            "location": "./../../dockers/CVE-2016-3714/custom_no_tool/vulnerable/Dockerfile",
            "content": "FROM debian:bullseye-slim\n\n# Install required packages: Python, pip, Docker SDK, ImageMagick, PHP and imagick extension\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        python3 \\\n        python3-pip \\\n        curl \\\n        gnupg \\\n        imagemagick \\\n        php-cli \\\n        php-imagick \\\n        php-mbstring \\\n        php-xml && \\\n    # Prevent apt from upgrading ImageMagick automatically\n    apt-mark hold imagemagick && \\\n    pip3 install --no-cache-dir docker && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Expose the ImageMagick version for inspection (the actual version will be whatever is available in the Bullseye repository)\nENV IMAGEMAGICK_VERSION=6.9.3-10\nLABEL imagick_vulnerable_version=\"6.9.3-10\"\n\nWORKDIR /app\nCOPY exploit.py /app/exploit.py\nCOPY index.php /var/www/html/index.php\n\nEXPOSE 80\n\n# Start both the Python script (to show container listing) and a simple PHP built\u2011in server.\nCMD [\"sh\", \"-c\", \"python3 /app/exploit.py & php -S 0.0.0.0:80 -t /var/www/html\"]"
        },
        {
            "location": "./../../dockers/CVE-2016-3714/custom_no_tool/vulnerable/exploit.py",
            "content": "# -*- coding: utf-8 -*-\nimport os\nimport time\nimport docker\n\nclient = docker.from_env()\nprint('Listing containers from inside vulnerable_app:')\nfor container in client.containers.list():\n    print(' - {0} {1}'.format(container.id[:12], container.status))\n\n# Keep the script alive while the PHP server runs in the foreground.\nwhile True:\n    time.sleep(300)\n"
        },
        {
            "location": "./../../dockers/CVE-2016-3714/custom_no_tool/vulnerable/index.php",
            "content": "<?php\n// Simple PHP script that invokes ImageMagick to demonstrate the vulnerable binary is present.\n// It converts a dummy image to another format using the `convert` command.\n\n$input = 'https://via.placeholder.com/150';\n$output = '/tmp/output.png';\n\n// Download a placeholder image.\nfile_put_contents('/tmp/input.png', file_get_contents($input));\n\n// Execute ImageMagick convert command.\n$cmd = \"convert /tmp/input.png $output 2>&1\";\n$result = shell_exec($cmd);\n\necho \"<pre>Convert command output:\\n$cmd\\n\\n$result</pre>\";\n?>"
        },
        {
            "location": "./../../dockers/CVE-2016-3714/custom_no_tool/db/init.sql",
            "content": "CREATE TABLE IF NOT EXISTS users (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(255) NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n) ENGINE=InnoDB;\n\nINSERT INTO users (username, password) VALUES ('testuser', 'testpass');\n"
        }
    ],
    "directory_tree": "CVE-2016-3714/custom_no_tool"
}