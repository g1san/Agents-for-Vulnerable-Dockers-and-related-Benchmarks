{
    "files": [
        {
            "location": "./../../dockers/CVE-2018-19475/custom_no_tool/docker-compose.yml",
            "content": "services:\n  web:\n    build: ./web\n    ports:\n      - \"80:80\"\n    depends_on:\n      - db\n      - ghostscript\n    environment:\n      - DB_HOST=db\n      - DB_USER=root\n      - DB_PASSWORD=example\n      - DB_NAME=testdb\n  db:\n    image: mariadb:10.5\n    ports:\n      - \"3306:3306\"\n    environment:\n      MYSQL_ROOT_PASSWORD: example\n      MYSQL_DATABASE: testdb\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\n  ghostscript:\n    build: ./ghostscript\n    command: tail -f /dev/null\n    depends_on:\n      - db\nvolumes:\n  db_data:"
        },
        {
            "location": "./../../dockers/CVE-2018-19475/custom_no_tool/web/Dockerfile",
            "content": "FROM php:8.2-apache\nRUN apt-get update && apt-get install -y default-mysql-client && rm -rf /var/lib/apt/lists/*"
        },
        {
            "location": "./../../dockers/CVE-2018-19475/custom_no_tool/web/index.php",
            "content": "<?php\n$host = getenv('DB_HOST') ?: 'db';\n$user = getenv('DB_USER') ?: 'root';\n$pass = getenv('DB_PASSWORD') ?: 'example';\n$db   = getenv('DB_NAME') ?: 'testdb';\n\n$conn = new mysqli($host, $user, $pass, $db);\n\nif ($conn->connect_error) {\n    die('Connection failed: ' . $conn->connect_error);\n}\n\necho \"Connected successfully to MySQL!\";\n?>"
        },
        {
            "location": "./../../dockers/CVE-2018-19475/custom_no_tool/db/init.sql",
            "content": "CREATE TABLE IF NOT EXISTS users (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\n\nINSERT INTO users (username, password) VALUES ('alice', 'password1'), ('bob', 'password2');"
        },
        {
            "location": "./../../dockers/CVE-2018-19475/custom_no_tool/ghostscript/Dockerfile",
            "content": "FROM debian:stretch\n\n# Install required tools and add snapshot repositories (trusted to bypass signature verification)\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends gnupg ca-certificates wget && \\\n    echo \"deb [trusted=yes] http://snapshot.debian.org/archive/debian/20200101T000000Z/ stretch main\" > /etc/apt/sources.list && \\\n    echo \"deb [trusted=yes] http://snapshot.debian.org/archive/debian-security/20200101T000000Z/ stretch/updates main\" >> /etc/apt/sources.list && \\\n    apt-get update -o Acquire::Check-Valid-Until=false && \\\n    apt-get install -y --allow-downgrades --no-install-recommends ghostscript=9.25~dfsg-0+deb9u1 && \\\n    rm -rf /var/lib/apt/lists/*"
        }
    ],
    "directory_tree": "custom_no_tool/\n\u251c\u2500 docker-compose.yml\n\u251c\u2500 web/\n\u2502  \u251c\u2500 Dockerfile\n\u2502  \u2514\u2500 index.php\n\u251c\u2500 db/\n\u2502  \u2514\u2500 init.sql\n\u2514\u2500 ghostscript/\n   \u2514\u2500 Dockerfile"
}