from flask import Flask, request, send_file, abort
import subprocess
import os
import uuid

app = Flask(__name__)
UPLOAD_DIR = '/data/uploads'
OUTPUT_DIR = '/data/outputs'
os.makedirs(UPLOAD_DIR, exist_ok=True)
os.makedirs(OUTPUT_DIR, exist_ok=True)

@app.route('/convert', methods=['POST'])
def convert():
    if 'file' not in request.files:
        abort(400, 'No file part')
    file = request.files['file']
    if file.filename == '':
        abort(400, 'No selected file')
    # Save uploaded file
    input_path = os.path.join(UPLOAD_DIR, f"{uuid.uuid4()}_{file.filename}")
    file.save(input_path)
    # Define output path (PNG conversion for demonstration)
    output_path = os.path.join(OUTPUT_DIR, f"{uuid.uuid4()}.png")
    # Call ImageMagick's convert (vulnerable version) without sanitisation to reproduce CVE behavior
    try:
        subprocess.check_call([
            'convert', input_path, output_path
        ])
    except subprocess.CalledProcessError as e:
        abort(500, f'Conversion failed: {e}')
    return send_file(output_path, mimetype='image/png')

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
