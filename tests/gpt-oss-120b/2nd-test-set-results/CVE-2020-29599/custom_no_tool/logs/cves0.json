{
  "version": "15.0.6",
  "vulnerabilities": [
    {
      "id": "82e2b3d613d5c73561f2122186dad5d16d1c86bd5fc6188701c1c953cb31c433",
      "category": "container_scanning",
      "message": "CVE-2023-23934 on werkzeug@2.0.3",
      "description": "Browsers may allow \"nameless\" cookies that look like `=value` instead of `key=value`. A vulnerable browser may allow a compromised application on an adjacent subdomain to exploit this to set a cookie like `=__Host-test=bad` for another subdomain.\n\nWerkzeug <= 2.2.2 will parse the cookie `=__Host-test=bad` as `__Host-test=bad`. If a Werkzeug application is running next to a vulnerable or malicious subdomain which sets such a cookie using a vulnerable browser, the Werkzeug application will see the bad cookie value but the valid cookie key.",
      "cve": "CVE-2023-23934",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade werkzeug@2.0.3 to 2.2.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/werkzeug@2.0.3"
          },
          "version": "2.0.3"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-23934",
          "value": "CVE-2023-23934",
          "url": "https://scout.docker.com/v/CVE-2023-23934?s=github&n=werkzeug&t=pypi&vr=%3C2.2.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-23934?s=github&n=werkzeug&t=pypi&vr=%3C2.2.3"
        }
      ]
    },
    {
      "id": "cc6c2ed83e23825f7fea19d3dab83aaef18b25d03cc30c31c4e5463929b31899",
      "category": "container_scanning",
      "message": "CVE-2021-23839 on alpine/openssl@1.1.1g-r0",
      "cve": "CVE-2021-23839",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@1.1.1g-r0 to 1.1.1j-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@1.1.1g-r0?os_name=alpine&os_version=3.9"
          },
          "version": "1.1.1g-r0"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-23839",
          "value": "CVE-2021-23839",
          "url": "https://scout.docker.com/v/CVE-2021-23839?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.9&vr=%3C1.1.1j-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-23839?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.9&vr=%3C1.1.1j-r0"
        }
      ]
    },
    {
      "id": "1fc2d1f70f71f9c83f64c4b8ecf111515fe79ef72feaa9fb131556ff824a31b2",
      "category": "container_scanning",
      "message": "CVE-2024-22195 on jinja2@3.0.3",
      "description": "The `xmlattr` filter in affected versions of Jinja accepts keys containing spaces. XML/HTML attributes cannot contain spaces, as each would then be interpreted as a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. Note that accepting keys as user input is not common or a particularly intended use case of the `xmlattr` filter, and an application doing so should already be verifying what keys are provided regardless of this fix.",
      "cve": "CVE-2024-22195",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade jinja2@3.0.3 to 3.1.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/jinja2@3.0.3"
          },
          "version": "3.0.3"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-22195",
          "value": "CVE-2024-22195",
          "url": "https://scout.docker.com/v/CVE-2024-22195?s=github&n=jinja2&t=pypi&vr=%3C3.1.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-22195?s=github&n=jinja2&t=pypi&vr=%3C3.1.3"
        }
      ]
    },
    {
      "id": "ba89e6e9081a17a488c3a92c04623a19e5dc86fe73451448961d66d23ae81842",
      "category": "container_scanning",
      "message": "CVE-2024-34064 on jinja2@3.0.3",
      "description": "The `xmlattr` filter in affected versions of Jinja accepts keys containing non-attribute characters. XML/HTML attributes cannot contain spaces, `/`, `>`, or `=`, as each would then be interpreted as starting a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. The fix for the previous GHSA-h5c8-rqwp-cp95 CVE-2024-22195 only addressed spaces but not other characters.\n\nAccepting keys as user input is now explicitly considered an unintended use case of the `xmlattr` filter, and code that does so without otherwise validating the input should be flagged as insecure, regardless of Jinja version. Accepting _values_ as user input continues to be safe.",
      "cve": "CVE-2024-34064",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade jinja2@3.0.3 to 3.1.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/jinja2@3.0.3"
          },
          "version": "3.0.3"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34064",
          "value": "CVE-2024-34064",
          "url": "https://scout.docker.com/v/CVE-2024-34064?s=github&n=jinja2&t=pypi&vr=%3C3.1.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34064?s=github&n=jinja2&t=pypi&vr=%3C3.1.4"
        }
      ]
    },
    {
      "id": "0daed8e6cc256bac1d8f08de5972f184a7f0b44121bd4bb9a8564e0d27e36375",
      "category": "container_scanning",
      "message": "CVE-2024-56201 on jinja2@3.0.3",
      "description": "A bug in the Jinja compiler allows an attacker that controls both the content and filename of a template to execute arbitrary Python code, regardless of if Jinja's sandbox is used.\n\nTo exploit the vulnerability, an attacker needs to control both the filename and the contents of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates where the template author can also choose the template filename.",
      "cve": "CVE-2024-56201",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade jinja2@3.0.3 to 3.1.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/jinja2@3.0.3"
          },
          "version": "3.0.3"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-56201",
          "value": "CVE-2024-56201",
          "url": "https://scout.docker.com/v/CVE-2024-56201?s=github&n=jinja2&t=pypi&vr=%3E%3D3.0.0%2C%3C%3D3.1.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-56201?s=github&n=jinja2&t=pypi&vr=%3E%3D3.0.0%2C%3C%3D3.1.4"
        }
      ]
    },
    {
      "id": "249831ccf05e35492ebb9c2cdabdd120af2bbb15d7211663cd21a2c668899425",
      "category": "container_scanning",
      "message": "CVE-2024-56326 on jinja2@3.0.3",
      "description": "An oversight in how the Jinja sandboxed environment detects calls to `str.format` allows an attacker that controls the content of a template to execute arbitrary Python code.\n\nTo exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates.\n\nJinja's sandbox does catch calls to `str.format` and ensures they don't escape the sandbox. However, it's possible to store a reference to a malicious string's `format` method, then pass that to a filter that calls it. No such filters are built-in to Jinja, but could be present through custom filters in an application. After the fix, such indirect calls are also handled by the sandbox.",
      "cve": "CVE-2024-56326",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade jinja2@3.0.3 to 3.1.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/jinja2@3.0.3"
          },
          "version": "3.0.3"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-56326",
          "value": "CVE-2024-56326",
          "url": "https://scout.docker.com/v/CVE-2024-56326?s=github&n=jinja2&t=pypi&vr=%3C%3D3.1.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-56326?s=github&n=jinja2&t=pypi&vr=%3C%3D3.1.4"
        }
      ]
    },
    {
      "id": "fbcf8fabf92550aceeb463c2bdc94f4082f371300e7137e860574c36c6c6a215",
      "category": "container_scanning",
      "message": "CVE-2025-27516 on jinja2@3.0.3",
      "description": "An oversight in how the Jinja sandboxed environment interacts with the `|attr` filter allows an attacker that controls the content of a template to execute arbitrary Python code.\n\nTo exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates.\n\nJinja's sandbox does catch calls to `str.format` and ensures they don't escape the sandbox. However, it's possible to use the `|attr` filter to get a reference to a string's plain format method, bypassing the sandbox. After the fix, the `|attr` filter no longer bypasses the environment's attribute lookup.",
      "cve": "CVE-2025-27516",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade jinja2@3.0.3 to 3.1.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/jinja2@3.0.3"
          },
          "version": "3.0.3"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-27516",
          "value": "CVE-2025-27516",
          "url": "https://scout.docker.com/v/CVE-2025-27516?s=github&n=jinja2&t=pypi&vr=%3C%3D3.1.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-27516?s=github&n=jinja2&t=pypi&vr=%3C%3D3.1.5"
        }
      ]
    },
    {
      "id": "132c9876d6469cfb5497f26672aa3c9cbd5ad7d3fafa199b5450242b8b3734d4",
      "category": "container_scanning",
      "message": "CVE-2020-12049 on alpine/dbus@1.10.28-r1",
      "cve": "CVE-2020-12049",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/dbus@1.10.28-r1 to 1.12.28-r1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/dbus@1.10.28-r1?os_name=alpine&os_version=3.9"
          },
          "version": "1.10.28-r1"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-12049",
          "value": "CVE-2020-12049",
          "url": "https://scout.docker.com/v/CVE-2020-12049?s=alpine&n=dbus&ns=alpine&t=apk&osn=alpine&osv=3.9&vr=%3C1.12.28-r1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-12049?s=alpine&n=dbus&ns=alpine&t=apk&osn=alpine&osv=3.9&vr=%3C1.12.28-r1"
        }
      ]
    },
    {
      "id": "7707ca013fb1b48693b9a6634bdddf75209f83566d0226fd76fb70ac6697e04a",
      "category": "container_scanning",
      "message": "CVE-2020-28928 on alpine/musl@1.1.20-r5",
      "cve": "CVE-2020-28928",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/musl@1.1.20-r5 to 1.1.20-r6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/musl@1.1.20-r5?os_name=alpine&os_version=3.9"
          },
          "version": "1.1.20-r5"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-28928",
          "value": "CVE-2020-28928",
          "url": "https://scout.docker.com/v/CVE-2020-28928?s=alpine&n=musl&ns=alpine&t=apk&osn=alpine&osv=3.9&vr=%3C1.1.20-r6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-28928?s=alpine&n=musl&ns=alpine&t=apk&osn=alpine&osv=3.9&vr=%3C1.1.20-r6"
        }
      ]
    },
    {
      "id": "d3b5d7c48d2a5295ea7b74c18804a46415abb89973871e4ab89c9230fcfe3312",
      "category": "container_scanning",
      "message": "CVE-2023-46136 on werkzeug@2.0.3",
      "description": "Werkzeug multipart data parser needs to find a boundary that may be between consecutive chunks. That's why parsing is based on looking for newline characters. Unfortunately, code looking for partial boundary in the buffer is written inefficiently, so if we upload a file that starts with CR or LF and then is followed by megabytes of data without these characters: all of these bytes are appended chunk by chunk into internal bytearray and lookup for boundary is performed on growing buffer.\n\nThis allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. If many concurrent requests are sent continuously, this can exhaust or kill all available workers.\n",
      "cve": "CVE-2023-46136",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade werkzeug@2.0.3 to 2.3.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/werkzeug@2.0.3"
          },
          "version": "2.0.3"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-46136",
          "value": "CVE-2023-46136",
          "url": "https://scout.docker.com/v/CVE-2023-46136?s=github&n=werkzeug&t=pypi&vr=%3C2.3.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-46136?s=github&n=werkzeug&t=pypi&vr=%3C2.3.8"
        }
      ]
    },
    {
      "id": "52ce7511ad71267e9e18f0a68cc4af861ce5a21df6fc5405ed44b0269eacc429",
      "category": "container_scanning",
      "message": "CVE-2020-1971 on alpine/openssl@1.1.1g-r0",
      "cve": "CVE-2020-1971",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@1.1.1g-r0 to 1.1.1i-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@1.1.1g-r0?os_name=alpine&os_version=3.9"
          },
          "version": "1.1.1g-r0"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-1971",
          "value": "CVE-2020-1971",
          "url": "https://scout.docker.com/v/CVE-2020-1971?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.9&vr=%3C1.1.1i-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-1971?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.9&vr=%3C1.1.1i-r0"
        }
      ]
    },
    {
      "id": "f473d740078c9f1d0d1906b66966be0b228da4a2333b3f45106c0b734e768ec5",
      "category": "container_scanning",
      "message": "CVE-2021-23841 on alpine/openssl@1.1.1g-r0",
      "cve": "CVE-2021-23841",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@1.1.1g-r0 to 1.1.1j-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@1.1.1g-r0?os_name=alpine&os_version=3.9"
          },
          "version": "1.1.1g-r0"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-23841",
          "value": "CVE-2021-23841",
          "url": "https://scout.docker.com/v/CVE-2021-23841?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.9&vr=%3C1.1.1j-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-23841?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.9&vr=%3C1.1.1j-r0"
        }
      ]
    },
    {
      "id": "1fb794aeb0aa4ee37e88bae033111d3dfdfe5ae2d2e047dda2db180acbda72de",
      "category": "container_scanning",
      "message": "CVE-2021-3449 on alpine/openssl@1.1.1g-r0",
      "cve": "CVE-2021-3449",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@1.1.1g-r0 to 1.1.1k-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@1.1.1g-r0?os_name=alpine&os_version=3.9"
          },
          "version": "1.1.1g-r0"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-3449",
          "value": "CVE-2021-3449",
          "url": "https://scout.docker.com/v/CVE-2021-3449?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.9&vr=%3C1.1.1k-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-3449?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.9&vr=%3C1.1.1k-r0"
        }
      ]
    },
    {
      "id": "8d6ffea008afca02037e9b19f953124ac9161d6c9699d0cd33c9e2b4f4cf85fb",
      "category": "container_scanning",
      "message": "CVE-2025-8869 on pip@18.1",
      "description": "### Summary\n\nIn the fallback extraction path for source distributions, `pip` used Python’s `tarfile` module without verifying that symbolic/hard link targets resolve inside the intended extraction directory. A malicious sdist can include links that escape the target directory and overwrite arbitrary files on the invoking host during `pip install`.\n\n### Impact\n\nSuccessful exploitation enables arbitrary file overwrite outside the build/extraction directory on the machine running `pip`. This can be leveraged to tamper with configuration or startup files and may lead to further code execution depending on the environment, but the direct, guaranteed impact is integrity compromise on the vulnerable system.\n\n### Conditions\n\nThe issue is triggered when installing an attacker-controlled sdist (e.g., from an index or URL) and the fallback extraction code path is used. No special privileges are required beyond running `pip install`; active user action is necessary.\n\n### Remediation\n\nThe [fix](https://github.com/pypa/pip/pull/13550) is available starting in pip `25.3`. Using a Python interpreter that implements the safe-extraction behavior described by **PEP 706** provides additional defense in depth for other `tarfile` issues but is not a substitute for upgrading pip for this specific flaw.",
      "cve": "CVE-2025-8869",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade pip@18.1 to 25.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/pip@18.1"
          },
          "version": "18.1"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-8869",
          "value": "CVE-2025-8869",
          "url": "https://scout.docker.com/v/CVE-2025-8869?s=github&n=pip&t=pypi&vr=%3C%3D25.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-8869?s=github&n=pip&t=pypi&vr=%3C%3D25.2"
        }
      ]
    },
    {
      "id": "48fe396d021f66fbda46b0c564801a51e73067a95e595334999cddadb405c13b",
      "category": "container_scanning",
      "message": "CVE-2024-49766 on werkzeug@2.0.3",
      "description": "On Python < 3.11 on Windows, `os.path.isabs()` does not catch UNC paths like `//server/share`. Werkzeug's `safe_join()` relies on this check, and so can produce a path that is not safe, potentially allowing unintended access to data. Applications using Python >= 3.11, or not using Windows, are not vulnerable.",
      "cve": "CVE-2024-49766",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade werkzeug@2.0.3 to 3.0.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/werkzeug@2.0.3"
          },
          "version": "2.0.3"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-49766",
          "value": "CVE-2024-49766",
          "url": "https://scout.docker.com/v/CVE-2024-49766?s=github&n=werkzeug&t=pypi&vr=%3C%3D3.0.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-49766?s=github&n=werkzeug&t=pypi&vr=%3C%3D3.0.5"
        }
      ]
    },
    {
      "id": "0ae43538c615deeb04f851d7409267a15fef5afdd7156fccd690de92b6c5f34e",
      "category": "container_scanning",
      "message": "CVE-2023-5752 on pip@18.1",
      "description": "When installing a package from a Mercurial VCS URL, e.g. `pip install hg+...`, with pip prior to v23.3, the specified Mercurial revision could be used to inject arbitrary configuration options to the `hg clone` call (e.g. `--config`). Controlling the Mercurial configuration can modify how and which repository is installed. This vulnerability does not affect users who aren't installing from Mercurial.",
      "cve": "CVE-2023-5752",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade pip@18.1 to 23.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/pip@18.1"
          },
          "version": "18.1"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-5752",
          "value": "CVE-2023-5752",
          "url": "https://scout.docker.com/v/CVE-2023-5752?s=github&n=pip&t=pypi&vr=%3C23.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-5752?s=github&n=pip&t=pypi&vr=%3C23.3"
        }
      ]
    },
    {
      "id": "42d2a2f8763a48ff4d64dc1d3f6baf033cda9d455a5303385da543b7ccdb8c8e",
      "category": "container_scanning",
      "message": "CVE-2024-49767 on werkzeug@2.0.3",
      "description": "Applications using Werkzeug to parse `multipart/form-data` requests are vulnerable to resource exhaustion. A specially crafted form body can bypass the `Request.max_form_memory_size` setting.\n\n\nThe `Request.max_content_length` setting, as well as resource limits provided by deployment software and platforms, are also available to limit the resources used during a request. This vulnerability does not affect those settings. All three types of limits should be considered and set appropriately when deploying an application.",
      "cve": "CVE-2024-49767",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade werkzeug@2.0.3 to 3.0.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/werkzeug@2.0.3"
          },
          "version": "2.0.3"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-49767",
          "value": "CVE-2024-49767",
          "url": "https://scout.docker.com/v/CVE-2024-49767?s=github&n=werkzeug&t=pypi&vr=%3C%3D3.0.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-49767?s=github&n=werkzeug&t=pypi&vr=%3C%3D3.0.5"
        }
      ]
    },
    {
      "id": "149cf6bbc7644f31377db27b8489a5cc0ac59647d7d4290771d3a6be558fb6e2",
      "category": "container_scanning",
      "message": "CVE-2024-5569 on zipp@3.6.0",
      "description": "A Denial of Service (DoS) vulnerability exists in the jaraco/zipp library, affecting all versions prior to 3.19.1. The vulnerability is triggered when processing a specially crafted zip file that leads to an infinite loop. This issue also impacts the zipfile module of CPython, as features from the third-party zipp library are later merged into CPython, and the affected code is identical in both projects. The infinite loop can be initiated through the use of functions affecting the `Path` module in both zipp and zipfile, such as `joinpath`, the overloaded division operator, and `iterdir`. Although the infinite loop is not resource exhaustive, it prevents the application from responding. The vulnerability was addressed in version 3.19.1 of jaraco/zipp.",
      "cve": "CVE-2024-5569",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade zipp@3.6.0 to 3.19.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/zipp@3.6.0"
          },
          "version": "3.6.0"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-5569",
          "value": "CVE-2024-5569",
          "url": "https://scout.docker.com/v/CVE-2024-5569?s=github&n=zipp&t=pypi&vr=%3C3.19.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-5569?s=github&n=zipp&t=pypi&vr=%3C3.19.1"
        }
      ]
    },
    {
      "id": "4f50af41c6245b3d671320afa840bd7e3bf69501ed9e70545e7940099c70d664",
      "category": "container_scanning",
      "message": "CVE-2021-3572 on pip@18.1",
      "description": "A flaw was found in python-pip in the way it handled Unicode separators in git references. A remote attacker could possibly use this issue to install a different revision on a repository. The highest threat from this vulnerability is to data integrity. This is fixed in python-pip version 21.1.",
      "cve": "CVE-2021-3572",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade pip@18.1 to 21.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/pip@18.1"
          },
          "version": "18.1"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-3572",
          "value": "CVE-2021-3572",
          "url": "https://scout.docker.com/v/CVE-2021-3572?s=github&n=pip&t=pypi&vr=%3C21.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-3572?s=github&n=pip&t=pypi&vr=%3C21.1"
        }
      ]
    },
    {
      "id": "d1038b3dc09dc07bec0353aaf4d1bec2988579ed79168905a4b96c4fa80c41b4",
      "category": "container_scanning",
      "message": "CVE-2021-3450 on alpine/openssl@1.1.1g-r0",
      "cve": "CVE-2021-3450",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@1.1.1g-r0 to 1.1.1k-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@1.1.1g-r0?os_name=alpine&os_version=3.9"
          },
          "version": "1.1.1g-r0"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-3450",
          "value": "CVE-2021-3450",
          "url": "https://scout.docker.com/v/CVE-2021-3450?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.9&vr=%3C1.1.1k-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-3450?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.9&vr=%3C1.1.1k-r0"
        }
      ]
    },
    {
      "id": "21d9ab1a19272c9a62419e156a9174c9833aac076733b1936fe8128ed4cb609c",
      "category": "container_scanning",
      "message": "CVE-2020-8231 on alpine/curl@7.64.0-r5",
      "cve": "CVE-2020-8231",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@7.64.0-r5 to 7.66.0-r5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@7.64.0-r5?os_name=alpine&os_version=3.9"
          },
          "version": "7.64.0-r5"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-8231",
          "value": "CVE-2020-8231",
          "url": "https://scout.docker.com/v/CVE-2020-8231?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.9&vr=%3C7.66.0-r5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-8231?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.9&vr=%3C7.66.0-r5"
        }
      ]
    },
    {
      "id": "a28bc36f549a4c01e5e1fa92e47bd22df4d1b7591cc756116100c5f2ad21f99d",
      "category": "container_scanning",
      "message": "CVE-2021-23840 on alpine/openssl@1.1.1g-r0",
      "cve": "CVE-2021-23840",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@1.1.1g-r0 to 1.1.1j-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@1.1.1g-r0?os_name=alpine&os_version=3.9"
          },
          "version": "1.1.1g-r0"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-23840",
          "value": "CVE-2021-23840",
          "url": "https://scout.docker.com/v/CVE-2021-23840?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.9&vr=%3C1.1.1j-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-23840?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.9&vr=%3C1.1.1j-r0"
        }
      ]
    },
    {
      "id": "bb11baf6e2a5a2f6858026aee3706a037a15c29ad00cf8bd1330cf8ca06c7a22",
      "category": "container_scanning",
      "message": "CVE-2023-25577 on werkzeug@2.0.3",
      "description": "Werkzeug's multipart form data parser will parse an unlimited number of parts, including file parts. Parts can be a small amount of bytes, but each requires CPU time to parse and may use more memory as Python data. If a request can be made to an endpoint that accesses `request.data`, `request.form`, `request.files`, or `request.get_data(parse_form_data=False)`, it can cause unexpectedly high resource usage.\n\nThis allows an attacker to cause a denial of service by sending crafted multipart data to an endpoint that will parse it. The amount of CPU time required can block worker processes from handling legitimate requests. The amount of RAM required can trigger an out of memory kill of the process. Unlimited file parts can use up memory and file handles. If many concurrent requests are sent continuously, this can exhaust or kill all available workers.",
      "cve": "CVE-2023-25577",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade werkzeug@2.0.3 to 2.2.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/werkzeug@2.0.3"
          },
          "version": "2.0.3"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-25577",
          "value": "CVE-2023-25577",
          "url": "https://scout.docker.com/v/CVE-2023-25577?s=github&n=werkzeug&t=pypi&vr=%3C2.2.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-25577?s=github&n=werkzeug&t=pypi&vr=%3C2.2.3"
        }
      ]
    },
    {
      "id": "5f7c6c2e35ee4d1b102980291798c9e87f7ea4fbe1201bea672340f1ba90e5db",
      "category": "container_scanning",
      "message": "CVE-2024-34069 on werkzeug@2.0.3",
      "description": "The debugger in affected versions of Werkzeug can allow an attacker to execute code on a developer's machine under some circumstances. This requires the attacker to get the developer to interact with a domain and subdomain they control, and enter the debugger PIN, but if they are successful it allows access to the debugger even if it is only running on localhost. This also requires the attacker to guess a URL in the developer's application that will trigger the debugger.",
      "cve": "CVE-2024-34069",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade werkzeug@2.0.3 to 3.0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/werkzeug@2.0.3"
          },
          "version": "2.0.3"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34069",
          "value": "CVE-2024-34069",
          "url": "https://scout.docker.com/v/CVE-2024-34069?s=github&n=werkzeug&t=pypi&vr=%3C3.0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34069?s=github&n=werkzeug&t=pypi&vr=%3C3.0.3"
        }
      ]
    },
    {
      "id": "76a4a3e1632a8b68e39800e4da44aaca274769f757ea56658dde9af914808407",
      "category": "container_scanning",
      "message": "CVE-2024-6345 on setuptools@40.6.2",
      "description": "A vulnerability in the `package_index` module of pypa/setuptools versions up to 69.1.1 allows for remote code execution via its download functions. These functions, which are used to download packages from URLs provided by users or retrieved from package index servers, are susceptible to code injection. If these functions are exposed to user-controlled inputs, such as package URLs, they can execute arbitrary commands on the system. The issue is fixed in version 70.0.",
      "cve": "CVE-2024-6345",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade setuptools@40.6.2 to 70.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/setuptools@40.6.2"
          },
          "version": "40.6.2"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-6345",
          "value": "CVE-2024-6345",
          "url": "https://scout.docker.com/v/CVE-2024-6345?s=github&n=setuptools&t=pypi&vr=%3C70.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-6345?s=github&n=setuptools&t=pypi&vr=%3C70.0.0"
        }
      ]
    },
    {
      "id": "db6b923d840af8874829be782e5d333c3a04ef6c764e83cf48c2093337785f12",
      "category": "container_scanning",
      "message": "CVE-2025-47273 on setuptools@40.6.2",
      "description": "### Summary \nA path traversal vulnerability in `PackageIndex` was fixed in setuptools version 78.1.1\n\n### Details\n```\n    def _download_url(self, url, tmpdir):\n        # Determine download filename\n        #\n        name, _fragment = egg_info_for_url(url)\n        if name:\n            while '..' in name:\n                name = name.replace('..', '.').replace('\\\\', '_')\n        else:\n            name = \"__downloaded__\"  # default if URL has no path contents\n\n        if name.endswith('.[egg.zip](http://egg.zip/)'):\n            name = name[:-4]  # strip the extra .zip before download\n\n -->       filename = os.path.join(tmpdir, name)\n```\n\nHere: https://github.com/pypa/setuptools/blob/6ead555c5fb29bc57fe6105b1bffc163f56fd558/setuptools/package_index.py#L810C1-L825C88\n\n`os.path.join()` discards the first argument `tmpdir` if the second begins with a slash or drive letter.\n`name` is derived from a URL without sufficient sanitization. While there is some attempt to sanitize by replacing instances of '..' with '.', it is insufficient.\n\n### Risk Assessment\nAs easy_install and package_index are deprecated, the exploitation surface is reduced.\nHowever, it seems this could be exploited in a similar fashion like https://github.com/advisories/GHSA-r9hx-vwmv-q579, and as described by POC 4 in https://github.com/advisories/GHSA-cx63-2mw6-8hw5 report: via malicious URLs present on the pages of a package index.\n\n### Impact\nAn attacker would be allowed to write files to arbitrary locations on the filesystem with the permissions of the process running the Python code, which could escalate to RCE depending on the context.\n\n### References\nhttps://huntr.com/bounties/d6362117-ad57-4e83-951f-b8141c6e7ca5\nhttps://github.com/pypa/setuptools/issues/4946",
      "cve": "CVE-2025-47273",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade setuptools@40.6.2 to 78.1.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/setuptools@40.6.2"
          },
          "version": "40.6.2"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-47273",
          "value": "CVE-2025-47273",
          "url": "https://scout.docker.com/v/CVE-2025-47273?s=github&n=setuptools&t=pypi&vr=%3C78.1.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-47273?s=github&n=setuptools&t=pypi&vr=%3C78.1.1"
        }
      ]
    },
    {
      "id": "63a4e0e58e0b0ae8fd7ff647f44a7c9b9e65cdcfc6621bf1410ccd1f24d6b36e",
      "category": "container_scanning",
      "message": "CVE-2019-20916 on pip@18.1",
      "description": "The pip package before 19.2 for Python allows Directory Traversal when a URL is given in an install command, because a Content-Disposition header can have ../ in a filename, as demonstrated by overwriting the /root/.ssh/authorized_keys file. This occurs in _download_http_url in _internal/download.py. A fix was committed 6704f2ace.",
      "cve": "CVE-2019-20916",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade pip@18.1 to 19.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/pip@18.1"
          },
          "version": "18.1"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-20916",
          "value": "CVE-2019-20916",
          "url": "https://scout.docker.com/v/CVE-2019-20916?s=github&n=pip&t=pypi&vr=%3C19.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-20916?s=github&n=pip&t=pypi&vr=%3C19.2"
        }
      ]
    },
    {
      "id": "20fa4b0d3550efc1bed8ea861080c6a357148ed2a7bdbebbc2c8ee1b0ba2097f",
      "category": "container_scanning",
      "message": "CVE-2022-40897 on setuptools@40.6.2",
      "description": "Python Packaging Authority (PyPA)'s setuptools is a library designed to facilitate packaging Python projects. Setuptools version 65.5.0 and earlier could allow remote attackers to cause a denial of service by fetching malicious HTML from a PyPI package or custom PackageIndex page due to a vulnerable Regular Expression in `package_index`. This has been patched in version 65.5.1.",
      "cve": "CVE-2022-40897",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade setuptools@40.6.2 to 65.5.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/setuptools@40.6.2"
          },
          "version": "40.6.2"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-40897",
          "value": "CVE-2022-40897",
          "url": "https://scout.docker.com/v/CVE-2022-40897?s=github&n=setuptools&t=pypi&vr=%3C65.5.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-40897?s=github&n=setuptools&t=pypi&vr=%3C65.5.1"
        }
      ]
    },
    {
      "id": "346db6981f1f5af6bde3a49b88ebd387f395d82a777e46786df8f9627fda8959",
      "category": "container_scanning",
      "message": "CVE-2023-30861 on flask@2.0.3",
      "description": "When all of the following conditions are met, a response containing data intended for one client may be cached and subsequently sent by a proxy to other clients. If the proxy also caches `Set-Cookie` headers, it may send one client's `session` cookie to other clients. The severity depends on the application's use of the session, and the proxy's behavior regarding cookies. The risk depends on _all_ these conditions being met.\n\n1. The application must be hosted behind a caching proxy that does not strip cookies or ignore responses with cookies.\n2. The application sets [`session.permanent = True`](https://flask.palletsprojects.com/en/2.3.x/api/#flask.session.permanent).\n2. The application does not access or modify the session at any point during a request.\n4. [`SESSION_REFRESH_EACH_REQUEST`](https://flask.palletsprojects.com/en/2.3.x/config/#SESSION_REFRESH_EACH_REQUEST) is enabled (the default).\n5. The application does not set a `Cache-Control` header to indicate that a page is private or should not be cached.\n\nThis happens because vulnerable versions of Flask only set the `Vary: Cookie` header when the session is accessed or modified, not when it is refreshed (re-sent to update the expiration) without being accessed or modified.",
      "cve": "CVE-2023-30861",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade flask@2.0.3 to 2.2.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/flask@2.0.3"
          },
          "version": "2.0.3"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-30861",
          "value": "CVE-2023-30861",
          "url": "https://scout.docker.com/v/CVE-2023-30861?s=github&n=flask&t=pypi&vr=%3C2.2.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-30861?s=github&n=flask&t=pypi&vr=%3C2.2.5"
        }
      ]
    },
    {
      "id": "4f54846eb09e9ec8930eca426dfd913a832286a00c0ff699ba04b9ee50d6e1ed",
      "category": "container_scanning",
      "message": "CVE-2022-29361 on werkzeug@2.0.3",
      "description": "** DISPUTED ** Improper parsing of HTTP requests in Pallets Werkzeug v2.1.0 and below allows attackers to perform HTTP Request Smuggling using a crafted HTTP request with multiple requests included inside the body. NOTE: the vendor's position is that this behavior can only occur in unsupported configurations involving development mode and an HTTP server from outside the Werkzeug project.",
      "cve": "CVE-2022-29361",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade werkzeug@2.0.3 to 2.1.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/werkzeug@2.0.3"
          },
          "version": "2.0.3"
        },
        "operating_system": "alpine 3.9",
        "image": "custom_no_tool-imagemagick:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-29361",
          "value": "CVE-2022-29361",
          "url": "https://scout.docker.com/v/CVE-2022-29361?s=pypa&n=werkzeug&t=pypi&vr=%3C2.1.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-29361?s=pypa&n=werkzeug&t=pypi&vr=%3C2.1.1"
        }
      ]
    }
  ],
  "remediations": [],
  "scan": {
    "start_time": "2025-10-31T22:19:28",
    "end_time": "2025-10-31T22:19:28",
    "status": "success",
    "type": "container_scanning",
    "scanner": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    },
    "analyzer": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    }
  }
}
