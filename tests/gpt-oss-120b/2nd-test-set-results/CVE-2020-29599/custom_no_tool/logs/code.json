{
    "files": [
        {
            "location": "./../../dockers/CVE-2020-29599/custom_no_tool/docker-compose.yml",
            "content": "services:\n  jenkins:\n    image: jenkins/jenkins:2.176.1\n    container_name: vulnerable_jenkins\n    ports:\n      - \"8080:8080\"\n    environment:\n      - JENKINS_OPTS=--argumentsRealm.passwd.admin=admin --argumentsRealm.roles.admin=admin\n    volumes:\n      - jenkins_home:/var/jenkins_home\n    restart: unless-stopped\n    networks:\n      - cve_net\n\n  nginx:\n    image: nginx:latest\n    container_name: imagemagick_nginx\n    ports:\n      - \"80:80\"\n    volumes:\n      - ./nginx.conf:/etc/nginx/nginx.conf:ro\n      - shared_data:/data\n    depends_on:\n      - imagemagick\n    restart: unless-stopped\n    networks:\n      - cve_net\n\n  imagemagick:\n    build:\n      context: ./imagemagick\n    container_name: vulnerable_imagemagick\n    volumes:\n      - shared_data:/data\n    expose:\n      - \"5000\"\n    restart: unless-stopped\n    networks:\n      - cve_net\n\nvolumes:\n  jenkins_home:\n    driver: local\n  shared_data:\n    driver: local\n\nnetworks:\n  cve_net:\n    driver: bridge\n"
        },
        {
            "location": "./../../dockers/CVE-2020-29599/custom_no_tool/nginx.conf",
            "content": "user  nginx;\nworker_processes  auto;\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\nevents {\n    worker_connections  1024;\n}\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    sendfile        on;\n    keepalive_timeout  65;\n\n    server {\n        listen 80;\n        server_name localhost;\n\n        # Serve a simple upload form\n        location / {\n            root /usr/share/nginx/html;\n            index index.html;\n        }\n\n        # Proxy conversion requests to the ImageMagick Flask service\n        location /convert {\n            proxy_pass http://imagemagick:5000/convert;\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        }\n    }\n}\n"
        },
        {
            "location": "./../../dockers/CVE-2020-29599/custom_no_tool/imagemagick/Dockerfile",
            "content": "FROM alpine:3.9\n\n# Install utilities, Python, wget and the vulnerable ImageMagick package from the Alpine 3.9 repositories\nRUN apk add --no-cache curl python3 py3-pip wget imagemagick && \\\n    pip3 install --no-cache-dir flask\n\n# Copy the Flask wrapper\nCOPY app.py /app/app.py\n\nWORKDIR /app\n\nEXPOSE 5000\n\nCMD [\"python3\", \"app.py\"]\n"
        },
        {
            "location": "./../../dockers/CVE-2020-29599/custom_no_tool/imagemagick/app.py",
            "content": "from flask import Flask, request, send_file, abort\nimport subprocess\nimport os\nimport uuid\n\napp = Flask(__name__)\nUPLOAD_DIR = '/data/uploads'\nOUTPUT_DIR = '/data/outputs'\nos.makedirs(UPLOAD_DIR, exist_ok=True)\nos.makedirs(OUTPUT_DIR, exist_ok=True)\n\n@app.route('/convert', methods=['POST'])\ndef convert():\n    if 'file' not in request.files:\n        abort(400, 'No file part')\n    file = request.files['file']\n    if file.filename == '':\n        abort(400, 'No selected file')\n    # Save uploaded file\n    input_path = os.path.join(UPLOAD_DIR, f\"{uuid.uuid4()}_{file.filename}\")\n    file.save(input_path)\n    # Define output path (PNG conversion for demonstration)\n    output_path = os.path.join(OUTPUT_DIR, f\"{uuid.uuid4()}.png\")\n    # Call ImageMagick's convert (vulnerable version) without sanitisation to reproduce CVE behavior\n    try:\n        subprocess.check_call([\n            'convert', input_path, output_path\n        ])\n    except subprocess.CalledProcessError as e:\n        abort(500, f'Conversion failed: {e}')\n    return send_file(output_path, mimetype='image/png')\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)\n"
        },
        {
            "location": "./../../dockers/CVE-2020-29599/custom_no_tool/README.md",
            "content": "## CVE\u20112020\u201129599 Test Environment\n\nThis repository provides a self\u2011contained Docker Compose setup that reproduces the vulnerable ImageMagick configuration required for CVE\u20112020\u201129599 while also keeping the original vulnerable Jenkins instance.\n\n### Services\n- **jenkins** \u2013 Vulnerable Jenkins (2.176.1) pre\u2011configured with default admin credentials.\n- **nginx** \u2013 Simple web server listening on host port **80**. It serves a minimal upload page and forwards conversion requests to the ImageMagick service.\n- **imagemagick** \u2013 Container built from Alpine **3.9**. It installs the historic ImageMagick package **6.9.9\u20110**, which contains the vulnerable `-authenticate` and `clip\u2011path` handling. The container runs a tiny Flask API (`/convert`) that invokes `convert` directly, exposing the flaw.\n\nAll containers share a Docker network (`cve_net`) and a common named volume (`shared_data`) for temporary files.\n\n### Quick Start\n```bash\n# From the repository root:\ncd ./../../dockers/CVE-2020-29599/custom_no_tool\ndocker compose up -d --build\n```\nThe services become available immediately:\n- Jenkins UI: http://localhost:8080   (admin / admin)\n- Upload page: http://localhost:80  (simple HTML form to POST a file to `/convert`)\n\n### Testing the Vulnerability\n1. Prepare a malicious PDF or SVG that exploits the `-authenticate` or `clip\u2011path` issue.\n2. Use the upload form (or `curl`) to send the file:\n```bash\ncurl -F \"file=@malicious.svg\" http://localhost/convert -o output.png\n```\nIf the ImageMagick version is vulnerable, the container may execute arbitrary commands as the `root` user inside the container, demonstrating the CVE.\n\n### Cleanup\n```bash\ndocker compose down -v\n```\nAll data is stored in Docker volumes, so no manual configuration is required beyond the `docker compose up` command.\n"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2020-29599/custom_no_tool\n\u251c\u2500 docker-compose.yml\n\u251c\u2500 nginx.conf\n\u251c\u2500 README.md\n\u2514\u2500 imagemagick\n   \u251c\u2500 Dockerfile\n   \u2514\u2500 app.py"
}