{
    "files": [
        {
            "location": "./../../dockers/CVE-2021-35042/custom_no_tool/docker-compose.yml",
            "content": "version: '3.8'\n\nservices:\n  django:\n    build: ./django\n    ports:\n      - \"8000:8000\"\n    environment:\n      - DB_HOST=postgres\n      - POSTGRES_DB=vulnapp\n      - POSTGRES_USER=appuser\n      - POSTGRES_PASSWORD=apppassword\n    depends_on:\n      - postgres\n    networks:\n      - appnet\n    # The Django container will wait for PostgreSQL using the custom entrypoint script\n    entrypoint: [\"/app/wait-for-postgres.sh\"]\n\n  postgres:\n    image: postgres:13.9\n    restart: always\n    environment:\n      POSTGRES_USER: appuser\n      POSTGRES_PASSWORD: apppassword\n      POSTGRES_DB: vulnapp\n    ports:\n      - \"5432:5432\"\n    volumes:\n      - db_data:/var/lib/postgresql/data\n      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql\n    networks:\n      - appnet\n\nnetworks:\n  appnet:\n    driver: bridge\n\nvolumes:\n  db_data:"
        },
        {
            "location": "./../../dockers/CVE-2021-35042/custom_no_tool/postgres/init.sql",
            "content": "CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) NOT NULL\n);\n\nINSERT INTO users (name, email) VALUES\n('alice', 'alice@example.com'),\n('bob', 'bob@example.com'),\n('charlie', 'charlie@example.com')\nON CONFLICT DO NOTHING;"
        },
        {
            "location": "./../../dockers/CVE-2021-35042/custom_no_tool/django/Dockerfile",
            "content": "FROM python:3.9-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends postgresql-client && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    pip install --no-cache-dir -r requirements.txt\nCOPY . .\n# Add the wait\u2011for\u2011postgres script and make it executable\nCOPY wait-for-postgres.sh /app/wait-for-postgres.sh\nRUN chmod +x /app/wait-for-postgres.sh\nEXPOSE 8000\n# The actual command is defined by the entrypoint in docker\u2011compose"
        },
        {
            "location": "./../../dockers/CVE-2021-35042/custom_no_tool/django/wait-for-postgres.sh",
            "content": "#!/bin/sh\nset -e\n\nhost=\"${DB_HOST:-postgres}\"\nport=5432\n\necho \"Waiting for PostgreSQL at $host:$port...\"\n# Loop until pg_isready reports that the server is ready\nwhile ! pg_isready -h \"$host\" -p \"$port\" > /dev/null 2>&1; do\n  sleep 1\n  echo \"still waiting...\"\ndone\n\necho \"PostgreSQL is up - running migrations\"\npython manage.py migrate --noinput\nexec python manage.py runserver 0.0.0.0:8000"
        },
        {
            "location": "./../../dockers/CVE-2021-35042/custom_no_tool/django/requirements.txt",
            "content": "Django==3.1.12\npsycopg2-binary==2.9.9"
        },
        {
            "location": "./../../dockers/CVE-2021-35042/custom_no_tool/django/manage.py",
            "content": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"vulnapp.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"
        },
        {
            "location": "./../../dockers/CVE-2021-35042/custom_no_tool/django/vulnapp/__init__.py",
            "content": ""
        },
        {
            "location": "./../../dockers/CVE-2021-35042/custom_no_tool/django/vulnapp/settings.py",
            "content": "import os\nfrom pathlib import Path\n\nBASE_DIR = Path(__file__).resolve().parent.parent\n\nSECRET_KEY = 'unsafe-secret-key-for-testing'\nDEBUG = True\nALLOWED_HOSTS = ['*']\n\nINSTALLED_APPS = [\n    'django.contrib.contenttypes',\n    'django.contrib.staticfiles',\n    'vulnapp',\n]\n\nMIDDLEWARE = []\nROOT_URLCONF = 'vulnapp.urls'\n\nTEMPLATES = []\nWSGI_APPLICATION = 'vulnapp.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.getenv('POSTGRES_DB', 'vulnapp'),\n        'USER': os.getenv('POSTGRES_USER', 'appuser'),\n        'PASSWORD': os.getenv('POSTGRES_PASSWORD', 'apppassword'),\n        'HOST': os.getenv('DB_HOST', 'postgres'),\n        'PORT': '5432',\n    }\n}\n\nSTATIC_URL = '/static/'\nDEFAULT_AUTO_FIELD = 'django.db.models.AutoField'"
        },
        {
            "location": "./../../dockers/CVE-2021-35042/custom_no_tool/django/vulnapp/urls.py",
            "content": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('search/', views.search, name='search'),\n    path('', views.health, name='health'),\n]"
        },
        {
            "location": "./../../dockers/CVE-2021-35042/custom_no_tool/django/vulnapp/wsgi.py",
            "content": "import os\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'vulnapp.settings')\napplication = get_wsgi_application()"
        },
        {
            "location": "./../../dockers/CVE-2021-35042/custom_no_tool/django/vulnapp/models.py",
            "content": "from django.db import models\n\nclass User(models.Model):\n    name = models.CharField(max_length=100)\n    email = models.CharField(max_length=100)\n\n    def __str__(self):\n        return self.name"
        },
        {
            "location": "./../../dockers/CVE-2021-35042/custom_no_tool/django/vulnapp/views.py",
            "content": "from django.http import JsonResponse\nfrom .models import User\n\ndef health(request):\n    return JsonResponse({'status': 'ok'})\n\ndef search(request):\n    # Vulnerable usage of order_by with user\u2011controlled input (CVE\u20112021\u201135042)\n    order_param = request.GET.get('order', 'id')\n    users = User.objects.all().order_by(order_param)\n    data = list(users.values('id', 'name', 'email'))\n    return JsonResponse(data, safe=False)"
        },
        {
            "location": "./../../dockers/CVE-2021-35042/custom_no_tool/django/vulnapp/apps.py",
            "content": "from django.apps import AppConfig\n\nclass VulnappConfig(AppConfig):\n    default_auto_field = 'django.db.models.AutoField'\n    name = 'vulnapp'"
        },
        {
            "location": "./../../dockers/CVE-2021-35042/custom_no_tool/django/vulnapp/__init__.py",
            "content": ""
        }
    ],
    "directory_tree": "CVE-2021-35042/custom_no_tool"
}