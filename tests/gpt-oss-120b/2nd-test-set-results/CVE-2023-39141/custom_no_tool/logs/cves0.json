{
  "version": "15.0.6",
  "vulnerabilities": [
    {
      "id": "27f4d462b524264284818ae3d5f913ea1f869f8cc9e355e524b5f5292a47d6ba",
      "category": "container_scanning",
      "message": "CVE-2024-47764 on cookie@0.3.1",
      "description": "### Impact\n\nThe cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. For example, `serialize(\"userName=<script>alert('XSS3')</script>; Max-Age=2592000; a\", value)` would result in `\"userName=<script>alert('XSS3')</script>; Max-Age=2592000; a=test\"`, setting `userName` cookie to `<script>` and ignoring `value`.\n\nA similar escape can be used for `path` and `domain`, which could be abused to alter other fields of the cookie.\n\n### Patches\n\nUpgrade to 0.7.0, which updates the validation for `name`, `path`, and `domain`.\n\n### Workarounds\n\nAvoid passing untrusted or arbitrary values for these fields, ensure they are set by the application instead of user input.\n\n### References\n\n* https://github.com/jshttp/cookie/pull/167",
      "cve": "CVE-2024-47764",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade cookie@0.3.1 to 0.7.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/cookie@0.3.1"
          },
          "version": "0.3.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47764",
          "value": "CVE-2024-47764",
          "url": "https://scout.docker.com/v/CVE-2024-47764?s=github&n=cookie&t=npm&vr=%3C0.7.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47764?s=github&n=cookie&t=npm&vr=%3C0.7.0"
        }
      ]
    },
    {
      "id": "76be4f32f5f64c28cc7bbd791e6a042dc6a77279b8d9a339660d056dd6961477",
      "category": "container_scanning",
      "message": "CVE-2025-5889 on brace-expansion@1.1.11",
      "description": "A vulnerability was found in juliangruber brace-expansion up to 1.1.11/2.0.1/3.0.0/4.0.0. It has been rated as problematic. Affected by this issue is the function expand of the file index.js. The manipulation leads to inefficient regular expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. Upgrading to version 1.1.12, 2.0.2, 3.0.1 and 4.0.1 is able to address this issue. The name of the patch is `a5b98a4f30d7813266b221435e1eaaf25a1b0ac5`. It is recommended to upgrade the affected component.",
      "cve": "CVE-2025-5889",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade brace-expansion@1.1.11 to 1.1.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/brace-expansion@1.1.11"
          },
          "version": "1.1.11"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-5889",
          "value": "CVE-2025-5889",
          "url": "https://scout.docker.com/v/CVE-2025-5889?s=github&n=brace-expansion&t=npm&vr=%3E%3D1.0.0%2C%3C%3D1.1.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-5889?s=github&n=brace-expansion&t=npm&vr=%3E%3D1.0.0%2C%3C%3D1.1.11"
        }
      ]
    },
    {
      "id": "e97270c2d8b94198de5317f7ba553b8d9337b61b1b22f00167c66bdd43ce3917",
      "category": "container_scanning",
      "message": "CVE-2025-5889 on brace-expansion@2.0.1",
      "description": "A vulnerability was found in juliangruber brace-expansion up to 1.1.11/2.0.1/3.0.0/4.0.0. It has been rated as problematic. Affected by this issue is the function expand of the file index.js. The manipulation leads to inefficient regular expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. Upgrading to version 1.1.12, 2.0.2, 3.0.1 and 4.0.1 is able to address this issue. The name of the patch is `a5b98a4f30d7813266b221435e1eaaf25a1b0ac5`. It is recommended to upgrade the affected component.",
      "cve": "CVE-2025-5889",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade brace-expansion@2.0.1 to 2.0.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/brace-expansion@2.0.1"
          },
          "version": "2.0.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-5889",
          "value": "CVE-2025-5889",
          "url": "https://scout.docker.com/v/CVE-2025-5889?s=github&n=brace-expansion&t=npm&vr=%3E%3D2.0.0%2C%3C%3D2.0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-5889?s=github&n=brace-expansion&t=npm&vr=%3E%3D2.0.0%2C%3C%3D2.0.1"
        }
      ]
    },
    {
      "id": "b94f343ea648481791c6255c332041704ef963b912cfac7ffc96d27e4b02ec97",
      "category": "container_scanning",
      "message": "CVE-2024-43796 on express@4.16.3",
      "description": "### Impact\n\nIn express <4.20.0, passing untrusted user input - even after sanitizing it - to `response.redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in express 4.20.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n",
      "cve": "CVE-2024-43796",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade express@4.16.3 to 4.20.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/express@4.16.3"
          },
          "version": "4.16.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-43796",
          "value": "CVE-2024-43796",
          "url": "https://scout.docker.com/v/CVE-2024-43796?s=github&n=express&t=npm&vr=%3C4.20.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-43796?s=github&n=express&t=npm&vr=%3C4.20.0"
        }
      ]
    },
    {
      "id": "a25d18b054d806bfbfccffc36e953abf12427741bb3d1745fcecd2709b332d77",
      "category": "container_scanning",
      "message": "CVE-2024-43799 on send@0.16.2",
      "description": "### Impact\n\npassing untrusted user input - even after sanitizing it - to `SendStream.redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in send 0.19.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n",
      "cve": "CVE-2024-43799",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade send@0.16.2 to 0.19.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/send@0.16.2"
          },
          "version": "0.16.2"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-43799",
          "value": "CVE-2024-43799",
          "url": "https://scout.docker.com/v/CVE-2024-43799?s=github&n=send&t=npm&vr=%3C0.19.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-43799?s=github&n=send&t=npm&vr=%3C0.19.0"
        }
      ]
    },
    {
      "id": "542a4edf01b70633f2ac23b6636f61ce1e4a087d34260acf494aeb4ad548cdd8",
      "category": "container_scanning",
      "message": "CVE-2024-43800 on serve-static@1.13.2",
      "description": "### Impact\n\npassing untrusted user input - even after sanitizing it - to `redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in serve-static 1.16.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n",
      "cve": "CVE-2024-43800",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade serve-static@1.13.2 to 1.16.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/serve-static@1.13.2"
          },
          "version": "1.13.2"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-43800",
          "value": "CVE-2024-43800",
          "url": "https://scout.docker.com/v/CVE-2024-43800?s=github&n=serve-static&t=npm&vr=%3C1.16.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-43800?s=github&n=serve-static&t=npm&vr=%3C1.16.0"
        }
      ]
    },
    {
      "id": "9d0ee3346885717bdb2af679ccbb5e2e832547a313d197c94b2dd3eb526ddfb0",
      "category": "container_scanning",
      "message": "CVE-2024-48948 on elliptic@6.4.1",
      "description": "The Elliptic prior to 6.6.0 for Node.js, in its for ECDSA implementation, does not correctly verify valid signatures if the hash contains at least four leading 0 bytes and when the order of the elliptic curve's base point is smaller than the hash, because of an _truncateToN anomaly. This leads to valid signatures being rejected. Legitimate transactions or communications may be incorrectly flagged as invalid.",
      "cve": "CVE-2024-48948",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade elliptic@6.4.1 to 6.6.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/elliptic@6.4.1"
          },
          "version": "6.4.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-48948",
          "value": "CVE-2024-48948",
          "url": "https://scout.docker.com/v/CVE-2024-48948?s=github&n=elliptic&t=npm&vr=%3C6.6.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-48948?s=github&n=elliptic&t=npm&vr=%3C6.6.0"
        }
      ]
    },
    {
      "id": "b40cf9cc3620d3cb153f45b069dcc9d5424854ada90afe6817c517f8f9eff50b",
      "category": "container_scanning",
      "message": "CVE-2017-18869 on chownr@1.0.1",
      "description": "A TOCTOU issue in the chownr package before 1.1.0 for Node.js 10.10 could allow a local attacker to trick it into descending into unintended directories via symlink attacks.",
      "cve": "CVE-2017-18869",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade chownr@1.0.1 to 1.1.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/chownr@1.0.1"
          },
          "version": "1.0.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2017-18869",
          "value": "CVE-2017-18869",
          "url": "https://scout.docker.com/v/CVE-2017-18869?s=github&n=chownr&t=npm&vr=%3C1.1.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2017-18869?s=github&n=chownr&t=npm&vr=%3C1.1.0"
        }
      ]
    },
    {
      "id": "73a6154f55583f66a100681065433759817de72d561a7b2eb9d44a4019c3c4c0",
      "category": "container_scanning",
      "message": "CVE-2024-58251 on alpine/busybox@1.37.0-r12",
      "cve": "CVE-2024-58251",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/busybox@1.37.0-r12?os_name=alpine&os_version=3.21"
          },
          "version": "1.37.0-r12"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-58251",
          "value": "CVE-2024-58251",
          "url": "https://scout.docker.com/v/CVE-2024-58251?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C%3D1.37.0-r13"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-58251?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C%3D1.37.0-r13"
        }
      ]
    },
    {
      "id": "15d9fef5600e4b80e1ee303a17961e01fa15f857abb60aee163842cdaa6f1355",
      "category": "container_scanning",
      "message": "CVE-2025-54798 on tmp@0.0.33",
      "description": "### Summary\n\n`tmp@0.2.3` is vulnerable to an Arbitrary temporary file / directory write via symbolic link `dir` parameter.\n\n\n### Details\n\nAccording to the documentation there are some conditions that must be held:\n\n```\n// https://github.com/raszi/node-tmp/blob/v0.2.3/README.md?plain=1#L41-L50\n\nOther breaking changes, i.e.\n\n- template must be relative to tmpdir\n- name must be relative to tmpdir\n- dir option must be relative to tmpdir //<-- this assumption can be bypassed using symlinks\n\nare still in place.\n\nIn order to override the system's tmpdir, you will have to use the newly\nintroduced tmpdir option.\n\n\n// https://github.com/raszi/node-tmp/blob/v0.2.3/README.md?plain=1#L375\n* `dir`: the optional temporary directory that must be relative to the system's default temporary directory.\n     absolute paths are fine as long as they point to a location under the system's default temporary directory.\n     Any directories along the so specified path must exist, otherwise a ENOENT error will be thrown upon access, \n     as tmp will not check the availability of the path, nor will it establish the requested path for you.\n```\n\nRelated issue: https://github.com/raszi/node-tmp/issues/207.\n\n\nThe issue occurs because `_resolvePath` does not properly handle symbolic link when resolving paths:\n```js\n// https://github.com/raszi/node-tmp/blob/v0.2.3/lib/tmp.js#L573-L579\nfunction _resolvePath(name, tmpDir) {\n  if (name.startsWith(tmpDir)) {\n    return path.resolve(name);\n  } else {\n    return path.resolve(path.join(tmpDir, name));\n  }\n}\n```\n\nIf the `dir` parameter points to a symlink that resolves to a folder outside the `tmpDir`, it's possible to bypass the `_assertIsRelative` check used in `_assertAndSanitizeOptions`:\n```js\n// https://github.com/raszi/node-tmp/blob/v0.2.3/lib/tmp.js#L590-L609\nfunction _assertIsRelative(name, option, tmpDir) {\n  if (option === 'name') {\n    // assert that name is not absolute and does not contain a path\n    if (path.isAbsolute(name))\n      throw new Error(`${option} option must not contain an absolute path, found \"${name}\".`);\n    // must not fail on valid .<name> or ..<name> or similar such constructs\n    let basename = path.basename(name);\n    if (basename === '..' || basename === '.' || basename !== name)\n      throw new Error(`${option} option must not contain a path, found \"${name}\".`);\n  }\n  else { // if (option === 'dir' || option === 'template') {\n    // assert that dir or template are relative to tmpDir\n    if (path.isAbsolute(name) && !name.startsWith(tmpDir)) {\n      throw new Error(`${option} option must be relative to \"${tmpDir}\", found \"${name}\".`);\n    }\n    let resolvedPath = _resolvePath(name, tmpDir); //<--- \n    if (!resolvedPath.startsWith(tmpDir))\n      throw new Error(`${option} option must be relative to \"${tmpDir}\", found \"${resolvedPath}\".`);\n  }\n}\n```\n\n\n### PoC\n\nThe following PoC demonstrates how writing a tmp file on a folder outside the `tmpDir` is possible.\nTested on a Linux machine.\n\n- Setup: create a symbolic link inside the `tmpDir` that points to a directory outside of it\n```bash\nmkdir $HOME/mydir1\n\nln -s $HOME/mydir1 ${TMPDIR:-/tmp}/evil-dir\n```\n\n- check the folder is empty:\n```bash\nls -lha $HOME/mydir1 | grep \"tmp-\"\n```\n\n- run the poc\n```bash\nnode main.js\nFile:  /tmp/evil-dir/tmp-26821-Vw87SLRaBIlf\ntest 1: ENOENT: no such file or directory, open '/tmp/mydir1/tmp-[random-id]'\ntest 2: dir option must be relative to \"/tmp\", found \"/foo\".\ntest 3: dir option must be relative to \"/tmp\", found \"/home/user/mydir1\".\n```\n\n- the temporary file is created under `$HOME/mydir1` (outside the `tmpDir`):\n```bash\nls -lha $HOME/mydir1 | grep \"tmp-\"\n-rw------- 1 user user    0 Apr  X XX:XX tmp-[random-id]\n```\n\n\n- `main.js`\n```js\n// npm i tmp@0.2.3\n\nconst tmp = require('tmp');\n\nconst tmpobj = tmp.fileSync({ 'dir': 'evil-dir'});\nconsole.log('File: ', tmpobj.name);\n\ntry {\n    tmp.fileSync({ 'dir': 'mydir1'});\n} catch (err) {\n    console.log('test 1:', err.message)\n}\n\ntry {\n    tmp.fileSync({ 'dir': '/foo'});\n} catch (err) {\n    console.log('test 2:', err.message)\n}\n\ntry {\n    const fs = require('node:fs');\n    const resolved = fs.realpathSync('/tmp/evil-dir');\n    tmp.fileSync({ 'dir': resolved});\n} catch (err) {\n    console.log('test 3:', err.message)\n}\n```\n\n\nA Potential fix could be to call `fs.realpathSync` (or similar) that resolves also symbolic links.\n```js\nfunction _resolvePath(name, tmpDir) {\n  let resolvedPath;\n  if (name.startsWith(tmpDir)) {\n    resolvedPath = path.resolve(name);\n  } else {\n    resolvedPath = path.resolve(path.join(tmpDir, name));\n  }\n  return fs.realpathSync(resolvedPath);\n}\n```\n\n\n### Impact\n\nArbitrary temporary file / directory write via symlink",
      "cve": "CVE-2025-54798",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade tmp@0.0.33 to 0.2.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/tmp@0.0.33"
          },
          "version": "0.0.33"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-54798",
          "value": "CVE-2025-54798",
          "url": "https://scout.docker.com/v/CVE-2025-54798?s=github&n=tmp&t=npm&vr=%3C%3D0.2.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-54798?s=github&n=tmp&t=npm&vr=%3C%3D0.2.3"
        }
      ]
    },
    {
      "id": "43759905f615eaf33e3ad2b17c57fedceee406508a53294fabe99f70c9a062d7",
      "category": "container_scanning",
      "message": "CVE-2024-42459 on elliptic@6.4.1",
      "description": "In the Elliptic package 6.5.6 for Node.js, EDDSA signature malleability occurs because there is a missing signature length check, and thus zero-valued bytes can be removed or appended.",
      "cve": "CVE-2024-42459",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade elliptic@6.4.1 to 6.5.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/elliptic@6.4.1"
          },
          "version": "6.4.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-42459",
          "value": "CVE-2024-42459",
          "url": "https://scout.docker.com/v/CVE-2024-42459?s=github&n=elliptic&t=npm&vr=%3E%3D4.0.0%2C%3C%3D6.5.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-42459?s=github&n=elliptic&t=npm&vr=%3E%3D4.0.0%2C%3C%3D6.5.6"
        }
      ]
    },
    {
      "id": "eaed00dc3f9b6d8202e57f0d63eb719eb5631cdcedba63cbea18affa9ab015ca",
      "category": "container_scanning",
      "message": "CVE-2024-42460 on elliptic@6.4.1",
      "description": "In the Elliptic package 6.5.6 for Node.js, ECDSA signature malleability occurs because there is a missing check for whether the leading bit of r and s is zero.",
      "cve": "CVE-2024-42460",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade elliptic@6.4.1 to 6.5.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/elliptic@6.4.1"
          },
          "version": "6.4.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-42460",
          "value": "CVE-2024-42460",
          "url": "https://scout.docker.com/v/CVE-2024-42460?s=github&n=elliptic&t=npm&vr=%3E%3D2.0.0%2C%3C%3D6.5.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-42460?s=github&n=elliptic&t=npm&vr=%3E%3D2.0.0%2C%3C%3D6.5.6"
        }
      ]
    },
    {
      "id": "1f782a4c9a98d267346afdcf1b401ddec670a6129a0c85b50365734da6dc3620",
      "category": "container_scanning",
      "message": "CVE-2024-42461 on elliptic@6.4.1",
      "description": "In the Elliptic package 6.5.6 for Node.js, ECDSA signature malleability occurs because BER-encoded signatures are allowed.",
      "cve": "CVE-2024-42461",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade elliptic@6.4.1 to 6.5.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/elliptic@6.4.1"
          },
          "version": "6.4.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-42461",
          "value": "CVE-2024-42461",
          "url": "https://scout.docker.com/v/CVE-2024-42461?s=github&n=elliptic&t=npm&vr=%3E%3D5.2.1%2C%3C%3D6.5.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-42461?s=github&n=elliptic&t=npm&vr=%3E%3D5.2.1%2C%3C%3D6.5.6"
        }
      ]
    },
    {
      "id": "76826e5a2810fd9dfaa35f1c884dd25ef707df61bc0d02adecc590458a5aec40",
      "category": "container_scanning",
      "message": "CVE-2024-48949 on elliptic@6.4.1",
      "description": "The Elliptic package 6.5.5 for Node.js for EDDSA implementation does not perform the required check if the signature proof(s) is within the bounds of the order n of the base point of the elliptic curve, leading to signature malleability. Namely, the `verify` function in `lib/elliptic/eddsa/index.js` omits `sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()` validation.\n\nThis vulnerability could have a security-relevant impact if an application relies on the uniqueness of a signature.",
      "cve": "CVE-2024-48949",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade elliptic@6.4.1 to 6.5.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/elliptic@6.4.1"
          },
          "version": "6.4.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-48949",
          "value": "CVE-2024-48949",
          "url": "https://scout.docker.com/v/CVE-2024-48949?s=github&n=elliptic&t=npm&vr=%3C6.5.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-48949?s=github&n=elliptic&t=npm&vr=%3C6.5.6"
        }
      ]
    },
    {
      "id": "4604e5939532aef39a8b4f0f2a1470ae33598a8f234107fb2a2166aeb6bf487c",
      "category": "container_scanning",
      "message": "CVE-2024-8372 on angular@1.7.3",
      "description": "Improper sanitization of the value of the `[srcset]` attribute in AngularJS allows attackers to bypass common image source restrictions, which can also lead to a form of  Content Spoofing https://owasp.org/www-community/attacks/Content_Spoofing .\n\nThis issue affects AngularJS versions 1.3.0-rc.4 and greater.\n\nNote:\nThe AngularJS project is End-of-Life and will not receive any updates to address this issue. For more information see  here https://docs.angularjs.org/misc/version-support-status .",
      "cve": "CVE-2024-8372",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/angular@1.7.3"
          },
          "version": "1.7.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-8372",
          "value": "CVE-2024-8372",
          "url": "https://scout.docker.com/v/CVE-2024-8372?s=github&n=angular&t=npm&vr=%3E%3D1.3.0-rc.4%2C%3C%3D1.8.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-8372?s=github&n=angular&t=npm&vr=%3E%3D1.3.0-rc.4%2C%3C%3D1.8.3"
        }
      ]
    },
    {
      "id": "338ecda286ffc9c4c9e54c4fd2e15fc9df9bc9bf82f088cf7023837134c68c9a",
      "category": "container_scanning",
      "message": "CVE-2024-8373 on angular@1.7.3",
      "description": "Improper sanitization of the value of the `[srcset]` attribute in `<source>` HTML elements in AngularJS allows attackers to bypass common image source restrictions, which can also lead to a form of  Content Spoofing https://owasp.org/www-community/attacks/Content_Spoofing .\n\nThis issue affects all versions of AngularJS.\n\nNote:\nThe AngularJS project is End-of-Life and will not receive any updates to address this issue. For more information see  here https://docs.angularjs.org/misc/version-support-status .",
      "cve": "CVE-2024-8373",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/angular@1.7.3"
          },
          "version": "1.7.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-8373",
          "value": "CVE-2024-8373",
          "url": "https://scout.docker.com/v/CVE-2024-8373?s=github&n=angular&t=npm&vr=%3C%3D1.8.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-8373?s=github&n=angular&t=npm&vr=%3C%3D1.8.3"
        }
      ]
    },
    {
      "id": "330f2a1db5e3a9f1c2b7dcb4a95afca68a1f2cca2127898c8516a4701b147246",
      "category": "container_scanning",
      "message": "CVE-2025-0716 on angular@1.7.3",
      "description": "Improper sanitization of the value of the 'href' and 'xlink:href' attributes in '<image>' SVG elements in AngularJS allows attackers to bypass common image source restrictions. This can lead to a form of  Content Spoofing https://owasp.org/www-community/attacks/Content_Spoofing  and also negatively affect the application's performance and behavior by using too large or slow-to-load images.\n\nThis issue affects all versions of AngularJS.\n\nNote:\nThe AngularJS project is End-of-Life and will not receive any updates to address this issue. For more information see  here https://docs.angularjs.org/misc/version-support-status .",
      "cve": "CVE-2025-0716",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/angular@1.7.3"
          },
          "version": "1.7.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-0716",
          "value": "CVE-2025-0716",
          "url": "https://scout.docker.com/v/CVE-2025-0716?s=github&n=angular&t=npm&vr=%3C%3D1.8.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-0716?s=github&n=angular&t=npm&vr=%3C%3D1.8.3"
        }
      ]
    },
    {
      "id": "93c06c2404315e972d12c761b15d02f0381c018c1bfa897a5571ee3d7ce57222",
      "category": "container_scanning",
      "message": "CVE-2025-46394 on alpine/busybox@1.37.0-r12",
      "cve": "CVE-2025-46394",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/busybox@1.37.0-r12?os_name=alpine&os_version=3.21"
          },
          "version": "1.37.0-r12"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-46394",
          "value": "CVE-2025-46394",
          "url": "https://scout.docker.com/v/CVE-2025-46394?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C%3D1.37.0-r13"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-46394?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C%3D1.37.0-r13"
        }
      ]
    },
    {
      "id": "593cc8145701ba30cfa20bfffbee9f6481c019ec231b1334d29023f76dcef08f",
      "category": "container_scanning",
      "message": "CVE-2019-16769 on serialize-javascript@1.5.0",
      "description": "Versions of `serialize-javascript` prior to 2.1.1 are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize serialized regular expressions. This vulnerability does not affect Node.js applications.\n\n\n## Recommendation\n\nUpgrade to version 2.1.1 or later.",
      "cve": "CVE-2019-16769",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade serialize-javascript@1.5.0 to 2.1.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/serialize-javascript@1.5.0"
          },
          "version": "1.5.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-16769",
          "value": "CVE-2019-16769",
          "url": "https://scout.docker.com/v/CVE-2019-16769?s=github&n=serialize-javascript&t=npm&vr=%3C2.1.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-16769?s=github&n=serialize-javascript&t=npm&vr=%3C2.1.1"
        }
      ]
    },
    {
      "id": "7b7f222afb01ee1248dab54d189b7b6e1a1881bc95a96aeb1849414ef1599586",
      "category": "container_scanning",
      "message": "CVE-2025-5244 on alpine/binutils@2.43.1-r3",
      "cve": "CVE-2025-5244",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/binutils@2.43.1-r3?os_name=alpine&os_version=3.21"
          },
          "version": "2.43.1-r3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-5244",
          "value": "CVE-2025-5244",
          "url": "https://scout.docker.com/v/CVE-2025-5244?s=alpine&n=binutils&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C%3D2.43.1-r3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-5244?s=alpine&n=binutils&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C%3D2.43.1-r3"
        }
      ]
    },
    {
      "id": "e21eb628fe6c5f3256a07fd32c51d6c08a0e0810672e127a99a8482d76bb772c",
      "category": "container_scanning",
      "message": "CVE-2025-5245 on alpine/binutils@2.43.1-r3",
      "cve": "CVE-2025-5245",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/binutils@2.43.1-r3?os_name=alpine&os_version=3.21"
          },
          "version": "2.43.1-r3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-5245",
          "value": "CVE-2025-5245",
          "url": "https://scout.docker.com/v/CVE-2025-5245?s=alpine&n=binutils&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C%3D2.43.1-r3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-5245?s=alpine&n=binutils&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C%3D2.43.1-r3"
        }
      ]
    },
    {
      "id": "bc2f39f90220823df0683cf49588dc102a0494447a378b9919aa2c8102af7d01",
      "category": "container_scanning",
      "message": "GHSA-5cp4-xmrw-59wf on angular@1.7.3",
      "description": "### Summary\nXSS may be triggered in AngularJS applications that sanitize user-controlled HTML snippets before passing them to `JQLite` methods like `JQLite.prepend`, `JQLite.after`, `JQLite.append`, `JQLite.replaceWith`, `JQLite.append`, `new JQLite` and `angular.element`.\n\n### Description\n\nJQLite (DOM manipulation library that's part of AngularJS) manipulates input HTML before inserting it to the DOM in `jqLiteBuildFragment`.\n\nOne of the modifications performed [expands an XHTML self-closing tag](https://github.com/angular/angular.js/blob/418355f1cf9a9a9827ae81d257966e6acfb5623a/src/jqLite.js#L218).\n\nIf `jqLiteBuildFragment` is called (e.g. via `new JQLite(aString)`) with user-controlled HTML string that was sanitized (e.g. with [DOMPurify](https://github.com/cure53/DOMPurify)), the transformation done by JQLite may modify some forms of an inert, sanitized payload into a payload containing JavaScript - and trigger an XSS when the payload is inserted into DOM.\n\nThis is similar to a bug in jQuery `htmlPrefilter` function that was [fixed in 3.5.0](https://blog.jquery.com/2020/04/10/jquery-3-5-0-released/).\n\n### Proof of concept\n\n```javascript\nconst inertPayload = `<div><style><style/><img src=x onerror=\"alert(1337)\"/>` \n```\nNote that the style element is not closed and `<img` would be a text node inside the style if inserted into the DOM as-is.\nAs such, some HTML sanitizers would leave the `<img` as is without processing it and stripping the `onerror` attribute.\n\n```javascript\nangular.element(document).append(inertPayload);\n```\nThis will alert, as `<style/>` will be replaced with `<style></style>` before adding it to the DOM, closing the style element early and reactivating `img`.\n\n### Patches\nThe issue is patched in `JQLite` bundled with angular 1.8.0. AngularJS users using JQuery should upgrade JQuery to 3.5.0, as a similar vulnerability [affects jQuery <3.5.0](https://github.com/jquery/jquery/security/advisories/GHSA-gxr4-xjj5-5px2).\n\n### Workarounds\nChanging sanitizer configuration not to allow certain tag grouping (e.g. `<option><style></option>`) or inline style elements may stop certain exploitation vectors, but it's uncertain if all possible exploitation vectors would be covered. Upgrade of AngularJS to 1.8.0 is recommended.\n\n### References\nhttps://github.com/advisories/GHSA-mhp6-pxh8-r675\nhttps://github.com/jquery/jquery/security/advisories/GHSA-gxr4-xjj5-5px2\nhttps://github.com/jquery/jquery/security/advisories/GHSA-jpcq-cgw6-v4j6\nhttps://blog.jquery.com/2020/04/10/jquery-3-5-0-released/\nhttps://snyk.io/vuln/SNYK-JS-ANGULAR-570058",
      "cve": "GHSA-5cp4-xmrw-59wf",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade angular@1.7.3 to 1.8.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/angular@1.7.3"
          },
          "version": "1.7.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-5cp4-xmrw-59wf",
          "value": "GHSA-5cp4-xmrw-59wf",
          "url": "https://scout.docker.com/v/GHSA-5cp4-xmrw-59wf?s=github&n=angular&t=npm&vr=%3C1.8.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-5cp4-xmrw-59wf?s=github&n=angular&t=npm&vr=%3C1.8.0"
        }
      ]
    },
    {
      "id": "1e7fd37002c81a29fb88322ddd1b4c3f9ff4ab66c01a9f7bb09b2e4c0b0abbc7",
      "category": "container_scanning",
      "message": "GHSA-4xcv-9jjx-gfj3 on mem@1.1.0",
      "description": "Versions of `mem` prior to 4.0.0 are vulnerable to Denial of Service (DoS).  The package fails to remove old values from the cache even after a value passes its `maxAge` property. This may allow attackers to exhaust the system's memory if they are able to abuse the application logging.\n\n\n## Recommendation\n\nUpgrade to version 4.0.0 or later.",
      "cve": "GHSA-4xcv-9jjx-gfj3",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade mem@1.1.0 to 4.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/mem@1.1.0"
          },
          "version": "1.1.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-4xcv-9jjx-gfj3",
          "value": "GHSA-4xcv-9jjx-gfj3",
          "url": "https://scout.docker.com/v/GHSA-4xcv-9jjx-gfj3?s=github&n=mem&t=npm&vr=%3C4.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-4xcv-9jjx-gfj3?s=github&n=mem&t=npm&vr=%3C4.0.0"
        }
      ]
    },
    {
      "id": "51490f61e00560b1706843a3033119395fc3cbd566bac2a2ab74b506e41e3baf",
      "category": "container_scanning",
      "message": "CVE-2020-24025 on node-sass@4.9.3",
      "description": "Certificate validation in node-sass 2.0.0 to 6.0.1 is disabled when requesting binaries even if the user is not specifying an alternative download path.",
      "cve": "CVE-2020-24025",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade node-sass@4.9.3 to 7.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/node-sass@4.9.3"
          },
          "version": "4.9.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-24025",
          "value": "CVE-2020-24025",
          "url": "https://scout.docker.com/v/CVE-2020-24025?s=github&n=node-sass&t=npm&vr=%3E%3D2.0.0%2C%3C7.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-24025?s=github&n=node-sass&t=npm&vr=%3E%3D2.0.0%2C%3C7.0.0"
        }
      ]
    },
    {
      "id": "1453a1a37ea24170ed04b7c3a980fe40d981737e7985300d52e4d103a22efe1c",
      "category": "container_scanning",
      "message": "CVE-2020-28500 on lodash@4.17.10",
      "description": "All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the `toNumber`, `trim` and `trimEnd` functions. \n\nSteps to reproduce (provided by reporter Liyuan Chen):\n```js\nvar lo = require('lodash');\n\nfunction build_blank(n) {\n    var ret = \"1\"\n    for (var i = 0; i < n; i++) {\n        ret += \" \"\n    }\n    return ret + \"1\";\n}\nvar s = build_blank(50000) var time0 = Date.now();\nlo.trim(s) \nvar time_cost0 = Date.now() - time0;\nconsole.log(\"time_cost0: \" + time_cost0);\nvar time1 = Date.now();\nlo.toNumber(s) var time_cost1 = Date.now() - time1;\nconsole.log(\"time_cost1: \" + time_cost1);\nvar time2 = Date.now();\nlo.trimEnd(s);\nvar time_cost2 = Date.now() - time2;\nconsole.log(\"time_cost2: \" + time_cost2);\n```",
      "cve": "CVE-2020-28500",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade lodash@4.17.10 to 4.17.21",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/lodash@4.17.10"
          },
          "version": "4.17.10"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-28500",
          "value": "CVE-2020-28500",
          "url": "https://scout.docker.com/v/CVE-2020-28500?s=github&n=lodash&t=npm&vr=%3E%3D4.0.0%2C%3C4.17.21"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-28500?s=github&n=lodash&t=npm&vr=%3E%3D4.0.0%2C%3C4.17.21"
        }
      ]
    },
    {
      "id": "391b88939756e2d6310f229f3f28a10da32f2d2bcbb2708cdf7a9eff33bea2ad",
      "category": "container_scanning",
      "message": "CVE-2020-7608 on yargs-parser@10.1.0",
      "description": "Affected versions of `yargs-parser` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--foo.__proto__.bar baz'` adds a `bar` property with value `baz` to all objects. This is only exploitable if attackers have control over the arguments being passed to `yargs-parser`.\n\n\n\n## Recommendation\n\nUpgrade to versions 13.1.2, 15.0.1, 18.1.1 or later.",
      "cve": "CVE-2020-7608",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade yargs-parser@10.1.0 to 13.1.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/yargs-parser@10.1.0"
          },
          "version": "10.1.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-7608",
          "value": "CVE-2020-7608",
          "url": "https://scout.docker.com/v/CVE-2020-7608?s=github&n=yargs-parser&t=npm&vr=%3E%3D6.0.0%2C%3C13.1.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-7608?s=github&n=yargs-parser&t=npm&vr=%3E%3D6.0.0%2C%3C13.1.2"
        }
      ]
    },
    {
      "id": "484381ebe5c160244700e6c958fe73fbd2cedd7b8a5516ad14077265fe5a589a",
      "category": "container_scanning",
      "message": "CVE-2020-7608 on yargs-parser@5.0.0",
      "description": "Affected versions of `yargs-parser` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--foo.__proto__.bar baz'` adds a `bar` property with value `baz` to all objects. This is only exploitable if attackers have control over the arguments being passed to `yargs-parser`.\n\n\n\n## Recommendation\n\nUpgrade to versions 13.1.2, 15.0.1, 18.1.1 or later.",
      "cve": "CVE-2020-7608",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade yargs-parser@5.0.0 to 5.0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/yargs-parser@5.0.0"
          },
          "version": "5.0.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-7608",
          "value": "CVE-2020-7608",
          "url": "https://scout.docker.com/v/CVE-2020-7608?s=github&n=yargs-parser&t=npm&vr=%3C%3D5.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-7608?s=github&n=yargs-parser&t=npm&vr=%3C%3D5.0.0"
        }
      ]
    },
    {
      "id": "4c1287d4b7feea296e5d85818ab16a7b8790df475ba8e5866407cc49428439c0",
      "category": "container_scanning",
      "message": "CVE-2021-23362 on hosted-git-info@2.7.1",
      "description": "The npm package `hosted-git-info` before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity",
      "cve": "CVE-2021-23362",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade hosted-git-info@2.7.1 to 2.8.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/hosted-git-info@2.7.1"
          },
          "version": "2.7.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-23362",
          "value": "CVE-2021-23362",
          "url": "https://scout.docker.com/v/CVE-2021-23362?s=github&n=hosted-git-info&t=npm&vr=%3C2.8.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-23362?s=github&n=hosted-git-info&t=npm&vr=%3C2.8.9"
        }
      ]
    },
    {
      "id": "9a04813685b1be5e9f86245ee623a1ea7f349282f670a04da9b708ca9661b7fa",
      "category": "container_scanning",
      "message": "CVE-2021-23364 on browserslist@4.1.0",
      "description": "The package browserslist from 4.0.0 and before 4.16.5 are vulnerable to Regular Expression Denial of Service (ReDoS) during parsing of queries.",
      "cve": "CVE-2021-23364",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade browserslist@4.1.0 to 4.16.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/browserslist@4.1.0"
          },
          "version": "4.1.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-23364",
          "value": "CVE-2021-23364",
          "url": "https://scout.docker.com/v/CVE-2021-23364?s=github&n=browserslist&t=npm&vr=%3E%3D4.0.0%2C%3C4.16.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-23364?s=github&n=browserslist&t=npm&vr=%3E%3D4.0.0%2C%3C4.16.5"
        }
      ]
    },
    {
      "id": "faa91278d6b89274ed9cb7a04ca577b745fa7da22f825aa06a2bc189c37b528c",
      "category": "container_scanning",
      "message": "CVE-2021-23368 on postcss@7.0.2",
      "description": "The npm package `postcss` from 7.0.0 and before versions 7.0.36 and 8.2.10 is vulnerable to Regular Expression Denial of Service (ReDoS) during source map parsing.",
      "cve": "CVE-2021-23368",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade postcss@7.0.2 to 7.0.36",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/postcss@7.0.2"
          },
          "version": "7.0.2"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-23368",
          "value": "CVE-2021-23368",
          "url": "https://scout.docker.com/v/CVE-2021-23368?s=github&n=postcss&t=npm&vr=%3E%3D7.0.0%2C%3C7.0.36"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-23368?s=github&n=postcss&t=npm&vr=%3E%3D7.0.0%2C%3C7.0.36"
        }
      ]
    },
    {
      "id": "b01a7df7748bc9064f2b681dfa522c0a6b70cbf69108af5c60317aca69a9a808",
      "category": "container_scanning",
      "message": "CVE-2021-23382 on postcss@6.0.23",
      "description": "The package postcss versions before 7.0.36 or between 8.0.0 and 8.2.13 are vulnerable to Regular Expression Denial of Service (ReDoS) via getAnnotationURL() and loadAnnotation() in lib/previous-map.js. The vulnerable regexes are caused mainly by the sub-pattern \n```regex\n\\/\\*\\s* sourceMappingURL=(.*)\n```\n\n### PoC\n```js\nvar postcss = require(\"postcss\")\nfunction build_attack(n) {\n    var ret = \"a{}\"\n    for (var i = 0; i < n; i++) {\n        ret += \"/*# sourceMappingURL=\"\n    }\n    return ret + \"!\";\n}\n```\n```js\npostcss.parse('a{}/*# sourceMappingURL=a.css.map */') for (var i = 1; i <= 500000; i++) {\n    if (i % 1000 == 0) {\n        var time = Date.now();\n        var attack_str = build_attack(i) try {\n            postcss.parse(attack_str) var time_cost = Date.now() - time;\n            console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost + \" ms\");\n        } catch (e) {\n            var time_cost = Date.now() - time;\n            console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost + \" ms\");\n        }\n    }\n}\n```",
      "cve": "CVE-2021-23382",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade postcss@6.0.23 to 7.0.36",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/postcss@6.0.23"
          },
          "version": "6.0.23"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-23382",
          "value": "CVE-2021-23382",
          "url": "https://scout.docker.com/v/CVE-2021-23382?s=github&n=postcss&t=npm&vr=%3C7.0.36"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-23382?s=github&n=postcss&t=npm&vr=%3C7.0.36"
        }
      ]
    },
    {
      "id": "41f53501ebfe344a95fa3c17856baf03cac0d37c9cabf8e988e52c9eb2b77c53",
      "category": "container_scanning",
      "message": "CVE-2021-23382 on postcss@7.0.2",
      "description": "The package postcss versions before 7.0.36 or between 8.0.0 and 8.2.13 are vulnerable to Regular Expression Denial of Service (ReDoS) via getAnnotationURL() and loadAnnotation() in lib/previous-map.js. The vulnerable regexes are caused mainly by the sub-pattern \n```regex\n\\/\\*\\s* sourceMappingURL=(.*)\n```\n\n### PoC\n```js\nvar postcss = require(\"postcss\")\nfunction build_attack(n) {\n    var ret = \"a{}\"\n    for (var i = 0; i < n; i++) {\n        ret += \"/*# sourceMappingURL=\"\n    }\n    return ret + \"!\";\n}\n```\n```js\npostcss.parse('a{}/*# sourceMappingURL=a.css.map */') for (var i = 1; i <= 500000; i++) {\n    if (i % 1000 == 0) {\n        var time = Date.now();\n        var attack_str = build_attack(i) try {\n            postcss.parse(attack_str) var time_cost = Date.now() - time;\n            console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost + \" ms\");\n        } catch (e) {\n            var time_cost = Date.now() - time;\n            console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost + \" ms\");\n        }\n    }\n}\n```",
      "cve": "CVE-2021-23382",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade postcss@7.0.2 to 7.0.36",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/postcss@7.0.2"
          },
          "version": "7.0.2"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-23382",
          "value": "CVE-2021-23382",
          "url": "https://scout.docker.com/v/CVE-2021-23382?s=github&n=postcss&t=npm&vr=%3C7.0.36"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-23382?s=github&n=postcss&t=npm&vr=%3C7.0.36"
        }
      ]
    },
    {
      "id": "e3f8f35e1e755ff4ac9d655ae72171d12bd753b300118c8ec916aa5fab198b74",
      "category": "container_scanning",
      "message": "CVE-2022-25844 on angular@1.7.3",
      "description": "AngularJS lets users write client-side web applications. The package angular after 1.7.0 is vulnerable to Regular Expression Denial of Service (ReDoS) by providing a custom locale rule that makes it possible to assign the parameter in posPre: ' '.repeat() of NUMBER_FORMATS.PATTERNS[1].posPre with a very high value.\n\n**Note:**\n1. This package has been deprecated and is no longer maintained.\n2. The vulnerable versions are 1.7.0 and higher.",
      "cve": "CVE-2022-25844",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/angular@1.7.3"
          },
          "version": "1.7.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-25844",
          "value": "CVE-2022-25844",
          "url": "https://scout.docker.com/v/CVE-2022-25844?s=github&n=angular&t=npm&vr=%3E%3D1.7.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-25844?s=github&n=angular&t=npm&vr=%3E%3D1.7.0"
        }
      ]
    },
    {
      "id": "cbf6ab282c955013819cdbb26f5c07b4cc96c015be70d7f844021011f26909a6",
      "category": "container_scanning",
      "message": "CVE-2023-26116 on angular@1.7.3",
      "description": "All versions of the package angular are vulnerable to Regular Expression Denial of Service (ReDoS) via the angular.copy() utility function due to the usage of an insecure regular expression. Exploiting this vulnerability is possible by a large carefully-crafted input, which can result in catastrophic backtracking.",
      "cve": "CVE-2023-26116",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/angular@1.7.3"
          },
          "version": "1.7.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-26116",
          "value": "CVE-2023-26116",
          "url": "https://scout.docker.com/v/CVE-2023-26116?s=github&n=angular&t=npm&vr=%3C%3D1.8.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-26116?s=github&n=angular&t=npm&vr=%3C%3D1.8.3"
        }
      ]
    },
    {
      "id": "730e7387f402b4f9b60c8eb35b739fe4bf7c9494f188794fce221ac0b9c2ae31",
      "category": "container_scanning",
      "message": "CVE-2023-26117 on angular@1.7.3",
      "description": "All versions of the package angular are vulnerable to Regular Expression Denial of Service (ReDoS) via the $resource service due to the usage of an insecure regular expression. Exploiting this vulnerability is possible by a large carefully-crafted input, which can result in catastrophic backtracking.",
      "cve": "CVE-2023-26117",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/angular@1.7.3"
          },
          "version": "1.7.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-26117",
          "value": "CVE-2023-26117",
          "url": "https://scout.docker.com/v/CVE-2023-26117?s=github&n=angular&t=npm&vr=%3C%3D1.8.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-26117?s=github&n=angular&t=npm&vr=%3C%3D1.8.3"
        }
      ]
    },
    {
      "id": "c42adedf745aa9e3b8bd809f57b104c7976990766c301f489de1a23982d97af4",
      "category": "container_scanning",
      "message": "CVE-2023-26118 on angular@1.7.3",
      "description": "All versions of the package angular are vulnerable to Regular Expression Denial of Service (ReDoS) via the <input type=\"url\"> element due to the usage of an insecure regular expression in the input[url] functionality. Exploiting this vulnerability is possible by a large carefully-crafted input, which can result in catastrophic backtracking.",
      "cve": "CVE-2023-26118",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/angular@1.7.3"
          },
          "version": "1.7.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-26118",
          "value": "CVE-2023-26118",
          "url": "https://scout.docker.com/v/CVE-2023-26118?s=github&n=angular&t=npm&vr=%3C%3D1.8.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-26118?s=github&n=angular&t=npm&vr=%3C%3D1.8.3"
        }
      ]
    },
    {
      "id": "031c6c4fb864abfb0f942d192b3c6467feb09858acb291b1fb07678e15389dc3",
      "category": "container_scanning",
      "message": "CVE-2023-44270 on postcss@7.0.2",
      "description": "An issue was discovered in PostCSS before 8.4.31. It affects linters using PostCSS to parse external Cascading Style Sheets (CSS). There may be `\\r` discrepancies, as demonstrated by `@font-face{ font:(\\r/*);}` in a rule.\n\nThis vulnerability affects linters using PostCSS to parse external untrusted CSS. An attacker can prepare CSS in such a way that it will contains parts parsed by PostCSS as a CSS comment. After processing by PostCSS, it will be included in the PostCSS output in CSS nodes (rules, properties) despite being originally included in a comment.",
      "cve": "CVE-2023-44270",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade postcss@7.0.2 to 8.4.31",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/postcss@7.0.2"
          },
          "version": "7.0.2"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-44270",
          "value": "CVE-2023-44270",
          "url": "https://scout.docker.com/v/CVE-2023-44270?s=github&n=postcss&t=npm&vr=%3C8.4.31"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-44270?s=github&n=postcss&t=npm&vr=%3C8.4.31"
        }
      ]
    },
    {
      "id": "7c598d8173da1071b831788ae92319abcc3b758f1a504733b0d4ed6d2292e478",
      "category": "container_scanning",
      "message": "CVE-2023-44270 on postcss@6.0.23",
      "description": "An issue was discovered in PostCSS before 8.4.31. It affects linters using PostCSS to parse external Cascading Style Sheets (CSS). There may be `\\r` discrepancies, as demonstrated by `@font-face{ font:(\\r/*);}` in a rule.\n\nThis vulnerability affects linters using PostCSS to parse external untrusted CSS. An attacker can prepare CSS in such a way that it will contains parts parsed by PostCSS as a CSS comment. After processing by PostCSS, it will be included in the PostCSS output in CSS nodes (rules, properties) despite being originally included in a comment.",
      "cve": "CVE-2023-44270",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade postcss@6.0.23 to 8.4.31",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/postcss@6.0.23"
          },
          "version": "6.0.23"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-44270",
          "value": "CVE-2023-44270",
          "url": "https://scout.docker.com/v/CVE-2023-44270?s=github&n=postcss&t=npm&vr=%3C8.4.31"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-44270?s=github&n=postcss&t=npm&vr=%3C8.4.31"
        }
      ]
    },
    {
      "id": "ad989c39fd528058fe8485515f6e08ad0d980c1c2dcf0026f029c40ab1677164",
      "category": "container_scanning",
      "message": "CVE-2024-4067 on micromatch@3.1.10",
      "description": "The NPM package `micromatch` prior to version 4.0.8 is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in `micromatch.braces()` in `index.js` because the pattern `.*` will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn't find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue persisted prior to https://github.com/micromatch/micromatch/pull/266. This issue should be mitigated by using a safe pattern that won't start backtracking the regular expression due to greedy matching.\n",
      "cve": "CVE-2024-4067",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade micromatch@3.1.10 to 4.0.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/micromatch@3.1.10"
          },
          "version": "3.1.10"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-4067",
          "value": "CVE-2024-4067",
          "url": "https://scout.docker.com/v/CVE-2024-4067?s=github&n=micromatch&t=npm&vr=%3C4.0.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-4067?s=github&n=micromatch&t=npm&vr=%3C4.0.8"
        }
      ]
    },
    {
      "id": "b586236764d05bca13d0063ca75cad2cbfe0c5b20bf8c4217d763d384fcb1844",
      "category": "container_scanning",
      "message": "CVE-2020-7676 on angular@1.7.3",
      "description": "angular.js prior to 1.8.0 allows cross site scripting. The regex-based input HTML replacement may turn sanitized code into unsanitized one. Wrapping `<option>` elements in `<select>` ones changes parsing behavior, leading to possibly unsanitizing code.",
      "cve": "CVE-2020-7676",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade angular@1.7.3 to 1.8.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/angular@1.7.3"
          },
          "version": "1.7.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-7676",
          "value": "CVE-2020-7676",
          "url": "https://scout.docker.com/v/CVE-2020-7676?s=github&n=angular&t=npm&vr=%3C1.8.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-7676?s=github&n=angular&t=npm&vr=%3C1.8.0"
        }
      ]
    },
    {
      "id": "0cf0e0e6b7af0b3dadabf78c9ee07733a4c08ed6d56862dc4996f5c89e013c1d",
      "category": "container_scanning",
      "message": "CVE-2020-15366 on ajv@5.5.2",
      "description": "An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",
      "cve": "CVE-2020-15366",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ajv@5.5.2 to 6.12.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/ajv@5.5.2"
          },
          "version": "5.5.2"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-15366",
          "value": "CVE-2020-15366",
          "url": "https://scout.docker.com/v/CVE-2020-15366?s=github&n=ajv&t=npm&vr=%3C6.12.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-15366?s=github&n=ajv&t=npm&vr=%3C6.12.3"
        }
      ]
    },
    {
      "id": "05176e28fd222661caaff28f4a718cccfbe68ad87a0fa7a9adfe8f549ec05ecd",
      "category": "container_scanning",
      "message": "CVE-2020-15366 on ajv@6.5.3",
      "description": "An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",
      "cve": "CVE-2020-15366",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ajv@6.5.3 to 6.12.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/ajv@6.5.3"
          },
          "version": "6.5.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-15366",
          "value": "CVE-2020-15366",
          "url": "https://scout.docker.com/v/CVE-2020-15366?s=github&n=ajv&t=npm&vr=%3C6.12.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-15366?s=github&n=ajv&t=npm&vr=%3C6.12.3"
        }
      ]
    },
    {
      "id": "9a5438f76b2a34964f1638b861578bbb4e5fe98e085b7cba5267536d59936262",
      "category": "container_scanning",
      "message": "CVE-2020-7598 on minimist@1.2.0",
      "description": "Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.  \nThis is exploitable if attackers have control over the arguments being passed to `minimist`.\n\n\n## Recommendation\n\nUpgrade to versions 0.2.1, 1.2.3 or later.",
      "cve": "CVE-2020-7598",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade minimist@1.2.0 to 1.2.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/minimist@1.2.0"
          },
          "version": "1.2.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-7598",
          "value": "CVE-2020-7598",
          "url": "https://scout.docker.com/v/CVE-2020-7598?s=github&n=minimist&t=npm&vr=%3E%3D1.0.0%2C%3C1.2.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-7598?s=github&n=minimist&t=npm&vr=%3E%3D1.0.0%2C%3C1.2.3"
        }
      ]
    },
    {
      "id": "965e8bddf9df195519d10b0449a2cc53fe1d16fca13f2cb40797cdf31aa0d029",
      "category": "container_scanning",
      "message": "CVE-2020-7598 on minimist@0.0.8",
      "description": "Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.  \nThis is exploitable if attackers have control over the arguments being passed to `minimist`.\n\n\n## Recommendation\n\nUpgrade to versions 0.2.1, 1.2.3 or later.",
      "cve": "CVE-2020-7598",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade minimist@0.0.8 to 0.2.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/minimist@0.0.8"
          },
          "version": "0.0.8"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-7598",
          "value": "CVE-2020-7598",
          "url": "https://scout.docker.com/v/CVE-2020-7598?s=github&n=minimist&t=npm&vr=%3C0.2.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-7598?s=github&n=minimist&t=npm&vr=%3C0.2.1"
        }
      ]
    },
    {
      "id": "4f60a57f09c1c8cae06bf4eaf5099efe71a908c586e6dcefbc47a78bc34d4d95",
      "category": "container_scanning",
      "message": "CVE-2025-9232 on alpine/openssl@3.3.3-r0",
      "cve": "CVE-2025-9232",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.3.3-r0 to 3.3.5-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.3.3-r0?os_name=alpine&os_version=3.21"
          },
          "version": "3.3.3-r0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-9232",
          "value": "CVE-2025-9232",
          "url": "https://scout.docker.com/v/CVE-2025-9232?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C3.3.5-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-9232?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C3.3.5-r0"
        }
      ]
    },
    {
      "id": "2e83d4739348126d30cfb711630d739fb9b729eec210a8a8917cff2b60dace27",
      "category": "container_scanning",
      "message": "GHSA-2pr6-76vf-7546 on js-yaml@3.12.0",
      "description": "Versions of `js-yaml` prior to 3.13.0 are vulnerable to Denial of Service. By parsing a carefully-crafted YAML file, the node process stalls and may exhaust system resources leading to a Denial of Service.\n\n\n## Recommendation\n\nUpgrade to version 3.13.0.",
      "cve": "GHSA-2pr6-76vf-7546",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade js-yaml@3.12.0 to 3.13.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/js-yaml@3.12.0"
          },
          "version": "3.12.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-2pr6-76vf-7546",
          "value": "GHSA-2pr6-76vf-7546",
          "url": "https://scout.docker.com/v/GHSA-2pr6-76vf-7546?s=github&n=js-yaml&t=npm&vr=%3C3.13.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-2pr6-76vf-7546?s=github&n=js-yaml&t=npm&vr=%3C3.13.0"
        }
      ]
    },
    {
      "id": "7547948f33017b923edcfe91c3171ea247e799652b73bdad92a027df91966958",
      "category": "container_scanning",
      "message": "GHSA-9v62-24cr-58cx on node-sass@4.9.3",
      "description": "Affected versions of `node-sass` are vulnerable to Denial of Service (DoS). Crafted objects passed to the `renderSync` function may trigger C++ assertions in `CustomImporterBridge::get_importer_entry` and `CustomImporterBridge::post_process_return_value` that crash the Node process. This may allow attackers to crash the system's running Node process and lead to Denial of Service.\n\n\n## Recommendation\n\nUpgrade to version 4.13.1 or later",
      "cve": "GHSA-9v62-24cr-58cx",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade node-sass@4.9.3 to 4.13.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/node-sass@4.9.3"
          },
          "version": "4.9.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-9v62-24cr-58cx",
          "value": "GHSA-9v62-24cr-58cx",
          "url": "https://scout.docker.com/v/GHSA-9v62-24cr-58cx?s=github&n=node-sass&t=npm&vr=%3E%3D3.3.0%2C%3C4.13.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-9v62-24cr-58cx?s=github&n=node-sass&t=npm&vr=%3E%3D3.3.0%2C%3C4.13.1"
        }
      ]
    },
    {
      "id": "c676dbfff8d567349b1815a3a1365620b6ddc97d575c9356f7f9be32b47c5d8d",
      "category": "container_scanning",
      "message": "CVE-2016-10735 on bootstrap-sass@3.3.7",
      "description": "In Bootstrap 2.x from 2.0.4, 3.x before 3.4.0 and 4.x-beta before 4.0.0-beta.2, XSS is possible in the data-target attribute. Note that this is a different vulnerability than CVE-2018-14041.\n\nSee https://blog.getbootstrap.com/2018/12/13/bootstrap-3-4-0/ for more info.",
      "cve": "CVE-2016-10735",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade bootstrap-sass@3.3.7 to 3.4.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/bootstrap-sass@3.3.7"
          },
          "version": "3.3.7"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2016-10735",
          "value": "CVE-2016-10735",
          "url": "https://scout.docker.com/v/CVE-2016-10735?s=github&n=bootstrap-sass&t=npm&vr=%3E%3D2.0.4%2C%3C3.4.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2016-10735?s=github&n=bootstrap-sass&t=npm&vr=%3E%3D2.0.4%2C%3C3.4.0"
        }
      ]
    },
    {
      "id": "d3dcf7d0463a1b5b1bbb7d124b2cf5557d9fddf2a87e5563f57beb4e878e331a",
      "category": "container_scanning",
      "message": "CVE-2018-14042 on bootstrap-sass@3.3.7",
      "description": "In Bootstrap starting in version 2.3.0 and prior to versions 3.4.0 and 4.1.2, XSS is possible in the data-container property of tooltip.  This is similar to CVE-2018-14041.",
      "cve": "CVE-2018-14042",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade bootstrap-sass@3.3.7 to 3.4.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/bootstrap-sass@3.3.7"
          },
          "version": "3.3.7"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2018-14042",
          "value": "CVE-2018-14042",
          "url": "https://scout.docker.com/v/CVE-2018-14042?s=github&n=bootstrap-sass&t=npm&vr=%3E%3D2.0.4%2C%3C3.4.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2018-14042?s=github&n=bootstrap-sass&t=npm&vr=%3E%3D2.0.4%2C%3C3.4.0"
        }
      ]
    },
    {
      "id": "50791e10833b85cce1f11345d080ed5d23dc11c89d7f33f748baa459322f5f63",
      "category": "container_scanning",
      "message": "CVE-2018-20676 on bootstrap-sass@3.3.7",
      "description": "In Bootstrap before 3.4.0, XSS is possible in the tooltip data-viewport attribute.",
      "cve": "CVE-2018-20676",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade bootstrap-sass@3.3.7 to 3.4.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/bootstrap-sass@3.3.7"
          },
          "version": "3.3.7"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2018-20676",
          "value": "CVE-2018-20676",
          "url": "https://scout.docker.com/v/CVE-2018-20676?s=github&n=bootstrap-sass&t=npm&vr=%3C3.4.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2018-20676?s=github&n=bootstrap-sass&t=npm&vr=%3C3.4.0"
        }
      ]
    },
    {
      "id": "8922cd1ddeb4c1272e1d5bd5e859fa7ee2df8e5c7244259d86cefdd97b1ec272",
      "category": "container_scanning",
      "message": "CVE-2018-20677 on bootstrap-sass@3.3.7",
      "description": "In Bootstrap before 3.4.0, XSS is possible in the affix configuration target property.",
      "cve": "CVE-2018-20677",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade bootstrap-sass@3.3.7 to 3.4.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/bootstrap-sass@3.3.7"
          },
          "version": "3.3.7"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2018-20677",
          "value": "CVE-2018-20677",
          "url": "https://scout.docker.com/v/CVE-2018-20677?s=github&n=bootstrap-sass&t=npm&vr=%3C3.4.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2018-20677?s=github&n=bootstrap-sass&t=npm&vr=%3C3.4.0"
        }
      ]
    },
    {
      "id": "3815b1954032806261b3efe84f95e50aa83817cbe7e8b87342a1f57a08c836d3",
      "category": "container_scanning",
      "message": "CVE-2019-11358 on jquery@3.3.1",
      "description": "jQuery from 1.1.4 until 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles `jQuery.extend(true, {}, ...)` because of `Object.prototype` pollution. If an unsanitized source object contained an enumerable `__proto__` property, it could extend the native `Object.prototype`.",
      "cve": "CVE-2019-11358",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade jquery@3.3.1 to 3.4.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/jquery@3.3.1"
          },
          "version": "3.3.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-11358",
          "value": "CVE-2019-11358",
          "url": "https://scout.docker.com/v/CVE-2019-11358?s=github&n=jquery&t=npm&vr=%3E%3D1.1.4%2C%3C3.4.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-11358?s=github&n=jquery&t=npm&vr=%3E%3D1.1.4%2C%3C3.4.0"
        }
      ]
    },
    {
      "id": "fa10cc56a175601d5127b94d80464a073c09dc89422f77fd0b6bafb2243b4166",
      "category": "container_scanning",
      "message": "CVE-2019-8331 on bootstrap-sass@3.3.7",
      "description": "Versions of `bootstrap` prior to 3.4.1 for 3.x and 4.3.1 for 4.x are vulnerable to Cross-Site Scripting (XSS). The  `data-template` attribute of the tooltip and popover plugins lacks input sanitization and may allow attacker to execute arbitrary JavaScript.\n\n\n## Recommendation\n\nFor `bootstrap` 4.x upgrade to 4.3.1 or later.\nFor `bootstrap` 3.x upgrade to 3.4.1 or later.",
      "cve": "CVE-2019-8331",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade bootstrap-sass@3.3.7 to 3.4.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/bootstrap-sass@3.3.7"
          },
          "version": "3.3.7"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-8331",
          "value": "CVE-2019-8331",
          "url": "https://scout.docker.com/v/CVE-2019-8331?s=github&n=bootstrap-sass&t=npm&vr=%3E%3D3.0.0%2C%3C3.4.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-8331?s=github&n=bootstrap-sass&t=npm&vr=%3E%3D3.0.0%2C%3C3.4.1"
        }
      ]
    },
    {
      "id": "918936b8c9be9e6aa245e0c78571ac2ca1bdffbfe3ca4e864786a4b88461cf44",
      "category": "container_scanning",
      "message": "CVE-2020-23064 on jquery@3.3.1",
      "description": "Cross Site Scripting vulnerability in jQuery 2.2.0 through 3.x before 3.5.0 allows a remote attacker to execute arbitrary code via the <options> element.",
      "cve": "CVE-2020-23064",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade jquery@3.3.1 to 3.5.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/jquery@3.3.1"
          },
          "version": "3.3.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-23064",
          "value": "CVE-2020-23064",
          "url": "https://scout.docker.com/v/CVE-2020-23064?s=gitlab&n=jquery&t=npm&vr=%3E%3D1.0.3%2C%3C3.5.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-23064?s=gitlab&n=jquery&t=npm&vr=%3E%3D1.0.3%2C%3C3.5.0"
        }
      ]
    },
    {
      "id": "6f64deaa411f070cf0cd955af3cc7cb94f9f72e68e49a330e08c7b09aa8e8c46",
      "category": "container_scanning",
      "message": "CVE-2022-25869 on angular@1.7.3",
      "description": "All versions of package angular are vulnerable to Cross-site Scripting (XSS) due to insecure page caching in the Internet Explorer browser, which allows interpolation of `<textarea>` elements.\n\nNPM package [angular](https://www.npmjs.com/package/angular) is deprecated. Those who want to receive security updates should use the actively maintained package [@angular/core](https://www.npmjs.com/package/@angular/core).",
      "cve": "CVE-2022-25869",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/angular@1.7.3"
          },
          "version": "1.7.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-25869",
          "value": "CVE-2022-25869",
          "url": "https://scout.docker.com/v/CVE-2022-25869?s=github&n=angular&t=npm&vr=%3C%3D1.8.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-25869?s=github&n=angular&t=npm&vr=%3C%3D1.8.3"
        }
      ]
    },
    {
      "id": "a9152b5ef826d525150335c2ed1988c7ebe96667a9b5e76d3df7734ce2d02c72",
      "category": "container_scanning",
      "message": "CVE-2023-28155 on request@2.87.0",
      "description": "The `request` package through 2.88.2 for Node.js and the `@cypress/request` package prior to 3.0.0 allow a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP).\n\nNOTE: The `request` package is no longer supported by the maintainer.",
      "cve": "CVE-2023-28155",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/request@2.87.0"
          },
          "version": "2.87.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-28155",
          "value": "CVE-2023-28155",
          "url": "https://scout.docker.com/v/CVE-2023-28155?s=github&n=request&t=npm&vr=%3C%3D2.88.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-28155?s=github&n=request&t=npm&vr=%3C%3D2.88.2"
        }
      ]
    },
    {
      "id": "eadf53266724c5ac1e24d08f14ef4dff82deade44c8e8a0296a830de06f861d9",
      "category": "container_scanning",
      "message": "CVE-2024-29041 on express@4.16.3",
      "description": "### Impact\n\nVersions of Express.js prior to 4.19.2 and pre-release alpha and beta versions before 5.0.0-beta.3 are affected by an open redirect vulnerability using malformed URLs.\n\nWhen a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list.\n\nThe main method impacted is `res.location()` but this is also called from within `res.redirect()`.\n\n### Patches\n\nhttps://github.com/expressjs/express/commit/0867302ddbde0e9463d0564fea5861feb708c2dd\nhttps://github.com/expressjs/express/commit/0b746953c4bd8e377123527db11f9cd866e39f94\n\nAn initial fix went out with `express@4.19.0`, we then patched a feature regression in `4.19.1` and added improved handling for the bypass in `4.19.2`.\n\n### Workarounds\n\nThe fix for this involves pre-parsing the url string with either `require('node:url').parse` or `new URL`. These are steps you can take on your own before passing the user input string to `res.location` or `res.redirect`.\n\n### References\n\nhttps://github.com/expressjs/express/pull/5539\nhttps://github.com/koajs/koa/issues/1800\nhttps://expressjs.com/en/4x/api.html#res.location",
      "cve": "CVE-2024-29041",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade express@4.16.3 to 4.19.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/express@4.16.3"
          },
          "version": "4.16.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-29041",
          "value": "CVE-2024-29041",
          "url": "https://scout.docker.com/v/CVE-2024-29041?s=github&n=express&t=npm&vr=%3C4.19.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-29041?s=github&n=express&t=npm&vr=%3C4.19.2"
        }
      ]
    },
    {
      "id": "860fcc04e5506e086fb44cb65e3c34c93ff61a28fe8c72a2b86b1e1c59b886e5",
      "category": "container_scanning",
      "message": "CVE-2024-43788 on webpack@4.17.1",
      "description": "We discovered a DOM Clobbering vulnerability in Webpack’s `AutoPublicPathRuntimeModule`. The DOM Clobbering gadget in the module can lead to cross-site scripting (XSS) in web pages where scriptless attacker-controlled HTML elements (e.g., an `img` tag with an unsanitized `name` attribute) are present.\n\nWe found the real-world exploitation of this gadget in the Canvas LMS which allows XSS attack happens through an javascript code compiled by Webpack (the vulnerable part is from Webpack). We believe this is a severe issue. If Webpack’s code is not resilient to DOM Clobbering attacks, it could lead to significant security vulnerabilities in any web application using Webpack-compiled code.",
      "cve": "CVE-2024-43788",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade webpack@4.17.1 to 5.94.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/webpack@4.17.1"
          },
          "version": "4.17.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-43788",
          "value": "CVE-2024-43788",
          "url": "https://scout.docker.com/v/CVE-2024-43788?s=gitlab&n=webpack&t=npm&vr=%3C5.94.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-43788?s=gitlab&n=webpack&t=npm&vr=%3C5.94.0"
        }
      ]
    },
    {
      "id": "7428b5f321a988f04f1463fd14e7277e5b43bbbcb88838f2b830db9dbba78205",
      "category": "container_scanning",
      "message": "GHSA-pgr8-jg6h-8gw6 on webpack-bundle-analyzer@2.13.1",
      "description": "Versions of `webpack-bundle-analyzer` prior to 3.3.2 are vulnerable to Cross-Site Scripting. The package uses `JSON.stringify()` without properly escaping input which may lead to Cross-Site Scripting.\n\n\n## Recommendation\n\nUpgrade to version 3.3.2 or later.",
      "cve": "GHSA-pgr8-jg6h-8gw6",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade webpack-bundle-analyzer@2.13.1 to 3.3.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/webpack-bundle-analyzer@2.13.1"
          },
          "version": "2.13.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-pgr8-jg6h-8gw6",
          "value": "GHSA-pgr8-jg6h-8gw6",
          "url": "https://scout.docker.com/v/GHSA-pgr8-jg6h-8gw6?s=github&n=webpack-bundle-analyzer&t=npm&vr=%3C3.3.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-pgr8-jg6h-8gw6?s=github&n=webpack-bundle-analyzer&t=npm&vr=%3C3.3.2"
        }
      ]
    },
    {
      "id": "72d80d10244eb030189c4555265812e95a4344da3aac243e95b9cc196b83f85a",
      "category": "container_scanning",
      "message": "CVE-2019-1010266 on lodash@4.17.10",
      "description": "lodash prior to 4.7.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.7.11.",
      "cve": "CVE-2019-1010266",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade lodash@4.17.10 to 4.17.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/lodash@4.17.10"
          },
          "version": "4.17.10"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-1010266",
          "value": "CVE-2019-1010266",
          "url": "https://scout.docker.com/v/CVE-2019-1010266?s=github&n=lodash&t=npm&vr=%3E%3D4.7.0%2C%3C4.17.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-1010266?s=github&n=lodash&t=npm&vr=%3E%3D4.7.0%2C%3C4.17.11"
        }
      ]
    },
    {
      "id": "7faf70879b29791b78a9c85ad389e6cc6f6e913aac63ae71912d13a144f3b04c",
      "category": "container_scanning",
      "message": "CVE-2022-38778 on decode-uri-component@0.2.0",
      "description": "A flaw (CVE-2022-38900) was discovered in one of Kibana’s third party dependencies, that could allow an authenticated user to perform a request that crashes the Kibana server process.",
      "cve": "CVE-2022-38778",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade decode-uri-component@0.2.0 to 0.2.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/decode-uri-component@0.2.0"
          },
          "version": "0.2.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-38778",
          "value": "CVE-2022-38778",
          "url": "https://scout.docker.com/v/CVE-2022-38778?s=gitlab&n=decode-uri-component&t=npm&vr=%3C0.2.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-38778?s=gitlab&n=decode-uri-component&t=npm&vr=%3C0.2.1"
        }
      ]
    },
    {
      "id": "751847916e03ba0b1f017b877c561410821170e8045c0649d569945dc4e81324",
      "category": "container_scanning",
      "message": "CVE-2023-26136 on tough-cookie@2.3.4",
      "description": "Versions of the package tough-cookie before 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in `rejectPublicSuffixes=false` mode. This issue arises from the manner in which the objects are initialized.",
      "cve": "CVE-2023-26136",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade tough-cookie@2.3.4 to 4.1.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/tough-cookie@2.3.4"
          },
          "version": "2.3.4"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-26136",
          "value": "CVE-2023-26136",
          "url": "https://scout.docker.com/v/CVE-2023-26136?s=github&n=tough-cookie&t=npm&vr=%3C4.1.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-26136?s=github&n=tough-cookie&t=npm&vr=%3C4.1.3"
        }
      ]
    },
    {
      "id": "65a4aec681644f963ea4c0ab04b7c0e74081c9af82c70052d57a6b1ed1e46258",
      "category": "container_scanning",
      "message": "CVE-2024-28863 on tar@2.2.1",
      "description": "## Description: \nDuring some analysis today on npm's `node-tar` package I came across the folder creation process, Basicly if you provide node-tar with a path like this `./a/b/c/foo.txt` it would create every folder and sub-folder here a, b and c until it reaches the last folder to create `foo.txt`, In-this case I noticed that there's no validation at all on the amount of folders being created, that said we're actually able to CPU and memory consume the system running node-tar and even crash the nodejs client within few seconds of running it using a path with too many sub-folders inside\n\n## Steps To Reproduce:\nYou can reproduce this issue by downloading the tar file I provided in the resources and using node-tar to extract it, you should get the same behavior as the video\n\n## Proof Of Concept:\nHere's a [video](https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/3i7uojw8s52psar6pg8zkdo4h9io?response-content-disposition=attachment%3B%20filename%3D%22tar-dos-poc.webm%22%3B%20filename%2A%3DUTF-8%27%27tar-dos-poc.webm&response-content-type=video%2Fwebm&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSWWGDXHA%2F20240312%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240312T080103Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDcaCXVzLXdlc3QtMiJHMEUCID3xYDc6emXVPOg8iVR5dVk0u3gguTPIDJ0OIE%2BKxj17AiEAi%2BGiay1gGMWhH%2F031fvMYnSsa8U7CnpZpxvFAYqNRwgqsQUIQBADGgwwMTM2MTkyNzQ4NDkiDAaj6OgUL3gg4hhLLCqOBUUrOgWSqaK%2FmxN6nKRvB4Who3LIyzswFKm9LV94GiSVFP3zXYA480voCmAHTg7eBL7%2BrYgV2RtXbhF4aCFMCN3qu7GeXkIdH7xwVMi9zXHkekviSKZ%2FsZtVVjn7RFqOCKhJl%2FCoiLQJuDuju%2FtfdTGZbEbGsPgKHoILYbRp81K51zeRL21okjsOehmypkZzq%2BoGrXIX0ynPOKujxw27uqdF4T%2BF9ynodq01vGgwgVBEjHojc4OKOfr1oW5b%2FtGVV59%2BOBVI1hqIKHRG0Ed4SWmp%2BLd1hazGuZPvp52szmegnOj5qr3ubppnKL242bX%2FuAnQKzKK0HpwolqXjsuEeFeM85lxhqHV%2B1BJqaqSHHDa0HUMLZistMRshRlntuchcFQCR6HBa2c8PSnhpVC31zMzvYMfKsI12h4HB6l%2FudrmNrvmH4LmNpi4dZFcio21DzKj%2FRjWmxjH7l8egDyG%2FIgPMY6Ls4IiN7aR1jijYTrBCgPUUHets3BFvqLzHtPFnG3B7%2FYRPnhCLu%2FgzvKN3F8l38KqeTNMHJaxkuhCvEjpFB2SJbi2QZqZZbLj3xASqXoogzbsyPp0Tzp0tH7EKDhPA7H6wwiZukXfFhhlYzP8on9fO2Ajz%2F%2BTDkDjbfWw4KNJ0cFeDsGrUspqQZb5TAKlUge7iOZEc2TZ5uagatSy9Mg08E4nImBSE5QUHDc7Daya1gyqrETMDZBBUHH2RFkGA9qMpEtNrtJ9G%2BPedz%2FpPY1hh9OCp9Pg1BrX97l3SfVzlAMRfNibhywq6qnE35rVnZi%2BEQ1UgBjs9jD%2FQrW49%2FaD0oUDojVeuFFryzRnQxDbKtYgonRcItTvLT5Y0xaK9P0u6H1197%2FMk3XxmjD9%2Fb%2BvBjqxAQWWkKiIxpC1oHEWK9Jt8UdJ39xszDBGpBqjB6Tvt5ePAXSyX8np%2FrBi%2BAPx06O0%2Ba7pU4NmH800EVXxxhgfj9nMw3CeoUIdxorVKtU2Mxw%2FLaAiPgxPS4rqkt65NF7eQYfegcSYDTm2Z%2BHPbz9HfCaVZ28Zqeko6sR%2F29ML4bguqVvHAM4mWPLNDXH33mjG%2BuzLi8e1BF7tNveg2X9G%2FRdcMkojwKYbu6xN3M6aX2alQg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=1e8235d885f1d61529b7d6b23ea3a0780c300c91d86e925dd8310d5b661ddbe2) show-casing the exploit: \n\n## Impact\n\nDenial of service by crashing the nodejs client when attempting to parse a tar archive, make it run out of heap memory and consuming server CPU and memory resources\n\n## Report resources\n[payload.txt](https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/1e83ayb5dd3350fvj3gst0mqixwk?response-content-disposition=attachment%3B%20filename%3D%22payload.txt%22%3B%20filename%2A%3DUTF-8%27%27payload.txt&response-content-type=text%2Fplain&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSWWGDXHA%2F20240312%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240312T080103Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDcaCXVzLXdlc3QtMiJHMEUCID3xYDc6emXVPOg8iVR5dVk0u3gguTPIDJ0OIE%2BKxj17AiEAi%2BGiay1gGMWhH%2F031fvMYnSsa8U7CnpZpxvFAYqNRwgqsQUIQBADGgwwMTM2MTkyNzQ4NDkiDAaj6OgUL3gg4hhLLCqOBUUrOgWSqaK%2FmxN6nKRvB4Who3LIyzswFKm9LV94GiSVFP3zXYA480voCmAHTg7eBL7%2BrYgV2RtXbhF4aCFMCN3qu7GeXkIdH7xwVMi9zXHkekviSKZ%2FsZtVVjn7RFqOCKhJl%2FCoiLQJuDuju%2FtfdTGZbEbGsPgKHoILYbRp81K51zeRL21okjsOehmypkZzq%2BoGrXIX0ynPOKujxw27uqdF4T%2BF9ynodq01vGgwgVBEjHojc4OKOfr1oW5b%2FtGVV59%2BOBVI1hqIKHRG0Ed4SWmp%2BLd1hazGuZPvp52szmegnOj5qr3ubppnKL242bX%2FuAnQKzKK0HpwolqXjsuEeFeM85lxhqHV%2B1BJqaqSHHDa0HUMLZistMRshRlntuchcFQCR6HBa2c8PSnhpVC31zMzvYMfKsI12h4HB6l%2FudrmNrvmH4LmNpi4dZFcio21DzKj%2FRjWmxjH7l8egDyG%2FIgPMY6Ls4IiN7aR1jijYTrBCgPUUHets3BFvqLzHtPFnG3B7%2FYRPnhCLu%2FgzvKN3F8l38KqeTNMHJaxkuhCvEjpFB2SJbi2QZqZZbLj3xASqXoogzbsyPp0Tzp0tH7EKDhPA7H6wwiZukXfFhhlYzP8on9fO2Ajz%2F%2BTDkDjbfWw4KNJ0cFeDsGrUspqQZb5TAKlUge7iOZEc2TZ5uagatSy9Mg08E4nImBSE5QUHDc7Daya1gyqrETMDZBBUHH2RFkGA9qMpEtNrtJ9G%2BPedz%2FpPY1hh9OCp9Pg1BrX97l3SfVzlAMRfNibhywq6qnE35rVnZi%2BEQ1UgBjs9jD%2FQrW49%2FaD0oUDojVeuFFryzRnQxDbKtYgonRcItTvLT5Y0xaK9P0u6H1197%2FMk3XxmjD9%2Fb%2BvBjqxAQWWkKiIxpC1oHEWK9Jt8UdJ39xszDBGpBqjB6Tvt5ePAXSyX8np%2FrBi%2BAPx06O0%2Ba7pU4NmH800EVXxxhgfj9nMw3CeoUIdxorVKtU2Mxw%2FLaAiPgxPS4rqkt65NF7eQYfegcSYDTm2Z%2BHPbz9HfCaVZ28Zqeko6sR%2F29ML4bguqVvHAM4mWPLNDXH33mjG%2BuzLi8e1BF7tNveg2X9G%2FRdcMkojwKYbu6xN3M6aX2alQg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=bad9fe731f05a63a950f99828125653a8c1254750fe0ca7be882e89ecdd449ae)\n[archeive.tar.gz](https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ymkuh4xnfdcf1soeyi7jc2x4yt2i?response-content-disposition=attachment%3B%20filename%3D%22archive.tar.gz%22%3B%20filename%2A%3DUTF-8%27%27archive.tar.gz&response-content-type=application%2Fx-tar&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSWWGDXHA%2F20240312%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240312T080103Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDcaCXVzLXdlc3QtMiJHMEUCID3xYDc6emXVPOg8iVR5dVk0u3gguTPIDJ0OIE%2BKxj17AiEAi%2BGiay1gGMWhH%2F031fvMYnSsa8U7CnpZpxvFAYqNRwgqsQUIQBADGgwwMTM2MTkyNzQ4NDkiDAaj6OgUL3gg4hhLLCqOBUUrOgWSqaK%2FmxN6nKRvB4Who3LIyzswFKm9LV94GiSVFP3zXYA480voCmAHTg7eBL7%2BrYgV2RtXbhF4aCFMCN3qu7GeXkIdH7xwVMi9zXHkekviSKZ%2FsZtVVjn7RFqOCKhJl%2FCoiLQJuDuju%2FtfdTGZbEbGsPgKHoILYbRp81K51zeRL21okjsOehmypkZzq%2BoGrXIX0ynPOKujxw27uqdF4T%2BF9ynodq01vGgwgVBEjHojc4OKOfr1oW5b%2FtGVV59%2BOBVI1hqIKHRG0Ed4SWmp%2BLd1hazGuZPvp52szmegnOj5qr3ubppnKL242bX%2FuAnQKzKK0HpwolqXjsuEeFeM85lxhqHV%2B1BJqaqSHHDa0HUMLZistMRshRlntuchcFQCR6HBa2c8PSnhpVC31zMzvYMfKsI12h4HB6l%2FudrmNrvmH4LmNpi4dZFcio21DzKj%2FRjWmxjH7l8egDyG%2FIgPMY6Ls4IiN7aR1jijYTrBCgPUUHets3BFvqLzHtPFnG3B7%2FYRPnhCLu%2FgzvKN3F8l38KqeTNMHJaxkuhCvEjpFB2SJbi2QZqZZbLj3xASqXoogzbsyPp0Tzp0tH7EKDhPA7H6wwiZukXfFhhlYzP8on9fO2Ajz%2F%2BTDkDjbfWw4KNJ0cFeDsGrUspqQZb5TAKlUge7iOZEc2TZ5uagatSy9Mg08E4nImBSE5QUHDc7Daya1gyqrETMDZBBUHH2RFkGA9qMpEtNrtJ9G%2BPedz%2FpPY1hh9OCp9Pg1BrX97l3SfVzlAMRfNibhywq6qnE35rVnZi%2BEQ1UgBjs9jD%2FQrW49%2FaD0oUDojVeuFFryzRnQxDbKtYgonRcItTvLT5Y0xaK9P0u6H1197%2FMk3XxmjD9%2Fb%2BvBjqxAQWWkKiIxpC1oHEWK9Jt8UdJ39xszDBGpBqjB6Tvt5ePAXSyX8np%2FrBi%2BAPx06O0%2Ba7pU4NmH800EVXxxhgfj9nMw3CeoUIdxorVKtU2Mxw%2FLaAiPgxPS4rqkt65NF7eQYfegcSYDTm2Z%2BHPbz9HfCaVZ28Zqeko6sR%2F29ML4bguqVvHAM4mWPLNDXH33mjG%2BuzLi8e1BF7tNveg2X9G%2FRdcMkojwKYbu6xN3M6aX2alQg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=5e2c0d4b4de40373ac0fe91908c2659141a6dd4ab850271cc26042a3885c82ea)\n\n## Note\nThis report was originally reported to GitHub bug bounty program, they asked me to report it to you a month ago",
      "cve": "CVE-2024-28863",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade tar@2.2.1 to 6.2.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/tar@2.2.1"
          },
          "version": "2.2.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-28863",
          "value": "CVE-2024-28863",
          "url": "https://scout.docker.com/v/CVE-2024-28863?s=github&n=tar&t=npm&vr=%3C6.2.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-28863?s=github&n=tar&t=npm&vr=%3C6.2.1"
        }
      ]
    },
    {
      "id": "5b55e3a039df8081e897b01fd9f6a0c09fb7e628da9a693165df49612b494cb7",
      "category": "container_scanning",
      "message": "CVE-2025-9231 on alpine/openssl@3.3.3-r0",
      "cve": "CVE-2025-9231",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.3.3-r0 to 3.3.5-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.3.3-r0?os_name=alpine&os_version=3.21"
          },
          "version": "3.3.3-r0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-9231",
          "value": "CVE-2025-9231",
          "url": "https://scout.docker.com/v/CVE-2025-9231?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C3.3.5-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-9231?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C3.3.5-r0"
        }
      ]
    },
    {
      "id": "f1e7374f0109eee9b8f6e80687f03cc1368aeaadf2a6ff1fbccdc0a22e190ad0",
      "category": "container_scanning",
      "message": "CVE-2020-28498 on elliptic@6.4.1",
      "description": "The npm package `elliptic` before version 6.5.4 are vulnerable to Cryptographic Issues via the secp256k1 implementation in elliptic/ec/key.js. There is no check to confirm that the public key point passed into the derive function actually exists on the secp256k1 curve. This results in the potential for the private key used in this implementation to be revealed after a number of ECDH operations are performed.",
      "cve": "CVE-2020-28498",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade elliptic@6.4.1 to 6.5.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/elliptic@6.4.1"
          },
          "version": "6.4.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-28498",
          "value": "CVE-2020-28498",
          "url": "https://scout.docker.com/v/CVE-2020-28498?s=github&n=elliptic&t=npm&vr=%3C6.5.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-28498?s=github&n=elliptic&t=npm&vr=%3C6.5.4"
        }
      ]
    },
    {
      "id": "40388ea1b976a47fd563eb52c3d24b2e83bcb7f281c6273ebd3fded51d2bb219",
      "category": "container_scanning",
      "message": "CVE-2020-11022 on jquery@3.3.1",
      "description": "### Impact\nPassing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. `.html()`, `.append()`, and others) may execute untrusted code.\n\n### Patches\nThis problem is patched in jQuery 3.5.0.\n\n### Workarounds\nTo workaround the issue without upgrading, adding the following to your code:\n\n```js\njQuery.htmlPrefilter = function( html ) {\n\treturn html;\n};\n```\n\nYou need to use at least jQuery 1.12/2.2 or newer to be able to apply this workaround.\n\n### References\nhttps://blog.jquery.com/2020/04/10/jquery-3-5-0-released/\nhttps://jquery.com/upgrade-guide/3.5/\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery repo](https://github.com/jquery/jquery/issues). If you don't find an answer, open a new issue.",
      "cve": "CVE-2020-11022",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade jquery@3.3.1 to 3.5.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/jquery@3.3.1"
          },
          "version": "3.3.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-11022",
          "value": "CVE-2020-11022",
          "url": "https://scout.docker.com/v/CVE-2020-11022?s=github&n=jquery&t=npm&vr=%3E%3D1.2.0%2C%3C3.5.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-11022?s=github&n=jquery&t=npm&vr=%3E%3D1.2.0%2C%3C3.5.0"
        }
      ]
    },
    {
      "id": "3c4066ef97bfb7fd21708e3075bb30530e562f30db452b10b1ca9078920df677",
      "category": "container_scanning",
      "message": "CVE-2020-11023 on jquery@3.3.1",
      "description": "### Impact\nPassing HTML containing `<option>` elements from untrusted sources - even after sanitizing them - to one of jQuery's DOM manipulation methods (i.e. `.html()`, `.append()`, and others) may execute untrusted code.\n\n### Patches\nThis problem is patched in jQuery 3.5.0.\n\n### Workarounds\nTo workaround this issue without upgrading, use [DOMPurify](https://github.com/cure53/DOMPurify) with its `SAFE_FOR_JQUERY` option to sanitize the HTML string before passing it to a jQuery method.\n\n### References\nhttps://blog.jquery.com/2020/04/10/jquery-3-5-0-released/\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery repo](https://github.com/jquery/jquery/issues). If you don't find an answer, open a new issue.",
      "cve": "CVE-2020-11023",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade jquery@3.3.1 to 3.5.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/jquery@3.3.1"
          },
          "version": "3.3.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-11023",
          "value": "CVE-2020-11023",
          "url": "https://scout.docker.com/v/CVE-2020-11023?s=github&n=jquery&t=npm&vr=%3E%3D1.0.3%2C%3C3.5.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-11023?s=github&n=jquery&t=npm&vr=%3E%3D1.0.3%2C%3C3.5.0"
        }
      ]
    },
    {
      "id": "d019fb2a43f0fb692b946264adba24950b3fd2261ec723b868a47c6bb801af30",
      "category": "container_scanning",
      "message": "CVE-2024-33883 on ejs@2.6.1",
      "description": "The ejs (aka Embedded JavaScript templates) package before 3.1.10 for Node.js lacks certain pollution protection.",
      "cve": "CVE-2024-33883",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ejs@2.6.1 to 3.1.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/ejs@2.6.1"
          },
          "version": "2.6.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-33883",
          "value": "CVE-2024-33883",
          "url": "https://scout.docker.com/v/CVE-2024-33883?s=github&n=ejs&t=npm&vr=%3C3.1.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-33883?s=github&n=ejs&t=npm&vr=%3C3.1.10"
        }
      ]
    },
    {
      "id": "d35eb0bf212856ef558f9c42a7b70246e6d8a71a56549f2b4f8517fb1c6dce6a",
      "category": "container_scanning",
      "message": "CVE-2018-16487 on lodash@4.17.10",
      "description": "Versions of `lodash` before 4.17.11 are vulnerable to prototype pollution. \n\nThe vulnerable functions are 'defaultsDeep', 'merge', and 'mergeWith' which allow a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.11 or later.",
      "cve": "CVE-2018-16487",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade lodash@4.17.10 to 4.17.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/lodash@4.17.10"
          },
          "version": "4.17.10"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2018-16487",
          "value": "CVE-2018-16487",
          "url": "https://scout.docker.com/v/CVE-2018-16487?s=github&n=lodash&t=npm&vr=%3C4.17.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2018-16487?s=github&n=lodash&t=npm&vr=%3C4.17.11"
        }
      ]
    },
    {
      "id": "3ffb3387a76d30e5fa8010c9657263786263c68a4485055e21a76a70bc4bf3ea",
      "category": "container_scanning",
      "message": "GHSA-779f-wgxg-qr8f on lodash.mergewith@4.6.1",
      "description": "Versions of `lodash.mergewith` before 4.6.2 are vulnerable to prototype pollution. The function `mergeWith` may allow a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.6.2 or later.",
      "cve": "GHSA-779f-wgxg-qr8f",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade lodash.mergewith@4.6.1 to 4.6.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/lodash.mergewith@4.6.1"
          },
          "version": "4.6.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-779f-wgxg-qr8f",
          "value": "GHSA-779f-wgxg-qr8f",
          "url": "https://scout.docker.com/v/GHSA-779f-wgxg-qr8f?s=github&n=lodash.mergewith&t=npm&vr=%3C4.6.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-779f-wgxg-qr8f?s=github&n=lodash.mergewith&t=npm&vr=%3C4.6.2"
        }
      ]
    },
    {
      "id": "a678836b25610f22055ffa3b20982a8aefbec7560eb54c278a3f9b7ad41a26a7",
      "category": "container_scanning",
      "message": "GHSA-8j8c-7jfh-h6hx on js-yaml@3.12.0",
      "description": "Versions of `js-yaml` prior to 3.13.1 are vulnerable to Code Injection. The `load()` function may execute arbitrary code injected through a malicious YAML file. Objects that have `toString` as key, JavaScript code as value and are used as explicit mapping keys allow attackers to execute the supplied code through the `load()` function. The `safeLoad()` function is unaffected.\n\nAn example payload is \n`{ toString: !<tag:yaml.org,2002:js/function> 'function (){return Date.now()}' } : 1` \nwhich returns the object \n{\n  \"1553107949161\": 1\n}\n\n\n## Recommendation\n\nUpgrade to version 3.13.1.",
      "cve": "GHSA-8j8c-7jfh-h6hx",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade js-yaml@3.12.0 to 3.13.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/js-yaml@3.12.0"
          },
          "version": "3.12.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-8j8c-7jfh-h6hx",
          "value": "GHSA-8j8c-7jfh-h6hx",
          "url": "https://scout.docker.com/v/GHSA-8j8c-7jfh-h6hx?s=github&n=js-yaml&t=npm&vr=%3C3.13.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-8j8c-7jfh-h6hx?s=github&n=js-yaml&t=npm&vr=%3C3.13.1"
        }
      ]
    },
    {
      "id": "21c05f2a983184e687943db142e298e30447a5c0b737a84a6584f00f285fc483",
      "category": "container_scanning",
      "message": "CVE-2022-46175 on json5@0.5.1",
      "description": "The `parse` method of the JSON5 library before and including version `2.2.1` does not restrict parsing of keys named `__proto__`, allowing specially crafted strings to pollute the prototype of the resulting object.\n\nThis vulnerability pollutes the prototype of the object returned by `JSON5.parse` and not the global Object prototype, which is the commonly understood definition of Prototype Pollution. However, polluting the prototype of a single object can have significant security impact for an application if the object is later used in trusted operations.\n\n## Impact\nThis vulnerability could allow an attacker to set arbitrary and unexpected keys on the object returned from `JSON5.parse`. The actual impact will depend on how applications utilize the returned object and how they filter unwanted keys, but could include denial of service, cross-site scripting, elevation of privilege, and in extreme cases, remote code execution.\n\n## Mitigation\nThis vulnerability is patched in json5 v2.2.2 and later. A patch has also been backported for json5 v1 in versions v1.0.2 and later.\n\n## Details\n \nSuppose a developer wants to allow users and admins to perform some risky operation, but they want to restrict what non-admins can do. To accomplish this, they accept a JSON blob from the user, parse it using `JSON5.parse`, confirm that the provided data does not set some sensitive keys, and then performs the risky operation using the validated data:\n \n```js\nconst JSON5 = require('json5');\n\nconst doSomethingDangerous = (props) => {\n  if (props.isAdmin) {\n    console.log('Doing dangerous thing as admin.');\n  } else {\n    console.log('Doing dangerous thing as user.');\n  }\n};\n\nconst secCheckKeysSet = (obj, searchKeys) => {\n  let searchKeyFound = false;\n  Object.keys(obj).forEach((key) => {\n    if (searchKeys.indexOf(key) > -1) {\n      searchKeyFound = true;\n    }\n  });\n  return searchKeyFound;\n};\n\nconst props = JSON5.parse('{\"foo\": \"bar\"}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as user.\"\n} else {\n  throw new Error('Forbidden...');\n}\n```\n \nIf the user attempts to set the `isAdmin` key, their request will be rejected:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"isAdmin\": true}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props);\n} else {\n  throw new Error('Forbidden...'); // Error: Forbidden...\n}\n```\n \nHowever, users can instead set the `__proto__` key to `{\"isAdmin\": true}`. `JSON5` will parse this key and will set the `isAdmin` key on the prototype of the returned object, allowing the user to bypass the security check and run their request as an admin:\n \n```js\nconst props = JSON5.parse('{\"foo\": \"bar\", \"__proto__\": {\"isAdmin\": true}}');\nif (!secCheckKeysSet(props, ['isAdmin', 'isMod'])) {\n  doSomethingDangerous(props); // \"Doing dangerous thing as admin.\"\n} else {\n  throw new Error('Forbidden...');\n}\n ```",
      "cve": "CVE-2022-46175",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade json5@0.5.1 to 1.0.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/json5@0.5.1"
          },
          "version": "0.5.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-46175",
          "value": "CVE-2022-46175",
          "url": "https://scout.docker.com/v/CVE-2022-46175?s=github&n=json5&t=npm&vr=%3C1.0.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-46175?s=github&n=json5&t=npm&vr=%3C1.0.2"
        }
      ]
    },
    {
      "id": "ba572dd9ee942480674f078eeefa60a615e8068a701e17fdeb0b6b47f4088992",
      "category": "container_scanning",
      "message": "CVE-2021-23337 on lodash.template@4.4.0",
      "description": "`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.",
      "cve": "CVE-2021-23337",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/lodash.template@4.4.0"
          },
          "version": "4.4.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-23337",
          "value": "CVE-2021-23337",
          "url": "https://scout.docker.com/v/CVE-2021-23337?s=github&n=lodash.template&t=npm&vr=%3C%3D4.5.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-23337?s=github&n=lodash.template&t=npm&vr=%3C%3D4.5.0"
        }
      ]
    },
    {
      "id": "3f8cdeeab0111ffe18070dbac76d709e670af10b09415031b524cd6088576ab0",
      "category": "container_scanning",
      "message": "CVE-2021-23337 on lodash@4.17.10",
      "description": "`lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.",
      "cve": "CVE-2021-23337",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade lodash@4.17.10 to 4.17.21",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/lodash@4.17.10"
          },
          "version": "4.17.10"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-23337",
          "value": "CVE-2021-23337",
          "url": "https://scout.docker.com/v/CVE-2021-23337?s=github&n=lodash&t=npm&vr=%3C4.17.21"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-23337?s=github&n=lodash&t=npm&vr=%3C4.17.21"
        }
      ]
    },
    {
      "id": "a0cfe6aba957beac31e63c2501345139dab847ec4e9a7c1740aded9f6e7e0c8e",
      "category": "container_scanning",
      "message": "CVE-2020-7774 on y18n@3.2.1",
      "description": "### Overview\n\nThe npm package `y18n` before versions 3.2.2, 4.0.1, and 5.0.5 is vulnerable to Prototype Pollution. \n\n### POC\n\n```js\nconst y18n = require('y18n')();\n\ny18n.setLocale('__proto__');\ny18n.updateLocale({polluted: true});\n\nconsole.log(polluted); // true\n```\n\n### Recommendation\n\nUpgrade to version 3.2.2, 4.0.1, 5.0.5 or later.",
      "cve": "CVE-2020-7774",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade y18n@3.2.1 to 3.2.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/y18n@3.2.1"
          },
          "version": "3.2.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-7774",
          "value": "CVE-2020-7774",
          "url": "https://scout.docker.com/v/CVE-2020-7774?s=github&n=y18n&t=npm&vr=%3C3.2.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-7774?s=github&n=y18n&t=npm&vr=%3C3.2.2"
        }
      ]
    },
    {
      "id": "a79c42da4e9c0150b10e4d4908649f4e5f6cb614c155567569536508af895f62",
      "category": "container_scanning",
      "message": "CVE-2020-7774 on y18n@4.0.0",
      "description": "### Overview\n\nThe npm package `y18n` before versions 3.2.2, 4.0.1, and 5.0.5 is vulnerable to Prototype Pollution. \n\n### POC\n\n```js\nconst y18n = require('y18n')();\n\ny18n.setLocale('__proto__');\ny18n.updateLocale({polluted: true});\n\nconsole.log(polluted); // true\n```\n\n### Recommendation\n\nUpgrade to version 3.2.2, 4.0.1, 5.0.5 or later.",
      "cve": "CVE-2020-7774",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade y18n@4.0.0 to 4.0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/y18n@4.0.0"
          },
          "version": "4.0.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-7774",
          "value": "CVE-2020-7774",
          "url": "https://scout.docker.com/v/CVE-2020-7774?s=github&n=y18n&t=npm&vr=%3D4.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-7774?s=github&n=y18n&t=npm&vr=%3D4.0.0"
        }
      ]
    },
    {
      "id": "fcee49dd5ab49342f99e8cb60afb4037f32dbde31dd46af11654d3f88a2280c1",
      "category": "container_scanning",
      "message": "CVE-2021-23440 on set-value@0.4.3",
      "description": "This affects the package `set-value`. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays.",
      "cve": "CVE-2021-23440",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade set-value@0.4.3 to 2.0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/set-value@0.4.3"
          },
          "version": "0.4.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-23440",
          "value": "CVE-2021-23440",
          "url": "https://scout.docker.com/v/CVE-2021-23440?s=github&n=set-value&t=npm&vr=%3C2.0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-23440?s=github&n=set-value&t=npm&vr=%3C2.0.1"
        }
      ]
    },
    {
      "id": "0e9b6902c76e172c160f9be482096a5d7bf1645bcafa76a44b51ad63969e7112",
      "category": "container_scanning",
      "message": "CVE-2021-23440 on set-value@2.0.0",
      "description": "This affects the package `set-value`. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays.",
      "cve": "CVE-2021-23440",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade set-value@2.0.0 to 2.0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/set-value@2.0.0"
          },
          "version": "2.0.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-23440",
          "value": "CVE-2021-23440",
          "url": "https://scout.docker.com/v/CVE-2021-23440?s=github&n=set-value&t=npm&vr=%3C2.0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-23440?s=github&n=set-value&t=npm&vr=%3C2.0.1"
        }
      ]
    },
    {
      "id": "5475701c0170e4b369bea698e1c39a9fe5a1ebb03953ca037aa3a9cbc4a8d557",
      "category": "container_scanning",
      "message": "CVE-2020-8203 on lodash@4.17.10",
      "description": "Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The functions `pick`, `set`, `setWith`, `update`, `updateWith`, and `zipObjectDeep` allow a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires manipulating objects based on user-provided property values or arrays.\n\nThis vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.",
      "cve": "CVE-2020-8203",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade lodash@4.17.10 to 4.17.19",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/lodash@4.17.10"
          },
          "version": "4.17.10"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-8203",
          "value": "CVE-2020-8203",
          "url": "https://scout.docker.com/v/CVE-2020-8203?s=github&n=lodash&t=npm&vr=%3E%3D3.7.0%2C%3C4.17.19"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-8203?s=github&n=lodash&t=npm&vr=%3E%3D3.7.0%2C%3C4.17.19"
        }
      ]
    },
    {
      "id": "f19d7dc7f4aec4e943b0ac4aca7fac3b8e5d3160b698262ba9c61f6bacd71679",
      "category": "container_scanning",
      "message": "CVE-2018-20834 on tar@2.2.1",
      "description": "Versions of `tar` prior to 4.4.2 for 4.x and 2.2.2 for 2.x are vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system, and a file that matches the hardlink will overwrite the system's file with the contents of the extracted file.\n\n\n## Recommendation\n\nFor tar 4.x, upgrade to version 4.4.2 or later.\nFor tar 2.x, upgrade to version 2.2.2 or later.",
      "cve": "CVE-2018-20834",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade tar@2.2.1 to 2.2.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/tar@2.2.1"
          },
          "version": "2.2.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2018-20834",
          "value": "CVE-2018-20834",
          "url": "https://scout.docker.com/v/CVE-2018-20834?s=github&n=tar&t=npm&vr=%3C2.2.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2018-20834?s=github&n=tar&t=npm&vr=%3C2.2.2"
        }
      ]
    },
    {
      "id": "180fb4442951226b24b8f4f7d7b724524295fb0768488ba095db843167b426aa",
      "category": "container_scanning",
      "message": "CVE-2019-10768 on angular@1.7.3",
      "description": "Versions of `angular ` prior to 1.7.9 are vulnerable to prototype pollution. The deprecated API function `merge()` does not restrict the modification of an Object's prototype in the , which may allow an attacker to add or modify an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpgrade to version 1.7.9 or later. The function was already deprecated and upgrades are not expected to break functionality.",
      "cve": "CVE-2019-10768",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade angular@1.7.3 to 1.7.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/angular@1.7.3"
          },
          "version": "1.7.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-10768",
          "value": "CVE-2019-10768",
          "url": "https://scout.docker.com/v/CVE-2019-10768?s=github&n=angular&t=npm&vr=%3C1.7.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-10768?s=github&n=angular&t=npm&vr=%3C1.7.9"
        }
      ]
    },
    {
      "id": "608b533f14dcbe27f5181189c52f67032fcf458603a2936e1405007e669d6efd",
      "category": "container_scanning",
      "message": "CVE-2019-13173 on fstream@1.0.11",
      "description": "Versions of `fstream` prior to 1.0.12 are vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system and a file that matches the hardlink will overwrite the system's file with the contents of the extracted file. The `fstream.DirWriter()` function is vulnerable.\n\n\n## Recommendation\n\nUpgrade to version 1.0.12 or later.",
      "cve": "CVE-2019-13173",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade fstream@1.0.11 to 1.0.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/fstream@1.0.11"
          },
          "version": "1.0.11"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-13173",
          "value": "CVE-2019-13173",
          "url": "https://scout.docker.com/v/CVE-2019-13173?s=github&n=fstream&t=npm&vr=%3C1.0.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-13173?s=github&n=fstream&t=npm&vr=%3C1.0.12"
        }
      ]
    },
    {
      "id": "d6036eb23f9be15487741e23ff97253a38c8734409985ba72bc2582b53773ada",
      "category": "container_scanning",
      "message": "CVE-2019-20149 on kind-of@6.0.2",
      "description": "Versions of `kind-of` 6.x prior to 6.0.3 are vulnerable to a Validation Bypass. A maliciously crafted object can alter the result of the type check, allowing attackers to bypass the type checking validation. \n\n\n## Recommendation\n\nUpgrade to versions 6.0.3 or later.",
      "cve": "CVE-2019-20149",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade kind-of@6.0.2 to 6.0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/kind-of@6.0.2"
          },
          "version": "6.0.2"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-20149",
          "value": "CVE-2019-20149",
          "url": "https://scout.docker.com/v/CVE-2019-20149?s=github&n=kind-of&t=npm&vr=%3E%3D6.0.0%2C%3C6.0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-20149?s=github&n=kind-of&t=npm&vr=%3E%3D6.0.0%2C%3C6.0.3"
        }
      ]
    },
    {
      "id": "208e0e18a97b5d3bc67f228fbe4f2ede53337515cea54b65721ea4bbed9ea5ab",
      "category": "container_scanning",
      "message": "CVE-2020-28469 on glob-parent@3.1.0",
      "description": "The enclosure regex used to check for strings ending in enclosure containing path separator.",
      "cve": "CVE-2020-28469",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade glob-parent@3.1.0 to 5.1.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/glob-parent@3.1.0"
          },
          "version": "3.1.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-28469",
          "value": "CVE-2020-28469",
          "url": "https://scout.docker.com/v/CVE-2020-28469?s=gitlab&n=glob-parent&t=npm&vr=%3C5.1.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-28469?s=gitlab&n=glob-parent&t=npm&vr=%3C5.1.2"
        }
      ]
    },
    {
      "id": "c22807789717fc8e76a449830145d7d0a0a18f30ae0dc18479f6bfc02f0f8840",
      "category": "container_scanning",
      "message": "CVE-2021-27290 on ssri@5.3.0",
      "description": "npm `ssri` 5.2.2-6.0.1 and 7.0.0-8.0.0, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.",
      "cve": "CVE-2021-27290",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade ssri@5.3.0 to 6.0.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/ssri@5.3.0"
          },
          "version": "5.3.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-27290",
          "value": "CVE-2021-27290",
          "url": "https://scout.docker.com/v/CVE-2021-27290?s=github&n=ssri&t=npm&vr=%3E%3D5.2.2%2C%3C6.0.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-27290?s=github&n=ssri&t=npm&vr=%3E%3D5.2.2%2C%3C6.0.2"
        }
      ]
    },
    {
      "id": "d23fa86f901e2c9ffb7907a8cca9c21682ba675c9739c8f7f89124dcf24dc537",
      "category": "container_scanning",
      "message": "CVE-2021-33623 on trim-newlines@1.0.0",
      "description": "@rkesters/gnuplot is an easy to use node module to draw charts using gnuplot and ps2pdf. The trim-newlines package before 3.0.1 and 4.x before 4.0.1 for Node.js has an issue related to regular expression denial-of-service (ReDoS) for the `.end()` method.",
      "cve": "CVE-2021-33623",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade trim-newlines@1.0.0 to 3.0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/trim-newlines@1.0.0"
          },
          "version": "1.0.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-33623",
          "value": "CVE-2021-33623",
          "url": "https://scout.docker.com/v/CVE-2021-33623?s=github&n=trim-newlines&t=npm&vr=%3C3.0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-33623?s=github&n=trim-newlines&t=npm&vr=%3C3.0.1"
        }
      ]
    },
    {
      "id": "ff741ef0992f38b8781c36f36499fe9613fcd5173a296010ba5ba259c7816a2c",
      "category": "container_scanning",
      "message": "CVE-2021-3803 on nth-check@1.0.1",
      "description": "There is a Regular Expression Denial of Service (ReDoS) vulnerability in nth-check that causes a denial of service when parsing crafted invalid CSS nth-checks.\n\nThe ReDoS vulnerabilities of the regex are mainly due to the sub-pattern `\\s*(?:([+-]?)\\s*(\\d+))?` with quantified overlapping adjacency and can be exploited with the following code.\n\n**Proof of Concept**\n```js\n// PoC.js\nvar nthCheck = require(\"nth-check\")\nfor(var i = 1; i <= 50000; i++) {\n    var time = Date.now();\n    var attack_str = '2n' + ' '.repeat(i*10000)+\"!\";\n    try {\n        nthCheck.parse(attack_str) \n    }\n    catch(err) {\n        var time_cost = Date.now() - time;\n        console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\n    }\n}\n```\n\n**The Output**\n```\nattack_str.length: 10003: 174 ms\nattack_str.length: 20003: 1427 ms\nattack_str.length: 30003: 2602 ms\nattack_str.length: 40003: 4378 ms\nattack_str.length: 50003: 7473 ms\n```",
      "cve": "CVE-2021-3803",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade nth-check@1.0.1 to 2.0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/nth-check@1.0.1"
          },
          "version": "1.0.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-3803",
          "value": "CVE-2021-3803",
          "url": "https://scout.docker.com/v/CVE-2021-3803?s=github&n=nth-check&t=npm&vr=%3C2.0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-3803?s=github&n=nth-check&t=npm&vr=%3C2.0.1"
        }
      ]
    },
    {
      "id": "382c70344e83bb90aff808422587616d3f9e56c7a37662e36705044a66a2d549",
      "category": "container_scanning",
      "message": "CVE-2021-3807 on ansi-regex@3.0.0",
      "description": "ansi-regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service when parsing invalid ANSI escape codes.\n\n**Proof of Concept**\n```js\nimport ansiRegex from 'ansi-regex';\nfor(var i = 1; i <= 50000; i++) {\n    var time = Date.now();\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\n    ansiRegex().test(attack_str)\n    var time_cost = Date.now() - time;\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\n}\n```\nThe ReDOS is mainly due to the sub-patterns `[[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`",
      "cve": "CVE-2021-3807",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade ansi-regex@3.0.0 to 3.0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/ansi-regex@3.0.0"
          },
          "version": "3.0.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-3807",
          "value": "CVE-2021-3807",
          "url": "https://scout.docker.com/v/CVE-2021-3807?s=github&n=ansi-regex&t=npm&vr=%3E%3D3.0.0%2C%3C3.0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-3807?s=github&n=ansi-regex&t=npm&vr=%3E%3D3.0.0%2C%3C3.0.1"
        }
      ]
    },
    {
      "id": "21e05b4b3eb295320455bad92274996b28717d1887fea2da29a8c61c625b875b",
      "category": "container_scanning",
      "message": "CVE-2022-21222 on css-what@2.1.0",
      "description": "The package css-what before 2.1.3 is vulnerable to Regular Expression Denial of Service (ReDoS) due to the use of insecure regular expression in the `re_attr` variable of index.js. The exploitation of this vulnerability could be triggered via the parse function.",
      "cve": "CVE-2022-21222",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade css-what@2.1.0 to 2.1.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/css-what@2.1.0"
          },
          "version": "2.1.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-21222",
          "value": "CVE-2022-21222",
          "url": "https://scout.docker.com/v/CVE-2022-21222?s=github&n=css-what&t=npm&vr=%3C2.1.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-21222?s=github&n=css-what&t=npm&vr=%3C2.1.3"
        }
      ]
    },
    {
      "id": "bce3182e702474cfeaa5110f69b2d836f8ec3995de359f9b6329cc785e7e254d",
      "category": "container_scanning",
      "message": "CVE-2022-24999 on express@4.16.3",
      "description": "qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).",
      "cve": "CVE-2022-24999",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade express@4.16.3 to 4.17.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/express@4.16.3"
          },
          "version": "4.16.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-24999",
          "value": "CVE-2022-24999",
          "url": "https://scout.docker.com/v/CVE-2022-24999?s=gitlab&n=express&t=npm&vr=%3C4.17.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-24999?s=gitlab&n=express&t=npm&vr=%3C4.17.3"
        }
      ]
    },
    {
      "id": "3687ddddaa3b5b440dd1dd4c7ec2c535d4f3d61218c0b9c9dce4a6772198ce69",
      "category": "container_scanning",
      "message": "CVE-2022-24999 on qs@6.5.1",
      "description": "qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.",
      "cve": "CVE-2022-24999",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade qs@6.5.1 to 6.5.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/qs@6.5.1"
          },
          "version": "6.5.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-24999",
          "value": "CVE-2022-24999",
          "url": "https://scout.docker.com/v/CVE-2022-24999?s=github&n=qs&t=npm&vr=%3E%3D6.5.0%2C%3C6.5.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-24999?s=github&n=qs&t=npm&vr=%3E%3D6.5.0%2C%3C6.5.3"
        }
      ]
    },
    {
      "id": "66e3bdc9300ec481b981be5054c60c45f7b23989673335a994794c141ce3de84",
      "category": "container_scanning",
      "message": "CVE-2022-24999 on qs@6.5.2",
      "description": "qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.",
      "cve": "CVE-2022-24999",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade qs@6.5.2 to 6.5.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/qs@6.5.2"
          },
          "version": "6.5.2"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-24999",
          "value": "CVE-2022-24999",
          "url": "https://scout.docker.com/v/CVE-2022-24999?s=github&n=qs&t=npm&vr=%3E%3D6.5.0%2C%3C6.5.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-24999?s=github&n=qs&t=npm&vr=%3E%3D6.5.0%2C%3C6.5.3"
        }
      ]
    },
    {
      "id": "6cf8d1fae675be360bfaa67a4d44d4adc7b9df9d8ca2c468fc10ee4cf76f4716",
      "category": "container_scanning",
      "message": "CVE-2022-25758 on scss-tokenizer@0.2.3",
      "description": "All versions of the package `scss-tokenizer` prior to 0.4.3 are vulnerable to Regular Expression Denial of Service (ReDoS) via the `loadAnnotation()` function, due to the usage of insecure regex.",
      "cve": "CVE-2022-25758",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade scss-tokenizer@0.2.3 to 0.4.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/scss-tokenizer@0.2.3"
          },
          "version": "0.2.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-25758",
          "value": "CVE-2022-25758",
          "url": "https://scout.docker.com/v/CVE-2022-25758?s=github&n=scss-tokenizer&t=npm&vr=%3C%3D0.4.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-25758?s=github&n=scss-tokenizer&t=npm&vr=%3C%3D0.4.2"
        }
      ]
    },
    {
      "id": "e8a263baba3b5672174f89db6a16331ad84257e3823fdb1f54699fdc838ea9ac",
      "category": "container_scanning",
      "message": "CVE-2022-25883 on semver@5.3.0",
      "description": "Versions of the package semver before 7.5.2 on the 7.x branch, before 6.3.1 on the 6.x branch, and all other versions before 5.7.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.",
      "cve": "CVE-2022-25883",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade semver@5.3.0 to 5.7.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/semver@5.3.0"
          },
          "version": "5.3.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-25883",
          "value": "CVE-2022-25883",
          "url": "https://scout.docker.com/v/CVE-2022-25883?s=github&n=semver&t=npm&vr=%3C5.7.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-25883?s=github&n=semver&t=npm&vr=%3C5.7.2"
        }
      ]
    },
    {
      "id": "e4b9572a9878ff32ea0d70e07830a3c1730db26e70944adcf31fea04e6f64a4f",
      "category": "container_scanning",
      "message": "CVE-2022-25883 on semver@5.5.1",
      "description": "Versions of the package semver before 7.5.2 on the 7.x branch, before 6.3.1 on the 6.x branch, and all other versions before 5.7.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.",
      "cve": "CVE-2022-25883",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade semver@5.5.1 to 5.7.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/semver@5.5.1"
          },
          "version": "5.5.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-25883",
          "value": "CVE-2022-25883",
          "url": "https://scout.docker.com/v/CVE-2022-25883?s=github&n=semver&t=npm&vr=%3C5.7.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-25883?s=github&n=semver&t=npm&vr=%3C5.7.2"
        }
      ]
    },
    {
      "id": "622d8f02ea89c8c841d26c73c7426b925ed5eb7edf4d7f85400f3106e1b1bbaa",
      "category": "container_scanning",
      "message": "CVE-2022-3517 on minimatch@3.0.4",
      "description": "A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",
      "cve": "CVE-2022-3517",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade minimatch@3.0.4 to 3.0.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/minimatch@3.0.4"
          },
          "version": "3.0.4"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-3517",
          "value": "CVE-2022-3517",
          "url": "https://scout.docker.com/v/CVE-2022-3517?s=github&n=minimatch&t=npm&vr=%3C3.0.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-3517?s=github&n=minimatch&t=npm&vr=%3C3.0.5"
        }
      ]
    },
    {
      "id": "e304d21c00237ea1d4183283148f338a294248d7f18f6db8b5d40a73ed0af2b6",
      "category": "container_scanning",
      "message": "CVE-2022-37599 on loader-utils@1.1.0",
      "description": "A regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils via the resourcePath variable in interpolateName.js. A badly or maliciously formed string could be used to send crafted requests that cause a system to crash or take a disproportional amount of time to process. This issue has been patched in versions 1.4.2, 2.0.4 and 3.2.1.",
      "cve": "CVE-2022-37599",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade loader-utils@1.1.0 to 1.4.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/loader-utils@1.1.0"
          },
          "version": "1.1.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-37599",
          "value": "CVE-2022-37599",
          "url": "https://scout.docker.com/v/CVE-2022-37599?s=github&n=loader-utils&t=npm&vr=%3E%3D1.0.0%2C%3C1.4.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-37599?s=github&n=loader-utils&t=npm&vr=%3E%3D1.0.0%2C%3C1.4.2"
        }
      ]
    },
    {
      "id": "149c29f50efdcf59299b96152fc0dff7e3370ee39026c219732b12ac37b98933",
      "category": "container_scanning",
      "message": "CVE-2022-37603 on loader-utils@0.2.17",
      "description": "A Regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils 2.0.0 via the url variable in `interpolateName.js`.",
      "cve": "CVE-2022-37603",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade loader-utils@0.2.17 to 1.4.2, 2.0.4, 3.2.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/loader-utils@0.2.17"
          },
          "version": "0.2.17"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-37603",
          "value": "CVE-2022-37603",
          "url": "https://scout.docker.com/v/CVE-2022-37603?s=gitlab&n=loader-utils&t=npm&vr=%3C1.4.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-37603?s=gitlab&n=loader-utils&t=npm&vr=%3C1.4.2"
        }
      ]
    },
    {
      "id": "ff59770e63ee46704f0e0439e6a7c79c215d7d09ffc7e2d3ceecd3dd2b7fa82a",
      "category": "container_scanning",
      "message": "CVE-2022-37603 on loader-utils@1.1.0",
      "description": "A Regular expression denial of service (ReDoS) flaw was found in Function interpolateName in interpolateName.js in webpack loader-utils 2.0.0 via the url variable in interpolateName.js. A badly or maliciously formed string could be used to send crafted requests that cause a system to crash or take a disproportional amount of time to process. This issue has been patched in versions 1.4.2, 2.0.4 and 3.2.1.",
      "cve": "CVE-2022-37603",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade loader-utils@1.1.0 to 1.4.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/loader-utils@1.1.0"
          },
          "version": "1.1.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-37603",
          "value": "CVE-2022-37603",
          "url": "https://scout.docker.com/v/CVE-2022-37603?s=github&n=loader-utils&t=npm&vr=%3E%3D1.0.0%2C%3C1.4.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-37603?s=github&n=loader-utils&t=npm&vr=%3E%3D1.0.0%2C%3C1.4.2"
        }
      ]
    },
    {
      "id": "0bf2035201fc44e323225c0b6ceffee6f1bd65e14c9821533d654fd058ef3731",
      "category": "container_scanning",
      "message": "CVE-2022-38900 on decode-uri-component@0.2.0",
      "description": "decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.",
      "cve": "CVE-2022-38900",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade decode-uri-component@0.2.0 to 0.2.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/decode-uri-component@0.2.0"
          },
          "version": "0.2.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-38900",
          "value": "CVE-2022-38900",
          "url": "https://scout.docker.com/v/CVE-2022-38900?s=github&n=decode-uri-component&t=npm&vr=%3C0.2.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-38900?s=github&n=decode-uri-component&t=npm&vr=%3C0.2.1"
        }
      ]
    },
    {
      "id": "d9093bbc0b925a0c021d96dd8ff29bc1c0df9e4429a7dbca1b8d2dab7268ed67",
      "category": "container_scanning",
      "message": "CVE-2023-39141 on webui-aria2@1.0.0",
      "description": "webui-aria2 commit 4fe2e was discovered to contain a path traversal vulnerability.",
      "cve": "CVE-2023-39141",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/webui-aria2@1.0.0"
          },
          "version": "1.0.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39141",
          "value": "CVE-2023-39141",
          "url": "https://scout.docker.com/v/CVE-2023-39141?s=github&n=webui-aria2&t=npm&vr=%3C%3D1.0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39141?s=github&n=webui-aria2&t=npm&vr=%3C%3D1.0.1"
        }
      ]
    },
    {
      "id": "f1d7b1bff82cd9c4c2e9d3bb1d929b88af00b6065c07ee7347e2f840fcc1e7f6",
      "category": "container_scanning",
      "message": "CVE-2023-46234 on browserify-sign@4.0.4",
      "description": "### Summary\nAn upper bound check issue in `dsaVerify` function allows an attacker to construct signatures that can be successfully verified by any public key, thus leading to a signature forgery attack.\n\n### Details\nIn `dsaVerify` function, it checks whether the value of the signature is legal by calling function `checkValue`, namely, whether `r` and `s` are both in the interval `[1, q - 1]`. However, the second line of the `checkValue` function wrongly checks the upper bound of the passed parameters, since the value of `b.cmp(q)` can only be `0`, `1` and `-1`, and it can never be greater than `q`. \n\nIn this way, although the values of `s` cannot be `0`, an attacker can achieve the same effect as zero by setting its value to `q`, and then send `(r, s) = (1, q)` to pass the verification of any public key.\n\n### Impact\nAll places in this project that involve DSA verification of user-input signatures will be affected by this vulnerability.\n\n\n### Fix PR:\nSince the temporary private fork was deleted, here's a webarchive of the PR discussion and diff pages: [PR webarchive.zip](https://github.com/browserify/browserify-sign/files/13172957/PR.webarchive.zip)",
      "cve": "CVE-2023-46234",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade browserify-sign@4.0.4 to 4.2.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/browserify-sign@4.0.4"
          },
          "version": "4.0.4"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-46234",
          "value": "CVE-2023-46234",
          "url": "https://scout.docker.com/v/CVE-2023-46234?s=github&n=browserify-sign&t=npm&vr=%3E%3D2.6.0%2C%3C%3D4.2.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-46234?s=github&n=browserify-sign&t=npm&vr=%3E%3D2.6.0%2C%3C%3D4.2.1"
        }
      ]
    },
    {
      "id": "b8021ed8dda35696efacf257a183da75421768898c06eefb400f801b8cab32db",
      "category": "container_scanning",
      "message": "CVE-2024-21490 on angular@1.7.3",
      "description": "This affects versions of the package angular from 1.3.0. A regular expression used to split the value of the ng-srcset directive is vulnerable to super-linear runtime due to backtracking. With a large carefully-crafted input, this can result in catastrophic backtracking and cause a denial of service. \n\n\n**Note:**\n\nThis package is EOL and will not receive any updates to address this issue. Users should migrate to [@angular/core](https://www.npmjs.com/package/@angular/core).",
      "cve": "CVE-2024-21490",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/angular@1.7.3"
          },
          "version": "1.7.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-21490",
          "value": "CVE-2024-21490",
          "url": "https://scout.docker.com/v/CVE-2024-21490?s=github&n=angular&t=npm&vr=%3E%3D1.3.0%2C%3C%3D1.8.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-21490?s=github&n=angular&t=npm&vr=%3E%3D1.3.0%2C%3C%3D1.8.3"
        }
      ]
    },
    {
      "id": "07cae44a97b06370db4848d1d4f2f671b25028cd9450843090c0f21581df2c51",
      "category": "container_scanning",
      "message": "CVE-2024-4068 on braces@2.3.2",
      "description": "The NPM package `braces` fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In `lib/parse.js,` if a malicious user sends \"imbalanced braces\" as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash.\n",
      "cve": "CVE-2024-4068",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade braces@2.3.2 to 3.0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/braces@2.3.2"
          },
          "version": "2.3.2"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-4068",
          "value": "CVE-2024-4068",
          "url": "https://scout.docker.com/v/CVE-2024-4068?s=github&n=braces&t=npm&vr=%3C3.0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-4068?s=github&n=braces&t=npm&vr=%3C3.0.3"
        }
      ]
    },
    {
      "id": "9acc1d4bfdea5cc156e8b242643746891f295fff1da1beb50446e92c010fb880",
      "category": "container_scanning",
      "message": "CVE-2025-9230 on alpine/openssl@3.3.3-r0",
      "cve": "CVE-2025-9230",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.3.3-r0 to 3.3.5-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.3.3-r0?os_name=alpine&os_version=3.21"
          },
          "version": "3.3.3-r0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-9230",
          "value": "CVE-2025-9230",
          "url": "https://scout.docker.com/v/CVE-2025-9230?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C3.3.5-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-9230?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C3.3.5-r0"
        }
      ]
    },
    {
      "id": "1d72aa8c0cccd284441b17bb3c793c6f0b874a8aaf7a0246a3e199eecb0b89b0",
      "category": "container_scanning",
      "message": "GHSA-6chw-6frg-f759 on acorn@5.7.2",
      "description": "Affected versions of acorn are vulnerable to Regular Expression Denial of Service.\nA regex in the form of /[x-\\ud800]/u causes the parser to enter an infinite loop.\nThe string is not valid UTF16 which usually results in it being sanitized before reaching the parser.\nIf an application processes untrusted input and passes it directly to acorn,\nattackers may leverage the vulnerability leading to Denial of Service.",
      "cve": "GHSA-6chw-6frg-f759",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade acorn@5.7.2 to 5.7.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/acorn@5.7.2"
          },
          "version": "5.7.2"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-6chw-6frg-f759",
          "value": "GHSA-6chw-6frg-f759",
          "url": "https://scout.docker.com/v/GHSA-6chw-6frg-f759?s=github&n=acorn&t=npm&vr=%3E%3D5.5.0%2C%3C5.7.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-6chw-6frg-f759?s=github&n=acorn&t=npm&vr=%3E%3D5.5.0%2C%3C5.7.4"
        }
      ]
    },
    {
      "id": "e69630778c3a524366b35d12d2a19ef857f985a48926719fce2df401bc3e4c5c",
      "category": "container_scanning",
      "message": "GMS-2020-1 on acorn@5.7.2",
      "description": "A regex in the form of `/[x-\\ud800]/u` causes the parser to enter an infinite loop. The string is not valid UTF16 which usually results in it being sanitized before reaching the parser.",
      "cve": "GMS-2020-1",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade acorn@5.7.2 to 5.7.4, 6.4.1, 7.1.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/acorn@5.7.2"
          },
          "version": "5.7.2"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GMS-2020-1",
          "value": "GMS-2020-1",
          "url": "https://scout.docker.com/v/GMS-2020-1?s=gitlab&n=acorn&t=npm&vr=%3E%3D5.5.0%2C%3C5.7.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GMS-2020-1?s=gitlab&n=acorn&t=npm&vr=%3E%3D5.5.0%2C%3C5.7.4"
        }
      ]
    },
    {
      "id": "355891c4149b9a8d73bc05e20a18d60d4faca6d7056735bb7927172a2dadc6bf",
      "category": "container_scanning",
      "message": "CVE-2020-13822 on elliptic@6.4.1",
      "description": "The Elliptic package before version 6.5.3 for Node.js allows ECDSA signature malleability via variations in encoding, leading '\\0' bytes, or integer overflows. This could conceivably have a security-relevant impact if an application relied on a single canonical signature.",
      "cve": "CVE-2020-13822",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade elliptic@6.4.1 to 6.5.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/elliptic@6.4.1"
          },
          "version": "6.4.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-13822",
          "value": "CVE-2020-13822",
          "url": "https://scout.docker.com/v/CVE-2020-13822?s=github&n=elliptic&t=npm&vr=%3C6.5.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-13822?s=github&n=elliptic&t=npm&vr=%3C6.5.3"
        }
      ]
    },
    {
      "id": "15e538a57cd931d2dcfe7f2ecef58c136131eb5d548da47959f1e80d784fd9ab",
      "category": "container_scanning",
      "message": "CVE-2024-21538 on cross-spawn@6.0.5",
      "description": "Versions of the package cross-spawn before 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.",
      "cve": "CVE-2024-21538",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade cross-spawn@6.0.5 to 6.0.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/cross-spawn@6.0.5"
          },
          "version": "6.0.5"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-21538",
          "value": "CVE-2024-21538",
          "url": "https://scout.docker.com/v/CVE-2024-21538?s=github&n=cross-spawn&t=npm&vr=%3C6.0.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-21538?s=github&n=cross-spawn&t=npm&vr=%3C6.0.6"
        }
      ]
    },
    {
      "id": "aa3b988a1bd3752f65db721365e47fc1f61a0e3ff138f26263e5c30c4ba53f02",
      "category": "container_scanning",
      "message": "CVE-2024-21538 on cross-spawn@7.0.3",
      "description": "Versions of the package cross-spawn before 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.",
      "cve": "CVE-2024-21538",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade cross-spawn@7.0.3 to 7.0.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/cross-spawn@7.0.3"
          },
          "version": "7.0.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-21538",
          "value": "CVE-2024-21538",
          "url": "https://scout.docker.com/v/CVE-2024-21538?s=github&n=cross-spawn&t=npm&vr=%3E%3D7.0.0%2C%3C7.0.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-21538?s=github&n=cross-spawn&t=npm&vr=%3E%3D7.0.0%2C%3C7.0.5"
        }
      ]
    },
    {
      "id": "5e499705bb67bc825eb291b93ba5e081619603eb72c2c6039fcfd0d48c6ea8c6",
      "category": "container_scanning",
      "message": "CVE-2024-21538 on cross-spawn@3.0.1",
      "description": "Versions of the package cross-spawn before 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.",
      "cve": "CVE-2024-21538",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade cross-spawn@3.0.1 to 6.0.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/cross-spawn@3.0.1"
          },
          "version": "3.0.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-21538",
          "value": "CVE-2024-21538",
          "url": "https://scout.docker.com/v/CVE-2024-21538?s=github&n=cross-spawn&t=npm&vr=%3C6.0.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-21538?s=github&n=cross-spawn&t=npm&vr=%3C6.0.6"
        }
      ]
    },
    {
      "id": "508527478dc714f1b821eeef00a09abce7bed78e1884828fdc22284915c71ead",
      "category": "container_scanning",
      "message": "CVE-2024-21538 on cross-spawn@5.1.0",
      "description": "Versions of the package cross-spawn before 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.",
      "cve": "CVE-2024-21538",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade cross-spawn@5.1.0 to 6.0.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/cross-spawn@5.1.0"
          },
          "version": "5.1.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-21538",
          "value": "CVE-2024-21538",
          "url": "https://scout.docker.com/v/CVE-2024-21538?s=github&n=cross-spawn&t=npm&vr=%3C6.0.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-21538?s=github&n=cross-spawn&t=npm&vr=%3C6.0.6"
        }
      ]
    },
    {
      "id": "8aa8ab3fce338c0eb7881996250323101fae55aadefc35452f2dcc669ee7263b",
      "category": "container_scanning",
      "message": "CVE-2024-45296 on path-to-regexp@0.1.7",
      "description": "### Impact\n\nA bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (`.`). For example, `/:a-:b`.\n\n### Patches\n\nFor users of 0.1, upgrade to `0.1.10`. All other users should upgrade to `8.0.0`.\n\nThese versions add backtrack protection when a custom regex pattern is not provided:\n\n- [0.1.10](https://github.com/pillarjs/path-to-regexp/releases/tag/v0.1.10)\n- [1.9.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v1.9.0)\n- [3.3.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v3.3.0)\n- [6.3.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v6.3.0)\n\nThey do not protect against vulnerable user supplied capture groups. Protecting against explicit user patterns is out of scope for old versions and not considered a vulnerability.\n\nVersion [7.1.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v7.1.0) can enable `strict: true` and get an error when the regular expression might be bad.\n\nVersion [8.0.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v8.0.0) removes the features that can cause a ReDoS.\n\n### Workarounds\n\nAll versions can be patched by providing a custom regular expression for parameters after the first in a single segment. As long as the custom regular expression does not match the text before the parameter, you will be safe. For example, change `/:a-:b` to `/:a-:b([^-/]+)`.\n\nIf paths cannot be rewritten and versions cannot be upgraded, another alternative is to limit the URL length. For example, halving the attack string improves performance by 4x faster.\n\n### Details\n\nUsing `/:a-:b` will produce the regular expression `/^\\/([^\\/]+?)-([^\\/]+?)\\/?$/`. This can be exploited by a path such as `/a${'-a'.repeat(8_000)}/a`. [OWASP](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) has a good example of why this occurs, but the TL;DR is the `/a` at the end ensures this route would never match but due to naive backtracking it will still attempt every combination of the `:a-:b` on the repeated 8,000 `-a`.\n\nBecause JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and can lead to a DoS. In local benchmarks, exploiting the unsafe regex will result in performance that is over 1000x worse than the safe regex. In a more realistic environment using Express v4 and 10 concurrent connections, this translated to average latency of ~600ms vs 1ms.\n\n### References\n\n* [OWASP](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)\n* [Detailed blog post](https://blakeembrey.com/posts/2024-09-web-redos/)",
      "cve": "CVE-2024-45296",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade path-to-regexp@0.1.7 to 0.1.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/path-to-regexp@0.1.7"
          },
          "version": "0.1.7"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45296",
          "value": "CVE-2024-45296",
          "url": "https://scout.docker.com/v/CVE-2024-45296?s=github&n=path-to-regexp&t=npm&vr=%3C0.1.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45296?s=github&n=path-to-regexp&t=npm&vr=%3C0.1.10"
        }
      ]
    },
    {
      "id": "8ec0af69be6e899b9a5e433d536a18aa0388967c33046f3125951bb3d972537e",
      "category": "container_scanning",
      "message": "CVE-2024-52798 on path-to-regexp@0.1.7",
      "description": "### Impact\n\nThe regular expression that is vulnerable to backtracking can be generated in versions before 0.1.12 of `path-to-regexp`, originally reported in CVE-2024-45296\n\n### Patches\n\nUpgrade to 0.1.12.\n\n### Workarounds\n\nAvoid using two parameters within a single path segment, when the separator is not `.` (e.g. no `/:a-:b`). Alternatively, you can define the regex used for both parameters and ensure they do not overlap to allow backtracking.\n\n### References\n\n- https://github.com/advisories/GHSA-9wv6-86v2-598j\n- https://blakeembrey.com/posts/2024-09-web-redos/",
      "cve": "CVE-2024-52798",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade path-to-regexp@0.1.7 to 0.1.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/path-to-regexp@0.1.7"
          },
          "version": "0.1.7"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-52798",
          "value": "CVE-2024-52798",
          "url": "https://scout.docker.com/v/CVE-2024-52798?s=github&n=path-to-regexp&t=npm&vr=%3C0.1.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-52798?s=github&n=path-to-regexp&t=npm&vr=%3C0.1.12"
        }
      ]
    },
    {
      "id": "b65a15a2ca03a619463a54ccb3492390a5424eebff6bfc910619339135befbbb",
      "category": "container_scanning",
      "message": "CVE-2020-36604 on hoek@4.2.1",
      "description": "hoek versions prior to 8.5.1, and 9.x prior to 9.0.3 are vulnerable to prototype pollution in the clone function. If an object with the __proto__ key is passed to clone() the key is converted to a prototype. This issue has been patched in version 9.0.3, and backported to 8.5.1.",
      "cve": "CVE-2020-36604",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/hoek@4.2.1"
          },
          "version": "4.2.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-36604",
          "value": "CVE-2020-36604",
          "url": "https://scout.docker.com/v/CVE-2020-36604?s=github&n=hoek&t=npm&vr=%3C%3D6.1.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-36604?s=github&n=hoek&t=npm&vr=%3C%3D6.1.3"
        }
      ]
    },
    {
      "id": "8b2acc9c7de19a48d02c525d61b60e5f078afa7cea9be5261c8a7f0140b32f7c",
      "category": "container_scanning",
      "message": "CVE-2020-7660 on serialize-javascript@1.5.0",
      "description": "serialize-javascript prior to 3.1.0 allows remote attackers to inject arbitrary code via the function \"deleteFunctions\" within \"index.js\". \n\nAn object such as `{\"foo\": /1\"/, \"bar\": \"a\\\"@__R-<UID>-0__@\"}` was serialized as `{\"foo\": /1\"/, \"bar\": \"a\\/1\"/}`, which allows an attacker to escape the `bar` key. This requires the attacker to control the values of both `foo` and `bar` and guess the value of `<UID>`. The UID has a keyspace of approximately 4 billion making it a realistic network attack.",
      "cve": "CVE-2020-7660",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade serialize-javascript@1.5.0 to 3.1.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/serialize-javascript@1.5.0"
          },
          "version": "1.5.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-7660",
          "value": "CVE-2020-7660",
          "url": "https://scout.docker.com/v/CVE-2020-7660?s=github&n=serialize-javascript&t=npm&vr=%3C3.1.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-7660?s=github&n=serialize-javascript&t=npm&vr=%3C3.1.0"
        }
      ]
    },
    {
      "id": "587fdb6370d299e3eb78d87f90ade25b1183071444574dfbe3bcf51ea08acce0",
      "category": "container_scanning",
      "message": "CVE-2021-32803 on tar@2.2.1",
      "description": "The npm package \"tar\" (aka node-tar) before versions 6.1.2, 5.0.7, 4.4.15, and 3.2.3 has an arbitrary File Creation/Overwrite vulnerability via insufficient symlink protection. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.",
      "cve": "CVE-2021-32803",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade tar@2.2.1 to 3.2.3, 4.4.15, 5.0.7, 6.1.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/tar@2.2.1"
          },
          "version": "2.2.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-32803",
          "value": "CVE-2021-32803",
          "url": "https://scout.docker.com/v/CVE-2021-32803?s=gitlab&n=tar&t=npm&vr=%3C3.2.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-32803?s=gitlab&n=tar&t=npm&vr=%3C3.2.3"
        }
      ]
    },
    {
      "id": "d949e669f9b48270776671fc9b1c159716a930012c8dab39bfb9562704880bd6",
      "category": "container_scanning",
      "message": "CVE-2021-32804 on tar@2.2.1",
      "description": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. \n\nThis logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. \n\n### Patches\n\n3.2.2 || 4.4.14 || 5.0.6 || 6.1.1\n\nNOTE: an adjacent issue [CVE-2021-32803](https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw) affects this release level. Please ensure you update to the latest patch levels that address CVE-2021-32803 as well if this adjacent issue affects your `node-tar` use case.\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths.\n\n```js\nconst path = require('path')\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  // either add this function...\n  onentry: (entry) => {\n    if (path.isAbsolute(entry.path)) {\n      entry.path = sanitizeAbsolutePathSomehow(entry.path)\n      entry.absolute = path.resolve(entry.path)\n    }\n  },\n\n  // or this one\n  filter: (file, entry) => {\n    if (path.isAbsolute(entry.path)) {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.",
      "cve": "CVE-2021-32804",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade tar@2.2.1 to 3.2.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/tar@2.2.1"
          },
          "version": "2.2.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-32804",
          "value": "CVE-2021-32804",
          "url": "https://scout.docker.com/v/CVE-2021-32804?s=github&n=tar&t=npm&vr=%3C3.2.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-32804?s=github&n=tar&t=npm&vr=%3C3.2.2"
        }
      ]
    },
    {
      "id": "557b4685407acad76aa9e559c2f1fe82d83717f27d3ef4ec21b8656413a3f830",
      "category": "container_scanning",
      "message": "CVE-2021-37713 on tar@2.2.1",
      "description": "### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory.\n\nThis logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`.  If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory.\n\nAdditionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path.\n\nThis only affects users of `node-tar` on Windows systems.\n\n### Patches\n\n4.4.18 || 5.0.10 || 6.1.9\n\n### Workarounds\n\nThere is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does.\n\nUsers are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.\n\n### Fix\n\nThe fixed versions strip path roots from all paths prior to being resolved against the extraction target folder, even if such paths are not \"absolute\".\n\nAdditionally, a path starting with a drive letter and then two dots, like `c:../`, would bypass the check for `..` path portions.  This is checked properly in the patched versions.\n\nFinally, a defense in depth check is added, such that if the `entry.absolute` is outside of the extraction taret, and we are not in preservePaths:true mode, a warning is raised on that entry, and it is skipped.  Currently, it is believed that this check is redundant, but it did catch some oversights in development.\n",
      "cve": "CVE-2021-37713",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade tar@2.2.1 to 4.4.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/tar@2.2.1"
          },
          "version": "2.2.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-37713",
          "value": "CVE-2021-37713",
          "url": "https://scout.docker.com/v/CVE-2021-37713?s=github&n=tar&t=npm&vr=%3C4.4.18"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-37713?s=github&n=tar&t=npm&vr=%3C4.4.18"
        }
      ]
    },
    {
      "id": "a3af412289062f91d2feab694ff07c7e6f43879636edd25d16ef94b2f7a3f6de",
      "category": "container_scanning",
      "message": "CVE-2021-37701 on tar@2.2.1",
      "description": "This npm package has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted.",
      "cve": "CVE-2021-37701",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade tar@2.2.1 to 4.4.16, 5.0.8, 6.1.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/tar@2.2.1"
          },
          "version": "2.2.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-37701",
          "value": "CVE-2021-37701",
          "url": "https://scout.docker.com/v/CVE-2021-37701?s=gitlab&n=tar&t=npm&vr=%3C4.4.16"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-37701?s=gitlab&n=tar&t=npm&vr=%3C4.4.16"
        }
      ]
    },
    {
      "id": "d807a2445b3f7de5cdb0ed5941ba926333b3f1c56a1a468c0c939247faf24122",
      "category": "container_scanning",
      "message": "CVE-2021-37712 on tar@2.2.1",
      "description": "The npm package \"tar\" (aka node-tar) has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.",
      "cve": "CVE-2021-37712",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade tar@2.2.1 to 4.4.18, 5.0.10, 6.1.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/tar@2.2.1"
          },
          "version": "2.2.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-37712",
          "value": "CVE-2021-37712",
          "url": "https://scout.docker.com/v/CVE-2021-37712?s=gitlab&n=tar&t=npm&vr=%3C%3D4.4.17"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-37712?s=gitlab&n=tar&t=npm&vr=%3C%3D4.4.17"
        }
      ]
    },
    {
      "id": "27be37710bb0c914005576c683f4bd6ce2d34f011fc6df0a990d7e8d740e9be9",
      "category": "container_scanning",
      "message": "CVE-2022-37620 on html-minifier@3.5.20",
      "description": "A Regular Expression Denial of Service (ReDoS) flaw was found in kangax html-minifier 4.0.0 because of the reCustomIgnore regular expression.",
      "cve": "CVE-2022-37620",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/html-minifier@3.5.20"
          },
          "version": "3.5.20"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-37620",
          "value": "CVE-2022-37620",
          "url": "https://scout.docker.com/v/CVE-2022-37620?s=github&n=html-minifier&t=npm&vr=%3C%3D4.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-37620?s=github&n=html-minifier&t=npm&vr=%3C%3D4.0.0"
        }
      ]
    },
    {
      "id": "74a2644cbc92101c0b9b410c40966d928d9060249ba3f6b51bb5bd6b96c20cc0",
      "category": "container_scanning",
      "message": "CVE-2024-37890 on ws@4.1.0",
      "description": "### Impact\n\nA request with a number of headers exceeding the[`server.maxHeadersCount`][] threshold could be used to crash a ws server.\n\n### Proof of concept\n\n```js\nconst http = require('http');\nconst WebSocket = require('ws');\n\nconst wss = new WebSocket.Server({ port: 0 }, function () {\n  const chars = \"!#$%&'*+-.0123456789abcdefghijklmnopqrstuvwxyz^_`|~\".split('');\n  const headers = {};\n  let count = 0;\n\n  for (let i = 0; i < chars.length; i++) {\n    if (count === 2000) break;\n\n    for (let j = 0; j < chars.length; j++) {\n      const key = chars[i] + chars[j];\n      headers[key] = 'x';\n\n      if (++count === 2000) break;\n    }\n  }\n\n  headers.Connection = 'Upgrade';\n  headers.Upgrade = 'websocket';\n  headers['Sec-WebSocket-Key'] = 'dGhlIHNhbXBsZSBub25jZQ==';\n  headers['Sec-WebSocket-Version'] = '13';\n\n  const request = http.request({\n    headers: headers,\n    host: '127.0.0.1',\n    port: wss.address().port\n  });\n\n  request.end();\n});\n```\n\n### Patches\n\nThe vulnerability was fixed in ws@8.17.1 (https://github.com/websockets/ws/commit/e55e5106f10fcbaac37cfa89759e4cc0d073a52c) and backported to ws@7.5.10 (https://github.com/websockets/ws/commit/22c28763234aa75a7e1b76f5c01c181260d7917f), ws@6.2.3 (https://github.com/websockets/ws/commit/eeb76d313e2a00dd5247ca3597bba7877d064a63), and ws@5.2.4 (https://github.com/websockets/ws/commit/4abd8f6de4b0b65ef80b3ff081989479ed93377e)\n\n### Workarounds\n\nIn vulnerable versions of ws, the issue can be mitigated in the following ways:\n\n1. Reduce the maximum allowed length of the request headers using the [`--max-http-header-size=size`][] and/or the [`maxHeaderSize`][] options so that no more headers than the `server.maxHeadersCount` limit can be sent.\n2. Set `server.maxHeadersCount` to `0` so that no limit is applied.\n\n### Credits\n\nThe vulnerability was reported by [Ryan LaPointe](https://github.com/rrlapointe) in https://github.com/websockets/ws/issues/2230.\n\n### References\n\n- https://github.com/websockets/ws/issues/2230\n- https://github.com/websockets/ws/pull/2231\n\n[`--max-http-header-size=size`]: https://nodejs.org/api/cli.html#--max-http-header-sizesize\n[`maxHeaderSize`]: https://nodejs.org/api/http.html#httpcreateserveroptions-requestlistener\n[`server.maxHeadersCount`]: https://nodejs.org/api/http.html#servermaxheaderscount\n",
      "cve": "CVE-2024-37890",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade ws@4.1.0 to 5.2.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/ws@4.1.0"
          },
          "version": "4.1.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-37890",
          "value": "CVE-2024-37890",
          "url": "https://scout.docker.com/v/CVE-2024-37890?s=github&n=ws&t=npm&vr=%3E%3D2.1.0%2C%3C5.2.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-37890?s=github&n=ws&t=npm&vr=%3E%3D2.1.0%2C%3C5.2.4"
        }
      ]
    },
    {
      "id": "0f83454fcf6e0d3735e9026a59215237766c1a18dff9b0068ba16926805fe4d9",
      "category": "container_scanning",
      "message": "CVE-2024-45590 on body-parser@1.18.2",
      "description": "### Impact\n\nbody-parser <1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service.\n\n### Patches\n\nthis issue is patched in 1.20.3\n\n### References\n",
      "cve": "CVE-2024-45590",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade body-parser@1.18.2 to 1.20.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/body-parser@1.18.2"
          },
          "version": "1.18.2"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45590",
          "value": "CVE-2024-45590",
          "url": "https://scout.docker.com/v/CVE-2024-45590?s=github&n=body-parser&t=npm&vr=%3C1.20.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45590?s=github&n=body-parser&t=npm&vr=%3C1.20.3"
        }
      ]
    },
    {
      "id": "f706024989ce521b38f2a8ac41ed15bb54d9e20321cdcbca176f514097fcc1e8",
      "category": "container_scanning",
      "message": "GHSA-vjh7-7g9h-fjfh on elliptic@6.4.1",
      "description": "### Summary\n\nPrivate key can be extracted from ECDSA signature upon signing a malformed input (e.g. a string or a number), which could e.g. come from JSON network input\n\nNote that `elliptic` by design accepts hex strings as one of the possible input types\n\n### Details\n\nIn this code: https://github.com/indutny/elliptic/blob/3e46a48fdd2ef2f89593e5e058d85530578c9761/lib/elliptic/ec/index.js#L100-L107\n\n`msg` is a BN instance after conversion, but `nonce` is an array, and different BN instances could generate equivalent arrays after conversion.\n\nMeaning that a same `nonce` could be generated for different messages used in signing process, leading to `k` reuse, leading to private key extraction from a pair of signatures\n\nSuch a message can be constructed for any already known message/signature pair, meaning that the attack needs only a single malicious message being signed for a full key extraction\n\nWhile signing unverified attacker-controlled messages would be problematic itself (and exploitation of this needs such a scenario), signing a single message still _should not_ leak the private key\n\nAlso, message validation could have the same bug (out of scope for this report, but could be possible in some situations), which makes this attack more likely when used in a chain\n\n### PoC\n\n#### `k` reuse example\n\n```js\nimport elliptic from 'elliptic'\n\nconst { ec: EC } = elliptic\n\nconst privateKey = crypto.getRandomValues(new Uint8Array(32))\nconst curve = 'ed25519' // or any other curve, e.g. secp256k1\nconst ec = new EC(curve)\nconst prettyprint = ({ r, s }) => `r: ${r}, s: ${s}`\nconst sig0 = prettyprint(ec.sign(Buffer.alloc(32, 1), privateKey)) // array of ones\nconst sig1 = prettyprint(ec.sign('01'.repeat(32), privateKey)) // same message in hex form\nconst sig2 = prettyprint(ec.sign('-' + '01'.repeat(32), privateKey)) // same `r`, different `s`\nconsole.log({ sig0, sig1, sig2 })\n```\n\n#### Full attack\n\nThis doesn't include code for generation/recovery on a purpose (bit it's rather trivial)\n\n```js\nimport elliptic from 'elliptic'\n\nconst { ec: EC } = elliptic\n\nconst privateKey = crypto.getRandomValues(new Uint8Array(32))\nconst curve = 'secp256k1' // or any other curve, e.g. ed25519\nconst ec = new EC(curve)\n\n// Any message, e.g. previously known signature\nconst msg0 = crypto.getRandomValues(new Uint8Array(32))\nconst sig0 = ec.sign(msg0, privateKey)\n\n// Attack\nconst msg1 = funny(msg0) // this is a string here, but can also be of other non-Uint8Array types\nconst sig1 = ec.sign(msg1, privateKey)\n\nconst something = extract(msg0, sig0, sig1, curve)\n\nconsole.log('Curve:', curve)\nconsole.log('Typeof:', typeof msg1)\nconsole.log('Keys equal?', Buffer.from(privateKey).toString('hex') === something)\nconst rnd = crypto.getRandomValues(new Uint8Array(32))\nconst st = (x) => JSON.stringify(x)\nconsole.log('Keys equivalent?', st(ec.sign(rnd, something).toDER()) === st(ec.sign(rnd, privateKey).toDER()))\nconsole.log('Orig key:', Buffer.from(privateKey).toString('hex'))\nconsole.log('Restored:', something)\n```\n\nOutput:\n```console\nCurve: secp256k1\nTypeof: string\nKeys equal? true\nKeys equivalent? true\nOrig key: c7870f7eb3e8fd5155d5c8cdfca61aa993eed1fbe5b41feef69a68303248c22a\nRestored: c7870f7eb3e8fd5155d5c8cdfca61aa993eed1fbe5b41feef69a68303248c22a\n```\n\nSimilar for `ed25519`, but due to low `n`, the key might not match precisely but is nevertheless equivalent for signing:\n```console\nCurve: ed25519\nTypeof: string\nKeys equal? false\nKeys equivalent? true\nOrig key: f1ce0e4395592f4de24f6423099e022925ad5d2d7039b614aaffdbb194a0d189\nRestored: 01ce0e4395592f4de24f6423099e0227ec9cb921e3b7858581ec0d26223966a6\n```\n`restored` is equal to `orig` mod `N`.\n\n### Impact\n\nFull private key extraction when signing a single malicious message (that passes `JSON.stringify`/`JSON.parse`)",
      "cve": "GHSA-vjh7-7g9h-fjfh",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade elliptic@6.4.1 to 6.6.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/elliptic@6.4.1"
          },
          "version": "6.4.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-vjh7-7g9h-fjfh",
          "value": "GHSA-vjh7-7g9h-fjfh",
          "url": "https://scout.docker.com/v/GHSA-vjh7-7g9h-fjfh?s=github&n=elliptic&t=npm&vr=%3C%3D6.6.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-vjh7-7g9h-fjfh?s=github&n=elliptic&t=npm&vr=%3C%3D6.6.0"
        }
      ]
    },
    {
      "id": "2ae8de67396fd9cae9c4fab31fd4c1029e47b783a8a94f9d270178dbae09fcf1",
      "category": "container_scanning",
      "message": "CVE-2019-10744 on lodash.template@4.4.0",
      "description": "Versions of lodash lower than are vulnerable to Prototype Pollution. The function defaultsDeep could be tricked into adding or modifying properties of Object.prototype using a constructor payload.",
      "cve": "CVE-2019-10744",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade lodash.template@4.4.0 to 4.5.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/lodash.template@4.4.0"
          },
          "version": "4.4.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-10744",
          "value": "CVE-2019-10744",
          "url": "https://scout.docker.com/v/CVE-2019-10744?s=gitlab&n=lodash.template&t=npm&vr=%3C4.5.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-10744?s=gitlab&n=lodash.template&t=npm&vr=%3C4.5.0"
        }
      ]
    },
    {
      "id": "b637a1e6c338f04dc586a12eac01dc75ed067a1a4285da1c68966295708bfbc9",
      "category": "container_scanning",
      "message": "CVE-2019-10744 on lodash@4.17.10",
      "description": "Versions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.  The function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n## Recommendation\n\nUpdate to version 4.17.12 or later.",
      "cve": "CVE-2019-10744",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade lodash@4.17.10 to 4.17.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/lodash@4.17.10"
          },
          "version": "4.17.10"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-10744",
          "value": "CVE-2019-10744",
          "url": "https://scout.docker.com/v/CVE-2019-10744?s=github&n=lodash&t=npm&vr=%3C4.17.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-10744?s=github&n=lodash&t=npm&vr=%3C4.17.12"
        }
      ]
    },
    {
      "id": "9597164b871aabd961498a6b6de3573dab7dee819bb1887091aac83c20ae8621",
      "category": "container_scanning",
      "message": "CVE-2019-10744 on lodash.mergewith@4.6.1",
      "description": "Versions of lodash lower than are vulnerable to Prototype Pollution. The function defaultsDeep could be tricked into adding or modifying properties of Object.prototype using a constructor payload.",
      "cve": "CVE-2019-10744",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade lodash.mergewith@4.6.1 to 4.6.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/lodash.mergewith@4.6.1"
          },
          "version": "4.6.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-10744",
          "value": "CVE-2019-10744",
          "url": "https://scout.docker.com/v/CVE-2019-10744?s=gitlab&n=lodash.mergewith&t=npm&vr=%3C4.6.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-10744?s=gitlab&n=lodash.mergewith&t=npm&vr=%3C4.6.2"
        }
      ]
    },
    {
      "id": "2a2105ed9b6b50e8ac9f18c47f966db3b1df86dc9fa85f616afe9cb3d007abe5",
      "category": "container_scanning",
      "message": "CVE-2025-6545 on pbkdf2@3.0.16",
      "description": "### Summary\n\nThis affects both:\n 1. Unsupported algos (e.g. `sha3-256` / `sha3-512` / `sha512-256`)\n 2. Supported but non-normalized algos (e.g. `Sha256` / `Sha512` / `SHA1` / `sha-1` / `sha-256` / `sha-512`)\n\nAll of those work correctly in Node.js, but this polyfill silently returns highly predictable ouput\n\nUnder Node.js (only with `pbkdf2/browser` import, unlikely) / Bun (`pbkdf2` top-level import is affected), the memory is not zero-filled but is uninitialized, as `Buffer.allocUnsafe` is used\n\nUnder browsers, it just returns zero-filled buffers\n(Which is also critical, those are completely unacceptable as kdf output and ruin security)\n\n### Were you affected?\n\nThe full list of arguments that were **not** affected were literal:\n * `'md5'`\n * `'sha1'`\n * `'sha224'`\n * `'sha256'`\n * `'sha384'`\n * `'sha512'`\n * `'rmd160'`\n * `'ripemd160'`\n\nAny other arguments, e.g. representation variations of the above ones like `'SHA-1'`/`'sha-256'`/`'SHA512'` or  different algos like `'sha3-512'`/`'blake2b512'`, while supported on Node.js `crypto` module, returned predictable output on `pbkdf2` (or `crypto` browser/bundlers polyfill)\n\n---\n\nBeware of packages re-exporting this under a different signature, like (abstract):\n```js\nconst crypto = require('crypto')\nmodule.exports.deriveKey = (algo, pass, salt) => crypto.pbkdf2Sync(pass, salt, 2048, 64, algo)\n```\n\nIn this case, the resulting `deriveKey` method is also affected (to the same extent / conditions as listed here).\n\n### Environments\n\nThis affects `require('crypto')` in polyfilled mode (e.g. from `crypto-browserify`, `node-libs-browser`, `vite-plugin-node-polyfills`, `node-stdlib-browser`, etc. -- basically everything that bundles/polfyills `crypto`\n\n* In bundled code (e.g. Webpack / Vite / whatever), this affects `require('crypto')` and `require('pbkdf2')`\n* On Node.js, this does not affect `require('pbkdf2')` (or `require('crypto')` obviously), but affects `require('pbkdf2/browser')`\n* On Bun, this _does_ affect `require('pbkdf2')` _and_  `require('pbkdf2/browser')` (and returns uninitialized memory, often zeros / sparse flipped bytes)\n\n### PoC\n```js\nconst node = require('crypto')\nconst polyfill = require('pbkdf2/browser')\n\nconst algos = [\n  'sha3-512', 'sha3-256', 'SHA3-384',\n  'Sha256', 'Sha512', 'sha512-256',\n  'SHA1', 'sha-1',\n  'blake2b512',\n  'RMD160', 'RIPEMD-160', 'ripemd-160',\n]\nfor (const algo of algos) {\n  for (const { pbkdf2Sync } of [node, polyfill]) {\n    const key = pbkdf2Sync('secret', 'salt', 100000, 64, algo)\n    console.log(`${algo}: ${key.toString('hex')}`);\n  }\n}\n```\n\nOutput (odd lines are Node.js, even is `pbkdf2` module / polyfill):\n```\nsha3-512: de00370414a3251d6d620dc8f7c371644e5d7f365ab23b116298a23fa4077b39deab802dd61714847a5c7e9981704ffe009aee5bb40f6f0103fc60f3d4cedfb0\nsha3-512: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\nsha3-256: 76bf06909b91e4c968700078ee36af92019d0839ab1fea2f345c6c8685074ca0179302633fbd84d22cff4f8744952b2d07edbfc9658e95d30fb4e93ee067c7c9\nsha3-256: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\nSHA3-384: 2b2b41b73f9b7bcd023f709ea84ba3c29a88edc311b737856ba9e74a2d9a928f233eb8cb404a9ba93c276edf6380c692140024a0bc12b75bfa38626207915e01\nSHA3-384: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\nSha256: 3fa094211c0cf2ed1d332ab43adc69aab469f0e0f2cae6345c81bb874eef3f9eb2c629052ec272ca49c2ee95b33e7ba6377b2317cd0dacce92c4748d3c7a45f0\nSha256: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\nSha512: 3745e482c6e0ade35da10139e797157f4a5da669dad7d5da88ef87e47471cc47ed941c7ad618e827304f083f8707f12b7cfdd5f489b782f10cc269e3c08d59ae\nSha512: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\nsha512-256: e423f61987413121418715d0ebf64cb646042ae9a09fe4fd2c764a4f186ba28cf70823fdc2b03dda67a0d977c6f0a0612e5ed74a11e6f32b033cb658fa9f270d\nsha512-256: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\nSHA1: 0e24bc5a548b236e3eb3b22317ef805664a88747c725cd35bfb0db0e4ae5539e3ed5cd5ba8c0ac018deb6518059788c8fffbe624f614fbbe62ba6a6e174e4a72\nSHA1: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\nsha-1: 0e24bc5a548b236e3eb3b22317ef805664a88747c725cd35bfb0db0e4ae5539e3ed5cd5ba8c0ac018deb6518059788c8fffbe624f614fbbe62ba6a6e174e4a72\nsha-1: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\nblake2b512: d3d661100c5ffb79bdf3b5c77d1698e621414cba40e2348bd3f1b10fbd2fe97bff4dc7d76474955bfefa61179f2a37e9dddedced0e7e79ef9d8c678080d45926\nblake2b512: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\nRMD160: ec65dbad1485616cf0426725d64e009ad3e1633543746ccb56b7f06eb7ce51d0249aaef27c879f32911a7c0accdc83389c2948ddec439114f6165366f9b4cca2\nRMD160: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\nRIPEMD-160: ec65dbad1485616cf0426725d64e009ad3e1633543746ccb56b7f06eb7ce51d0249aaef27c879f32911a7c0accdc83389c2948ddec439114f6165366f9b4cca2\nRIPEMD-160: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\nripemd-160: ec65dbad1485616cf0426725d64e009ad3e1633543746ccb56b7f06eb7ce51d0249aaef27c879f32911a7c0accdc83389c2948ddec439114f6165366f9b4cca2\nripemd-160: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n```\n\n#### Uninitialized memory\n\n```js\nconst { pbkdf2Sync } = require('pbkdf2/browser') // or just 'pbkdf2' on Bun will do this too\n\nlet prev\nfor (let i = 0; i < 100000; i++) {\n  const key = pbkdf2Sync('secret', 'salt', 100000, 64, 'sha3-256')\n  const hex = key.toString('hex')\n  if (hex !== prev) console.log(hex);\n  prev = hex\n}\n```\n\n### Affected versions\n\nSeems to be since https://github.com/browserify/pbkdf2/commit/9699045c37a07f8319cfb8d44e2ff4252d7a7078\n\n### Impact\n\nThis is critical, browserifying code might silently generate zero-filled keys instead of proper ones, for code that was working on Node.js or in test environment\n\nJust updating to a fixed version is not enough: if anyone was using `pbkdf2` lib (e.g. via `crypto-browserify` or directly) on algos not from the literal string list (see \"were you affected\"), recheck where those keys went / how they were used,  and take action accordingly\n\n### Note\n\nMost likely, you receive this either through a subdep using `pbkdf2` module directly (and then it is used), or through `crypto-browserify` (and the usage depends on whether you or any of your subdeps were calling `pbkdf2/pbkdf2Sync` methods from Node.js crypto inside your bundle)\n\nWhen targeting non-Node.js, prever avoiding Node.js crypto polyfill at all, and use `crypto.subtle` and/or modern/audited cryptography primitives instead",
      "cve": "CVE-2025-6545",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade pbkdf2@3.0.16 to 3.1.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/pbkdf2@3.0.16"
          },
          "version": "3.0.16"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-6545",
          "value": "CVE-2025-6545",
          "url": "https://scout.docker.com/v/CVE-2025-6545?s=github&n=pbkdf2&t=npm&vr=%3E%3D3.0.10%2C%3C%3D3.1.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-6545?s=github&n=pbkdf2&t=npm&vr=%3E%3D3.0.10%2C%3C%3D3.1.2"
        }
      ]
    },
    {
      "id": "3043c894cee9fa3a08af39e6b2d046d6dd4a62432bfb7ae3656eccaadeebd2fd",
      "category": "container_scanning",
      "message": "CVE-2025-6547 on pbkdf2@3.0.16",
      "description": "### Summary\n\nOn historic but declared as supported Node.js versions (0.12-2.x), pbkdf2 silently disregards Uint8Array input\n\nThis only affects Node.js <3.0.0, but `pbkdf2` claims to:\n * Support Node.js [>= 0.12](https://github.com/browserify/pbkdf2/blob/v3.1.2/package.json#L62) (and there seems to be ongoing effort in this repo to maintain that)\n * Support `Uint8Array` input (input is typechecked against Uint8Array, and the error message includes e.g. \"Password must be a string, a Buffer, a typed array or a DataView\"\n\n### Details\n\nThe error is in `toBuffer` method\n\nThis vulnerability somehow even made it to tests: https://github.com/browserify/pbkdf2/commit/eb9f97a66ed83836bebc4ff563a1588248708501\nThere, `resultsOld` (where mismatch `results`) are just invalid output generated from empty password/salt instead of the supplied one\n\n### PoC\n\nOn Node.js/io.js < 3.0.0\n\n```console\n> require('pbkdf2').pbkdf2Sync(new Uint8Array([1,2,3]), new Uint8Array([1,3,4]), 1024, 32, 'sha256')\n<Buffer 21 53 cd 5b a5 f0 15 39 2f 68 e2 40 8b 21 ba ca 0e dc 7b 20 d5 45 a4 8a ea b5 95 9f f0 be bf 66>\n\n// But that's just a hash of empty data with empty password:\n> require('pbkdf2').pbkdf2Sync('', '', 1024, 32, 'sha256')\n<Buffer 21 53 cd 5b a5 f0 15 39 2f 68 e2 40 8b 21 ba ca 0e dc 7b 20 d5 45 a4 8a ea b5 95 9f f0 be bf 66>\n\n// Node.js crypto is fine even on that version:\n> require('crypto').pbkdf2Sync(new Uint8Array([1,2,3]), new Uint8Array([1,3,4]), 1024, 32, 'sha256')\n<Buffer 78 10 cc 84 b7 bb 85 cd c8 37 ca 68 da a9 4c 33 db ae c2 3d 5b d4 95 76 da 33 f9 95 ac 51 f4 45>\n\n// Empty hash from Node.js, for comparison\n> require('crypto').pbkdf2Sync('', '', 1024, 32, 'sha256')\n<Buffer 21 53 cd 5b a5 f0 15 39 2f 68 e2 40 8b 21 ba ca 0e dc 7b 20 d5 45 a4 8a ea b5 95 9f f0 be bf 66>\n```\n\n### Impact\n\nStatic hashes being outputted and used as keys/passwords can completely undermine security\nThat said, no one should be using those Node.js versions anywhere now, so I would recommend to just drop them\nThis lib should not pretend to work on those versions while outputting static data though\n\nJust updating to a fixed version is not enough: if anyone was using `pbkdf2` lib (do not confuse with Node.js `crypto.pbkdf2`) or anything depending on it with Node.js/io.js < 3.0.0, recheck where those keys went / how they were used,  and take action accordingly",
      "cve": "CVE-2025-6547",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade pbkdf2@3.0.16 to 3.1.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/pbkdf2@3.0.16"
          },
          "version": "3.0.16"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-6547",
          "value": "CVE-2025-6547",
          "url": "https://scout.docker.com/v/CVE-2025-6547?s=github&n=pbkdf2&t=npm&vr=%3C%3D3.1.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-6547?s=github&n=pbkdf2&t=npm&vr=%3C%3D3.1.2"
        }
      ]
    },
    {
      "id": "9679dc70b011e1f1dea4cb0863d32baabf345025009a75c7cc9bef9732d4089e",
      "category": "container_scanning",
      "message": "CVE-2025-9287 on cipher-base@1.0.4",
      "description": "### Summary\n\nThis affects e.g. `create-hash` (and `crypto-browserify`), so I'll describe the issue against that package\nAlso affects `create-hmac` and other packages\n\nNode.js `createHash` works only on strings or instances of Buffer, TypedArray, or DataView.\n\nMissing input type checks (in npm `create-hash` polyfill of Node.js `createHash`) can allow types other than a well-formed `Buffer` or `string`, resulting in invalid values, hanging and rewinding the hash state (including turning a tagged hash into an untagged hash), or other generally undefined behaviour.\n\n### Details\n\nSee PoC\n\n### PoC\n```js\nconst createHash = require('create-hash/browser.js')\nconst { randomBytes } = require('crypto')\n\nconst sha256 = (...messages) => {\n  const hash = createHash('sha256')\n  messages.forEach((m) => hash.update(m))\n  return hash.digest('hex')\n}\n\nconst validMessage = [randomBytes(32), randomBytes(32), randomBytes(32)] // whatever\n\nconst payload = forgeHash(Buffer.concat(validMessage), 'Hashed input means safe')\nconst receivedMessage = JSON.parse(payload) // e.g. over network, whatever\n\nconsole.log(sha256(...validMessage))\nconsole.log(sha256(...receivedMessage))\nconsole.log(receivedMessage[0])\n```\n\nOutput:\n```\n9ef59a6a745990b09bbf1d99abe43a4308b48ce365935e29eb4c9000984ee9a9\n9ef59a6a745990b09bbf1d99abe43a4308b48ce365935e29eb4c9000984ee9a9\nHashed input means safe\n```\n\nThis works with:\n```js\nconst forgeHash = (valid, wanted) => JSON.stringify([wanted, { length: -wanted.length }, { ...valid, length: valid.length }])\n```\n\nBut there are other types of input which lead to unchecked results\n\n### Impact\n\n1. Hash state rewind on `{length: -x}`. This is behind the PoC above, also this way an attacker can turn a tagged hash in cryptographic libraries into an untagged hash.\n2. Value miscalculation, e.g. a collision is generated by `{ length: buf.length, ...buf, 0: buf[0] + 256 }`\n    This will result in the same hash as of `buf`, but can be treated by other code differently (e.g. bn.js)\n4. DoS on `{length:'1e99'}`\n5. On a subsequent system, (2) can turn into matching hashes but different numeric representations, leading to issues up to private key extraction from cryptography libraries (as nonce is often generated through a hash, and matching nonces for different values often immediately leads to private key restoration, like [GHSA-vjh7-7g9h-fjfh](https://github.com/indutny/elliptic/security/advisories/GHSA-vjh7-7g9h-fjfh))\n6. Also, other typed arrays results are invalid, e.g. returned hash of `new Uint16Array(5)` is the same as `new Uint8Array(5)`, not `new Uint16Array(10)` as it should have been (and is in Node.js `crypto`) -- same for arrays with values non-zero, their hashes are just truncated to `%256` instead of converted to correct bytelength",
      "cve": "CVE-2025-9287",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade cipher-base@1.0.4 to 1.0.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/cipher-base@1.0.4"
          },
          "version": "1.0.4"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-9287",
          "value": "CVE-2025-9287",
          "url": "https://scout.docker.com/v/CVE-2025-9287?s=github&n=cipher-base&t=npm&vr=%3C%3D1.0.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-9287?s=github&n=cipher-base&t=npm&vr=%3C%3D1.0.4"
        }
      ]
    },
    {
      "id": "a9eca8591d5d9516016ee363d2f66d2182e0011f24f1ec9fcf4f6ac19c023c7d",
      "category": "container_scanning",
      "message": "CVE-2025-9288 on sha.js@2.4.11",
      "description": "### Summary\n\nThis is the same as [GHSA-cpq7-6gpm-g9rc](https://github.com/browserify/cipher-base/security/advisories/GHSA-cpq7-6gpm-g9rc) but just for `sha.js`, as it has its own implementation.\n\nMissing input type checks can allow types other than a well-formed `Buffer` or `string`, resulting in invalid values, hanging and rewinding the hash state (including turning a tagged hash into an untagged hash), or other generally undefined behaviour.\n\n### Details\n\nSee PoC\n\n### PoC\n```js\nconst forgeHash = (data, payload) => JSON.stringify([payload, { length: -payload.length}, [...data]])\n\nconst sha = require('sha.js')\nconst { randomBytes } = require('crypto')\n\nconst sha256 = (...messages) => {\n  const hash = sha('sha256')\n  messages.forEach((m) => hash.update(m))\n  return hash.digest('hex')\n}\n\nconst validMessage = [randomBytes(32), randomBytes(32), randomBytes(32)] // whatever\n\nconst payload = forgeHash(Buffer.concat(validMessage), 'Hashed input means safe')\nconst receivedMessage = JSON.parse(payload) // e.g. over network, whatever\n\nconsole.log(sha256(...validMessage))\nconsole.log(sha256(...receivedMessage))\nconsole.log(receivedMessage[0])\n```\n\nOutput:\n```\n638d5bf3ca5d1decf7b78029f1c4a58558143d62d0848d71e27b2a6ff312d7c4\n638d5bf3ca5d1decf7b78029f1c4a58558143d62d0848d71e27b2a6ff312d7c4\nHashed input means safe\n```\n\nOr just:\n```console\n> require('sha.js')('sha256').update('foo').digest('hex')\n'2c26b46b68ffc68ff99b453c1d30413413422d706483bfa0f98a5e886266e7ae'\n> require('sha.js')('sha256').update('fooabc').update({length:-3}).digest('hex')\n'2c26b46b68ffc68ff99b453c1d30413413422d706483bfa0f98a5e886266e7ae'\n```\n\n### Impact\n\n1. Hash state rewind on `{length: -x}`. This is behind the PoC above, also this way an attacker can turn a tagged hash in cryptographic libraries into an untagged hash.\n2. Value miscalculation, e.g. a collision is generated by `{ length: buf.length, ...buf, 0: buf[0] + 256 }`\n    This will result in the same hash as of `buf`, but can be treated by other code differently (e.g. bn.js)\n4. DoS on `{length:'1e99'}`\n5. On a subsequent system, (2) can turn into matching hashes but different numeric representations, leading to issues up to private key extraction from cryptography libraries (as nonce is often generated through a hash, and matching nonces for different values often immediately leads to private key restoration)",
      "cve": "CVE-2025-9288",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade sha.js@2.4.11 to 2.4.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/sha.js@2.4.11"
          },
          "version": "2.4.11"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-9288",
          "value": "CVE-2025-9288",
          "url": "https://scout.docker.com/v/CVE-2025-9288?s=github&n=sha.js&t=npm&vr=%3C%3D2.4.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-9288?s=github&n=sha.js&t=npm&vr=%3C%3D2.4.11"
        }
      ]
    },
    {
      "id": "ec7dc93446b5eac008eb84f1c549930348abc306d5dca6ce37400fb781bfdebd",
      "category": "container_scanning",
      "message": "CVE-2025-7783 on form-data@2.3.2",
      "description": "### Summary\n\nform-data uses `Math.random()` to select a boundary value for multipart form-encoded data. This can lead to a security issue if an attacker:\n1. can observe other values produced by Math.random in the target application, and\n2. can control one field of a request made using form-data\n\nBecause the values of Math.random() are pseudo-random and predictable (see: https://blog.securityevaluators.com/hacking-the-javascript-lottery-80cc437e3b7f), an attacker who can observe a few sequential values can determine the state of the PRNG and predict future values, includes those used to generate form-data's boundary value. The allows the attacker to craft a value that contains a boundary value, allowing them to inject additional parameters into the request.\n\nThis is largely the same vulnerability as was [recently found in `undici`](https://hackerone.com/reports/2913312) by [`parrot409`](https://hackerone.com/parrot409?type=user) -- I'm not affiliated with that researcher but want to give credit where credit is due! My PoC is largely based on their work.\n\n### Details\n\nThe culprit is this line here: https://github.com/form-data/form-data/blob/426ba9ac440f95d1998dac9a5cd8d738043b048f/lib/form_data.js#L347\n\nAn attacker who is able to predict the output of Math.random() can predict this boundary value, and craft a payload that contains the boundary value, followed by another, fully attacker-controlled field. This is roughly equivalent to any sort of improper escaping vulnerability, with the caveat that the attacker must find a way to observe other Math.random() values generated by the application to solve for the state of the PRNG. However, Math.random() is used in all sorts of places that might be visible to an attacker (including by form-data itself, if the attacker can arrange for the vulnerable application to make a request to an attacker-controlled server using form-data, such as a user-controlled webhook -- the attacker could observe the boundary values from those requests to observe the Math.random() outputs). A common example would be a `x-request-id` header added by the server. These sorts of headers are often used for distributed tracing, to correlate errors across the frontend and backend. `Math.random()` is a fine place to get these sorts of IDs (in fact, [opentelemetry uses Math.random for this purpose](https://github.com/open-telemetry/opentelemetry-js/blob/2053f0d3a44631ade77ea04f656056a2c8a2ae76/packages/opentelemetry-sdk-trace-base/src/platform/node/RandomIdGenerator.ts#L22))\n\n### PoC\n\nPoC here: https://github.com/benweissmann/CVE-2025-7783-poc\n\nInstructions are in that repo. It's based on the PoC from https://hackerone.com/reports/2913312 but simplified somewhat; the vulnerable application has a more direct side-channel from which to observe Math.random() values (a separate endpoint that happens to include a randomly-generated request ID). \n\n### Impact\n\nFor an application to be vulnerable, it must:\n- Use `form-data` to send data including user-controlled data to some other system. The attacker must be able to do something malicious by adding extra parameters (that were not intended to be user-controlled) to this request. Depending on the target system's handling of repeated parameters, the attacker might be able to overwrite values in addition to appending values (some multipart form handlers deal with repeats by overwriting values instead of representing them as an array)\n- Reveal values of Math.random(). It's easiest if the attacker can observe multiple sequential values, but more complex math could recover the PRNG state to some degree of confidence with non-sequential values. \n\nIf an application is vulnerable, this allows an attacker to make arbitrary requests to internal systems.",
      "cve": "CVE-2025-7783",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade form-data@2.3.2 to 2.5.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/form-data@2.3.2"
          },
          "version": "2.3.2"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-7783",
          "value": "CVE-2025-7783",
          "url": "https://scout.docker.com/v/CVE-2025-7783?s=github&n=form-data&t=npm&vr=%3C2.5.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-7783?s=github&n=form-data&t=npm&vr=%3C2.5.4"
        }
      ]
    },
    {
      "id": "a23f0fd767627d789405a089074909c79486e3d83030eb41c603a0945bac23d6",
      "category": "container_scanning",
      "message": "CVE-2019-10746 on mixin-deep@1.3.1",
      "description": "Versions of `mixin-deep` prior to 2.0.1 or 1.3.2 are vulnerable to Prototype Pollution. The `mixinDeep` function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.\n\n\n## Recommendation\n\nIf you are using `mixin-deep` 2.x, upgrade to version 2.0.1 or later.\nIf you are using `mixin-deep` 1.x, upgrade to version 1.3.2 or later.",
      "cve": "CVE-2019-10746",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade mixin-deep@1.3.1 to 1.3.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/mixin-deep@1.3.1"
          },
          "version": "1.3.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-10746",
          "value": "CVE-2019-10746",
          "url": "https://scout.docker.com/v/CVE-2019-10746?s=github&n=mixin-deep&t=npm&vr=%3C1.3.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-10746?s=github&n=mixin-deep&t=npm&vr=%3C1.3.2"
        }
      ]
    },
    {
      "id": "8cde8a4b51951ee62304a47a50d8be1b4043ad038ae96c09acc2dc18e60f2a23",
      "category": "container_scanning",
      "message": "CVE-2019-10747 on set-value@0.4.3",
      "description": "Versions of `set-value` prior to 3.0.1 or 2.0.1 are vulnerable to Prototype Pollution. The `set` function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.\n\n\n\n\n## Recommendation\n\nIf you are using `set-value` 3.x, upgrade to version 3.0.1 or later.\nIf you are using `set-value` 2.x, upgrade to version 2.0.1 or later.",
      "cve": "CVE-2019-10747",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade set-value@0.4.3 to 2.0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/set-value@0.4.3"
          },
          "version": "0.4.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-10747",
          "value": "CVE-2019-10747",
          "url": "https://scout.docker.com/v/CVE-2019-10747?s=github&n=set-value&t=npm&vr=%3C2.0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-10747?s=github&n=set-value&t=npm&vr=%3C2.0.1"
        }
      ]
    },
    {
      "id": "fc29c5e9a63bc104979687ff406b262cd1391da171ac7042ea90294b67112adc",
      "category": "container_scanning",
      "message": "CVE-2019-10747 on set-value@2.0.0",
      "description": "Versions of `set-value` prior to 3.0.1 or 2.0.1 are vulnerable to Prototype Pollution. The `set` function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.\n\n\n\n\n## Recommendation\n\nIf you are using `set-value` 3.x, upgrade to version 3.0.1 or later.\nIf you are using `set-value` 2.x, upgrade to version 2.0.1 or later.",
      "cve": "CVE-2019-10747",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade set-value@2.0.0 to 2.0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/set-value@2.0.0"
          },
          "version": "2.0.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-10747",
          "value": "CVE-2019-10747",
          "url": "https://scout.docker.com/v/CVE-2019-10747?s=github&n=set-value&t=npm&vr=%3C2.0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-10747?s=github&n=set-value&t=npm&vr=%3C2.0.1"
        }
      ]
    },
    {
      "id": "535915e30937064be57d952da5caaf3278f7b687262e741c2bd4a4abca606d08",
      "category": "container_scanning",
      "message": "CVE-2021-3918 on json-schema@0.2.3",
      "description": "json-schema before version 0.4.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution').",
      "cve": "CVE-2021-3918",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade json-schema@0.2.3 to 0.4.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/json-schema@0.2.3"
          },
          "version": "0.2.3"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-3918",
          "value": "CVE-2021-3918",
          "url": "https://scout.docker.com/v/CVE-2021-3918?s=github&n=json-schema&t=npm&vr=%3C0.4.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-3918?s=github&n=json-schema&t=npm&vr=%3C0.4.0"
        }
      ]
    },
    {
      "id": "b4b0c3041bd19cfd32dea79396d6fbdb24e306f1f4ec2c6f7fe4e7782e3a21e9",
      "category": "container_scanning",
      "message": "CVE-2021-44906 on minimist@0.0.8",
      "description": "Minimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file `index.js`, function `setKey()` (lines 69-95).",
      "cve": "CVE-2021-44906",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade minimist@0.0.8 to 0.2.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/minimist@0.0.8"
          },
          "version": "0.0.8"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-44906",
          "value": "CVE-2021-44906",
          "url": "https://scout.docker.com/v/CVE-2021-44906?s=github&n=minimist&t=npm&vr=%3C0.2.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-44906?s=github&n=minimist&t=npm&vr=%3C0.2.4"
        }
      ]
    },
    {
      "id": "6fc2f54f995a6a1f2b7c0662a9d198f9c6a346958d2092e8662499ff383ba90b",
      "category": "container_scanning",
      "message": "CVE-2021-44906 on minimist@1.2.0",
      "description": "Minimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file `index.js`, function `setKey()` (lines 69-95).",
      "cve": "CVE-2021-44906",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade minimist@1.2.0 to 1.2.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/minimist@1.2.0"
          },
          "version": "1.2.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-44906",
          "value": "CVE-2021-44906",
          "url": "https://scout.docker.com/v/CVE-2021-44906?s=github&n=minimist&t=npm&vr=%3E%3D1.0.0%2C%3C1.2.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-44906?s=github&n=minimist&t=npm&vr=%3E%3D1.0.0%2C%3C1.2.6"
        }
      ]
    },
    {
      "id": "9e02aacfc2e891c33a89dcc64730a7f1e859887c3ed898571e48cb37792a8090",
      "category": "container_scanning",
      "message": "CVE-2022-21191 on global-modules-path@2.3.0",
      "description": "Versions of the package global-modules-path before 3.0.0 are vulnerable to Command Injection due to missing input sanitization or other checks and sandboxes being employed to the getPath function.",
      "cve": "CVE-2022-21191",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade global-modules-path@2.3.0 to 3.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/global-modules-path@2.3.0"
          },
          "version": "2.3.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-21191",
          "value": "CVE-2022-21191",
          "url": "https://scout.docker.com/v/CVE-2022-21191?s=github&n=global-modules-path&t=npm&vr=%3C3.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-21191?s=github&n=global-modules-path&t=npm&vr=%3C3.0.0"
        }
      ]
    },
    {
      "id": "b0c52fe691fde12e175fbae75a91f333e891f4068fda40d6321d64fcf40d380a",
      "category": "container_scanning",
      "message": "CVE-2022-29078 on ejs@2.6.1",
      "description": "The ejs (aka Embedded JavaScript templates) package 3.1.6 for Node.js allows server-side template injection in settings[view options][outputFunctionName]. This is parsed as an internal option, and overwrites the outputFunctionName option with an arbitrary OS command (which is executed upon template compilation).",
      "cve": "CVE-2022-29078",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade ejs@2.6.1 to 3.1.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/ejs@2.6.1"
          },
          "version": "2.6.1"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-29078",
          "value": "CVE-2022-29078",
          "url": "https://scout.docker.com/v/CVE-2022-29078?s=github&n=ejs&t=npm&vr=%3C3.1.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-29078?s=github&n=ejs&t=npm&vr=%3C3.1.7"
        }
      ]
    },
    {
      "id": "13fb47d10f18a4daad362b84d2d4e588afb2e8075053912d5136f0b534996d2f",
      "category": "container_scanning",
      "message": "CVE-2022-37601 on loader-utils@1.1.0",
      "description": "Prototype pollution vulnerability in function parseQuery in parseQuery.js in webpack loader-utils prior to version 2.0.3 via the name variable in parseQuery.js.",
      "cve": "CVE-2022-37601",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade loader-utils@1.1.0 to 1.4.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/loader-utils@1.1.0"
          },
          "version": "1.1.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-37601",
          "value": "CVE-2022-37601",
          "url": "https://scout.docker.com/v/CVE-2022-37601?s=github&n=loader-utils&t=npm&vr=%3C1.4.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-37601?s=github&n=loader-utils&t=npm&vr=%3C1.4.1"
        }
      ]
    },
    {
      "id": "23a4295e44d36de87abd6cdd7ec5856ee4c52593323d1931adaa7e2f2ecb7932",
      "category": "container_scanning",
      "message": "CVE-2022-37601 on loader-utils@0.2.17",
      "description": "Prototype pollution vulnerability in function parseQuery in parseQuery.js in webpack loader-utils prior to version 2.0.3 via the name variable in parseQuery.js.",
      "cve": "CVE-2022-37601",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade loader-utils@0.2.17 to 1.4.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/loader-utils@0.2.17"
          },
          "version": "0.2.17"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-37601",
          "value": "CVE-2022-37601",
          "url": "https://scout.docker.com/v/CVE-2022-37601?s=github&n=loader-utils&t=npm&vr=%3C1.4.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-37601?s=github&n=loader-utils&t=npm&vr=%3C1.4.1"
        }
      ]
    },
    {
      "id": "5c22e5220215a6eff530cadbd9fab33430d060972085e780604d93dc178e9b0b",
      "category": "container_scanning",
      "message": "GMS-2020-2 on execa@0.7.0",
      "description": "Attackers could trick execa into executing arbitrary binaries. This behaviour is caused by the setting `preferLocal=true` which makes execa search for locally installed binaries and executes them. This vulnerability is usually only exploitable when using execa on a client-side LOCAL application.",
      "cve": "GMS-2020-2",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade execa@0.7.0 to 2.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/execa@0.7.0"
          },
          "version": "0.7.0"
        },
        "operating_system": "alpine 3.21",
        "image": "ziahamza/webui-aria2:custom-fixed"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GMS-2020-2",
          "value": "GMS-2020-2",
          "url": "https://scout.docker.com/v/GMS-2020-2?s=gitlab&n=execa&t=npm&vr=%3C2.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GMS-2020-2?s=gitlab&n=execa&t=npm&vr=%3C2.0.0"
        }
      ]
    }
  ],
  "remediations": [],
  "scan": {
    "start_time": "2025-10-31T00:48:42",
    "end_time": "2025-10-31T00:48:42",
    "status": "success",
    "type": "container_scanning",
    "scanner": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    },
    "analyzer": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    }
  }
}
