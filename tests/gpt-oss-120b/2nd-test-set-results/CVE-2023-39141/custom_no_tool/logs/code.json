{
    "files": [
        {
            "location": "./../../dockers/CVE-2023-39141/custom_no_tool/docker-compose.yml",
            "content": "services:\n  webui:\n    build:\n      context: ./webui\n    image: ziahamza/webui-aria2:custom-fixed\n    ports:\n      - \"8080:80\"\n    depends_on:\n      - db\n  db:\n    build: ./db\n    environment:\n      MYSQL_ROOT_PASSWORD: example\n      MYSQL_DATABASE: testdb\n      MYSQL_USER: tester\n      MYSQL_PASSWORD: testerpwd\n    ports:\n      - \"3306:3306\"\n    volumes:\n      - db_data:/var/lib/mysql\nvolumes:\n  db_data:"
        },
        {
            "location": "./../../dockers/CVE-2023-39141/custom_no_tool/webui/Dockerfile",
            "content": "FROM node:18-alpine\n\n# Install git and native\u2011build tools required by optional npm packages\nRUN apk add --no-cache git make gcc g++ python3\n\nWORKDIR /app\n\n# Clone the repository (full history to allow any commit checkout if needed)\nRUN git clone https://github.com/ziahamza/webui-aria2.git .\n\n# Overwrite the vulnerable server file with the hardened version\nCOPY node-server.js /app/node-server.js\n\n# Install only production dependencies and skip running install scripts (avoids node\u2011sass build failures)\nRUN npm ci --omit=dev --ignore-scripts\n\n# Add a minimal public directory so the server has a valid baseDir\nCOPY public/ ./public/\n\nEXPOSE 80\n\n# Start the server directly with node (the repo does not define an npm start script)\nCMD [\"node\", \"node-server.js\"]"
        },
        {
            "location": "./../../dockers/CVE-2023-39141/custom_no_tool/webui/node-server.js",
            "content": "// --- Hardened node-server.js ---\nconst http = require('http');\nconst fs = require('fs');\nconst path = require('path');\n\n// Base directory that holds the public files\nconst baseDir = path.resolve(__dirname, 'public');\n\n// Ensure the base directory exists; if not, create it (fails silently if already present)\nif (!fs.existsSync(baseDir)) {\n  fs.mkdirSync(baseDir, { recursive: true });\n}\n\nconst server = http.createServer((req, res) => {\n  // Decode URL path and strip query string\n  let unsafePath = decodeURIComponent(req.url.split('?')[0]);\n  // Remove leading slashes to keep path.relative from discarding baseDir\n  unsafePath = unsafePath.replace(/^\\/+/, '');\n\n  // Resolve the normalized absolute path within baseDir\n  const resolvedPath = path.resolve(baseDir, unsafePath);\n\n  // Ensure the resolved path stays inside baseDir (prevents path traversal)\n  if (!resolvedPath.startsWith(baseDir + path.sep) && resolvedPath !== baseDir) {\n    res.statusCode = 400;\n    res.end('Invalid path');\n    return;\n  }\n\n  // Serve the file if it exists and is readable\n  fs.readFile(resolvedPath, (err, data) => {\n    if (err) {\n      res.statusCode = 404;\n      res.end('Not found');\n      return;\n    }\n    res.statusCode = 200;\n    res.end(data);\n  });\n});\n\nserver.listen(80, '0.0.0.0', () => {\n  console.log('Web UI server listening on port 80');\n});\n// --- End of hardened node-server.js ---"
        },
        {
            "location": "./../../dockers/CVE-2023-39141/custom_no_tool/webui/.dockerignore",
            "content": ".git\nnode_modules\nnpm-debug.log\nDockerfile\ndocker-compose.yml\n*.md\n*.log"
        },
        {
            "location": "./../../dockers/CVE-2023-39141/custom_no_tool/webui/public/index.html",
            "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>WebUI Aria2 - Sample Page</title>\n</head>\n<body>\n  <h1>WebUI Aria2 Container is Running</h1>\n  <p>This is a placeholder page served from the hardened public directory.</p>\n</body>\n</html>"
        },
        {
            "location": "./../../dockers/CVE-2023-39141/custom_no_tool/db/Dockerfile",
            "content": "FROM mysql:5.7\nENV MYSQL_ROOT_PASSWORD=example\nENV MYSQL_DATABASE=testdb\nENV MYSQL_USER=tester\nENV MYSQL_PASSWORD=testerpwd\nCOPY init.sql /docker-entrypoint-initdb.d/"
        },
        {
            "location": "./../../dockers/CVE-2023-39141/custom_no_tool/db/init.sql",
            "content": "CREATE TABLE users (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\nINSERT INTO users (username, password) VALUES ('alice', 'password1'), ('bob', 'password2');"
        }
    ],
    "directory_tree": "custom_no_tool\n\u251c\u2500 docker-compose.yml\n\u251c\u2500 webui\n\u2502  \u251c\u2500 Dockerfile\n\u2502  \u251c\u2500 node-server.js\n\u2502  \u251c\u2500 .dockerignore\n\u2502  \u2514\u2500 public\n\u2502     \u2514\u2500 index.html\n\u2514\u2500 db\n   \u251c\u2500 Dockerfile\n   \u2514\u2500 init.sql"
}