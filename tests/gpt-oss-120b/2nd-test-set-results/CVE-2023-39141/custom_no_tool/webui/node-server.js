// --- Hardened node-server.js ---
const http = require('http');
const fs = require('fs');
const path = require('path');

// Base directory that holds the public files
const baseDir = path.resolve(__dirname, 'public');

// Ensure the base directory exists; if not, create it (fails silently if already present)
if (!fs.existsSync(baseDir)) {
  fs.mkdirSync(baseDir, { recursive: true });
}

const server = http.createServer((req, res) => {
  // Decode URL path and strip query string
  let unsafePath = decodeURIComponent(req.url.split('?')[0]);
  // Remove leading slashes to keep path.relative from discarding baseDir
  unsafePath = unsafePath.replace(/^\/+/, '');

  // Resolve the normalized absolute path within baseDir
  const resolvedPath = path.resolve(baseDir, unsafePath);

  // Ensure the resolved path stays inside baseDir (prevents path traversal)
  if (!resolvedPath.startsWith(baseDir + path.sep) && resolvedPath !== baseDir) {
    res.statusCode = 400;
    res.end('Invalid path');
    return;
  }

  // Serve the file if it exists and is readable
  fs.readFile(resolvedPath, (err, data) => {
    if (err) {
      res.statusCode = 404;
      res.end('Not found');
      return;
    }
    res.statusCode = 200;
    res.end(data);
  });
});

server.listen(80, '0.0.0.0', () => {
  console.log('Web UI server listening on port 80');
});
// --- End of hardened node-server.js ---