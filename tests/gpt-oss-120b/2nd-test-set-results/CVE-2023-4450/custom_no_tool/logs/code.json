{
    "files": [
        {
            "location": "./../../dockers/CVE-2023-4450/custom_no_tool/docker-compose.yml",
            "content": "services:\n  db:\n    image: mysql:5.7\n    environment:\n      MYSQL_ROOT_PASSWORD: example\n      MYSQL_DATABASE: vulnDB\n    ports:\n      - \"3306:3306\"\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\n\n  jeecgboot:\n    # Using a publicly available JeecgBoot image that contains a vulnerable JimuReport version\n    image: jeecgboot/jeecg-boot:1.5.9\n    environment:\n      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/vulnDB?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC\n      - SPRING_DATASOURCE_USERNAME=root\n      - SPRING_DATASOURCE_PASSWORD=example\n    depends_on:\n      - db\n    ports:\n      - \"8080:8080\"\n\n  nginx:\n    image: nginx:1.25.3\n    depends_on:\n      - jeecgboot\n    ports:\n      - \"80:80\"\n    volumes:\n      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro\n\n  app:\n    build: ./app\n    ports:\n      - \"3000:3000\"\n    depends_on:\n      - db\n    environment:\n      - DB_HOST=db\n      - DB_USER=root\n      - DB_PASSWORD=example\n      - DB_NAME=vulnDB\n\nvolumes:\n  db_data:\n"
        },
        {
            "location": "./../../dockers/CVE-2023-4450/custom_no_tool/app/Dockerfile",
            "content": "FROM node:16-bullseye\nWORKDIR /usr/src/app\n# Copy only manifest files first to leverage Docker cache for dependencies\nCOPY package*.json ./\nRUN npm install\n# Copy the rest of the application source code\nCOPY . .\nEXPOSE 3000\nCMD [\"node\",\"server.js\"]\n"
        },
        {
            "location": "./../../dockers/CVE-2023-4450/custom_no_tool/app/package.json",
            "content": "{\n  \"name\": \"vulnerable-app\",\n  \"version\": \"1.0.0\",\n  \"description\": \"App vulnerable to CVE-2023-4450\",\n  \"main\": \"server.js\",\n  \"dependencies\": {\n    \"express\": \"^4.18.2\",\n    \"node-serialize\": \"0.0.4\"\n  },\n  \"scripts\": {\n    \"start\": \"node server.js\"\n  }\n}\n"
        },
        {
            "location": "./../../dockers/CVE-2023-4450/custom_no_tool/app/server.js",
            "content": "const express = require('express');\nconst app = express();\nconst serialize = require('node-serialize');\n\napp.use(express.json());\n\napp.post('/vuln', (req, res) => {\n  // Vulnerable deserialization using node-serialize (CVE-2023-4450)\n  try {\n    const obj = serialize.unserialize(req.body.payload);\n    res.json({ result: obj });\n  } catch (e) {\n    res.status(500).send('Deserialization error');\n  }\n});\n\napp.get('/', (req, res) => {\n  res.send('Vulnerable app running');\n});\n\napp.listen(3000, () => {\n  console.log('App listening on port 3000');\n});\n"
        },
        {
            "location": "./../../dockers/CVE-2023-4450/custom_no_tool/db/init.sql",
            "content": "CREATE TABLE users (id INT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(50), password VARCHAR(50));\nINSERT INTO users (username, password) VALUES ('alice','password1'), ('bob','password2');\n"
        },
        {
            "location": "./../../dockers/CVE-2023-4450/custom_no_tool/nginx/nginx.conf",
            "content": "server {\n    listen 80;\n    location / {\n        proxy_pass http://jeecgboot:8080;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2023-4450/custom_no_tool"
}