{
    "files": [
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/docker-compose.yml",
            "content": "version: '3.8'\nservices:\n  django:\n    build: ./web\n    ports:\n      - \"8000:8000\"\n    environment:\n      - DB_HOST=db\n      - DB_NAME=testdb\n      - DB_USER=user\n      - DB_PASSWORD=pass\n      - DEBUG=True\n    depends_on:\n      - db\n  db:\n    image: mysql:5.7\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: rootpwd\n      MYSQL_DATABASE: testdb\n      MYSQL_USER: user\n      MYSQL_PASSWORD: pass\n    ports:\n      - \"3306:3306\"\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\nvolumes:\n  db_data:"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/web/Dockerfile",
            "content": "FROM python:3.6-slim\nWORKDIR /app\n# Install build tools and MySQL client headers required by mysqlclient\nRUN apt-get update && apt-get install -y build-essential default-libmysqlclient-dev && rm -rf /var/lib/apt/lists/*\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nEXPOSE 8000\nCMD [\"python\", \"manage.py\", \"runserver\", \"0.0.0.0:8000\"]"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/web/requirements.txt",
            "content": "Django==1.10.7\nmysqlclient==1.4.6"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/web/manage.py",
            "content": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"mysite.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/web/mysite/__init__.py",
            "content": ""
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/web/mysite/settings.py",
            "content": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'replace-this-with-a-secure-key'\n\nDEBUG = os.getenv('DEBUG', 'False') == 'True'\n\nALLOWED_HOSTS = ['*']\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'mysite.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'mysite.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': os.getenv('DB_NAME'),\n        'USER': os.getenv('DB_USER'),\n        'PASSWORD': os.getenv('DB_PASSWORD'),\n        'HOST': os.getenv('DB_HOST'),\n        'PORT': '3306',\n    }\n}\n\nAUTH_PASSWORD_VALIDATORS = []\n\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n\nSTATIC_URL = '/static/'"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/web/mysite/urls.py",
            "content": "from django.contrib import admin\nfrom django.urls import path\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n]"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/web/mysite/wsgi.py",
            "content": "import os\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mysite.settings')\napplication = get_wsgi_application()"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/web/app/__init__.py",
            "content": ""
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/web/app/models.py",
            "content": "from django.db import models\n\nclass TestModel(models.Model):\n    name = models.CharField(max_length=100)\n\n    def __str__(self):\n        return self.name"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/web/app/views.py",
            "content": "from django.http import HttpResponse\n\ndef index(request):\n    return HttpResponse('Hello from vulnerable Django app')"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/web/app/urls.py",
            "content": "from django.urls import path\nfrom . import views\n\nurlpatterns = [\n    path('', views.index, name='index'),\n]"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/web/app/admin.py",
            "content": "from django.contrib import admin\nfrom .models import TestModel\n\nadmin.site.register(TestModel)"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/web/app/apps.py",
            "content": "from django.apps import AppConfig\n\nclass AppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'app'"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/web/app/migrations/__init__.py",
            "content": ""
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/web/app/tests.py",
            "content": "from django.test import TestCase\n\n# Create your tests here."
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/db/init.sql",
            "content": "CREATE DATABASE IF NOT EXISTS testdb;\nUSE testdb;\nCREATE TABLE IF NOT EXISTS users (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(255) NOT NULL\n) ENGINE=InnoDB;\nINSERT INTO users (username, password) VALUES ('testuser', 'testpass');"
        }
    ],
    "directory_tree": "CVE-2017-12794/custom_no_tool"
}