const express = require('express');
const ldap = require('ldapjs');
const mysql = require('mysql');

const app = express();
app.use(express.json());

// Database connection (used only to demonstrate a normal backend)
const db = mysql.createConnection({
  host: process.env.DB_HOST || 'db',
  user: process.env.DB_USER || 'cve_user',
  password: process.env.DB_PASSWORD || 'secret',
  database: process.env.DB_NAME || 'cve_db'
});

db.connect(err => {
  if (err) console.error('DB connection error:', err);
  else console.log('Connected to DB');
});

// Vulnerable endpoint – CVE-2019-17564 (LDAP injection leading to command execution)
app.get('/search', (req, res) => {
  const filter = req.query.filter; // user supplied LDAP filter
  // No sanitization – directly used in LDAP search
  const client = ldap.createClient({ url: 'ldap://ldap:1389' });
  const opts = {
    filter: filter,
    scope: 'sub'
  };
  client.search('dc=example,dc=com', opts, (err, search) => {
    if (err) {
      res.status(500).send('LDAP search error');
      return;
    }
    const entries = [];
    search.on('searchEntry', entry => {
      entries.push(entry.object);
    });
    search.on('end', () => {
      res.json(entries);
    });
  });
});

app.get('/', (req, res) => {
  res.send('Vulnerable app ready');
});

app.listen(8080, () => {
  console.log('App listening on port 8080');
});