{
    "files": [
        {
            "location": "./../../dockers/CVE-2016-1897/custom_no_tool/docker-compose.yml",
            "content": "services:\n  web:\n    build:\n      context: .\n      dockerfile: web/Dockerfile\n    ports:\n      - \"8080:8080\"\n    depends_on:\n      - db\n      - ffmpeg\n    environment:\n      - DB_HOST=db\n      - DB_USER=root\n      - DB_PASSWORD=example\n  db:\n    image: mysql:5.7\n    environment:\n      MYSQL_ROOT_PASSWORD: example\n      MYSQL_DATABASE: testdb\n    ports:\n      - \"3306:3306\"\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\n  ffmpeg:\n    build:\n      context: ./ffmpeg\n      dockerfile: Dockerfile\n    restart: unless-stopped\nvolumes:\n  db_data:\n"
        },
        {
            "location": "./../../dockers/CVE-2016-1897/custom_no_tool/web/Dockerfile",
            "content": "FROM tomcat:8.5-jre8\nCOPY webapp/ /usr/local/tomcat/webapps/ROOT/\nEXPOSE 8080\n"
        },
        {
            "location": "./../../dockers/CVE-2016-1897/custom_no_tool/webapp/index.jsp",
            "content": "<%@ page import=\"java.io.*\" %>\n<%\nString cmd = request.getParameter(\"cmd\");\nif (cmd != null) {\n    Process p = Runtime.getRuntime().exec(cmd);\n    BufferedReader reader = new BufferedReader(new InputStreamReader(p.getInputStream()));\n    String line;\n    while ((line = reader.readLine()) != null) {\n        out.println(line + \"<br/>\");\n    }\n}\n%>\n"
        },
        {
            "location": "./../../dockers/CVE-2016-1897/custom_no_tool/webapp/WEB-INF/web.xml",
            "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         version=\"3.1\">\n</web-app>\n"
        },
        {
            "location": "./../../dockers/CVE-2016-1897/custom_no_tool/db/init.sql",
            "content": "CREATE TABLE test (id INT PRIMARY KEY AUTO_INCREMENT, data VARCHAR(100));\nINSERT INTO test (data) VALUES ('sample data');\n"
        },
        {
            "location": "./../../dockers/CVE-2016-1897/custom_no_tool/ffmpeg/Dockerfile",
            "content": "FROM alpine:3.12\n\n# Install build dependencies\nRUN apk add --no-cache \\\n    build-base \\\n    yasm \\\n    pkgconfig \\\n    wget \\\n    libass-dev \\\n    libvpx-dev \\\n    libvorbis-dev \\\n    libwebp-dev \\\n    opus-dev \\\n    freetype-dev \\\n    libpng-dev \\\n    zlib-dev\n\nENV FFMPEG_VERSION=2.8.12\nWORKDIR /tmp\n\n# Download, compile and install specific vulnerable ffmpeg version\nRUN wget https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz && \\\n    tar xzf ffmpeg-${FFMPEG_VERSION}.tar.gz && \\\n    cd ffmpeg-${FFMPEG_VERSION} && \\\n    ./configure \\\n        --disable-doc \\\n        --enable-gpl \\\n        --enable-libass \\\n        --enable-libvpx \\\n        --enable-libvorbis \\\n        --enable-libwebp \\\n        --enable-libopus \\\n        --enable-libfreetype \\\n        --enable-static \\\n        --disable-shared && \\\n    make -j$(nproc) && \\\n    make install && \\\n    cd / && rm -rf /tmp/ffmpeg-${FFMPEG_VERSION} /tmp/ffmpeg-${FFMPEG_VERSION}.tar.gz\n\n# Keep the container running\nCMD [\"sleep\", \"infinity\"]\n"
        }
    ],
    "directory_tree": "custom_no_tool/"
}