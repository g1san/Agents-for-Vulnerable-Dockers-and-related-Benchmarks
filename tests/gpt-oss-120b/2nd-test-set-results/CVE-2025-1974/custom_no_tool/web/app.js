const express = require('express');
const mysql = require('mysql');
const { exec } = require('child_process');
const app = express();
const port = 8080;

const db = mysql.createConnection({
  host: process.env.DB_HOST || 'localhost',
  user: process.env.DB_USER || 'root',
  password: process.env.DB_PASSWORD || '',
  database: process.env.DB_NAME || 'vulnapp'
});

// Connection will be established after the wait‑for‑db script ensures MySQL is reachable.

db.connect(err => {
  if (err) {
    console.error('DB connection error:', err);
    process.exit(1);
  }
  console.log('Connected to DB');
});

// Vulnerable endpoint illustrating CVE-2025-1974 (unsanitized command execution)
app.get('/search', (req, res) => {
  const q = req.query.q || '';
  // CWE-78: OS Command Injection
  exec(`grep -i "${q}" /app/data.txt`, (error, stdout, stderr) => {
    if (error) {
      return res.status(500).send('Error executing command');
    }
    res.send(`<pre>${stdout}</pre>`);
  });
});

app.get('/users', (req, res) => {
  db.query('SELECT id, username FROM users', (err, results) => {
    if (err) return res.status(500).send('DB error');
    res.json(results);
  });
});

app.listen(port, () => {
  console.log(`Vulnerable app listening on port ${port}`);
});