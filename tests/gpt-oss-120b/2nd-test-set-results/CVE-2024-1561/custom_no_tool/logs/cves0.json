{
  "version": "15.0.6",
  "vulnerabilities": [
    {
      "id": "40ef90809d647893e5a82acb4d8ad003f91aa5d73d82badbc40c347c3d3a09f9",
      "category": "container_scanning",
      "message": "GHSA-j2jg-fq62-7c3h on gradio@4.12.0",
      "description": "Gradio's Access Control List (ACL) for file paths can be bypassed by altering the letter case of a blocked file or directory path. This vulnerability arises due to the lack of case normalization in the file path validation logic. On case-insensitive file systems, such as those used by Windows and macOS, this flaw enables attackers to circumvent security restrictions and access sensitive files that should be protected.\n\nThis issue can lead to unauthorized data access, exposing sensitive information and undermining the integrity of Gradio's security model. Given Gradio's popularity for building web applications, particularly in machine learning and AI, this vulnerability may pose a substantial threat if exploited in production environments.",
      "cve": "GHSA-j2jg-fq62-7c3h",
      "severity": "Unknown",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 5.11.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-j2jg-fq62-7c3h",
          "value": "GHSA-j2jg-fq62-7c3h",
          "url": "https://scout.docker.com/v/GHSA-j2jg-fq62-7c3h?s=gitlab&n=gradio&t=pypi&vr=%3C5.11.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-j2jg-fq62-7c3h?s=gitlab&n=gradio&t=pypi&vr=%3C5.11.0"
        }
      ]
    },
    {
      "id": "7bc3c0554713974464cc652e56c766fb2d799974afc4cd97bb1993c8e3645bcf",
      "category": "container_scanning",
      "message": "CVE-2005-2541 on debian/tar@1.35+dfsg-3.1",
      "description": "Tar 1.15.1 does not properly warn the user when extracting setuid or setgid files, which may allow local users or remote attackers to gain privileges.\n\n---\nThis is intended behaviour, after all tar is an archiving tool and you\nneed to give -p as a command line flag\n- tar <unfixed> (bug https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=328228; unimportant)",
      "cve": "CVE-2005-2541",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/tar@1.35%2Bdfsg-3.1?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "1.35+dfsg-3.1"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2005-2541",
          "value": "CVE-2005-2541",
          "url": "https://scout.docker.com/v/CVE-2005-2541?s=debian&n=tar&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D1.35%2Bdfsg-3.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2005-2541?s=debian&n=tar&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D1.35%2Bdfsg-3.1"
        }
      ]
    },
    {
      "id": "477dfe2fd942c106affe93660a8799d8d7deb2df4dd10f6fc012698e44ec894a",
      "category": "container_scanning",
      "message": "CVE-2007-5686 on debian/shadow@1:4.17.4-2",
      "description": "initscripts in rPath Linux 1 sets insecure permissions for the /var/log/btmp file, which allows local users to obtain sensitive information regarding authentication attempts.  NOTE: because sshd detects the insecure permissions and does not log certain events, this also prevents sshd from logging failed authentication attempts by remote attackers.\n\n---\n- shadow <unfixed> (unimportant)\nSee #290803, on Debian LOG_UNKFAIL_ENAB in login.defs is set to no so\nunknown usernames are not recorded on login failures",
      "cve": "CVE-2007-5686",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/shadow@1%3A4.17.4-2?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "1:4.17.4-2"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2007-5686",
          "value": "CVE-2007-5686",
          "url": "https://scout.docker.com/v/CVE-2007-5686?s=debian&n=shadow&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D1%3A4.17.4-2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2007-5686?s=debian&n=shadow&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D1%3A4.17.4-2"
        }
      ]
    },
    {
      "id": "bf1702ccc485752b28d0286515f37acc69737044b48327f2512fd502fec57685",
      "category": "container_scanning",
      "message": "CVE-2010-0928 on debian/openssl@3.5.1-1+deb13u1",
      "description": "OpenSSL 0.9.8i on the Gaisler Research LEON3 SoC on the Xilinx Virtex-II Pro FPGA uses a Fixed Width Exponentiation (FWE) algorithm for certain signature calculations, and does not verify the signature before providing it to a caller, which makes it easier for physically proximate attackers to determine the private key via a modified supply voltage for the microprocessor, related to a \"fault-based attack.\"\n\n---\nhttp://www.eecs.umich.edu/~valeria/research/publications/DATE10RSA.pdf\nhttps://github.com/openssl/openssl/discussions/24540\nFault injection based attacks are not within OpenSSLs threat model according\nto the security policy: https://www.openssl.org/policies/general/security-policy.html",
      "cve": "CVE-2010-0928",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/openssl@3.5.1-1%2Bdeb13u1?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "3.5.1-1+deb13u1"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2010-0928",
          "value": "CVE-2010-0928",
          "url": "https://scout.docker.com/v/CVE-2010-0928?s=debian&n=openssl&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D3.2.1-3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2010-0928?s=debian&n=openssl&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D3.2.1-3"
        }
      ]
    },
    {
      "id": "546e424966cb4404b271707714990282761fd71d8227ba4396991983aa84416f",
      "category": "container_scanning",
      "message": "CVE-2010-4756 on debian/glibc@2.41-12",
      "description": "The glob implementation in the GNU C Library (aka glibc or libc6) allows remote authenticated users to cause a denial of service (CPU and memory consumption) via crafted glob expressions that do not match any pathnames, as demonstrated by glob expressions in STAT commands to an FTP daemon, a different vulnerability than CVE-2010-2632.\n\n---\n- glibc <removed> (unimportant)\n- eglibc <unfixed> (unimportant)\nThat's standard POSIX behaviour implemented by (e)glibc. Applications using\nglob need to impose limits for themselves",
      "cve": "CVE-2010-4756",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/glibc@2.41-12?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "2.41-12"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2010-4756",
          "value": "CVE-2010-4756",
          "url": "https://scout.docker.com/v/CVE-2010-4756?s=debian&n=glibc&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D2.41-12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2010-4756?s=debian&n=glibc&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D2.41-12"
        }
      ]
    },
    {
      "id": "71d9a8edc9bacda13ab424364df04142766a4c9905e5354bee14423d4cf9e06a",
      "category": "container_scanning",
      "message": "CVE-2011-3374 on debian/apt@3.0.3",
      "description": "It was found that apt-key in apt, all versions, do not correctly validate gpg keys with the master keyring, leading to a potential man-in-the-middle attack.\n\n---\n- apt <unfixed> (unimportant; bug https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=642480)\nNot exploitable in Debian, since no keyring URI is defined",
      "cve": "CVE-2011-3374",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/apt@3.0.3?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "3.0.3"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2011-3374",
          "value": "CVE-2011-3374",
          "url": "https://scout.docker.com/v/CVE-2011-3374?s=debian&n=apt&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D3.0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2011-3374?s=debian&n=apt&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D3.0.3"
        }
      ]
    },
    {
      "id": "586adb3dde9b0a3fe1b7d248f974f61396dbd59bdb024e9a7dbdab61cce45d05",
      "category": "container_scanning",
      "message": "CVE-2011-4116 on debian/perl@5.40.1-6",
      "description": "_is_safe in the File::Temp module for Perl does not properly handle symlinks.\n\n---\n- perl <unfixed> (unimportant; bug https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=776268)\nhttp://thread.gmane.org/gmane.comp.security.oss.general/6174/focus=6177\nhttps://github.com/Perl-Toolchain-Gang/File-Temp/issues/14",
      "cve": "CVE-2011-4116",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/perl@5.40.1-6?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "5.40.1-6"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2011-4116",
          "value": "CVE-2011-4116",
          "url": "https://scout.docker.com/v/CVE-2011-4116?s=debian&n=perl&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D5.40.1-6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2011-4116?s=debian&n=perl&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D5.40.1-6"
        }
      ]
    },
    {
      "id": "79cdf1ac50bd3273727ffede0159c296aa77d808f19b739d7ea8b5b522db5dd4",
      "category": "container_scanning",
      "message": "CVE-2013-4392 on debian/systemd@257.8-1~deb13u2",
      "description": "systemd, when updating file permissions, allows local users to change the permissions and SELinux security contexts for arbitrary files via a symlink attack on unspecified files.\n\n---\n- systemd <unfixed> (unimportant; bug https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=725357)\n[wheezy] - systemd <not-affected> (/etc/tmpfiles.d not supported in Wheezy)\nhttps://bugzilla.redhat.com/show_bug.cgi?id=859060\nonly relevant to systems running systemd along with selinux",
      "cve": "CVE-2013-4392",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/systemd@257.8-1~deb13u2?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "257.8-1~deb13u2"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2013-4392",
          "value": "CVE-2013-4392",
          "url": "https://scout.docker.com/v/CVE-2013-4392?s=debian&n=systemd&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D257.8-1%7Edeb13u1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2013-4392?s=debian&n=systemd&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D257.8-1%7Edeb13u1"
        }
      ]
    },
    {
      "id": "7556d268935ce923c02edf29690c971f708621ef4f3935a7bd5aa244f1f1da60",
      "category": "container_scanning",
      "message": "CVE-2017-18018 on debian/coreutils@9.7-3",
      "description": "In GNU Coreutils through 8.29, chown-core.c in chown and chgrp does not prevent replacement of a plain file with a symlink during use of the POSIX \"-R -L\" options, which allows local users to modify the ownership of arbitrary files by leveraging a race condition.\n\n---\n- coreutils <unfixed> (unimportant)\nhttp://lists.gnu.org/archive/html/coreutils/2017-12/msg00045.html\nhttps://www.openwall.com/lists/oss-security/2018/01/04/3\nDocumentation patches proposed:\nhttps://lists.gnu.org/archive/html/coreutils/2017-12/msg00072.html\nhttps://lists.gnu.org/archive/html/coreutils/2017-12/msg00073.html\nNeutralised by kernel hardening",
      "cve": "CVE-2017-18018",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/coreutils@9.7-3?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "9.7-3"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2017-18018",
          "value": "CVE-2017-18018",
          "url": "https://scout.docker.com/v/CVE-2017-18018?s=debian&n=coreutils&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D9.7-3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2017-18018?s=debian&n=coreutils&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D9.7-3"
        }
      ]
    },
    {
      "id": "8d1af045dcfad2bfba7275523e3da2ecfaf567ebbfc8f1bb4209ba5d617a5248",
      "category": "container_scanning",
      "message": "CVE-2018-20796 on debian/glibc@2.41-12",
      "description": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(\\227|)(\\\\1\\\\1|t1|\\\\\\2537)+' in grep.\n\n---\n- glibc <unfixed> (unimportant)\n- eglibc <removed> (unimportant)\nhttps://debbugs.gnu.org/cgi/bugreport.cgi?bug=34141\nhttps://lists.gnu.org/archive/html/bug-gnulib/2019-01/msg00108.html\nNo treated as vulnerability: https://sourceware.org/glibc/wiki/Security%20Exceptions",
      "cve": "CVE-2018-20796",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/glibc@2.41-12?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "2.41-12"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2018-20796",
          "value": "CVE-2018-20796",
          "url": "https://scout.docker.com/v/CVE-2018-20796?s=debian&n=glibc&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D2.41-12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2018-20796?s=debian&n=glibc&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D2.41-12"
        }
      ]
    },
    {
      "id": "3c0097819c4b42399b949b0e8ccc805118a189d4e697e028738fca7ddc3f31ad",
      "category": "container_scanning",
      "message": "CVE-2019-1010022 on debian/glibc@2.41-12",
      "description": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass stack guard protection. The component is: nptl. The attack vector is: Exploit stack buffer overflow vulnerability and use this bypass vulnerability to bypass stack guard. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.\n\n---\n- glibc <unfixed> (unimportant)\nNot treated as a security issue by upstream\nhttps://sourceware.org/bugzilla/show_bug.cgi?id=22850",
      "cve": "CVE-2019-1010022",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/glibc@2.41-12?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "2.41-12"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-1010022",
          "value": "CVE-2019-1010022",
          "url": "https://scout.docker.com/v/CVE-2019-1010022?s=debian&n=glibc&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D2.41-12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-1010022?s=debian&n=glibc&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D2.41-12"
        }
      ]
    },
    {
      "id": "7632c671cf4bcb2d12d579faf64f118364cbf5595a336172cda0b6937fd2c469",
      "category": "container_scanning",
      "message": "CVE-2019-1010023 on debian/glibc@2.41-12",
      "description": "GNU Libc current is affected by: Re-mapping current loaded library with malicious ELF file. The impact is: In worst case attacker may evaluate privileges. The component is: libld. The attack vector is: Attacker sends 2 ELF files to victim and asks to run ldd on it. ldd execute code. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.\n\n---\n- glibc <unfixed> (unimportant)\nNot treated as a security issue by upstream\nhttps://sourceware.org/bugzilla/show_bug.cgi?id=22851",
      "cve": "CVE-2019-1010023",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/glibc@2.41-12?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "2.41-12"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-1010023",
          "value": "CVE-2019-1010023",
          "url": "https://scout.docker.com/v/CVE-2019-1010023?s=debian&n=glibc&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D2.41-12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-1010023?s=debian&n=glibc&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D2.41-12"
        }
      ]
    },
    {
      "id": "68900d7a26d06dd1b088707d8d7458e2dcd02741dcd5c6feebe9b177e625db55",
      "category": "container_scanning",
      "message": "CVE-2019-1010024 on debian/glibc@2.41-12",
      "description": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass ASLR using cache of thread stack and heap. The component is: glibc. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.\n\n---\n- glibc <unfixed> (unimportant)\nNot treated as a security issue by upstream\nhttps://sourceware.org/bugzilla/show_bug.cgi?id=22852",
      "cve": "CVE-2019-1010024",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/glibc@2.41-12?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "2.41-12"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-1010024",
          "value": "CVE-2019-1010024",
          "url": "https://scout.docker.com/v/CVE-2019-1010024?s=debian&n=glibc&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D2.41-12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-1010024?s=debian&n=glibc&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D2.41-12"
        }
      ]
    },
    {
      "id": "839cbf1e4ceceb86c8cefc395f345819a394c628d567d098c204e528908cc932",
      "category": "container_scanning",
      "message": "CVE-2019-1010025 on debian/glibc@2.41-12",
      "description": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may guess the heap addresses of pthread_created thread. The component is: glibc. NOTE: the vendor's position is \"ASLR bypass itself is not a vulnerability.\n\n---\n- glibc <unfixed> (unimportant)\nNot treated as a security issue by upstream\nhttps://sourceware.org/bugzilla/show_bug.cgi?id=22853",
      "cve": "CVE-2019-1010025",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/glibc@2.41-12?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "2.41-12"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-1010025",
          "value": "CVE-2019-1010025",
          "url": "https://scout.docker.com/v/CVE-2019-1010025?s=debian&n=glibc&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D2.41-12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-1010025?s=debian&n=glibc&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D2.41-12"
        }
      ]
    },
    {
      "id": "870e1484799f459deaa735baab37772981e7b7600358b80986a4ebf1d6508497",
      "category": "container_scanning",
      "message": "CVE-2019-9192 on debian/glibc@2.41-12",
      "description": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(|)(\\\\1\\\\1)*' in grep, a different issue than CVE-2018-20796. NOTE: the software maintainer disputes that this is a vulnerability because the behavior occurs only with a crafted pattern\n\n---\n- glibc <unfixed> (unimportant)\n- eglibc <removed> (unimportant)\nhttps://sourceware.org/bugzilla/show_bug.cgi?id=24269",
      "cve": "CVE-2019-9192",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/glibc@2.41-12?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "2.41-12"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-9192",
          "value": "CVE-2019-9192",
          "url": "https://scout.docker.com/v/CVE-2019-9192?s=debian&n=glibc&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D2.41-12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-9192?s=debian&n=glibc&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D2.41-12"
        }
      ]
    },
    {
      "id": "aae9b780e41c03779c012b5acc0b01d68080554c2c784da72ed31e87752c1036",
      "category": "container_scanning",
      "message": "CVE-2021-45346 on debian/sqlite3@3.46.1-7",
      "description": "A Memory Leak vulnerability exists in SQLite Project SQLite3 3.35.1 and 3.37.0 via maliciously crafted SQL Queries (made via editing the Database File), it is possible to query a record, and leak subsequent bytes of memory that extend beyond the record, which could let a malicious user obtain sensitive information. NOTE: The developer disputes this as a vulnerability stating that If you give SQLite a corrupted database file and submit a query against the database, it might read parts of the database that you did not intend or expect.\n\n---\n- sqlite3 <unfixed> (unimportant; bug https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1005974)\n- sqlite <removed> (unimportant)\nhttps://github.com/guyinatuxedo/sqlite3_record_leaking\nhttps://bugzilla.redhat.com/show_bug.cgi?id=2054793\nhttps://sqlite.org/forum/forumpost/056d557c2f8c452ed5bb9c215414c802b215ce437be82be047726e521342161e\nNegligible security impact",
      "cve": "CVE-2021-45346",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/sqlite3@3.46.1-7?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "3.46.1-7"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-45346",
          "value": "CVE-2021-45346",
          "url": "https://scout.docker.com/v/CVE-2021-45346?s=debian&n=sqlite3&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D3.46.1-7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-45346?s=debian&n=sqlite3&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D3.46.1-7"
        }
      ]
    },
    {
      "id": "0cb1f888c35d9f7580e5fd3a7be464f133c6c94799cec431c56d81637d6c6eee",
      "category": "container_scanning",
      "message": "CVE-2022-0563 on debian/util-linux@2.41-5",
      "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.\n\n---\n- util-linux <unfixed> (unimportant)\nhttps://bugzilla.redhat.com/show_bug.cgi?id=2053151\nhttps://lore.kernel.org/util-linux/20220214110609.msiwlm457ngoic6w@ws.net.home/T/#u\nhttps://github.com/util-linux/util-linux/commit/faa5a3a83ad0cb5e2c303edbfd8cd823c9d94c17\nutil-linux in Debian does build with readline support but chfn and chsh are provided\nby src:shadow and util-linux is configured with --disable-chfn-chsh",
      "cve": "CVE-2022-0563",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/util-linux@2.41-5?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "2.41-5"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-0563",
          "value": "CVE-2022-0563",
          "url": "https://scout.docker.com/v/CVE-2022-0563?s=debian&n=util-linux&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D2.41-5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-0563?s=debian&n=util-linux&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D2.41-5"
        }
      ]
    },
    {
      "id": "65bfa594f256ac1abeefdc90f0c56b1311710815ce885e9f950f1d3117d904cf",
      "category": "container_scanning",
      "message": "CVE-2023-31437 on debian/systemd@257.8-1~deb13u2",
      "description": "An issue was discovered in systemd 253. An attacker can modify a sealed log file such that, in some views, not all existing and sealed log messages are displayed. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"\n\n---\n- systemd <unfixed> (unimportant)\nDisputed by upstream\nhttps://github.com/kastel-security/Journald/blob/main/journald-publication.pdf",
      "cve": "CVE-2023-31437",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/systemd@257.8-1~deb13u2?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "257.8-1~deb13u2"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-31437",
          "value": "CVE-2023-31437",
          "url": "https://scout.docker.com/v/CVE-2023-31437?s=debian&n=systemd&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D257.8-1%7Edeb13u1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-31437?s=debian&n=systemd&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D257.8-1%7Edeb13u1"
        }
      ]
    },
    {
      "id": "a7b243d6ee21e05c79a81940cb46a4480abcdbdfadf092453fce4995470b5abf",
      "category": "container_scanning",
      "message": "CVE-2023-31438 on debian/systemd@257.8-1~deb13u2",
      "description": "An issue was discovered in systemd 253. An attacker can truncate a sealed log file and then resume log sealing such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"\n\n---\n- systemd <unfixed> (unimportant)\nDisputed by upstream\nhttps://github.com/kastel-security/Journald/blob/main/journald-publication.pdf",
      "cve": "CVE-2023-31438",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/systemd@257.8-1~deb13u2?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "257.8-1~deb13u2"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-31438",
          "value": "CVE-2023-31438",
          "url": "https://scout.docker.com/v/CVE-2023-31438?s=debian&n=systemd&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D257.8-1%7Edeb13u1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-31438?s=debian&n=systemd&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D257.8-1%7Edeb13u1"
        }
      ]
    },
    {
      "id": "b2aabf8043f6f91c683120f74a345a9556d36cc135b9c449e5ad9a24e11fcc8b",
      "category": "container_scanning",
      "message": "CVE-2023-31439 on debian/systemd@257.8-1~deb13u2",
      "description": "An issue was discovered in systemd 253. An attacker can modify the contents of past events in a sealed log file and then adjust the file such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"\n\n---\n- systemd <unfixed> (unimportant)\nDisputed by upstream\nhttps://github.com/kastel-security/Journald/blob/main/journald-publication.pdf",
      "cve": "CVE-2023-31439",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/systemd@257.8-1~deb13u2?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "257.8-1~deb13u2"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-31439",
          "value": "CVE-2023-31439",
          "url": "https://scout.docker.com/v/CVE-2023-31439?s=debian&n=systemd&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D257.8-1%7Edeb13u1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-31439?s=debian&n=systemd&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D257.8-1%7Edeb13u1"
        }
      ]
    },
    {
      "id": "c6835a3da4b9a4bf4a09df72fb07c3b28a342d4626cd34e646d932000e1e63ad",
      "category": "container_scanning",
      "message": "CVE-2025-5278 on debian/coreutils@9.7-3",
      "description": "A flaw was found in GNU Coreutils. The sort utility's begfield() function is vulnerable to a heap buffer under-read. The program may access memory outside the allocated buffer if a user runs a crafted command using the traditional key format. A malicious input could lead to a crash or leak sensitive data.\n\n---\n- coreutils <unfixed> (bug https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1106733; unimportant)\nhttps://bugzilla.redhat.com/show_bug.cgi?id=2368764\nhttps://lists.gnu.org/archive/html/bug-coreutils/2025-05/msg00036.html\nhttps://lists.gnu.org/archive/html/bug-coreutils/2025-05/msg00040.html\nhttps://cgit.git.savannah.gnu.org/cgit/coreutils.git/commit/?id=8c9602e3a145e9596dc1a63c6ed67865814b6633\nhttps://www.openwall.com/lists/oss-security/2025/05/27/2\nhttps://debbugs.gnu.org/cgi/bugreport.cgi?bug=78507\nCrash in CLI tool, no security impact",
      "cve": "CVE-2025-5278",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/coreutils@9.7-3?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "9.7-3"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-5278",
          "value": "CVE-2025-5278",
          "url": "https://scout.docker.com/v/CVE-2025-5278?s=debian&n=coreutils&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D9.7-3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-5278?s=debian&n=coreutils&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D9.7-3"
        }
      ]
    },
    {
      "id": "96d193a2601f76a19affa45176e6a08860a8363307c68309148c028256ec0082",
      "category": "container_scanning",
      "message": "CVE-2024-47168 on gradio@4.12.0",
      "description": "### Impact\nWhat kind of vulnerability is it? Who is impacted?\n\nThis vulnerability involves data exposure due to the enable_monitoring flag not properly disabling monitoring when set to False. Even when monitoring is supposedly disabled, an attacker or unauthorized user can still access the monitoring dashboard by directly requesting the /monitoring endpoint. This means that sensitive application analytics may still be exposed, particularly in environments where monitoring is expected to be disabled. Users who set enable_monitoring=False to prevent unauthorized access to monitoring data are impacted.\n\n### Patches\nYes, please upgrade to gradio>=4.44 to address this issue.\n\n",
      "cve": "CVE-2024-47168",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 4.44.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47168",
          "value": "CVE-2024-47168",
          "url": "https://scout.docker.com/v/CVE-2024-47168?s=github&n=gradio&t=pypi&vr=%3C4.44.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47168?s=github&n=gradio&t=pypi&vr=%3C4.44.0"
        }
      ]
    },
    {
      "id": "0c9c633874ccd230125374057737155f054521c476269d2f660220880147f950",
      "category": "container_scanning",
      "message": "GHSA-26jh-r8g2-6fpr on gradio@4.12.0",
      "description": "### Impact\n**What kind of vulnerability is it? Who is impacted?**\n\nThis vulnerability is a **data validation issue** in the Gradio `Dropdown` component's pre-processing step. Even if the `allow_custom_value` parameter is set to `False`, attackers can bypass this restriction by sending custom requests with arbitrary values, effectively breaking the developer’s intended input constraints. While this alone is not a severe vulnerability, it can lead to more critical security issues, particularly when paired with other vulnerabilities like file downloads from the user's machine.\n\n### Patches\nYes, this issue is addressed in `gradio>=5.0`. Please upgrade to the latest version to resolve the problem.\n\n### Workarounds  \n**Is there a way for users to fix or remediate the vulnerability without upgrading?**\n\nTo mitigate the issue without upgrading, developers can add manual validation in their prediction function to check the received values against the allowed dropdown values before processing them.",
      "cve": "GHSA-26jh-r8g2-6fpr",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 5.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-26jh-r8g2-6fpr",
          "value": "GHSA-26jh-r8g2-6fpr",
          "url": "https://scout.docker.com/v/GHSA-26jh-r8g2-6fpr?s=github&n=gradio&t=pypi&vr=%3C5.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-26jh-r8g2-6fpr?s=github&n=gradio&t=pypi&vr=%3C5.0.0"
        }
      ]
    },
    {
      "id": "78589da1cd8a32521f0034314d96d6ff6e53ee121f8a7f240fd15e181db207ed",
      "category": "container_scanning",
      "message": "CVE-2025-45582 on debian/tar@1.35+dfsg-3.1",
      "description": "GNU Tar through 1.35 allows file overwrite via directory traversal in crafted TAR archives, with a certain two-step process. First, the victim must extract an archive that contains a ../ symlink to a critical directory. Second, the victim must extract an archive that contains a critical file, specified via a relative pathname that begins with the symlink name and ends with that critical file's name. Here, the extraction follows the symlink and overwrites the critical file. This bypasses the protection mechanism of \"Member name contains '..'\" that would occur for a single TAR archive that attempted to specify the critical file via a ../ approach. For example, the first archive can contain \"x -> ../../../../../home/victim/.ssh\" and the second archive can contain x/authorized_keys. This can affect server applications that automatically extract any number of user-supplied TAR archives, and were relying on the blocking of traversal. This can also affect software installation processes in which \"tar xf\" is run more than once (e.g., when installing a package can automatically install two dependencies that are set up as untrusted tarballs instead of official packages).\n\n---\nDisputed tar issue, works as documented per upstream:\nhttps://lists.gnu.org/archive/html/bug-tar/2025-08/msg00012.html\nhttps://github.com/i900008/vulndb/blob/main/Gnu_tar_vuln.md",
      "cve": "CVE-2025-45582",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/debian/tar@1.35%2Bdfsg-3.1?os_distro=trixie&os_name=debian&os_version=13"
          },
          "version": "1.35+dfsg-3.1"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-45582",
          "value": "CVE-2025-45582",
          "url": "https://scout.docker.com/v/CVE-2025-45582?s=debian&n=tar&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D1.35%2Bdfsg-3.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-45582?s=debian&n=tar&ns=debian&t=deb&osn=debian&osv=13&vr=%3E%3D1.35%2Bdfsg-3.1"
        }
      ]
    },
    {
      "id": "e4b21467e87cb4722cdfc976979347bf2867c742f8f5e0e4c2c74e21f14f4482",
      "category": "container_scanning",
      "message": "CVE-2024-1727 on gradio@4.12.0",
      "description": "### Impact\nThis CVE covers the ability of 3rd party websites to access routes and upload files to users running Gradio applications locally.  For example, the malicious owners of [www.dontvisitme.com](http://www.dontvisitme.com/) could put a script on their website that uploads a large file to http://localhost:7860/upload and anyone who visits their website and has a Gradio app will now have that large file uploaded on their computer\n\n### Patches\nYes, the problem has been patched in Gradio version 4.19.2 or higher. We have no knowledge of this exploit being used against users of Gradio applications, but we encourage all users to upgrade to Gradio 4.19.2 or higher.\n\nFixed in: https://github.com/gradio-app/gradio/commit/84802ee6a4806c25287344dce581f9548a99834a\nCVE: https://nvd.nist.gov/vuln/detail/CVE-2024-1727",
      "cve": "CVE-2024-1727",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 4.19.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-1727",
          "value": "CVE-2024-1727",
          "url": "https://scout.docker.com/v/CVE-2024-1727?s=github&n=gradio&t=pypi&vr=%3C4.19.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-1727?s=github&n=gradio&t=pypi&vr=%3C4.19.2"
        }
      ]
    },
    {
      "id": "354556d23aebd3d65bccf29a637a72ea8a2564139f41c879625a3266730134f4",
      "category": "container_scanning",
      "message": "CVE-2024-47872 on gradio@4.12.0",
      "description": "### Impact  \n**What kind of vulnerability is it? Who is impacted?**\n\nThis vulnerability involves **Cross-Site Scripting (XSS)** on any Gradio server that allows file uploads. Authenticated users can upload files such as HTML, JavaScript, or SVG files containing malicious scripts. When other users download or view these files, the scripts will execute in their browser, allowing attackers to perform unauthorized actions or steal sensitive information from their sessions. This impacts any Gradio server that allows file uploads, particularly those using components that process or display user-uploaded files.\n\n### Patches  \nYes, please upgrade to `gradio>=5` to address this issue.\n\n### Workarounds  \n**Is there a way for users to fix or remediate the vulnerability without upgrading?**\n\nAs a workaround, users can restrict the types of files that can be uploaded to the Gradio server by limiting uploads to non-executable file types such as images or text. Additionally, developers can implement server-side validation to sanitize uploaded files, ensuring that HTML, JavaScript, and SVG files are properly handled or rejected before being stored or displayed to users.",
      "cve": "CVE-2024-47872",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 5.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47872",
          "value": "CVE-2024-47872",
          "url": "https://scout.docker.com/v/CVE-2024-47872?s=github&n=gradio&t=pypi&vr=%3C5.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47872?s=github&n=gradio&t=pypi&vr=%3C5.0.0"
        }
      ]
    },
    {
      "id": "242ec363e5ef410588f359ddb2dd73b8ae2783481adc7349489be390a7be52c9",
      "category": "container_scanning",
      "message": "CVE-2024-12217 on gradio@4.12.0",
      "description": "A vulnerability in the gradio-app/gradio repository, version git 67e4044, allows for path traversal on Windows OS. The implementation of the blocked_path functionality, which is intended to disallow users from reading certain files, is flawed. Specifically, while the application correctly blocks access to paths like 'C:/tmp/secret.txt', it fails to block access when using NTFS Alternate Data Streams (ADS) syntax, such as 'C:/tmp/secret.txt::$DATA'. This flaw can lead to unauthorized reading of blocked file paths.",
      "cve": "CVE-2024-12217",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-12217",
          "value": "CVE-2024-12217",
          "url": "https://scout.docker.com/v/CVE-2024-12217?s=github&n=gradio&t=pypi&vr=%3C%3D5.0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-12217?s=github&n=gradio&t=pypi&vr=%3C%3D5.0.1"
        }
      ]
    },
    {
      "id": "c19435acd2ac144a66149573f09530b7f134f02ab8c7eaa11f47a6426ef1992e",
      "category": "container_scanning",
      "message": "CVE-2024-47165 on gradio@4.12.0",
      "description": "### Impact\n**What kind of vulnerability is it? Who is impacted?**\n\nThis vulnerability relates to **CORS origin validation accepting a null origin**. When a Gradio server is deployed locally, the `localhost_aliases` variable includes \"null\" as a valid origin. This allows attackers to make unauthorized requests from sandboxed iframes or other sources with a null origin, potentially leading to data theft, such as user authentication tokens or uploaded files. This impacts users running Gradio locally, especially those using basic authentication.\n\n### Patches\nYes, please upgrade to `gradio>=5.0` to address this issue.\n\n### Workarounds\n**Is there a way for users to fix or remediate the vulnerability without upgrading?**\n\nAs a workaround, users can manually modify the `localhost_aliases` list in their local Gradio deployment to exclude \"null\" as a valid origin. By removing this value, the Gradio server will no longer accept requests from sandboxed iframes or sources with a null origin, mitigating the potential for exploitation.",
      "cve": "CVE-2024-47165",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 5.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47165",
          "value": "CVE-2024-47165",
          "url": "https://scout.docker.com/v/CVE-2024-47165?s=github&n=gradio&t=pypi&vr=%3C5.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47165?s=github&n=gradio&t=pypi&vr=%3C5.0.0"
        }
      ]
    },
    {
      "id": "bdcfad17944335808fb5b14bd4582d062d226c53db87636aa6dd3e9a2b9a45f3",
      "category": "container_scanning",
      "message": "CVE-2025-48889 on gradio@4.12.0",
      "description": "An arbitrary file copy vulnerability in Gradio's flagging feature allows unauthenticated attackers to copy any readable file from the server's filesystem. While attackers can't read these copied files, they can cause DoS by copying large files (like /dev/urandom) to fill disk space.\n\n### Description\nThe flagging component doesn't properly validate file paths before copying files. Attackers can send specially crafted requests to the `/gradio_api/run/predict` endpoint to trigger these file copies.\n\n**Source**: User-controlled `path` parameter in the flagging functionality JSON payload  \n**Sink**: `shutil.copy` operation in `FileData._copy_to_dir()` method\n\nThe vulnerable code flow:\n1. A JSON payload is sent to the `/gradio_api/run/predict` endpoint\n2. The `path` field within `FileData` object can reference any file on the system\n3. When processing this request, the `Component.flag()` method creates a `GradioDataModel` object\n4. The `FileData._copy_to_dir()` method uses this path without proper validation:\n\n```python\ndef _copy_to_dir(self, dir: str) -> FileData:\n    pathlib.Path(dir).mkdir(exist_ok=True)\n    new_obj = dict(self)\n\n    if not self.path:\n        raise ValueError(\"Source file path is not set\")\n    new_name = shutil.copy(self.path, dir)  # vulnerable sink\n    new_obj[\"path\"] = new_name\n    return self.__class__(**new_obj)\n```\n5. The lack of validation allows copying any file the Gradio process can read\n\n### PoC\nThe following script demonstrates the vulnerability by copying `/etc/passwd` from the server to Gradio's flagged directory:\n\n\nSetup a Gradio app:\n\n```python\nimport gradio as gr\n\ndef image_classifier(inp):\n    return {'cat': 0.2, 'dog': 0.8}\n\ntest = gr.Interface(fn=image_classifier, inputs=\"image\", outputs=\"label\")\n\ntest.launch(share=True)\n```\n\nRun the PoC:\n\n```python\nimport requests\n\nurl = \"https://[your-gradio-app-url]/gradio_api/run/predict\"  \nheaders = {\n    \"Content-Type\": \"application/json\",  \n    \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36\" \n}\n\npayload = {\n    \"data\": [\n        {\n            \"path\": \"/etc/passwd\",  \n            \"url\": \"[your-gradio-app-url]\",\n            \"orig_name\": \"network_config\", \n            \"size\": 5000,  \n            \"mime_type\": \"text/plain\", \n            \"meta\": {\n                \"_type\": \"gradio.FileData\"  \n            }\n        },\n        {}  \n    ],\n    \"event_data\": None,\n    \"fn_index\": 4, \n    \"trigger_id\": 11, \n    \"session_hash\": \"test123\"  \n}\n\nresponse = requests.post(url, headers=headers, json=payload)\nprint(f\"Status Code: {response.status_code}\")\nprint(f\"Response Body: {response.text}\")\n```",
      "cve": "CVE-2025-48889",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 5.31.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-48889",
          "value": "CVE-2025-48889",
          "url": "https://scout.docker.com/v/CVE-2025-48889?s=github&n=gradio&t=pypi&vr=%3C5.31.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-48889?s=github&n=gradio&t=pypi&vr=%3C5.31.0"
        }
      ]
    },
    {
      "id": "4cb4279d3c2808b28aa2427d94122194171d7f038479bf1fa73f28530323280c",
      "category": "container_scanning",
      "message": "CVE-2024-4940 on gradio@4.12.0",
      "description": "An open redirect vulnerability exists in the gradio-app/gradio, affecting the latest version. The vulnerability allows an attacker to redirect users to arbitrary websites, which can be exploited for phishing attacks, Cross-site Scripting (XSS), Server-Side Request Forgery (SSRF), amongst others. This issue is due to improper validation of user-supplied input in the handling of URLs. Attackers can exploit this vulnerability by crafting a malicious URL that, when processed by the application, redirects the user to an attacker-controlled web page.",
      "cve": "CVE-2024-4940",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-4940",
          "value": "CVE-2024-4940",
          "url": "https://scout.docker.com/v/CVE-2024-4940?s=github&n=gradio&t=pypi&vr=%3C%3D4.36.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-4940?s=github&n=gradio&t=pypi&vr=%3C%3D4.36.1"
        }
      ]
    },
    {
      "id": "0a5eb4fc602dc243a4d88e3842e39d45521311ba965394d111d8db03e8a216e8",
      "category": "container_scanning",
      "message": "CVE-2024-8021 on gradio@4.12.0",
      "description": "An open redirect vulnerability exists in the latest version of gradio-app/gradio. The vulnerability allows an attacker to redirect users to a malicious website by URL encoding. This can be exploited by sending a crafted request to the application, which results in a 302 redirect to an attacker-controlled site.",
      "cve": "CVE-2024-8021",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-8021",
          "value": "CVE-2024-8021",
          "url": "https://scout.docker.com/v/CVE-2024-8021?s=github&n=gradio&t=pypi&vr=%3C%3D4.37.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-8021?s=github&n=gradio&t=pypi&vr=%3C%3D4.37.2"
        }
      ]
    },
    {
      "id": "1983666854b275d6118597b605270877963f64566d1ccb807e5accec9baeb2fd",
      "category": "container_scanning",
      "message": "CVE-2024-48052 on gradio@4.12.0",
      "description": "In gradio <=4.42.0, the gr.DownloadButton function has a hidden server-side request forgery (SSRF) vulnerability. The reason is that within the save_url_to_cache function, there are no restrictions on the URL, which allows access to local target resources. This can lead to the download of local resources and sensitive information.",
      "cve": "CVE-2024-48052",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-48052",
          "value": "CVE-2024-48052",
          "url": "https://scout.docker.com/v/CVE-2024-48052?s=github&n=gradio&t=pypi&vr=%3C%3D4.42.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-48052?s=github&n=gradio&t=pypi&vr=%3C%3D4.42.0"
        }
      ]
    },
    {
      "id": "bdcfeb13b7f214b73b276c5a24c766bd4c64ef4b1217ee792c8998114dff7b6b",
      "category": "container_scanning",
      "message": "CVE-2024-1729 on gradio@4.12.0",
      "description": "### Impact\nThis security policy is with regards to a timing attack that allows users of Gradio apps to potentially guess the password of password-protected Gradio apps. This relies on the fact that string comparisons in Python terminate early, as soon as there is a string mismatch. Because Gradio apps are, by default, not rate-limited, a user could brute-force millions of guesses to figure out the correct username and password.\n\n### Patches\nYes, the problem has been patched in Gradio version 4.19.2 or higher. We have no knowledge of this exploit being used against users of Gradio applications, but we encourage all users to upgrade to Gradio 4.19.2 or higher.\n\nFixed in: https://github.com/gradio-app/gradio/commit/e329f1fd38935213fe0e73962e8cbd5d3af6e87b",
      "cve": "CVE-2024-1729",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 4.19.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-1729",
          "value": "CVE-2024-1729",
          "url": "https://scout.docker.com/v/CVE-2024-1729?s=github&n=gradio&t=pypi&vr=%3C4.19.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-1729?s=github&n=gradio&t=pypi&vr=%3C4.19.2"
        }
      ]
    },
    {
      "id": "aec86476678ad9ca8bc9e7e9fa7003d2828df97bb96e777c0ee801ac7a406b46",
      "category": "container_scanning",
      "message": "CVE-2025-8869 on pip@24.0",
      "description": "### Summary\n\nIn the fallback extraction path for source distributions, `pip` used Python’s `tarfile` module without verifying that symbolic/hard link targets resolve inside the intended extraction directory. A malicious sdist can include links that escape the target directory and overwrite arbitrary files on the invoking host during `pip install`.\n\n### Impact\n\nSuccessful exploitation enables arbitrary file overwrite outside the build/extraction directory on the machine running `pip`. This can be leveraged to tamper with configuration or startup files and may lead to further code execution depending on the environment, but the direct, guaranteed impact is integrity compromise on the vulnerable system.\n\n### Conditions\n\nThe issue is triggered when installing an attacker-controlled sdist (e.g., from an index or URL) and the fallback extraction code path is used. No special privileges are required beyond running `pip install`; active user action is necessary.\n\n### Remediation\n\nThe [fix](https://github.com/pypa/pip/pull/13550) is available starting in pip `25.3`. Using a Python interpreter that implements the safe-extraction behavior described by **PEP 706** provides additional defense in depth for other `tarfile` issues but is not a substitute for upgrading pip for this specific flaw.",
      "cve": "CVE-2025-8869",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade pip@24.0 to 25.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/pip@24.0"
          },
          "version": "24.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-8869",
          "value": "CVE-2025-8869",
          "url": "https://scout.docker.com/v/CVE-2025-8869?s=github&n=pip&t=pypi&vr=%3C%3D25.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-8869?s=github&n=pip&t=pypi&vr=%3C%3D25.2"
        }
      ]
    },
    {
      "id": "c1cf405a5e13157bf4ce396b8a00172fa075287c4ab7ef2abe6683d5c5fb532c",
      "category": "container_scanning",
      "message": "CVE-2024-47869 on gradio@4.12.0",
      "description": "### Impact  \n**What kind of vulnerability is it? Who is impacted?**\n\nThis vulnerability involves a **timing attack** in the way Gradio compares hashes for the `analytics_dashboard` function. Since the comparison is not done in constant time, an attacker could exploit this by measuring the response time of different requests to infer the correct hash byte-by-byte. This can lead to unauthorized access to the analytics dashboard, especially if the attacker can repeatedly query the system with different keys.\n\n### Patches  \nYes, please upgrade to `gradio>4.44` to mitigate this issue.\n\n### Workarounds  \n**Is there a way for users to fix or remediate the vulnerability without upgrading?**\n\nTo mitigate the risk before applying the patch, developers can manually patch the `analytics_dashboard` dashboard to use a **constant-time comparison** function for comparing sensitive values, such as hashes. Alternatively, access to the analytics dashboard can be disabled.",
      "cve": "CVE-2024-47869",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 4.44.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47869",
          "value": "CVE-2024-47869",
          "url": "https://scout.docker.com/v/CVE-2024-47869?s=github&n=gradio&t=pypi&vr=%3C4.44.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47869?s=github&n=gradio&t=pypi&vr=%3C4.44.0"
        }
      ]
    },
    {
      "id": "af839349cc425f5dee6a44c1c028224b2fe727a3b788e171c7a88980c7129e6c",
      "category": "container_scanning",
      "message": "CVE-2024-34511 on gradio@4.12.0",
      "description": "Component Server in Gradio before 4.13 does not properly consider` _is_server_fn` for functions.",
      "cve": "CVE-2024-34511",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 4.13.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34511",
          "value": "CVE-2024-34511",
          "url": "https://scout.docker.com/v/CVE-2024-34511?s=github&n=gradio&t=pypi&vr=%3C4.13.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34511?s=github&n=gradio&t=pypi&vr=%3C4.13.0"
        }
      ]
    },
    {
      "id": "eeb3e82b98a8c1364b29b8431e4b594da5dc328d7b077406817200c26ec72d1a",
      "category": "container_scanning",
      "message": "CVE-2024-47164 on gradio@4.12.0",
      "description": "### Impact\n**What kind of vulnerability is it? Who is impacted?**\n\nThis vulnerability relates to the **bypass of directory traversal checks** within the `is_in_or_equal` function. This function, intended to check if a file resides within a given directory, can be bypassed with certain payloads that manipulate file paths using `..` (parent directory) sequences. Attackers could potentially access restricted files if they are able to exploit this flaw, although the difficulty is high. This primarily impacts users relying on Gradio’s blocklist or directory access validation, particularly when handling file uploads.\n\n### Patches\nYes, please upgrade to `gradio>=5.0` to address this issue.\n\n### Workarounds\n**Is there a way for users to fix or remediate the vulnerability without upgrading?**\n\nAs a workaround, users can manually sanitize and normalize file paths in their Gradio deployment before passing them to the `is_in_or_equal` function. Ensuring that all file paths are properly resolved and absolute can help mitigate the bypass vulnerabilities caused by the improper handling of `..` sequences or malformed paths.",
      "cve": "CVE-2024-47164",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 5.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47164",
          "value": "CVE-2024-47164",
          "url": "https://scout.docker.com/v/CVE-2024-47164?s=github&n=gradio&t=pypi&vr=%3C5.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47164?s=github&n=gradio&t=pypi&vr=%3C5.0.0"
        }
      ]
    },
    {
      "id": "6cb0301de2d0552d1e3b035150be4f238fbbbbe162a3c234137ca11f3752c8ab",
      "category": "container_scanning",
      "message": "CVE-2024-47166 on gradio@4.12.0",
      "description": "### Impact  \n**What kind of vulnerability is it? Who is impacted?**\n\nThis vulnerability involves a **one-level read path traversal** in the `/custom_component` endpoint. Attackers can exploit this flaw to access and leak source code from custom Gradio components by manipulating the file path in the request. Although the traversal is limited to a single directory level, it could expose proprietary or sensitive code that developers intended to keep private. This impacts users who have developed custom Gradio components and are hosting them on publicly accessible servers.\n\n### Patches  \nYes, please upgrade to `gradio>=4.44` to address this issue.\n\n### Workarounds  \n**Is there a way for users to fix or remediate the vulnerability without upgrading?**\n\nAs a workaround, developers can sanitize the file paths and ensure that components are not stored in publicly accessible directories.",
      "cve": "CVE-2024-47166",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 4.44.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47166",
          "value": "CVE-2024-47166",
          "url": "https://scout.docker.com/v/CVE-2024-47166?s=github&n=gradio&t=pypi&vr=%3C4.44.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47166?s=github&n=gradio&t=pypi&vr=%3C4.44.0"
        }
      ]
    },
    {
      "id": "25101d1069cefe2e0915e42b6954f4001b68e47b05ab193e33195b2b5b547fa7",
      "category": "container_scanning",
      "message": "CVE-2024-47167 on gradio@4.12.0",
      "description": "### Impact  \n**What kind of vulnerability is it? Who is impacted?**\n\nThis vulnerability relates to **Server-Side Request Forgery (SSRF)** in the `/queue/join` endpoint. Gradio’s `async_save_url_to_cache` function allows attackers to force the Gradio server to send HTTP requests to user-controlled URLs. This could enable attackers to target internal servers or services within a local network and possibly exfiltrate data or cause unwanted internal requests. Additionally, the content from these URLs is stored locally, making it easier for attackers to upload potentially malicious files to the server. This impacts users deploying Gradio servers that use components like the Video component which involve URL fetching.\n\n### Patches  \nYes, please upgrade to `gradio>=5` to address this issue.\n\n### Workarounds  \n**Is there a way for users to fix or remediate the vulnerability without upgrading?**\n\nAs a workaround, users can disable or heavily restrict URL-based inputs in their Gradio applications to trusted domains only. Additionally, implementing stricter URL validation (such as allowinglist-based validation) and ensuring that local or internal network addresses cannot be requested via the `/queue/join` endpoint can help mitigate the risk of SSRF attacks.",
      "cve": "CVE-2024-47167",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 5.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47167",
          "value": "CVE-2024-47167",
          "url": "https://scout.docker.com/v/CVE-2024-47167?s=github&n=gradio&t=pypi&vr=%3C5.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47167?s=github&n=gradio&t=pypi&vr=%3C5.0.0"
        }
      ]
    },
    {
      "id": "11dc60b66e24c870cb1a39ffc63e83651bb460fed892bf6815999bacb3a66c25",
      "category": "container_scanning",
      "message": "CVE-2024-47868 on gradio@4.12.0",
      "description": "### Impact\n**What kind of vulnerability is it? Who is impacted?**\n\nThis is a **data validation vulnerability** affecting several Gradio components, which allows arbitrary file leaks through the post-processing step. Attackers can exploit these components by crafting requests that bypass expected input constraints. This issue could lead to sensitive files being exposed to unauthorized users, especially when combined with other vulnerabilities, such as issue TOB-GRADIO-15. The components most at risk are those that return or handle file data.\n\n### Vulnerable Components:\n1. **String to FileData:** DownloadButton, Audio, ImageEditor, Video, Model3D, File, UploadButton.\n2. **Complex data to FileData:** Chatbot, MultimodalTextbox.\n3. **Direct file read in preprocess:** Code.\n4. **Dictionary converted to FileData:** ParamViewer, Dataset.\n\n### Exploit Scenarios:\n1. A developer creates a Dropdown list that passes values to a DownloadButton. An attacker bypasses the allowed inputs, sends an arbitrary file path (like `/etc/passwd`), and downloads sensitive files.\n2. An attacker crafts a malicious payload in a ParamViewer component, leaking sensitive files from a server through the arbitrary file leak.\n\n### Patches\nYes, the issue has been resolved in `gradio>5.0`. Upgrading to the latest version will mitigate this vulnerability.\n",
      "cve": "CVE-2024-47868",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 5.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47868",
          "value": "CVE-2024-47868",
          "url": "https://scout.docker.com/v/CVE-2024-47868?s=github&n=gradio&t=pypi&vr=%3C5.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47868?s=github&n=gradio&t=pypi&vr=%3C5.0.0"
        }
      ]
    },
    {
      "id": "2294ad2d92a289e3cca952354b51f5fa8ad33f6d809aa75d9ddd4a18a358dc13",
      "category": "container_scanning",
      "message": "CVE-2024-2206 on gradio@4.12.0",
      "description": "An SSRF vulnerability exists in the gradio-app/gradio due to insufficient validation of user-supplied URLs in the `/proxy` route. Attackers can exploit this vulnerability by manipulating the `self.replica_urls` set through the `X-Direct-Url` header in requests to the `/` and `/config` routes, allowing the addition of arbitrary URLs for proxying. This flaw enables unauthorized proxying of requests and potential access to internal endpoints within the Hugging Face space. The issue arises from the application's inadequate checking of safe URLs in the `build_proxy_request` function.",
      "cve": "CVE-2024-2206",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 4.18.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-2206",
          "value": "CVE-2024-2206",
          "url": "https://scout.docker.com/v/CVE-2024-2206?s=github&n=gradio&t=pypi&vr=%3C4.18.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-2206?s=github&n=gradio&t=pypi&vr=%3C4.18.0"
        }
      ]
    },
    {
      "id": "5b450f193029ae7f0b226e78638d345ce4a7cff82bb36270a88ddfe7f8bceb89",
      "category": "container_scanning",
      "message": "CVE-2024-10569 on gradio@4.12.0",
      "description": "A vulnerability in the dataframe component of gradio-app/gradio (version git 98cbcae) allows for a zip bomb attack. The component uses pd.read_csv to process input values, which can accept compressed files. An attacker can exploit this by uploading a maliciously crafted zip bomb, leading to a server crash and causing a denial of service.",
      "cve": "CVE-2024-10569",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-10569",
          "value": "CVE-2024-10569",
          "url": "https://scout.docker.com/v/CVE-2024-10569?s=github&n=gradio&t=pypi&vr=%3E%3D4.0.0%2C%3C%3D5.0.0b2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-10569?s=github&n=gradio&t=pypi&vr=%3E%3D4.0.0%2C%3C%3D5.0.0b2"
        }
      ]
    },
    {
      "id": "a03d7324828dc0c1bd48e046df04288fade8c60f159a7f9956de20bfd42f896e",
      "category": "container_scanning",
      "message": "CVE-2024-1561 on gradio@4.12.0",
      "description": "An issue was discovered in gradio-app/gradio, where the `/component_server` endpoint improperly allows the invocation of any method on a `Component` class with attacker-controlled arguments. Specifically, by exploiting the `move_resource_to_block_cache()` method of the `Block` class, an attacker can copy any file on the filesystem to a temporary directory and subsequently retrieve it. This vulnerability enables unauthorized local file read access, posing a significant risk especially when the application is exposed to the internet via `launch(share=True)`, thereby allowing remote attackers to read files on the host machine. Furthermore, gradio apps hosted on `huggingface.co` are also affected, potentially leading to the exposure of sensitive information such as API keys and credentials stored in environment variables.",
      "cve": "CVE-2024-1561",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 4.13.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-1561",
          "value": "CVE-2024-1561",
          "url": "https://scout.docker.com/v/CVE-2024-1561?s=github&n=gradio&t=pypi&vr=%3C4.13.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-1561?s=github&n=gradio&t=pypi&vr=%3C4.13.0"
        }
      ]
    },
    {
      "id": "bab2dd24a08666d33ace4eb95380e054077fbbaea5ebde43286f34a686e85288",
      "category": "container_scanning",
      "message": "CVE-2024-1728 on gradio@4.12.0",
      "description": "gradio-app/gradio is vulnerable to a local file inclusion vulnerability due to improper validation of user-supplied input in the UploadButton component. Attackers can exploit this vulnerability to read arbitrary files on the filesystem, such as private SSH keys, by manipulating the file path in the request to the `/queue/join` endpoint. This issue could potentially lead to remote code execution. The vulnerability is present in the handling of file upload paths, allowing attackers to redirect file uploads to unintended locations on the server.",
      "cve": "CVE-2024-1728",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 4.19.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-1728",
          "value": "CVE-2024-1728",
          "url": "https://scout.docker.com/v/CVE-2024-1728?s=github&n=gradio&t=pypi&vr=%3C4.19.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-1728?s=github&n=gradio&t=pypi&vr=%3C4.19.2"
        }
      ]
    },
    {
      "id": "1e0afbfec11e0bb124804dbc0024a271c74bd0f2f196afb367fab4d11ec29ebb",
      "category": "container_scanning",
      "message": "CVE-2024-34510 on gradio@4.12.0",
      "description": "Gradio before 4.20 allows credential leakage on Windows.",
      "cve": "CVE-2024-34510",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 4.20.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34510",
          "value": "CVE-2024-34510",
          "url": "https://scout.docker.com/v/CVE-2024-34510?s=github&n=gradio&t=pypi&vr=%3C4.20.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34510?s=github&n=gradio&t=pypi&vr=%3C4.20.0"
        }
      ]
    },
    {
      "id": "f4c0e628c2bfaba7dbec603d97c108d621c384e481d9bca1c238bbe4757d5948",
      "category": "container_scanning",
      "message": "CVE-2024-47867 on gradio@4.12.0",
      "description": "### Impact\nThis vulnerability is a **lack of integrity check** on the downloaded FRP client, which could potentially allow attackers to introduce malicious code. If an attacker gains access to the remote URL from which the FRP client is downloaded, they could modify the binary without detection, as the Gradio server does not verify the file's checksum or signature. \n\n**Who is impacted?**  \nAny users utilizing the Gradio server's sharing mechanism that downloads the FRP client could be affected by this vulnerability, especially those relying on the executable binary for secure data tunneling.\n\n### Patches\nYes, please upgrade to `gradio>=5.0`, which includes a fix to verify the integrity of the downloaded binary.\n\n### Workarounds\nThere is no direct workaround for this issue without upgrading. However, users can manually validate the integrity of the downloaded FRP client by implementing checksum or signature verification in their own environment to ensure the binary hasn't been tampered with.",
      "cve": "CVE-2024-47867",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 5.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47867",
          "value": "CVE-2024-47867",
          "url": "https://scout.docker.com/v/CVE-2024-47867?s=github&n=gradio&t=pypi&vr=%3C5.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47867?s=github&n=gradio&t=pypi&vr=%3C5.0.0"
        }
      ]
    },
    {
      "id": "bd5e681740cade6575c3ddce072d2a28fd1b0107d693820c5d344ad9522325e4",
      "category": "container_scanning",
      "message": "CVE-2024-4941 on gradio@4.12.0",
      "description": "A local file inclusion vulnerability exists in the JSON component of gradio-app/gradio and was discovered in version 4.25. The vulnerability arises from improper input validation in the `postprocess()` function within `gradio/components/json_component.py`, where a user-controlled string is parsed as JSON. If the parsed JSON object contains a `path` key, the specified file is moved to a temporary directory, making it possible to retrieve it later via the `/file=..` endpoint. This issue is due to the `processing_utils.move_files_to_cache()` function traversing any object passed to it, looking for a dictionary with a `path` key, and then copying the specified file to a temporary directory. The vulnerability can be exploited by an attacker to read files on the remote system, posing a significant security risk.",
      "cve": "CVE-2024-4941",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 4.31.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-4941",
          "value": "CVE-2024-4941",
          "url": "https://scout.docker.com/v/CVE-2024-4941?s=github&n=gradio&t=pypi&vr=%3C4.31.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-4941?s=github&n=gradio&t=pypi&vr=%3C4.31.3"
        }
      ]
    },
    {
      "id": "39be1681d05b0ca2d714e8be853541a9fe49c05fb2639a28dd93c77c03dc7164",
      "category": "container_scanning",
      "message": "CVE-2024-8966 on gradio@4.12.0",
      "description": "A vulnerability in the file upload process of gradio-app/gradio version @gradio/video@0.10.2 allows for a Denial of Service (DoS) attack. An attacker can append a large number of characters to the end of a multipart boundary, causing the system to continuously process each character and issue warnings. This can render Gradio inaccessible for extended periods, disrupting services and causing significant downtime.",
      "cve": "CVE-2024-8966",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-8966",
          "value": "CVE-2024-8966",
          "url": "https://scout.docker.com/v/CVE-2024-8966?s=github&n=gradio&t=pypi&vr=%3C%3D5.22.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-8966?s=github&n=gradio&t=pypi&vr=%3C%3D5.22.0"
        }
      ]
    },
    {
      "id": "69d7f7efefeff741e4416036c7d877b16f22c5801dac7ebb5a81f0af834eadbc",
      "category": "container_scanning",
      "message": "CVE-2024-10648 on gradio@4.12.0",
      "description": "A path traversal vulnerability exists in the Gradio Audio component of gradio-app/gradio, as of version git 98cbcae. This vulnerability allows an attacker to control the format of the audio file, leading to arbitrary file content deletion. By manipulating the output format, an attacker can reset any file to an empty file, causing a denial of service (DOS) on the server.",
      "cve": "CVE-2024-10648",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-10648",
          "value": "CVE-2024-10648",
          "url": "https://scout.docker.com/v/CVE-2024-10648?s=github&n=gradio&t=pypi&vr=%3E%3D4.0.0%2C%3C%3D5.0.0b2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-10648?s=github&n=gradio&t=pypi&vr=%3E%3D4.0.0%2C%3C%3D5.0.0b2"
        }
      ]
    },
    {
      "id": "ebeb9b253754c9d03ad8cda462650820d91adb91355794b088bd065676340e51",
      "category": "container_scanning",
      "message": "CVE-2024-1540 on gradio@4.12.0",
      "description": "Previously, it was possible to exfiltrate secrets in Gradio's CI, but this is now fixed.",
      "cve": "CVE-2024-1540",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 4.18.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-1540",
          "value": "CVE-2024-1540",
          "url": "https://scout.docker.com/v/CVE-2024-1540?s=gitlab&n=gradio&t=pypi&vr=%3C4.18.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-1540?s=gitlab&n=gradio&t=pypi&vr=%3C4.18.0"
        }
      ]
    },
    {
      "id": "30f0dff6998295711b580977d2c1fceb82b33bb28cef020c84e5fdcd30bc20ec",
      "category": "container_scanning",
      "message": "CVE-2024-4325 on gradio@4.12.0",
      "description": "A Server-Side Request Forgery (SSRF) vulnerability exists in the gradio-app/gradio and was discovered in version 4.21.0, specifically within the `/queue/join` endpoint and the `save_url_to_cache` function. The vulnerability arises when the `path` value, obtained from the user and expected to be a URL, is used to make an HTTP request without sufficient validation checks. This flaw allows an attacker to send crafted requests that could lead to unauthorized access to the local network or the AWS metadata endpoint, thereby compromising the security of internal servers.",
      "cve": "CVE-2024-4325",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-4325",
          "value": "CVE-2024-4325",
          "url": "https://scout.docker.com/v/CVE-2024-4325?s=github&n=gradio&t=pypi&vr=%3C%3D4.36.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-4325?s=github&n=gradio&t=pypi&vr=%3C%3D4.36.0"
        }
      ]
    },
    {
      "id": "29295114c651406f520379338dc0ac60193f165e3d1e93bdb33d45a699817f48",
      "category": "container_scanning",
      "message": "CVE-2024-47871 on gradio@4.12.0",
      "description": "### Impact  \n**What kind of vulnerability is it? Who is impacted?**\n\nThis vulnerability involves **insecure communication** between the FRP (Fast Reverse Proxy) client and server when Gradio's `share=True` option is used. HTTPS is not enforced on the connection, allowing attackers to intercept and read files uploaded to the Gradio server, as well as modify responses or data sent between the client and server. This impacts users who are sharing Gradio demos publicly over the internet using `share=True` without proper encryption, exposing sensitive data to potential eavesdroppers.\n\n### Patches  \nYes, please upgrade to `gradio>=5` to address this issue.\n\n### Workarounds  \n**Is there a way for users to fix or remediate the vulnerability without upgrading?**\n\nAs a workaround, users can avoid using `share=True` in production environments and instead host their Gradio applications on servers with HTTPS enabled to ensure secure communication.",
      "cve": "CVE-2024-47871",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 5.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47871",
          "value": "CVE-2024-47871",
          "url": "https://scout.docker.com/v/CVE-2024-47871?s=github&n=gradio&t=pypi&vr=%3C5.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47871?s=github&n=gradio&t=pypi&vr=%3C5.0.0"
        }
      ]
    },
    {
      "id": "35c305e67fb4239e12bccd06c2da8fca9748cadfecf66d5fc52b7771ed02697a",
      "category": "container_scanning",
      "message": "CVE-2024-47084 on gradio@4.12.0",
      "description": "### Impact\n**What kind of vulnerability is it? Who is impacted?**\n\nThis vulnerability is related to **CORS origin validation**, where the Gradio server fails to validate the request origin when a cookie is present. This allows an attacker’s website to make unauthorized requests to a local Gradio server. Potentially, attackers can upload files, steal authentication tokens, and access user data if the victim visits a malicious website while logged into Gradio. This impacts users who have deployed Gradio locally and use basic authentication.\n\n### Patches\nYes, please upgrade to `gradio>=4.44` to address this issue.\n\n### Workarounds\n**Is there a way for users to fix or remediate the vulnerability without upgrading?**\n\nAs a workaround, users can manually enforce stricter CORS origin validation by modifying the `CustomCORSMiddleware` class in their local Gradio server code. Specifically, they can bypass the condition that skips CORS validation for requests containing cookies to prevent potential exploitation.\n\n",
      "cve": "CVE-2024-47084",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 4.44.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47084",
          "value": "CVE-2024-47084",
          "url": "https://scout.docker.com/v/CVE-2024-47084?s=github&n=gradio&t=pypi&vr=%3C4.44.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47084?s=github&n=gradio&t=pypi&vr=%3C4.44.0"
        }
      ]
    },
    {
      "id": "c276fc669113c41b88baa32c43bc15933706d749dd8a00e8b7f23246af4b6dbc",
      "category": "container_scanning",
      "message": "CVE-2024-47870 on gradio@4.12.0",
      "description": "### Impact  \n**What kind of vulnerability is it? Who is impacted?**\n\nThis vulnerability involves a **race condition** in the `update_root_in_config` function, allowing an attacker to modify the `root` URL used by the Gradio frontend to communicate with the backend. By exploiting this flaw, an attacker can redirect user traffic to a malicious server. This could lead to the interception of sensitive data such as authentication credentials or uploaded files. This impacts all users who connect to a Gradio server, especially those exposed to the internet, where malicious actors could exploit this race condition.\n\n### Patches  \nYes, please upgrade to `gradio>=5` to address this issue.",
      "cve": "CVE-2024-47870",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 5.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47870",
          "value": "CVE-2024-47870",
          "url": "https://scout.docker.com/v/CVE-2024-47870?s=github&n=gradio&t=pypi&vr=%3C5.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47870?s=github&n=gradio&t=pypi&vr=%3C5.0.0"
        }
      ]
    },
    {
      "id": "b95e6af08206fbe7680fd136e2f7193022d555ddfad9ad43408343d5fff4a4bc",
      "category": "container_scanning",
      "message": "CVE-2025-23042 on gradio@4.12.0",
      "description": "## Summary\n\nGradio's Access Control List (ACL) for file paths can be bypassed by altering the letter case of a blocked file or directory path. This vulnerability arises due to the lack of case normalization in the file path validation logic. On case-insensitive file systems, such as those used by Windows and macOS, this flaw enables attackers to circumvent security restrictions and access sensitive files that should be protected.\n\nThis issue can lead to unauthorized data access, exposing sensitive information and undermining the integrity of Gradio's security model. Given Gradio's popularity for building web applications, particularly in machine learning and AI, this vulnerability may pose a substantial threat if exploited in production environments.\n\n## Affected Version\n\nGradio <= 5.6.0\n\n## Impact\n\n- **Unauthorized Access**: Sensitive files or directories specified in `blocked_paths` can be accessed by attackers.\n\n- **Data Exposure**: Critical files, such as configuration files or user data, may be leaked.\n\n- **Security Breach**: This can lead to broader application or system compromise if sensitive files contain credentials or API keys.\n\n## Root Cause\n\nThe [`blocked_paths`](https://github.com/gradio-app/gradio/blob/main/gradio/blocks.py#L2310) parameter in Gradio block's initial configuration is designed to restrict user access to specific files or directories in the local file system. However, it does not account for case-insensitive operating systems, such as Windows and macOS. This oversight enables attackers to bypass ACL restrictions by changing the case of file paths.\n\nVulnerable snippet: \n\n```python\n# https://github.com/gradio-app/gradio/blob/main/gradio/utils.py#L1500-L1517\ndef is_allowed_file(\n    path: Path,\n    blocked_paths: Sequence[str | Path],\n    allowed_paths: Sequence[str | Path],\n    created_paths: Sequence[str | Path],\n) -> tuple[\n    bool, Literal[\"in_blocklist\", \"allowed\", \"created\", \"not_created_or_allowed\"]\n]:\n    in_blocklist = any(\n        is_in_or_equal(path, blocked_path) for blocked_path in blocked_paths\n    )\n    if in_blocklist:\n        return False, \"in_blocklist\"\n    if any(is_in_or_equal(path, allowed_path) for allowed_path in allowed_paths):\n        return True, \"allowed\"\n    if any(is_in_or_equal(path, created_path) for created_path in created_paths):\n        return True, \"created\"\n    return False, \"not_created_or_allowed\"\n```\n\nGradio relies on `is_in_or_equal` to determine if a file path is restricted. However, this logic fails to handle case variations in paths on case-insensitive file systems, leading to the bypass.\n\n## Proof of Concept (PoC)\n\n### Steps to Reproduce\n\n- Deploy a Gradio demo app on a case-insensitive operating system (e.g., Windows or macOS).\n\n  ```bash\n  import gradio as gr\n  def update(name):\n      return f\"Welcome to Gradio, {name}!\"\n  \n  with gr.Blocks() as demo:\n      gr.Markdown(\"Start typing below and then click **Run** to see the output.\")\n      with gr.Row():\n          inp = gr.Textbox(placeholder=\"What is your name?\")\n          out = gr.Textbox()\n      btn = gr.Button(\"Run\")\n      btn.click(fn=update, inputs=inp, outputs=out)\n  \n  demo.launch(blocked_paths=['resources/admin'], allowed_paths=['resources/'])\n  ```\n\n- Set up the file system:\n\n  - Create a folder named `resources` in the same directory as the app, containing a file `1.txt`.\n\n  - Inside the `resources` folder, create a subfolder named `admin` containing a sensitive file `credential.txt` (this file should be inaccessible due to `blocked_paths`).\n\n- Perform the attack:\n\n  - Access the sensitive file using a case-altered path:\n\n    ```\n    http://127.0.0.1:PORT/gradio_api/file=resources/adMin/credential.txt\n    ```\n\n### Expected Result\n\nAccess to `resources/admin/credential.txt` should be blocked.\n\n### Actual Result\n\nBy altering the case in the path (e.g., `adMin`), the blocked ACL is bypassed, and unauthorized access to the sensitive file is granted.\n\n![image-20241119172439042](https://api.2h0ng.wiki:443/noteimages/2024/11/19/17-24-39-883969d4c31ce8a8d2a939654fab56d4.png)\n\nThis demonstration highlights that flipping the case of restricted paths allows attackers to bypass Gradio's ACL and access sensitive data.\n\n## Remediation Recommendations\n\n1. **Normalize Path Case**:\n\n   - Before evaluating paths against the ACL, normalize the case of both the requested path and the blocked paths (e.g., convert all paths to lowercase).\n\n   - Example:\n\n     ```python\n     normalized_path = str(path).lower()\n     normalized_blocked_paths = [str(p).lower() for p in blocked_paths]\n     ```\n\n2. **Update Documentation**:\n\n   - Warn developers about potential risks when deploying Gradio on case-insensitive file systems.\n\n3. **Release Security Patches**:\n\n   - Notify users of the vulnerability and release an updated version of Gradio with the fixed logic.\n\n## ",
      "cve": "CVE-2025-23042",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 5.11.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-23042",
          "value": "CVE-2025-23042",
          "url": "https://scout.docker.com/v/CVE-2025-23042?s=github&n=gradio&t=pypi&vr=%3C5.11.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-23042?s=github&n=gradio&t=pypi&vr=%3C5.11.0"
        }
      ]
    },
    {
      "id": "dc8375d9d70018404005872f63b0f1ac18e51ac611bfe78b8e6dde5e003eb539",
      "category": "container_scanning",
      "message": "GHSA-m842-4qm8-7gpq on gradio@4.12.0",
      "description": "### Impact\nThis vulnerability allows users of Gradio applications that have a public link (such as on Hugging Face Spaces) to access files on the machine hosting the Gradio application. This involves intercepting and modifying the network requests made by the Gradio app to the server. \n\n### Patches\nYes, the problem has been patched in Gradio version 4.19.2 or higher. We have no knowledge of this exploit being used against users of Gradio applications, but we encourage all users to upgrade to Gradio 4.19.2 or higher.\n\nFixed in: https://github.com/gradio-app/gradio/commit/16fbe9cd0cffa9f2a824a0165beb43446114eec7\nCVE: https://nvd.nist.gov/vuln/detail/CVE-2024-1728",
      "cve": "GHSA-m842-4qm8-7gpq",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 4.19.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-m842-4qm8-7gpq",
          "value": "GHSA-m842-4qm8-7gpq",
          "url": "https://scout.docker.com/v/GHSA-m842-4qm8-7gpq?s=github&n=gradio&t=pypi&vr=%3C4.19.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-m842-4qm8-7gpq?s=github&n=gradio&t=pypi&vr=%3C4.19.2"
        }
      ]
    },
    {
      "id": "a4630fabf205d4cd14c27af947d13745eb92375e54b0eabd00c0e37ffb9216e5",
      "category": "container_scanning",
      "message": "CVE-2023-6572 on gradio@4.12.0",
      "description": "Exposure of Sensitive Information to an Unauthorized Actor in GitHub repository gradio-app/gradio prior to main.",
      "cve": "CVE-2023-6572",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade gradio@4.12.0 to 4.14.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/gradio@4.12.0"
          },
          "version": "4.12.0"
        },
        "operating_system": "debian 13",
        "image": "custom_no_tool-web:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-6572",
          "value": "CVE-2023-6572",
          "url": "https://scout.docker.com/v/CVE-2023-6572?s=github&n=gradio&t=pypi&vr=%3C4.14.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-6572?s=github&n=gradio&t=pypi&vr=%3C4.14.0"
        }
      ]
    }
  ],
  "remediations": [],
  "scan": {
    "start_time": "2025-10-31T20:33:10",
    "end_time": "2025-10-31T20:33:10",
    "status": "success",
    "type": "container_scanning",
    "scanner": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    },
    "analyzer": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    }
  }
}
