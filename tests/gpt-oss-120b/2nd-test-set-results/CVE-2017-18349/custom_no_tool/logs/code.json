{
    "files": [
        {
            "location": "docker-compose.yml",
            "content": "services:\n  vulnerable_app:\n    build:\n      context: ./app\n    container_name: vulnerable_app\n    ports:\n      - \"5000:5000\"\n    volumes:\n      - ./app:/app\n    environment:\n      - FLASK_ENV=development\n      - FLASK_APP=app.py\n    command: flask run --host=0.0.0.0 --port=5000\n    depends_on:\n      - fastjson_app\n\n  fastjson_app:\n    build:\n      context: ./fastjson-app\n    container_name: fastjson_app\n    ports:\n      - \"8080:8080\""
        },
        {
            "location": "app/Dockerfile",
            "content": "FROM python:3.8-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nENV FLASK_APP=app.py\nEXPOSE 5000"
        },
        {
            "location": "app/requirements.txt",
            "content": "Flask>=2.0"
        },
        {
            "location": "app/app.py",
            "content": "from flask import Flask, request, jsonify\nimport os\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n    return 'Vulnerable Flask app running.'\n\n# Endpoint that reads a file path supplied by the user \u2013 this mimics the path traversal that CVE-2017-18349 exploits.\n@app.route('/read')\ndef read_file():\n    path = request.args.get('path', '/etc/passwd')\n    try:\n        with open(path, 'r') as f:\n            data = f.read()\n        return jsonify({'content': data})\n    except Exception as e:\n        return jsonify({'error': str(e)}), 400\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)"
        },
        {
            "location": "fastjson-app/Dockerfile",
            "content": "FROM tomcat:8.5-alpine\nUSER root\nCOPY webapp/ /usr/local/tomcat/webapps/fastjson-app/\nRUN apk add --no-cache ca-certificates wget && \\\n    update-ca-certificates && \\\n    mkdir -p /usr/local/tomcat/webapps/fastjson-app/WEB-INF/lib && \\\n    wget -q -O /usr/local/tomcat/webapps/fastjson-app/WEB-INF/lib/fastjson-1.2.24.jar https://repo1.maven.org/maven2/com/alibaba/fastjson/fastjson/1.2.24/fastjson-1.2.24.jar && \\\n    rm -rf /var/cache/apk/*\nUSER tomcat\nEXPOSE 8080"
        },
        {
            "location": "fastjson-app/webapp/WEB-INF/web.xml",
            "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\n                             http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"\n         version=\"3.1\">\n    <display-name>Fastjson Demo</display-name>\n    <welcome-file-list>\n        <welcome-file>index.jsp</welcome-file>\n    </welcome-file-list>\n</web-app>"
        },
        {
            "location": "fastjson-app/webapp/index.jsp",
            "content": "<%@ page import=\"com.alibaba.fastjson.JSON\" %>\n<%\n    String json = request.getParameter(\"json\");\n    if (json == null) {\n        json = \"{}\";\n    }\n    Object obj = JSON.parse(json);\n    out.println(\"Parsed object: \" + obj.toString());\n%>"
        }
    ],
    "directory_tree": "custom_no_tool/\n\u251c\u2500 docker-compose.yml\n\u251c\u2500 app/\n\u2502  \u251c\u2500 Dockerfile\n\u2502  \u251c\u2500 requirements.txt\n\u2502  \u2514\u2500 app.py\n\u2514\u2500 fastjson-app/\n   \u251c\u2500 Dockerfile\n   \u2514\u2500 webapp/\n       \u251c\u2500 WEB-INF/\n       \u2502   \u2514\u2500 web.xml\n       \u2514\u2500 index.jsp"
}