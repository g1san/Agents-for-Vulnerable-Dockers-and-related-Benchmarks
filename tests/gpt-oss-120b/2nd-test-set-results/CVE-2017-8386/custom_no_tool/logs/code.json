{
    "files": [
        {
            "location": "./../../dockers/CVE-2017-8386/custom_no_tool/docker-compose.yml",
            "content": "version: '3.8'\nservices:\n  vulnerable_app:\n    build: .\n    ports:\n      - \"5000:5000\"\n    volumes:\n      - ./data:/app/data\n    environment:\n      - PYTHONUNBUFFERED=1\n    command: [\"python\", \"app.py\"]"
        },
        {
            "location": "./../../dockers/CVE-2017-8386/custom_no_tool/Dockerfile",
            "content": "FROM python:3.9-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nEXPOSE 5000"
        },
        {
            "location": "./../../dockers/CVE-2017-8386/custom_no_tool/requirements.txt",
            "content": "Flask==2.0.3\nWerkzeug<2.1"
        },
        {
            "location": "./../../dockers/CVE-2017-8386/custom_no_tool/app.py",
            "content": "from flask import Flask, request, send_from_directory, abort\nimport os\napp = Flask(__name__)\n\n# Vulnerable endpoint that mirrors CVE-2017-8386 (path traversal via unvalidated user input)\n@app.route('/download')\ndef download_file():\n    filename = request.args.get('file')\n    if not filename:\n        abort(400, 'file parameter required')\n    # Intentionally insecure: no validation, allows \"../\" traversal\n    directory = os.path.abspath('data')\n    return send_from_directory(directory, filename)\n\n# Simple route to list available test files\n@app.route('/')\ndef index():\n    files = os.listdir('data')\n    return '<br>'.join(files)\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)"
        },
        {
            "location": "./../../dockers/CVE-2017-8386/custom_no_tool/data/secret.txt",
            "content": "Sensitive data that should not be publicly accessible."
        }
    ],
    "directory_tree": "CVE-2017-8386/custom_no_tool"
}