{
  "version": "15.0.6",
  "vulnerabilities": [
    {
      "id": "b86097054c8d3050c2a4a89c4c9aa7fbedbe5a8a7a217e55a992d21e4d7f1628",
      "category": "container_scanning",
      "message": "CVE-2024-50349 on alpine/git@2.45.2-r0",
      "cve": "CVE-2024-50349",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/git@2.45.2-r0 to 2.45.3-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/git@2.45.2-r0?os_name=alpine&os_version=3.20"
          },
          "version": "2.45.2-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-50349",
          "value": "CVE-2024-50349",
          "url": "https://scout.docker.com/v/CVE-2024-50349?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.45.3-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-50349?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.45.3-r0"
        }
      ]
    },
    {
      "id": "c225dd1964bd0786e746e24ac6830f88a11077bac8b2bc06a6d4ed45e0e7bebb",
      "category": "container_scanning",
      "message": "CVE-2024-52006 on alpine/git@2.45.2-r0",
      "cve": "CVE-2024-52006",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/git@2.45.2-r0 to 2.45.3-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/git@2.45.2-r0?os_name=alpine&os_version=3.20"
          },
          "version": "2.45.2-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-52006",
          "value": "CVE-2024-52006",
          "url": "https://scout.docker.com/v/CVE-2024-52006?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.45.3-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-52006?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.45.3-r0"
        }
      ]
    },
    {
      "id": "7a4aa5d74115027a9a7782c778526e00957f885654f111b4d663390d96a09ec9",
      "category": "container_scanning",
      "message": "CVE-2024-51744 on github.com/golang-jwt/jwt@4.4.2",
      "description": "### Summary\n\nUnclear documentation of the error behavior in `ParseWithClaims` can lead to situation where users are potentially not checking errors in the way they should be. Especially, if a token is both expired and invalid, the errors returned by `ParseWithClaims` return both error codes. If users only check for the `jwt.ErrTokenExpired ` using `error.Is`, they will ignore the embedded `jwt.ErrTokenSignatureInvalid` and thus potentially accept invalid tokens.\n\n### Fix\n\nWe have back-ported the error handling logic from the `v5` branch to the `v4` branch. In this logic, the `ParseWithClaims` function will immediately return in \"dangerous\" situations (e.g., an invalid signature), limiting the combined errors only to situations where the signature is valid, but further validation failed (e.g., if the signature is valid, but is expired AND has the wrong audience). This fix is part of the 4.5.1 release.\n\n### Workaround \n\nWe are aware that this changes the behaviour of an established function and is not 100 % backwards compatible, so updating to 4.5.1 might break your code. In case you cannot update to 4.5.0, please make sure that you are properly checking for all errors (\"dangerous\" ones first), so that you are not running in the case detailed above.\n\n```Go\ntoken, err := /* jwt.Parse or similar */\nif token.Valid {\n\tfmt.Println(\"You look nice today\")\n} else if errors.Is(err, jwt.ErrTokenMalformed) {\n\tfmt.Println(\"That's not even a token\")\n} else if errors.Is(err, jwt.ErrTokenUnverifiable) {\n\tfmt.Println(\"We could not verify this token\")\n} else if errors.Is(err, jwt.ErrTokenSignatureInvalid) {\n\tfmt.Println(\"This token has an invalid signature\")\n} else if errors.Is(err, jwt.ErrTokenExpired) || errors.Is(err, jwt.ErrTokenNotValidYet) {\n\t// Token is either expired or not active yet\n\tfmt.Println(\"Timing is everything\")\n} else {\n\tfmt.Println(\"Couldn't handle this token:\", err)\n}\n```",
      "cve": "CVE-2024-51744",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/golang-jwt/jwt@4.4.2 to 4.5.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/golang-jwt/jwt@4.4.2#v4"
          },
          "version": "4.4.2"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-51744",
          "value": "CVE-2024-51744",
          "url": "https://scout.docker.com/v/CVE-2024-51744?s=github&n=v4&ns=github.com%2Fgolang-jwt%2Fjwt&t=golang&vr=%3C4.5.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-51744?s=github&n=v4&ns=github.com%2Fgolang-jwt%2Fjwt&t=golang&vr=%3C4.5.1"
        }
      ]
    },
    {
      "id": "116f7ce7df5927f8ad7bbffbaa2dd6630d434891d4c67a512cf530795d14f1c0",
      "category": "container_scanning",
      "message": "CVE-2024-58251 on alpine/busybox@1.36.1-r29",
      "cve": "CVE-2024-58251",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/busybox@1.36.1-r29?os_name=alpine&os_version=3.20"
          },
          "version": "1.36.1-r29"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-58251",
          "value": "CVE-2024-58251",
          "url": "https://scout.docker.com/v/CVE-2024-58251?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C%3D1.36.1-r30"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-58251?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C%3D1.36.1-r30"
        }
      ]
    },
    {
      "id": "4c01ba1704e3aa30b8397ffcb212addf3002b4d0df0e6adfed092b204a014349",
      "category": "container_scanning",
      "message": "CVE-2025-46394 on alpine/busybox@1.36.1-r29",
      "cve": "CVE-2025-46394",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/busybox@1.36.1-r29?os_name=alpine&os_version=3.20"
          },
          "version": "1.36.1-r29"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-46394",
          "value": "CVE-2025-46394",
          "url": "https://scout.docker.com/v/CVE-2025-46394?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C%3D1.36.1-r30"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-46394?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C%3D1.36.1-r30"
        }
      ]
    },
    {
      "id": "3e52751cd878bc646e900fcb759aa9e2de2e5191b05b7649982a5146fd565b8c",
      "category": "container_scanning",
      "message": "CVE-2025-54410 on github.com/docker/docker@27.1.0+incompatible",
      "description": "Moby is an open source container framework developed by Docker Inc. that is distributed as Docker Engine, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (dockerd), which is developed as [moby/moby](https://github.com/moby/moby) is commonly referred to as Docker, or Docker Engine.\n\nFirewalld is a daemon used by some Linux distributions to provide a dynamically managed firewall. When Firewalld is running, Docker uses its iptables backend to create rules, including rules to isolate containers in one bridge network from containers in other bridge networks.\n\n### Impact\n\nThe iptables rules created by Docker are removed when firewalld is reloaded using, for example \"firewall-cmd --reload\", \"killall -HUP firewalld\", or \"systemctl reload firewalld\".\n\nWhen that happens, Docker must re-create the rules. However, in affected versions of Docker, the iptables rules that isolate containers in different bridge networks from each other are not re-created.\n\nOnce these rules have been removed, containers have access to any port, on any container, in any non-internal bridge network, running on the Docker host.\n\nContainers running in networks created with `--internal` or equivalent have no access to other networks. Containers that are only connected to these networks remain isolated after a firewalld reload.\n\nWhere Docker Engine is not running in the host's network namespace, it is unaffected. Including, for example, Rootless Mode, and Docker Desktop.\n\n### Patches\n\nMoby releases 28.0.0 and newer are not affected. A fix is available in moby release 25.0.13.\n\n### Workarounds\nAfter reloading firewalld, either:\n- Restart the docker daemon,\n- Re-create bridge networks, or\n- Use rootless mode.\n\n### References\nhttps://firewalld.org/\nhttps://firewalld.org/documentation/howto/reload-firewalld.html",
      "cve": "CVE-2025-54410",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/docker/docker@27.1.0+incompatible to 28.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/docker@27.1.0%2Bincompatible"
          },
          "version": "27.1.0+incompatible"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-54410",
          "value": "CVE-2025-54410",
          "url": "https://scout.docker.com/v/CVE-2025-54410?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D26.0.0-rc1%2C%3C28.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-54410?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D26.0.0-rc1%2C%3C28.0.0"
        }
      ]
    },
    {
      "id": "3cf7c001a9d2f0b50ebfb48e5b59a35a3d5edf4dbdd2d2e97da934f8d5bd0f20",
      "category": "container_scanning",
      "message": "CVE-2025-54410 on github.com/docker/docker@27.0.3+incompatible",
      "description": "Moby is an open source container framework developed by Docker Inc. that is distributed as Docker Engine, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (dockerd), which is developed as [moby/moby](https://github.com/moby/moby) is commonly referred to as Docker, or Docker Engine.\n\nFirewalld is a daemon used by some Linux distributions to provide a dynamically managed firewall. When Firewalld is running, Docker uses its iptables backend to create rules, including rules to isolate containers in one bridge network from containers in other bridge networks.\n\n### Impact\n\nThe iptables rules created by Docker are removed when firewalld is reloaded using, for example \"firewall-cmd --reload\", \"killall -HUP firewalld\", or \"systemctl reload firewalld\".\n\nWhen that happens, Docker must re-create the rules. However, in affected versions of Docker, the iptables rules that isolate containers in different bridge networks from each other are not re-created.\n\nOnce these rules have been removed, containers have access to any port, on any container, in any non-internal bridge network, running on the Docker host.\n\nContainers running in networks created with `--internal` or equivalent have no access to other networks. Containers that are only connected to these networks remain isolated after a firewalld reload.\n\nWhere Docker Engine is not running in the host's network namespace, it is unaffected. Including, for example, Rootless Mode, and Docker Desktop.\n\n### Patches\n\nMoby releases 28.0.0 and newer are not affected. A fix is available in moby release 25.0.13.\n\n### Workarounds\nAfter reloading firewalld, either:\n- Restart the docker daemon,\n- Re-create bridge networks, or\n- Use rootless mode.\n\n### References\nhttps://firewalld.org/\nhttps://firewalld.org/documentation/howto/reload-firewalld.html",
      "cve": "CVE-2025-54410",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/docker/docker@27.0.3+incompatible to 28.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/docker@27.0.3%2Bincompatible"
          },
          "version": "27.0.3+incompatible"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-54410",
          "value": "CVE-2025-54410",
          "url": "https://scout.docker.com/v/CVE-2025-54410?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D26.0.0-rc1%2C%3C28.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-54410?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D26.0.0-rc1%2C%3C28.0.0"
        }
      ]
    },
    {
      "id": "eb1231b1b091ad1cd633c81577ded80fbb15bc90b778d4f2851098e76259fdf6",
      "category": "container_scanning",
      "message": "CVE-2025-54410 on github.com/docker/docker@24.0.9",
      "description": "Moby is an open source container framework developed by Docker Inc. that is distributed as Docker Engine, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (dockerd), which is developed as [moby/moby](https://github.com/moby/moby) is commonly referred to as Docker, or Docker Engine.\n\nFirewalld is a daemon used by some Linux distributions to provide a dynamically managed firewall. When Firewalld is running, Docker uses its iptables backend to create rules, including rules to isolate containers in one bridge network from containers in other bridge networks.\n\n### Impact\n\nThe iptables rules created by Docker are removed when firewalld is reloaded using, for example \"firewall-cmd --reload\", \"killall -HUP firewalld\", or \"systemctl reload firewalld\".\n\nWhen that happens, Docker must re-create the rules. However, in affected versions of Docker, the iptables rules that isolate containers in different bridge networks from each other are not re-created.\n\nOnce these rules have been removed, containers have access to any port, on any container, in any non-internal bridge network, running on the Docker host.\n\nContainers running in networks created with `--internal` or equivalent have no access to other networks. Containers that are only connected to these networks remain isolated after a firewalld reload.\n\nWhere Docker Engine is not running in the host's network namespace, it is unaffected. Including, for example, Rootless Mode, and Docker Desktop.\n\n### Patches\n\nMoby releases 28.0.0 and newer are not affected. A fix is available in moby release 25.0.13.\n\n### Workarounds\nAfter reloading firewalld, either:\n- Restart the docker daemon,\n- Re-create bridge networks, or\n- Use rootless mode.\n\n### References\nhttps://firewalld.org/\nhttps://firewalld.org/documentation/howto/reload-firewalld.html",
      "cve": "CVE-2025-54410",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/docker@24.0.9"
          },
          "version": "24.0.9"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-54410",
          "value": "CVE-2025-54410",
          "url": "https://scout.docker.com/v/CVE-2025-54410?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C%3D25.0.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-54410?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C%3D25.0.12"
        }
      ]
    },
    {
      "id": "2559985588d627c16c38d762bfd9e2953825075b61a1588b9830fa6ab3122cdc",
      "category": "container_scanning",
      "message": "CVE-2025-58183 on stdlib@1.21.11",
      "description": "tar.Reader does not set a maximum size on the number of sparse region data blocks in GNU tar pax 1.0 sparse files. A maliciously-crafted archive containing a large number of sparse regions can cause a Reader to read an unbounded amount of data from the archive into memory. When reading from a compressed source, a small compressed input can result in large allocations.",
      "cve": "CVE-2025-58183",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58183",
          "value": "CVE-2025-58183",
          "url": "https://scout.docker.com/v/CVE-2025-58183?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58183?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "d8b960dfee38b282d1b77b0a6c701176d5a9f3d6b11a9d16882051f150b32fe4",
      "category": "container_scanning",
      "message": "CVE-2025-58183 on stdlib@1.20.13",
      "description": "tar.Reader does not set a maximum size on the number of sparse region data blocks in GNU tar pax 1.0 sparse files. A maliciously-crafted archive containing a large number of sparse regions can cause a Reader to read an unbounded amount of data from the archive into memory. When reading from a compressed source, a small compressed input can result in large allocations.",
      "cve": "CVE-2025-58183",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58183",
          "value": "CVE-2025-58183",
          "url": "https://scout.docker.com/v/CVE-2025-58183?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58183?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "4305c2df580333c0a41983420e1230bfa50bdd47381d9f14bda9c44d0dd595e7",
      "category": "container_scanning",
      "message": "CVE-2025-58183 on stdlib@1.22.5",
      "description": "tar.Reader does not set a maximum size on the number of sparse region data blocks in GNU tar pax 1.0 sparse files. A maliciously-crafted archive containing a large number of sparse regions can cause a Reader to read an unbounded amount of data from the archive into memory. When reading from a compressed source, a small compressed input can result in large allocations.",
      "cve": "CVE-2025-58183",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58183",
          "value": "CVE-2025-58183",
          "url": "https://scout.docker.com/v/CVE-2025-58183?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58183?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "ae6481863bbc4d0c118e4432ad86de2dd70c9b62184a1af8b440bd8f35afeaf5",
      "category": "container_scanning",
      "message": "CVE-2024-11053 on alpine/curl@8.9.0-r0",
      "cve": "CVE-2024-11053",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.9.0-r0 to 8.11.1-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.9.0-r0?os_name=alpine&os_version=3.20"
          },
          "version": "8.9.0-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-11053",
          "value": "CVE-2024-11053",
          "url": "https://scout.docker.com/v/CVE-2024-11053?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.11.1-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-11053?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.11.1-r0"
        }
      ]
    },
    {
      "id": "4bda0dc0fb7df06e6fa82c5cd314c6faf211059db162fcef26c567adfb0e2be8",
      "category": "container_scanning",
      "message": "CVE-2025-0167 on alpine/curl@8.9.0-r0",
      "cve": "CVE-2025-0167",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.9.0-r0 to 8.12.0-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.9.0-r0?os_name=alpine&os_version=3.20"
          },
          "version": "8.9.0-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-0167",
          "value": "CVE-2025-0167",
          "url": "https://scout.docker.com/v/CVE-2025-0167?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.12.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-0167?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.12.0-r0"
        }
      ]
    },
    {
      "id": "eb8cc18bd0327a18fb8368e99056a9f6299672e849b3cba9ca3a8a65aad76ddc",
      "category": "container_scanning",
      "message": "CVE-2025-27613 on alpine/git@2.45.2-r0",
      "cve": "CVE-2025-27613",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/git@2.45.2-r0 to 2.45.4-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/git@2.45.2-r0?os_name=alpine&os_version=3.20"
          },
          "version": "2.45.2-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-27613",
          "value": "CVE-2025-27613",
          "url": "https://scout.docker.com/v/CVE-2025-27613?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.45.4-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-27613?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.45.4-r0"
        }
      ]
    },
    {
      "id": "db384bf0fbd8d5c1164c2783a3f25127e0ec752276d29b41ec47a095706e5855",
      "category": "container_scanning",
      "message": "CVE-2025-61984 on alpine/openssh@9.7_p1-r4",
      "cve": "CVE-2025-61984",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssh@9.7_p1-r4?os_name=alpine&os_version=3.20"
          },
          "version": "9.7_p1-r4"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-61984",
          "value": "CVE-2025-61984",
          "url": "https://scout.docker.com/v/CVE-2025-61984?s=alpine&n=openssh&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C%3D9.7_p1-r4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-61984?s=alpine&n=openssh&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C%3D9.7_p1-r4"
        }
      ]
    },
    {
      "id": "528086e9fb03593c766b74d5e5e2e6fe442b209d986b1991c5269a05fe3fb74f",
      "category": "container_scanning",
      "message": "CVE-2025-61985 on alpine/openssh@9.7_p1-r4",
      "cve": "CVE-2025-61985",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssh@9.7_p1-r4?os_name=alpine&os_version=3.20"
          },
          "version": "9.7_p1-r4"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-61985",
          "value": "CVE-2025-61985",
          "url": "https://scout.docker.com/v/CVE-2025-61985?s=alpine&n=openssh&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C%3D9.7_p1-r4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-61985?s=alpine&n=openssh&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C%3D9.7_p1-r4"
        }
      ]
    },
    {
      "id": "5c8cda68532667defb0c520b8a989d121c754669f88b16c2595bf30bd4df0a02",
      "category": "container_scanning",
      "message": "GHSA-7ww5-4wqc-m92c on github.com/containerd/containerd@1.6.22",
      "description": "# /sys/devices/virtual/powercap accessible by default to containers\n\nIntel's RAPL (Running Average Power Limit) feature, introduced by the Sandy Bridge microarchitecture, provides software insights into hardware energy consumption. To facilitate this, Intel introduced the powercap framework in Linux kernel 3.13, which reads values via relevant MSRs (model specific registers) and provides unprivileged userspace access via `sysfs`. As RAPL is an interface to access a hardware feature, it is only available when running on bare metal with the module compiled into the kernel.\n\nBy 2019, it was realized that in some cases unprivileged access to RAPL readings could be exploited as a power-based side-channel against security features including AES-NI (potentially inside a SGX enclave) and KASLR (kernel address space layout randomization). Also known as the [PLATYPUS attack](https://platypusattack.com/), Intel assigned [CVE-2020-8694](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694) and [CVE-2020-8695](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695), and AMD assigned [CVE-2020-12912](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912).\n\nSeveral mitigations were applied; Intel reduced the sampling resolution via a microcode update, and the Linux kernel [prevents access by non-root users](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71) since 5.10. However, this kernel-based mitigation does not apply to many container-based scenarios:\n* Unless using user namespaces, root inside a container has the same level of privilege as root outside the container, but with a slightly more narrow view of the system\n* `sysfs` is mounted inside containers read-only; however only read access is needed to carry out this attack on an unpatched CPU\n\nWhile this is not a direct vulnerability in container runtimes, defense in depth and safe defaults are valuable and preferred, especially as this poses a risk to multi-tenant container environments. This is provided by masking `/sys/devices/virtual/powercap` in the default mount configuration, and adding an additional set of rules to deny it in the default AppArmor profile.\n\nWhile `sysfs` is not the only way to read from the RAPL subsystem, other ways of accessing it require additional capabilities such as `CAP_SYS_RAWIO` which is not available to containers by default, or `perf` paranoia level less than 1, which is a non-default kernel tunable.\n\n## References\n\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912\n* https://platypusattack.com/\n* https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71\n* https://web.eece.maine.edu/~vweaver/projects/rapl/",
      "cve": "GHSA-7ww5-4wqc-m92c",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.6.22 to 1.6.26",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.6.22"
          },
          "version": "1.6.22"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-7ww5-4wqc-m92c",
          "value": "GHSA-7ww5-4wqc-m92c",
          "url": "https://scout.docker.com/v/GHSA-7ww5-4wqc-m92c?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C%3D1.6.25"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-7ww5-4wqc-m92c?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C%3D1.6.25"
        }
      ]
    },
    {
      "id": "128f0c0c9886e4413aeab786ea2c0ce2426a241d1a6d0662c1aabae62250f87b",
      "category": "container_scanning",
      "message": "CVE-2025-22866 on stdlib@1.22.5",
      "description": "Due to the usage of a variable time instruction in the assembly implementation of an internal function, a small number of bits of secret scalars are leaked on the ppc64le architecture. Due to the way this function is used, we do not believe this leakage is enough to allow recovery of the private key when P-256 is used in any well known protocols.",
      "cve": "CVE-2025-22866",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.22.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22866",
          "value": "CVE-2025-22866",
          "url": "https://scout.docker.com/v/CVE-2025-22866?s=golang&n=stdlib&t=golang&vr=%3C1.22.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22866?s=golang&n=stdlib&t=golang&vr=%3C1.22.12"
        }
      ]
    },
    {
      "id": "96a42e60440ac315b22431377d09568871255b5ebd4b0d4a647041d235e7f6db",
      "category": "container_scanning",
      "message": "CVE-2025-22866 on stdlib@1.21.11",
      "description": "Due to the usage of a variable time instruction in the assembly implementation of an internal function, a small number of bits of secret scalars are leaked on the ppc64le architecture. Due to the way this function is used, we do not believe this leakage is enough to allow recovery of the private key when P-256 is used in any well known protocols.",
      "cve": "CVE-2025-22866",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.22.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22866",
          "value": "CVE-2025-22866",
          "url": "https://scout.docker.com/v/CVE-2025-22866?s=golang&n=stdlib&t=golang&vr=%3C1.22.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22866?s=golang&n=stdlib&t=golang&vr=%3C1.22.12"
        }
      ]
    },
    {
      "id": "d7931769c86554798bf955b0009f88851b37178de4407445dd72676aa6b62cd2",
      "category": "container_scanning",
      "message": "CVE-2025-22866 on stdlib@1.20.13",
      "description": "Due to the usage of a variable time instruction in the assembly implementation of an internal function, a small number of bits of secret scalars are leaked on the ppc64le architecture. Due to the way this function is used, we do not believe this leakage is enough to allow recovery of the private key when P-256 is used in any well known protocols.",
      "cve": "CVE-2025-22866",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.22.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22866",
          "value": "CVE-2025-22866",
          "url": "https://scout.docker.com/v/CVE-2025-22866?s=golang&n=stdlib&t=golang&vr=%3C1.22.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22866?s=golang&n=stdlib&t=golang&vr=%3C1.22.12"
        }
      ]
    },
    {
      "id": "22409fe44adf025a87b6680c864c5ad68e2e5b501b11e7c1b96f09cf6e3d1bc6",
      "category": "container_scanning",
      "message": "CVE-2024-13176 on alpine/openssl@3.3.1-r3",
      "cve": "CVE-2024-13176",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.3.1-r3 to 3.3.2-r2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.3.1-r3?os_name=alpine&os_version=3.20"
          },
          "version": "3.3.1-r3"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-13176",
          "value": "CVE-2024-13176",
          "url": "https://scout.docker.com/v/CVE-2024-13176?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C3.3.2-r2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-13176?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C3.3.2-r2"
        }
      ]
    },
    {
      "id": "c14132f64fa5a0ca0e58aa7b9c3182e95fcda659029a1438da6f1c5bcbc82cf4",
      "category": "container_scanning",
      "message": "CVE-2025-0495 on github.com/docker/buildx@0.16.0",
      "description": "### Impact\nSome cache backends allow configuring their credentials by setting secrets directly as attribute values in `cache-to/cache-from` configuration. If this was done by the user, these secure values could be captured together with OpenTelemetry trace as part of the arguments and flags for the traced CLI command. Passing tokens to Github cache backend via environment variables or using registry authentication is not affected.\n\nIf you passed a token value like this and use a custom OpenTelemetry collector for computing traces you should make sure that your traces are kept secure. OpenTelemetry traces are also saved in BuildKit daemon's history records.\n\n### Patches\nIssue has been fixed in Buildx v0.21.3 or newer.\n\n### Workarounds\nAvoid passing cache backend credentials with CLI arguments. Make sure access to traces and BuildKit history records is kept secure.",
      "cve": "CVE-2025-0495",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/docker/buildx@0.16.0 to 0.21.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/buildx@0.16.0"
          },
          "version": "0.16.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-0495",
          "value": "CVE-2025-0495",
          "url": "https://scout.docker.com/v/CVE-2025-0495?s=github&n=buildx&ns=github.com%2Fdocker&t=golang&vr=%3C%3D0.21.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-0495?s=github&n=buildx&ns=github.com%2Fdocker&t=golang&vr=%3C%3D0.21.2"
        }
      ]
    },
    {
      "id": "d0acd1df30e0633970937d81c3512e6e544ed69b337e37f0b774c907bd754963",
      "category": "container_scanning",
      "message": "CVE-2023-45289 on stdlib@1.20.13",
      "description": "When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not.\n\nA maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded.",
      "cve": "CVE-2023-45289",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45289",
          "value": "CVE-2023-45289",
          "url": "https://scout.docker.com/v/CVE-2023-45289?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45289?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "ace8a363e1ce2f133c64ea09b5ba9d3a0f23270ef4c0ff0d535458bd258f2e80",
      "category": "container_scanning",
      "message": "CVE-2024-34155 on stdlib@1.20.13",
      "description": "Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion.",
      "cve": "CVE-2024-34155",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34155",
          "value": "CVE-2024-34155",
          "url": "https://scout.docker.com/v/CVE-2024-34155?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34155?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "5167a3228669f260ea9396fd7654b43b6584c988199fbb00cf0d539b8be6c48e",
      "category": "container_scanning",
      "message": "CVE-2024-34155 on stdlib@1.22.5",
      "description": "Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion.",
      "cve": "CVE-2024-34155",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34155",
          "value": "CVE-2024-34155",
          "url": "https://scout.docker.com/v/CVE-2024-34155?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34155?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "e0d4a8881e7f73732db07c00818a0a066dac2afbc4d261de180e7a421b66bf3b",
      "category": "container_scanning",
      "message": "CVE-2024-34155 on stdlib@1.21.11",
      "description": "Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion.",
      "cve": "CVE-2024-34155",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34155",
          "value": "CVE-2024-34155",
          "url": "https://scout.docker.com/v/CVE-2024-34155?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34155?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "7554cf550887bf11fdb1e384a3103f40d826e3e58d8605a696bcbe4e661c72ab",
      "category": "container_scanning",
      "message": "CVE-2024-9143 on alpine/openssl@3.3.1-r3",
      "cve": "CVE-2024-9143",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.3.1-r3 to 3.3.2-r1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.3.1-r3?os_name=alpine&os_version=3.20"
          },
          "version": "3.3.1-r3"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-9143",
          "value": "CVE-2024-9143",
          "url": "https://scout.docker.com/v/CVE-2024-9143?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C3.3.2-r1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-9143?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C3.3.2-r1"
        }
      ]
    },
    {
      "id": "80ca9d3a3209546ce0adf3249a3393d09053679e96d3eab20dfc76225c865160",
      "category": "container_scanning",
      "message": "CVE-2025-32728 on alpine/openssh@9.7_p1-r4",
      "cve": "CVE-2025-32728",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssh@9.7_p1-r4?os_name=alpine&os_version=3.20"
          },
          "version": "9.7_p1-r4"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-32728",
          "value": "CVE-2025-32728",
          "url": "https://scout.docker.com/v/CVE-2025-32728?s=alpine&n=openssh&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C%3D9.7_p1-r4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-32728?s=alpine&n=openssh&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C%3D9.7_p1-r4"
        }
      ]
    },
    {
      "id": "66bfde9bfb5abad49e145e5fa10d3302c6d87b2067d156d3382c1a780b640b44",
      "category": "container_scanning",
      "message": "CVE-2025-22870 on golang.org/x/net@0.17.0",
      "description": "Matching of hosts against proxy patterns can improperly treat an IPv6 zone ID as a hostname component. For example, when the NO_PROXY environment variable is set to \"*.example.com\", a request to \"[::1%25.example.com]:80` will incorrectly match and not be proxied.",
      "cve": "CVE-2025-22870",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.17.0 to 0.36.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.17.0"
          },
          "version": "0.17.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22870",
          "value": "CVE-2025-22870",
          "url": "https://scout.docker.com/v/CVE-2025-22870?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.36.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22870?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.36.0"
        }
      ]
    },
    {
      "id": "84e5d1bc93db8d2d333aa6b2ec5948dd151b72ff0fd3652e12b3aa4004d6fac6",
      "category": "container_scanning",
      "message": "CVE-2025-22870 on golang.org/x/net@0.25.0",
      "description": "Matching of hosts against proxy patterns can improperly treat an IPv6 zone ID as a hostname component. For example, when the NO_PROXY environment variable is set to \"*.example.com\", a request to \"[::1%25.example.com]:80` will incorrectly match and not be proxied.",
      "cve": "CVE-2025-22870",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.25.0 to 0.36.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.25.0"
          },
          "version": "0.25.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22870",
          "value": "CVE-2025-22870",
          "url": "https://scout.docker.com/v/CVE-2025-22870?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.36.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22870?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.36.0"
        }
      ]
    },
    {
      "id": "fc187ecdf71109e92c32250267a325c5f2b272a0620159f7cafd969598482a7b",
      "category": "container_scanning",
      "message": "CVE-2024-40635 on github.com/containerd/containerd@1.7.19",
      "description": "### Impact\nA bug was found in containerd where containers launched with a User set as a `UID:GID` larger than the maximum 32-bit signed integer can cause an overflow condition where the container ultimately runs as root (UID 0). This could cause unexpected behavior for environments that require containers to run as a non-root user.\n\n### Patches\nThis bug has been fixed in the following containerd versions: \n\n* 2.0.4 (Fixed in https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20)\n* 1.7.27 (Fixed in https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da)\n* 1.6.38 (Fixed in https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a)\n\nUsers should update to these versions to resolve the issue.\n\n### Workarounds\nEnsure that only trusted images are used and that only trusted users have permissions to import images.\n\n### Credits\nThe containerd project would like to thank [Benjamin Koltermann](https://github.com/p4ck3t0) and [emxll](https://github.com/emxll) for responsibly disclosing this issue in accordance with the [containerd security policy](https://github.com/containerd/project/blob/main/SECURITY.md).\n\n### References\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-40635\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)\n\nTo report a security issue in containerd:\n* [Report a new vulnerability](https://github.com/containerd/containerd/security/advisories/new)\n* Email us at [security@containerd.io](mailto:security@containerd.io)",
      "cve": "CVE-2024-40635",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.7.19 to 1.7.27",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.7.19"
          },
          "version": "1.7.19"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-40635",
          "value": "CVE-2024-40635",
          "url": "https://scout.docker.com/v/CVE-2024-40635?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.7.0-beta.0%2C%3C1.7.27"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-40635?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.7.0-beta.0%2C%3C1.7.27"
        }
      ]
    },
    {
      "id": "1e5734128fa5ae5f5014e2ae34ff64d85391093d5065beb0bff7c9f8e15fe78c",
      "category": "container_scanning",
      "message": "CVE-2024-40635 on github.com/containerd/containerd@1.7.20",
      "description": "### Impact\nA bug was found in containerd where containers launched with a User set as a `UID:GID` larger than the maximum 32-bit signed integer can cause an overflow condition where the container ultimately runs as root (UID 0). This could cause unexpected behavior for environments that require containers to run as a non-root user.\n\n### Patches\nThis bug has been fixed in the following containerd versions: \n\n* 2.0.4 (Fixed in https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20)\n* 1.7.27 (Fixed in https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da)\n* 1.6.38 (Fixed in https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a)\n\nUsers should update to these versions to resolve the issue.\n\n### Workarounds\nEnsure that only trusted images are used and that only trusted users have permissions to import images.\n\n### Credits\nThe containerd project would like to thank [Benjamin Koltermann](https://github.com/p4ck3t0) and [emxll](https://github.com/emxll) for responsibly disclosing this issue in accordance with the [containerd security policy](https://github.com/containerd/project/blob/main/SECURITY.md).\n\n### References\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-40635\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)\n\nTo report a security issue in containerd:\n* [Report a new vulnerability](https://github.com/containerd/containerd/security/advisories/new)\n* Email us at [security@containerd.io](mailto:security@containerd.io)",
      "cve": "CVE-2024-40635",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.7.20 to 1.7.27",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.7.20"
          },
          "version": "1.7.20"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-40635",
          "value": "CVE-2024-40635",
          "url": "https://scout.docker.com/v/CVE-2024-40635?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.7.0-beta.0%2C%3C1.7.27"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-40635?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.7.0-beta.0%2C%3C1.7.27"
        }
      ]
    },
    {
      "id": "ef97302c517e188b7e8a26f617a84e5d96cee93a28051a256dfcbf7a35fe158f",
      "category": "container_scanning",
      "message": "CVE-2024-40635 on github.com/containerd/containerd@1.6.22",
      "description": "### Impact\nA bug was found in containerd where containers launched with a User set as a `UID:GID` larger than the maximum 32-bit signed integer can cause an overflow condition where the container ultimately runs as root (UID 0). This could cause unexpected behavior for environments that require containers to run as a non-root user.\n\n### Patches\nThis bug has been fixed in the following containerd versions: \n\n* 2.0.4 (Fixed in https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20)\n* 1.7.27 (Fixed in https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da)\n* 1.6.38 (Fixed in https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a)\n\nUsers should update to these versions to resolve the issue.\n\n### Workarounds\nEnsure that only trusted images are used and that only trusted users have permissions to import images.\n\n### Credits\nThe containerd project would like to thank [Benjamin Koltermann](https://github.com/p4ck3t0) and [emxll](https://github.com/emxll) for responsibly disclosing this issue in accordance with the [containerd security policy](https://github.com/containerd/project/blob/main/SECURITY.md).\n\n### References\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-40635\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)\n\nTo report a security issue in containerd:\n* [Report a new vulnerability](https://github.com/containerd/containerd/security/advisories/new)\n* Email us at [security@containerd.io](mailto:security@containerd.io)",
      "cve": "CVE-2024-40635",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.6.22 to 1.6.38",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.6.22"
          },
          "version": "1.6.22"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-40635",
          "value": "CVE-2024-40635",
          "url": "https://scout.docker.com/v/CVE-2024-40635?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.6.38"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-40635?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.6.38"
        }
      ]
    },
    {
      "id": "f1ea678d49d76c87aaab6594180ecb4cf1372329d6c370b1d7f94a150f569ac7",
      "category": "container_scanning",
      "message": "CVE-2024-45310 on github.com/opencontainers/runc@1.1.12",
      "description": "### Impact\nrunc 1.1.13 and earlier as well as 1.2.0-rc2 and earlier can be tricked into\ncreating empty files or directories in arbitrary locations in the host\nfilesystem by sharing a volume between two containers and exploiting a race\nwith os.MkdirAll. While this can be used to create empty files, existing\nfiles **will not** be truncated.\n\nAn attacker must have the ability to start containers using some kind of custom\nvolume configuration. Containers using user namespaces are still affected, but\nthe scope of places an attacker can create inodes can be significantly reduced.\nSufficiently strict LSM policies (SELinux/Apparmor) can also in principle block\nthis attack -- we suspect the industry standard SELinux policy may restrict\nthis attack's scope but the exact scope of protection hasn't been analysed.\n\nThis is exploitable using runc directly as well as through Docker and\nKubernetes.\n\nThe CVSS score for this vulnerability is\nCVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:N/I:L/A:N (Low severity, 3.6).\n\n### Workarounds\nUsing user namespaces restricts this attack fairly significantly such that the\nattacker can only create inodes in directories that the remapped root\nuser/group has write access to. Unless the root user is remapped to an actual\nuser on the host (such as with rootless containers that don't use\n/etc/sub[ug]id), this in practice means that an attacker would only be able to\ncreate inodes in world-writable directories.\n\nA strict enough SELinux or AppArmor policy could in principle also restrict the\nscope if a specific label is applied to the runc runtime, though we haven't\nthoroughly tested to what extent the standard existing policies block this\nattack nor what exact policies are needed to sufficiently restrict this attack.\n\n### Patches\nFixed in runc v1.1.14 and v1.2.0-rc3.\n\n* `main` patches:\n  * https://github.com/opencontainers/runc/pull/4359\n  *  https://github.com/opencontainers/runc/commit/63c2908164f3a1daea455bf5bcd8d363d70328c7\n* `release-1.1` patches:\n  * https://github.com/opencontainers/runc/commit/8781993968fd964ac723ff5f360b6f259e809a3e\n  * https://github.com/opencontainers/runc/commit/f0b652ea61ff6750a8fcc69865d45a7abf37accf\n\n### Credits\nThanks to Rodrigo Campos Catelin (@rata) and Alban Crequy (@alban) from\nMicrosoft for discovering and reporting this vulnerability.",
      "cve": "CVE-2024-45310",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/opencontainers/runc@1.1.12 to 1.1.14",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/opencontainers/runc@1.1.12"
          },
          "version": "1.1.12"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45310",
          "value": "CVE-2024-45310",
          "url": "https://scout.docker.com/v/CVE-2024-45310?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.1.14"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45310?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.1.14"
        }
      ]
    },
    {
      "id": "c7e7465b3ddbc8615f2f441e3246f4133e150aac69cfef43de1a250599c3c751",
      "category": "container_scanning",
      "message": "CVE-2025-5025 on alpine/curl@8.9.0-r0",
      "cve": "CVE-2025-5025",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.9.0-r0 to 8.14.0-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.9.0-r0?os_name=alpine&os_version=3.20"
          },
          "version": "8.9.0-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-5025",
          "value": "CVE-2025-5025",
          "url": "https://scout.docker.com/v/CVE-2025-5025?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.14.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-5025?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.14.0-r0"
        }
      ]
    },
    {
      "id": "163bdb71bec38b03403e9a0462893047bb429da1f70dd16f126139861ce93188",
      "category": "container_scanning",
      "message": "CVE-2023-45288 on golang.org/x/net@0.17.0",
      "description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
      "cve": "CVE-2023-45288",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.17.0 to 0.23.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.17.0"
          },
          "version": "0.17.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45288",
          "value": "CVE-2023-45288",
          "url": "https://scout.docker.com/v/CVE-2023-45288?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.23.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45288?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.23.0"
        }
      ]
    },
    {
      "id": "e0d88d490873bab9cb23c03e33b0a5b5a018cfe7b1196d8e7865b6108dd4cc08",
      "category": "container_scanning",
      "message": "CVE-2024-23650 on github.com/moby/buildkit@0.11.7-0.20240124010513-435cb77e369c",
      "description": "### Impact\nA malicious BuildKit client or frontend could craft a request that could lead to BuildKit daemon crashing with a panic.\n\n### Patches\nThe issue has been fixed in v0.12.5\n\n### Workarounds\nAvoid using BuildKit frontends from untrusted sources. A frontend image is usually specified as the `#syntax` line on your Dockerfile, or with `--frontend` flag when using `buildctl build` command. \n\n### References\n\n",
      "cve": "CVE-2024-23650",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/moby/buildkit@0.11.7-0.20240124010513-435cb77e369c to 0.12.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/moby/buildkit@0.11.7-0.20240124010513-435cb77e369c"
          },
          "version": "0.11.7-0.20240124010513-435cb77e369c"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-23650",
          "value": "CVE-2024-23650",
          "url": "https://scout.docker.com/v/CVE-2024-23650?s=github&n=buildkit&ns=github.com%2Fmoby&t=golang&vr=%3C0.12.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-23650?s=github&n=buildkit&ns=github.com%2Fmoby&t=golang&vr=%3C0.12.5"
        }
      ]
    },
    {
      "id": "c64ec4a00991de7080c209754f2095734864b35a210d1b56e5abbbce66d0523a",
      "category": "container_scanning",
      "message": "CVE-2024-45338 on golang.org/x/net@0.25.0",
      "description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
      "cve": "CVE-2024-45338",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.25.0 to 0.33.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.25.0"
          },
          "version": "0.25.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45338",
          "value": "CVE-2024-45338",
          "url": "https://scout.docker.com/v/CVE-2024-45338?s=golang&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.33.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45338?s=golang&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.33.0"
        }
      ]
    },
    {
      "id": "fd79587dc7d6183504c37ebf212e9739a572401cb03249a25441a0ce560f1212",
      "category": "container_scanning",
      "message": "CVE-2024-45338 on golang.org/x/net@0.17.0",
      "description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
      "cve": "CVE-2024-45338",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.17.0 to 0.33.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.17.0"
          },
          "version": "0.17.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45338",
          "value": "CVE-2024-45338",
          "url": "https://scout.docker.com/v/CVE-2024-45338?s=golang&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.33.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45338?s=golang&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.33.0"
        }
      ]
    },
    {
      "id": "56d643dce16e9d1413da20c7708a2e1c5d9a9b555f3c8a574f5f4a4721c8a6bc",
      "category": "container_scanning",
      "message": "CVE-2025-10148 on alpine/curl@8.9.0-r0",
      "cve": "CVE-2025-10148",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.9.0-r0 to 8.14.1-r2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.9.0-r0?os_name=alpine&os_version=3.20"
          },
          "version": "8.9.0-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-10148",
          "value": "CVE-2025-10148",
          "url": "https://scout.docker.com/v/CVE-2025-10148?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.14.1-r2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-10148?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.14.1-r2"
        }
      ]
    },
    {
      "id": "44ba487f91125a030924df8c6f6dbd85832f243e5d7523d8bbedb1b12ac06abb",
      "category": "container_scanning",
      "message": "CVE-2025-22872 on golang.org/x/net@0.17.0",
      "description": "The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. <math>, <svg>, etc contexts).",
      "cve": "CVE-2025-22872",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.17.0 to 0.38.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.17.0"
          },
          "version": "0.17.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22872",
          "value": "CVE-2025-22872",
          "url": "https://scout.docker.com/v/CVE-2025-22872?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.38.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22872?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.38.0"
        }
      ]
    },
    {
      "id": "decbbdb72af86d0aef35677f23a2d330af2ace6e4752ebc6d96db171b9125495",
      "category": "container_scanning",
      "message": "CVE-2025-22872 on golang.org/x/net@0.25.0",
      "description": "The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. <math>, <svg>, etc contexts).",
      "cve": "CVE-2025-22872",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.25.0 to 0.38.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.25.0"
          },
          "version": "0.25.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22872",
          "value": "CVE-2025-22872",
          "url": "https://scout.docker.com/v/CVE-2025-22872?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.38.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22872?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.38.0"
        }
      ]
    },
    {
      "id": "d71a43768c51c5d9d53cc7035dc29d2c4770c096701a264d62d1cfba54da5eff",
      "category": "container_scanning",
      "message": "CVE-2025-47912 on stdlib@1.21.11",
      "description": "The Parse function permits values other than IPv6 addresses to be included in square brackets within the host component of a URL. RFC 3986 permits IPv6 addresses to be included within the host component, enclosed within square brackets. For example: \"http://[::1]/\". IPv4 addresses and hostnames must not appear within square brackets. Parse did not enforce this requirement.",
      "cve": "CVE-2025-47912",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-47912",
          "value": "CVE-2025-47912",
          "url": "https://scout.docker.com/v/CVE-2025-47912?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-47912?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "9191e62521163a3427e751dc1264c65105291ba5568cbc70b91fd480565a7007",
      "category": "container_scanning",
      "message": "CVE-2025-47912 on stdlib@1.22.5",
      "description": "The Parse function permits values other than IPv6 addresses to be included in square brackets within the host component of a URL. RFC 3986 permits IPv6 addresses to be included within the host component, enclosed within square brackets. For example: \"http://[::1]/\". IPv4 addresses and hostnames must not appear within square brackets. Parse did not enforce this requirement.",
      "cve": "CVE-2025-47912",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-47912",
          "value": "CVE-2025-47912",
          "url": "https://scout.docker.com/v/CVE-2025-47912?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-47912?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "76b38d9fab8df3a8ba8564633fd734e4a2d621fa252c7ba1eabb957e80b1879e",
      "category": "container_scanning",
      "message": "CVE-2025-47912 on stdlib@1.20.13",
      "description": "The Parse function permits values other than IPv6 addresses to be included in square brackets within the host component of a URL. RFC 3986 permits IPv6 addresses to be included within the host component, enclosed within square brackets. For example: \"http://[::1]/\". IPv4 addresses and hostnames must not appear within square brackets. Parse did not enforce this requirement.",
      "cve": "CVE-2025-47912",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-47912",
          "value": "CVE-2025-47912",
          "url": "https://scout.docker.com/v/CVE-2025-47912?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-47912?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "f6b2c21ede3a8f051b6f108567b82dd673c112af1ae67b8c22cc47e75b80908d",
      "category": "container_scanning",
      "message": "CVE-2025-58185 on stdlib@1.20.13",
      "description": "Parsing a maliciously crafted DER payload could allocate large amounts of memory, causing memory exhaustion.",
      "cve": "CVE-2025-58185",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58185",
          "value": "CVE-2025-58185",
          "url": "https://scout.docker.com/v/CVE-2025-58185?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58185?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "f7bf16ad0ea2460b80da168035099dffd713d8df060eaef308e8b6124b0f050c",
      "category": "container_scanning",
      "message": "CVE-2025-58185 on stdlib@1.21.11",
      "description": "Parsing a maliciously crafted DER payload could allocate large amounts of memory, causing memory exhaustion.",
      "cve": "CVE-2025-58185",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58185",
          "value": "CVE-2025-58185",
          "url": "https://scout.docker.com/v/CVE-2025-58185?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58185?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "11159fd7558b53d7aa4eb1f8aa78c40d9520a41aeea15f752a25c2252884f3fc",
      "category": "container_scanning",
      "message": "CVE-2025-58185 on stdlib@1.22.5",
      "description": "Parsing a maliciously crafted DER payload could allocate large amounts of memory, causing memory exhaustion.",
      "cve": "CVE-2025-58185",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58185",
          "value": "CVE-2025-58185",
          "url": "https://scout.docker.com/v/CVE-2025-58185?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58185?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "d256304f0121202b607acc791c9e6e03cbe79f09a4dff9d0f7a6d8d23615b30a",
      "category": "container_scanning",
      "message": "CVE-2025-58186 on stdlib@1.21.11",
      "description": "Despite HTTP headers having a default limit of 1MB, the number of cookies that can be parsed does not have a limit. By sending a lot of very small cookies such as \"a=;\", an attacker can make an HTTP server allocate a large amount of structs, causing large memory consumption.",
      "cve": "CVE-2025-58186",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58186",
          "value": "CVE-2025-58186",
          "url": "https://scout.docker.com/v/CVE-2025-58186?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58186?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "2e01f73f82c099df4fa3a20aec9a3c5391619ef5607374e65a604134f000083f",
      "category": "container_scanning",
      "message": "CVE-2025-58186 on stdlib@1.20.13",
      "description": "Despite HTTP headers having a default limit of 1MB, the number of cookies that can be parsed does not have a limit. By sending a lot of very small cookies such as \"a=;\", an attacker can make an HTTP server allocate a large amount of structs, causing large memory consumption.",
      "cve": "CVE-2025-58186",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58186",
          "value": "CVE-2025-58186",
          "url": "https://scout.docker.com/v/CVE-2025-58186?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58186?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "168aa3b17383c186c4243fca11a5621b34e6993fc5604ac7dc9e2835e58e9129",
      "category": "container_scanning",
      "message": "CVE-2025-58186 on stdlib@1.22.5",
      "description": "Despite HTTP headers having a default limit of 1MB, the number of cookies that can be parsed does not have a limit. By sending a lot of very small cookies such as \"a=;\", an attacker can make an HTTP server allocate a large amount of structs, causing large memory consumption.",
      "cve": "CVE-2025-58186",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58186",
          "value": "CVE-2025-58186",
          "url": "https://scout.docker.com/v/CVE-2025-58186?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58186?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "56143fbf128b9d8c4f124cd052ace1701c03f7e2aacafc56805d019ee37df9bb",
      "category": "container_scanning",
      "message": "CVE-2025-58189 on stdlib@1.22.5",
      "description": "When Conn.Handshake fails during ALPN negotiation the error contains attacker controlled information (the ALPN protocols sent by the client) which is not escaped.",
      "cve": "CVE-2025-58189",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58189",
          "value": "CVE-2025-58189",
          "url": "https://scout.docker.com/v/CVE-2025-58189?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58189?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "9496e8e2add7a5e3e16ee8b1313b4a4c152751ea0b1a54cf60940110af49894c",
      "category": "container_scanning",
      "message": "CVE-2025-58189 on stdlib@1.21.11",
      "description": "When Conn.Handshake fails during ALPN negotiation the error contains attacker controlled information (the ALPN protocols sent by the client) which is not escaped.",
      "cve": "CVE-2025-58189",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58189",
          "value": "CVE-2025-58189",
          "url": "https://scout.docker.com/v/CVE-2025-58189?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58189?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "aa2f1d7f19d3e2c80c3cdfedc82131c3e977e118f7e4836984fa62ac1bc073e5",
      "category": "container_scanning",
      "message": "CVE-2025-58189 on stdlib@1.20.13",
      "description": "When Conn.Handshake fails during ALPN negotiation the error contains attacker controlled information (the ALPN protocols sent by the client) which is not escaped.",
      "cve": "CVE-2025-58189",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58189",
          "value": "CVE-2025-58189",
          "url": "https://scout.docker.com/v/CVE-2025-58189?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58189?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "82d893ef1d13c15782bcbd206e9c98bf12b1d590df7a39508f3adb55f4b4a242",
      "category": "container_scanning",
      "message": "CVE-2025-61724 on stdlib@1.20.13",
      "description": "The Reader.ReadResponse function constructs a response string through repeated string concatenation of lines. When the number of lines in a response is large, this can cause excessive CPU consumption.",
      "cve": "CVE-2025-61724",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-61724",
          "value": "CVE-2025-61724",
          "url": "https://scout.docker.com/v/CVE-2025-61724?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-61724?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "363e2a7e94265a3656080617dea30fae88078ec62e5c25519870e6936721ca0a",
      "category": "container_scanning",
      "message": "CVE-2025-61724 on stdlib@1.22.5",
      "description": "The Reader.ReadResponse function constructs a response string through repeated string concatenation of lines. When the number of lines in a response is large, this can cause excessive CPU consumption.",
      "cve": "CVE-2025-61724",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-61724",
          "value": "CVE-2025-61724",
          "url": "https://scout.docker.com/v/CVE-2025-61724?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-61724?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "6cef6b91e9bf66cd2850708d1993052298f09cc7f1849d38c3c95a06e7134070",
      "category": "container_scanning",
      "message": "CVE-2025-61724 on stdlib@1.21.11",
      "description": "The Reader.ReadResponse function constructs a response string through repeated string concatenation of lines. When the number of lines in a response is large, this can cause excessive CPU consumption.",
      "cve": "CVE-2025-61724",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-61724",
          "value": "CVE-2025-61724",
          "url": "https://scout.docker.com/v/CVE-2025-61724?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-61724?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "b097a1224f698c747a555c7ac47b2a6c98bc56b5ac8b1071f53e80d5fe41d640",
      "category": "container_scanning",
      "message": "GHSA-2464-8j7c-4cjm on github.com/go-viper/mapstructure@2.0.0",
      "description": "### Summary\n\nUse of this library in a security-critical context may result in leaking sensitive information, if used to process sensitive fields.\n\n### Details\n\nOpenBao (and presumably HashiCorp Vault) have surfaced error messages from `mapstructure` as follows:\n\nhttps://github.com/openbao/openbao/blob/98c3a59c040efca724353ca46ca79bd5cdbab920/sdk/framework/field_data.go#L43-L50\n\n```go\n\t\t\t_, _, err := d.getPrimitive(field, schema)\n\t\t\tif err != nil {\n\t\t\t\treturn fmt.Errorf(\"error converting input for field %q: %w\", field, err)\n\t\t\t}\n```\n\nwhere this calls `mapstructure.WeakDecode(...)`: https://github.com/openbao/openbao/blob/98c3a59c040efca724353ca46ca79bd5cdbab920/sdk/framework/field_data.go#L181-L193\n\n```go\n\nfunc (d *FieldData) getPrimitive(k string, schema *FieldSchema) (interface{}, bool, error) {\n\traw, ok := d.Raw[k]\n\tif !ok {\n\t\treturn nil, false, nil\n\t}\n\n\tswitch t := schema.Type; t {\n\tcase TypeBool:\n\t\tvar result bool\n\t\tif err := mapstructure.WeakDecode(raw, &result); err != nil {\n\t\t\treturn nil, false, err\n\t\t}\n\t\treturn result, true, nil\n```\n\nNotably, `WeakDecode(...)` eventually calls one of the decode helpers, which surfaces the original value via `strconv` helpers:\n\nhttps://github.com/go-viper/mapstructure/blob/8c61ec1924fcfa522f9fc6b4618c672db61d1a38/mapstructure.go#L720-L727\n\nhttps://github.com/go-viper/mapstructure/blob/8c61ec1924fcfa522f9fc6b4618c672db61d1a38/mapstructure.go#L791-L798\n\nhttps://github.com/go-viper/mapstructure/blob/8c61ec1924fcfa522f9fc6b4618c672db61d1a38/decode_hooks.go#L180\n\n& more. These are different code paths than are fixed in the previous iteration at https://github.com/go-viper/mapstructure/security/advisories/GHSA-fv92-fjc5-jj9h.\n\n### PoC\n\nTo reproduce with OpenBao:\n\n```\n$ podman run --pull=always -p 8300:8300 openbao/openbao:latest server -dev -dev-root-token-id=root -dev-listen-address=0.0.0.0:8300\n```\n\nand in a new tab:\n\n```\n$ BAO_TOKEN=root BAO_ADDR=http://localhost:8300 bao auth enable userpass\nSuccess! Enabled userpass auth method at: userpass/\n$ curl -X PUT -H \"X-Vault-Request: true\" -H \"X-Vault-Token: root\" -d '{\"ttl\":\"asdf\"}' \"http://localhost:8200/v1/auth/userpass/users/asdf\"\n\n--> server logs:\n\n2025-06-25T21:32:25.101-0500 [ERROR] core: failed to run existence check: error=\"error converting input for field \\\"ttl\\\": time: invalid duration \\\"asdf\\\"\"\n```\n\n### Impact\n\nThis is an information disclosure bug with little mitigation. See https://discuss.hashicorp.com/t/hcsec-2025-09-vault-may-expose-sensitive-information-in-error-logs-when-processing-malformed-data-with-the-kv-v2-plugin/74717 for a previous version. That version was fixed, but this is in the second part of that error message (starting at `'' expected a map, got 'string'` -- when the field type is `string` and a `map` is provided, we see the above information leak -- the previous example had a `map` type field with a `string` value provided).\n\nThis was rated 4.5 Medium by HashiCorp in the past iteration.",
      "cve": "GHSA-2464-8j7c-4cjm",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/go-viper/mapstructure@2.0.0 to 2.4.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/go-viper/mapstructure@2.0.0#v2"
          },
          "version": "2.0.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-2464-8j7c-4cjm",
          "value": "GHSA-2464-8j7c-4cjm",
          "url": "https://scout.docker.com/v/GHSA-2464-8j7c-4cjm?s=github&n=v2&ns=github.com%2Fgo-viper%2Fmapstructure&t=golang&vr=%3C%3D2.3.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-2464-8j7c-4cjm?s=github&n=v2&ns=github.com%2Fgo-viper%2Fmapstructure&t=golang&vr=%3C%3D2.3.0"
        }
      ]
    },
    {
      "id": "3bc16396b8ed983cd201d0529e82afd8883e1fbd572a3633e688152c6f952579",
      "category": "container_scanning",
      "message": "GHSA-fv92-fjc5-jj9h on github.com/go-viper/mapstructure@2.0.0",
      "description": "### Summary\n\nUse of this library in a security-critical context may result in leaking sensitive information, if used to process sensitive fields.\n\n### Details\n\nOpenBao (and presumably HashiCorp Vault) have surfaced error messages from `mapstructure` as follows:\n\nhttps://github.com/openbao/openbao/blob/98c3a59c040efca724353ca46ca79bd5cdbab920/sdk/framework/field_data.go#L43-L50\n\n```go\n\t\t\t_, _, err := d.getPrimitive(field, schema)\n\t\t\tif err != nil {\n\t\t\t\treturn fmt.Errorf(\"error converting input for field %q: %w\", field, err)\n\t\t\t}\n```\n\nwhere this calls `mapstructure.WeakDecode(...)`: https://github.com/openbao/openbao/blob/98c3a59c040efca724353ca46ca79bd5cdbab920/sdk/framework/field_data.go#L181-L193\n\n```go\n\nfunc (d *FieldData) getPrimitive(k string, schema *FieldSchema) (interface{}, bool, error) {\n\traw, ok := d.Raw[k]\n\tif !ok {\n\t\treturn nil, false, nil\n\t}\n\n\tswitch t := schema.Type; t {\n\tcase TypeBool:\n\t\tvar result bool\n\t\tif err := mapstructure.WeakDecode(raw, &result); err != nil {\n\t\t\treturn nil, false, err\n\t\t}\n\t\treturn result, true, nil\n```\n\nNotably, `WeakDecode(...)` eventually calls one of the decode helpers, which surfaces the original value:\n\nhttps://github.com/go-viper/mapstructure/blob/1a66224d5e54d8757f63bd66339cf764c3292c21/mapstructure.go#L679-L686\n\nhttps://github.com/go-viper/mapstructure/blob/1a66224d5e54d8757f63bd66339cf764c3292c21/mapstructure.go#L726-L730\n\nhttps://github.com/go-viper/mapstructure/blob/1a66224d5e54d8757f63bd66339cf764c3292c21/mapstructure.go#L783-L787\n\n& more.\n\n### PoC\n\nTo reproduce with OpenBao:\n\n```\n$ podman run -p 8300:8300 openbao/openbao:latest server -dev -dev-root-token-id=root -dev-listen-address=0.0.0.0:8300\n```\n\nand in a new tab:\n\n```\n$ BAO_TOKEN=root BAO_ADDR=http://localhost:8300 bao auth enable userpass\nSuccess! Enabled userpass auth method at: userpass/\n$ curl -X PUT -H \"X-Vault-Request: true\" -H \"X-Vault-Token: root\" -d '{\"password\":{\"asdf\":\"my-sensitive-value\"}}' \"http://localhost:8300/v1/auth/userpass/users/adsf\"\n{\"errors\":[\"error converting input for field \\\"password\\\": '' expected type 'string', got unconvertible type 'map[string]interface {}', value: 'map[asdf:my-sensitive-value]'\"]}\n```\n\n### Impact\n\nThis is an information disclosure bug with little mitigation. See https://discuss.hashicorp.com/t/hcsec-2025-09-vault-may-expose-sensitive-information-in-error-logs-when-processing-malformed-data-with-the-kv-v2-plugin/74717 for a previous version. That version was fixed, but this is in the second part of that error message (starting at `'' expected a map, got 'string'` -- when the field type is `string` and a `map` is provided, we see the above information leak -- the previous example had a `map` type field with a `string` value provided).\n\nThis was rated 4.5 Medium by HashiCorp in the past iteration.",
      "cve": "GHSA-fv92-fjc5-jj9h",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/go-viper/mapstructure@2.0.0 to 2.3.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/go-viper/mapstructure@2.0.0#v2"
          },
          "version": "2.0.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-fv92-fjc5-jj9h",
          "value": "GHSA-fv92-fjc5-jj9h",
          "url": "https://scout.docker.com/v/GHSA-fv92-fjc5-jj9h?s=github&n=v2&ns=github.com%2Fgo-viper%2Fmapstructure&t=golang&vr=%3C2.3.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-fv92-fjc5-jj9h?s=github&n=v2&ns=github.com%2Fgo-viper%2Fmapstructure&t=golang&vr=%3C2.3.0"
        }
      ]
    },
    {
      "id": "890a61d940675c852c6a47e9f63d62fb5578f8e7d8111cfcce79f7328e8b8edc",
      "category": "container_scanning",
      "message": "CVE-2024-24785 on stdlib@1.20.13",
      "description": "If errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates.",
      "cve": "CVE-2024-24785",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24785",
          "value": "CVE-2024-24785",
          "url": "https://scout.docker.com/v/CVE-2024-24785?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24785?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "89572b53395bd54b1527d27f582da06ea8eb43b7cedb7de9a56c7ef4e11c473c",
      "category": "container_scanning",
      "message": "CVE-2024-24789 on stdlib@1.20.13",
      "description": "The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.",
      "cve": "CVE-2024-24789",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.21.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24789",
          "value": "CVE-2024-24789",
          "url": "https://scout.docker.com/v/CVE-2024-24789?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24789?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ]
    },
    {
      "id": "abd5e23fbd6f9023263a298768a64632178e8c135d33cf118f71bb400e4c8afd",
      "category": "container_scanning",
      "message": "CVE-2025-0913 on stdlib@1.22.5",
      "description": "os.OpenFile(path, os.O_CREATE|O_EXCL) behaved differently on Unix and Windows systems when the target path was a dangling symlink. On Unix systems, OpenFile with O_CREATE and O_EXCL flags never follows symlinks. On Windows, when the target path was a symlink to a nonexistent location, OpenFile would create a file in that location. OpenFile now always returns an error when the O_CREATE and O_EXCL flags are both set and the target path is a symlink.",
      "cve": "CVE-2025-0913",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.23.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-0913",
          "value": "CVE-2025-0913",
          "url": "https://scout.docker.com/v/CVE-2025-0913?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-0913?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ]
    },
    {
      "id": "de3a42e96c2b573d8edd6b9ddbaa76a044924d92fe02828178f25289b3da57f7",
      "category": "container_scanning",
      "message": "CVE-2025-0913 on stdlib@1.21.11",
      "description": "os.OpenFile(path, os.O_CREATE|O_EXCL) behaved differently on Unix and Windows systems when the target path was a dangling symlink. On Unix systems, OpenFile with O_CREATE and O_EXCL flags never follows symlinks. On Windows, when the target path was a symlink to a nonexistent location, OpenFile would create a file in that location. OpenFile now always returns an error when the O_CREATE and O_EXCL flags are both set and the target path is a symlink.",
      "cve": "CVE-2025-0913",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.23.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-0913",
          "value": "CVE-2025-0913",
          "url": "https://scout.docker.com/v/CVE-2025-0913?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-0913?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ]
    },
    {
      "id": "874121c34490f23e1e520ceac01c1df65b6bf1c9c87385b081f7ae96643951c2",
      "category": "container_scanning",
      "message": "CVE-2025-0913 on stdlib@1.20.13",
      "description": "os.OpenFile(path, os.O_CREATE|O_EXCL) behaved differently on Unix and Windows systems when the target path was a dangling symlink. On Unix systems, OpenFile with O_CREATE and O_EXCL flags never follows symlinks. On Windows, when the target path was a symlink to a nonexistent location, OpenFile would create a file in that location. OpenFile now always returns an error when the O_CREATE and O_EXCL flags are both set and the target path is a symlink.",
      "cve": "CVE-2025-0913",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.23.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-0913",
          "value": "CVE-2025-0913",
          "url": "https://scout.docker.com/v/CVE-2025-0913?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-0913?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ]
    },
    {
      "id": "1d3ac3f906e9bda866154fc88cf720e3be85f8f49bccd561cff5b02aeb38d981",
      "category": "container_scanning",
      "message": "CVE-2023-48795 on golang.org/x/crypto@0.14.0",
      "description": "### Summary\n\nTerrapin is a prefix truncation attack targeting the SSH protocol. More precisely, Terrapin breaks the integrity of SSH's secure channel. By carefully adjusting the sequence numbers during the handshake, an attacker can remove an arbitrary amount of messages sent by the client or server at the beginning of the secure channel without the client or server noticing it.\n\n### Mitigations\n\nTo mitigate this protocol vulnerability, OpenSSH suggested a so-called \"strict kex\" which alters the SSH handshake to ensure a Man-in-the-Middle attacker cannot introduce unauthenticated messages as well as convey sequence number manipulation across handshakes.\n\n**Warning: To take effect, both the client and server must support this countermeasure.** \n\nAs a stop-gap measure, peers may also (temporarily) disable the affected algorithms and use unaffected alternatives like AES-GCM instead until patches are available.\n\n### Details\n\nThe SSH specifications of ChaCha20-Poly1305 (chacha20-poly1305@openssh.com) and Encrypt-then-MAC (*-etm@openssh.com MACs) are vulnerable against an arbitrary prefix truncation attack (a.k.a. Terrapin attack). This allows for an extension negotiation downgrade by stripping the SSH_MSG_EXT_INFO sent after the first message after SSH_MSG_NEWKEYS, downgrading security, and disabling attack countermeasures in some versions of OpenSSH. When targeting Encrypt-then-MAC, this attack requires the use of a CBC cipher to be practically exploitable due to the internal workings of the cipher mode. Additionally, this novel attack technique can be used to exploit previously unexploitable implementation flaws in a Man-in-the-Middle scenario.\n\nThe attack works by an attacker injecting an arbitrary number of SSH_MSG_IGNORE messages during the initial key exchange and consequently removing the same number of messages just after the initial key exchange has concluded. This is possible due to missing authentication of the excess SSH_MSG_IGNORE messages and the fact that the implicit sequence numbers used within the SSH protocol are only checked after the initial key exchange.\n\nIn the case of ChaCha20-Poly1305, the attack is guaranteed to work on every connection as this cipher does not maintain an internal state other than the message's sequence number. In the case of Encrypt-Then-MAC, practical exploitation requires the use of a CBC cipher; while theoretical integrity is broken for all ciphers when using this mode, message processing will fail at the application layer for CTR and stream ciphers.\n\nFor more details see [https://terrapin-attack.com](https://terrapin-attack.com). \n\n### Impact\n\nThis attack targets the specification of ChaCha20-Poly1305 (chacha20-poly1305@openssh.com) and Encrypt-then-MAC (*-etm@openssh.com), which are widely adopted by well-known SSH implementations and can be considered de-facto standard. These algorithms can be practically exploited; however, in the case of Encrypt-Then-MAC, we additionally require the use of a CBC cipher. As a consequence, this attack works against all well-behaving SSH implementations supporting either of those algorithms and can be used to downgrade (but not fully strip) connection security in case SSH extension negotiation (RFC8308) is supported. The attack may also enable attackers to exploit certain implementation flaws in a man-in-the-middle (MitM) scenario.",
      "cve": "CVE-2023-48795",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/crypto@0.14.0 to 0.17.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/crypto@0.14.0"
          },
          "version": "0.14.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-48795",
          "value": "CVE-2023-48795",
          "url": "https://scout.docker.com/v/CVE-2023-48795?s=github&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3E%3D0.1.0%2C%3C0.17.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-48795?s=github&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3E%3D0.1.0%2C%3C0.17.0"
        }
      ]
    },
    {
      "id": "d4d7414dd980bebd72e415932ded3c75b6925c375fbd19a6a39e30e5df901f65",
      "category": "container_scanning",
      "message": "CVE-2024-10846 on github.com/compose-spec/compose-go@2.1.5",
      "description": "### Impact\nThe `compose-go` library component in versions `v2.10-v2.4.0` allows an authorized user who sends malicious YAML payloads to cause the `compose-go` to consume excessive amount of Memory and CPU cycles while parsing YAML, such as used by Docker Compose from versions ` v2.27.0` to `v2.29.7` included\n\n### Patches\ncompose-go `v2.24.1` fixed the issue\n\n### Workarounds\nThere isn't any known workaround.\n\n### References\n* https://github.com/docker/compose/issues/12235\n* https://github.com/compose-spec/compose-go/pull/703\n\n* https://github.com/compose-spec/compose-go/pull/618\n* https://github.com/docker/compose/commit/d239f0f3187a2ed5404c61f83bd5e995c81600ff#diff-33ef32bf6c23acb95f5902d7097b7a1d5128ca061167ec0716715b0b9eeaa5f6R10",
      "cve": "CVE-2024-10846",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/compose-spec/compose-go@2.1.5 to 2.4.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/compose-spec/compose-go@2.1.5#v2"
          },
          "version": "2.1.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-10846",
          "value": "CVE-2024-10846",
          "url": "https://scout.docker.com/v/CVE-2024-10846?s=github&n=v2&ns=github.com%2Fcompose-spec%2Fcompose-go&t=golang&vr=%3E%3D2.1.0%2C%3C2.4.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-10846?s=github&n=v2&ns=github.com%2Fcompose-spec%2Fcompose-go&t=golang&vr=%3E%3D2.1.0%2C%3C2.4.1"
        }
      ]
    },
    {
      "id": "0fc4d16c8d753f22775671f304fc4dfecece0a137f4ce0f29a6c361cba30b052",
      "category": "container_scanning",
      "message": "CVE-2024-10846 on github.com/compose-spec/compose-go@2.1.3",
      "description": "### Impact\nThe `compose-go` library component in versions `v2.10-v2.4.0` allows an authorized user who sends malicious YAML payloads to cause the `compose-go` to consume excessive amount of Memory and CPU cycles while parsing YAML, such as used by Docker Compose from versions ` v2.27.0` to `v2.29.7` included\n\n### Patches\ncompose-go `v2.24.1` fixed the issue\n\n### Workarounds\nThere isn't any known workaround.\n\n### References\n* https://github.com/docker/compose/issues/12235\n* https://github.com/compose-spec/compose-go/pull/703\n\n* https://github.com/compose-spec/compose-go/pull/618\n* https://github.com/docker/compose/commit/d239f0f3187a2ed5404c61f83bd5e995c81600ff#diff-33ef32bf6c23acb95f5902d7097b7a1d5128ca061167ec0716715b0b9eeaa5f6R10",
      "cve": "CVE-2024-10846",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/compose-spec/compose-go@2.1.3 to 2.4.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/compose-spec/compose-go@2.1.3#v2"
          },
          "version": "2.1.3"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-10846",
          "value": "CVE-2024-10846",
          "url": "https://scout.docker.com/v/CVE-2024-10846?s=github&n=v2&ns=github.com%2Fcompose-spec%2Fcompose-go&t=golang&vr=%3E%3D2.1.0%2C%3C2.4.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-10846?s=github&n=v2&ns=github.com%2Fcompose-spec%2Fcompose-go&t=golang&vr=%3E%3D2.1.0%2C%3C2.4.1"
        }
      ]
    },
    {
      "id": "0a0fb80458b800ffc9fba7ac27ab92f38fe9e6a9487f5ea230477a363beac7bc",
      "category": "container_scanning",
      "message": "CVE-2024-24783 on stdlib@1.20.13",
      "description": "Verifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic.\n\nThis affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates.",
      "cve": "CVE-2024-24783",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24783",
          "value": "CVE-2024-24783",
          "url": "https://scout.docker.com/v/CVE-2024-24783?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24783?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "70a0b22c4fc7f0b4dadb0f046fe141eabeacdb39bd7e924b25e51b49dd16faac",
      "category": "container_scanning",
      "message": "CVE-2024-50602 on alpine/expat@2.6.2-r0",
      "cve": "CVE-2024-50602",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/expat@2.6.2-r0 to 2.6.4-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/expat@2.6.2-r0?os_name=alpine&os_version=3.20"
          },
          "version": "2.6.2-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-50602",
          "value": "CVE-2024-50602",
          "url": "https://scout.docker.com/v/CVE-2024-50602?s=alpine&n=expat&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.6.4-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-50602?s=alpine&n=expat&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.6.4-r0"
        }
      ]
    },
    {
      "id": "e5255a191f0f08e317da5c58414a6c80a774bba6c38de27144aebb38a013e13e",
      "category": "container_scanning",
      "message": "CVE-2025-26466 on alpine/openssh@9.7_p1-r4",
      "cve": "CVE-2025-26466",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssh@9.7_p1-r4 to 9.7_p1-r5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssh@9.7_p1-r4?os_name=alpine&os_version=3.20"
          },
          "version": "9.7_p1-r4"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-26466",
          "value": "CVE-2025-26466",
          "url": "https://scout.docker.com/v/CVE-2025-26466?s=alpine&n=openssh&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C9.7_p1-r5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-26466?s=alpine&n=openssh&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C9.7_p1-r5"
        }
      ]
    },
    {
      "id": "0b27e6dec8390461dc48503d028a92235efe06fe49c675428d51ac48617d7542",
      "category": "container_scanning",
      "message": "CVE-2025-9232 on alpine/openssl@3.3.1-r3",
      "cve": "CVE-2025-9232",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.3.1-r3 to 3.3.5-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.3.1-r3?os_name=alpine&os_version=3.20"
          },
          "version": "3.3.1-r3"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-9232",
          "value": "CVE-2025-9232",
          "url": "https://scout.docker.com/v/CVE-2025-9232?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C3.3.5-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-9232?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C3.3.5-r0"
        }
      ]
    },
    {
      "id": "a9a683e29f202ff99ef69a99848b467125a2a69196415a2b41fdd2458cb4301c",
      "category": "container_scanning",
      "message": "CVE-2024-45336 on stdlib@1.21.11",
      "description": "The HTTP client drops sensitive headers after following a cross-domain redirect. For example, a request to a.com/ containing an Authorization header which is redirected to b.com/ will not send that header to b.com.\n\nIn the event that the client received a subsequent same-domain redirect, however, the sensitive headers would be restored. For example, a chain of redirects from a.com/, to b.com/1, and finally to b.com/2 would incorrectly send the Authorization header to b.com/2.",
      "cve": "CVE-2024-45336",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.22.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45336",
          "value": "CVE-2024-45336",
          "url": "https://scout.docker.com/v/CVE-2024-45336?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45336?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ]
    },
    {
      "id": "4417d8b16fac602b34b86b123f67e73cc333f2a01f5f5f9a41927b417422c850",
      "category": "container_scanning",
      "message": "CVE-2024-45336 on stdlib@1.22.5",
      "description": "The HTTP client drops sensitive headers after following a cross-domain redirect. For example, a request to a.com/ containing an Authorization header which is redirected to b.com/ will not send that header to b.com.\n\nIn the event that the client received a subsequent same-domain redirect, however, the sensitive headers would be restored. For example, a chain of redirects from a.com/, to b.com/1, and finally to b.com/2 would incorrectly send the Authorization header to b.com/2.",
      "cve": "CVE-2024-45336",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.22.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45336",
          "value": "CVE-2024-45336",
          "url": "https://scout.docker.com/v/CVE-2024-45336?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45336?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ]
    },
    {
      "id": "6c94725c222e8d42910cd7ce9c366379432e9f5ecbc5d0ff744fab0202ef7ee1",
      "category": "container_scanning",
      "message": "CVE-2024-45336 on stdlib@1.20.13",
      "description": "The HTTP client drops sensitive headers after following a cross-domain redirect. For example, a request to a.com/ containing an Authorization header which is redirected to b.com/ will not send that header to b.com.\n\nIn the event that the client received a subsequent same-domain redirect, however, the sensitive headers would be restored. For example, a chain of redirects from a.com/, to b.com/1, and finally to b.com/2 would incorrectly send the Authorization header to b.com/2.",
      "cve": "CVE-2024-45336",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.22.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45336",
          "value": "CVE-2024-45336",
          "url": "https://scout.docker.com/v/CVE-2024-45336?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45336?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ]
    },
    {
      "id": "68a342db697b7abdfb7c9432f4688754d687465a5b27f4676eba0cbe15a3ef1a",
      "category": "container_scanning",
      "message": "CVE-2024-45341 on stdlib@1.22.5",
      "description": "A certificate with a URI which has a IPv6 address with a zone ID may incorrectly satisfy a URI name constraint that applies to the certificate chain.\n\nCertificates containing URIs are not permitted in the web PKI, so this only affects users of private PKIs which make use of URIs.",
      "cve": "CVE-2024-45341",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.22.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45341",
          "value": "CVE-2024-45341",
          "url": "https://scout.docker.com/v/CVE-2024-45341?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45341?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ]
    },
    {
      "id": "8337c779758f0c748e965b9d0e2d073a007b4018e7e2d5793e51bf530cf6e7f6",
      "category": "container_scanning",
      "message": "CVE-2024-45341 on stdlib@1.21.11",
      "description": "A certificate with a URI which has a IPv6 address with a zone ID may incorrectly satisfy a URI name constraint that applies to the certificate chain.\n\nCertificates containing URIs are not permitted in the web PKI, so this only affects users of private PKIs which make use of URIs.",
      "cve": "CVE-2024-45341",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.22.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45341",
          "value": "CVE-2024-45341",
          "url": "https://scout.docker.com/v/CVE-2024-45341?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45341?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ]
    },
    {
      "id": "19dc08ab766375b346bae92b74ba64dbf5c7ef3393db120ba649be8c1d654fc8",
      "category": "container_scanning",
      "message": "CVE-2024-45341 on stdlib@1.20.13",
      "description": "A certificate with a URI which has a IPv6 address with a zone ID may incorrectly satisfy a URI name constraint that applies to the certificate chain.\n\nCertificates containing URIs are not permitted in the web PKI, so this only affects users of private PKIs which make use of URIs.",
      "cve": "CVE-2024-45341",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.22.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45341",
          "value": "CVE-2024-45341",
          "url": "https://scout.docker.com/v/CVE-2024-45341?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45341?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ]
    },
    {
      "id": "362dd286d449e1616074d59997582f57bc4274688702dac962ced23af188c1f9",
      "category": "container_scanning",
      "message": "CVE-2024-12797 on alpine/openssl@3.3.1-r3",
      "cve": "CVE-2024-12797",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.3.1-r3 to 3.3.3-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.3.1-r3?os_name=alpine&os_version=3.20"
          },
          "version": "3.3.1-r3"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-12797",
          "value": "CVE-2024-12797",
          "url": "https://scout.docker.com/v/CVE-2024-12797?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C3.3.3-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-12797?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C3.3.3-r0"
        }
      ]
    },
    {
      "id": "0156cdfdb5c71a72fa0e3c835b13b9ac7ab9fdefc9f4ac17ec155e2489b69437",
      "category": "container_scanning",
      "message": "CVE-2024-47611 on alpine/xz@5.6.1-r3",
      "cve": "CVE-2024-47611",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/xz@5.6.1-r3?os_name=alpine&os_version=3.20"
          },
          "version": "5.6.1-r3"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47611",
          "value": "CVE-2024-47611",
          "url": "https://scout.docker.com/v/CVE-2024-47611?s=alpine&n=xz&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C%3D5.6.2-r1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47611?s=alpine&n=xz&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C%3D5.6.2-r1"
        }
      ]
    },
    {
      "id": "8e7246e387e0d9bcb0e0c0d48778d2cf7493bbb7718cb06d4070ecc9eec5be32",
      "category": "container_scanning",
      "message": "CVE-2025-48386 on alpine/git@2.45.2-r0",
      "cve": "CVE-2025-48386",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/git@2.45.2-r0 to 2.45.4-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/git@2.45.2-r0?os_name=alpine&os_version=3.20"
          },
          "version": "2.45.2-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-48386",
          "value": "CVE-2025-48386",
          "url": "https://scout.docker.com/v/CVE-2025-48386?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.45.4-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-48386?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.45.4-r0"
        }
      ]
    },
    {
      "id": "109aea18d64a47d7b1cf0fd5ee9b3d2cd329c64c747291d7d95f8676aaf0e298",
      "category": "container_scanning",
      "message": "CVE-2023-45290 on stdlib@1.20.13",
      "description": "When parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion.\n\nWith fix, the ParseMultipartForm function now correctly limits the maximum size of form lines.",
      "cve": "CVE-2023-45290",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45290",
          "value": "CVE-2023-45290",
          "url": "https://scout.docker.com/v/CVE-2023-45290?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45290?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "0c0e2518458d00fdbdb0166853f5c2ac72600e316d503d261dbfdc08b897f55b",
      "category": "container_scanning",
      "message": "CVE-2024-7264 on alpine/curl@8.9.0-r0",
      "cve": "CVE-2024-7264",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.9.0-r0 to 8.9.1-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.9.0-r0?os_name=alpine&os_version=3.20"
          },
          "version": "8.9.0-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-7264",
          "value": "CVE-2024-7264",
          "url": "https://scout.docker.com/v/CVE-2024-7264?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.9.1-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-7264?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.9.1-r0"
        }
      ]
    },
    {
      "id": "cda226e2179ad58b8896de18403ee9670559191260feddb317be63130bb245c8",
      "category": "container_scanning",
      "message": "CVE-2024-8096 on alpine/curl@8.9.0-r0",
      "cve": "CVE-2024-8096",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.9.0-r0 to 8.10.0-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.9.0-r0?os_name=alpine&os_version=3.20"
          },
          "version": "8.9.0-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-8096",
          "value": "CVE-2024-8096",
          "url": "https://scout.docker.com/v/CVE-2024-8096?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.10.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-8096?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.10.0-r0"
        }
      ]
    },
    {
      "id": "45d163c53c9947161d6c421bf5f44c9870908913ba54407440e85373a2d4c4dd",
      "category": "container_scanning",
      "message": "CVE-2024-9681 on alpine/curl@8.9.0-r0",
      "cve": "CVE-2024-9681",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.9.0-r0 to 8.11.0-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.9.0-r0?os_name=alpine&os_version=3.20"
          },
          "version": "8.9.0-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-9681",
          "value": "CVE-2024-9681",
          "url": "https://scout.docker.com/v/CVE-2024-9681?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.11.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-9681?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.11.0-r0"
        }
      ]
    },
    {
      "id": "147a1363b09f63e538a134e04affddee95d01ff00f978b1c0a31bca85f3fdb8a",
      "category": "container_scanning",
      "message": "CVE-2025-47906 on stdlib@1.22.5",
      "description": "If the PATH environment variable contains paths which are executables (rather than just directories), passing certain strings to LookPath (\"\", \".\", and \"..\"), can result in the binaries listed in the PATH being unexpectedly returned.",
      "cve": "CVE-2025-47906",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.23.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-47906",
          "value": "CVE-2025-47906",
          "url": "https://scout.docker.com/v/CVE-2025-47906?s=golang&n=stdlib&t=golang&vr=%3C1.23.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-47906?s=golang&n=stdlib&t=golang&vr=%3C1.23.12"
        }
      ]
    },
    {
      "id": "00362920b5684ac5f2d5714ea63aac0e14613572b65f18c05b3c8943668bab2e",
      "category": "container_scanning",
      "message": "CVE-2025-47906 on stdlib@1.21.11",
      "description": "If the PATH environment variable contains paths which are executables (rather than just directories), passing certain strings to LookPath (\"\", \".\", and \"..\"), can result in the binaries listed in the PATH being unexpectedly returned.",
      "cve": "CVE-2025-47906",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.23.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-47906",
          "value": "CVE-2025-47906",
          "url": "https://scout.docker.com/v/CVE-2025-47906?s=golang&n=stdlib&t=golang&vr=%3C1.23.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-47906?s=golang&n=stdlib&t=golang&vr=%3C1.23.12"
        }
      ]
    },
    {
      "id": "4e5a3d086d3d3e56b0973d9bc50488bbd02466a1ff68a834b292fa62df4026db",
      "category": "container_scanning",
      "message": "CVE-2025-47906 on stdlib@1.20.13",
      "description": "If the PATH environment variable contains paths which are executables (rather than just directories), passing certain strings to LookPath (\"\", \".\", and \"..\"), can result in the binaries listed in the PATH being unexpectedly returned.",
      "cve": "CVE-2025-47906",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.23.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-47906",
          "value": "CVE-2025-47906",
          "url": "https://scout.docker.com/v/CVE-2025-47906?s=golang&n=stdlib&t=golang&vr=%3C1.23.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-47906?s=golang&n=stdlib&t=golang&vr=%3C1.23.12"
        }
      ]
    },
    {
      "id": "27087a0071063fb58b76e38112e7a1ede889c042ba2945352fcd4bd1b09b6342",
      "category": "container_scanning",
      "message": "CVE-2025-4947 on alpine/curl@8.9.0-r0",
      "cve": "CVE-2025-4947",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.9.0-r0 to 8.14.0-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.9.0-r0?os_name=alpine&os_version=3.20"
          },
          "version": "8.9.0-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-4947",
          "value": "CVE-2025-4947",
          "url": "https://scout.docker.com/v/CVE-2025-4947?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.14.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-4947?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.14.0-r0"
        }
      ]
    },
    {
      "id": "31461b98fee65ef72c10e6cc4cff90a3e36020412dfa126e6bf41b2ae6dfc4cf",
      "category": "container_scanning",
      "message": "CVE-2025-58187 on stdlib@1.21.11",
      "description": "Due to the design of the name constraint checking algorithm, the processing time of some inputs scals non-linearly with respect to the size of the certificate.\n\nThis affects programs which validate arbitrary certificate chains.",
      "cve": "CVE-2025-58187",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.24.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58187",
          "value": "CVE-2025-58187",
          "url": "https://scout.docker.com/v/CVE-2025-58187?s=golang&n=stdlib&t=golang&vr=%3C1.24.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58187?s=golang&n=stdlib&t=golang&vr=%3C1.24.9"
        }
      ]
    },
    {
      "id": "967f302334198bafa8965955079fdd3dda3fd2ed5ce773c66cd475f1e4b7108d",
      "category": "container_scanning",
      "message": "CVE-2025-58187 on stdlib@1.22.5",
      "description": "Due to the design of the name constraint checking algorithm, the processing time of some inputs scals non-linearly with respect to the size of the certificate.\n\nThis affects programs which validate arbitrary certificate chains.",
      "cve": "CVE-2025-58187",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.24.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58187",
          "value": "CVE-2025-58187",
          "url": "https://scout.docker.com/v/CVE-2025-58187?s=golang&n=stdlib&t=golang&vr=%3C1.24.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58187?s=golang&n=stdlib&t=golang&vr=%3C1.24.9"
        }
      ]
    },
    {
      "id": "a35db2f417c6d9286feab4a1c874e3a04cfa4fad8e0d77843ea41f8b73ffaa42",
      "category": "container_scanning",
      "message": "CVE-2025-58187 on stdlib@1.20.13",
      "description": "Due to the design of the name constraint checking algorithm, the processing time of some inputs scals non-linearly with respect to the size of the certificate.\n\nThis affects programs which validate arbitrary certificate chains.",
      "cve": "CVE-2025-58187",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.24.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58187",
          "value": "CVE-2025-58187",
          "url": "https://scout.docker.com/v/CVE-2025-58187?s=golang&n=stdlib&t=golang&vr=%3C1.24.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58187?s=golang&n=stdlib&t=golang&vr=%3C1.24.9"
        }
      ]
    },
    {
      "id": "294b5d2cc1ca8bfc52f5c3f3d7d46817e153d3408a0cc0a0f65ef165f9fb0c1f",
      "category": "container_scanning",
      "message": "CVE-2025-61723 on stdlib@1.22.5",
      "description": "The processing time for parsing some invalid inputs scales non-linearly with respect to the size of the input.\n\nThis affects programs which parse untrusted PEM inputs.",
      "cve": "CVE-2025-61723",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-61723",
          "value": "CVE-2025-61723",
          "url": "https://scout.docker.com/v/CVE-2025-61723?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-61723?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "e3204df60a3c246aabdee0355bc0237168e8b147299583065a69538a5fb0f9ba",
      "category": "container_scanning",
      "message": "CVE-2025-61723 on stdlib@1.21.11",
      "description": "The processing time for parsing some invalid inputs scales non-linearly with respect to the size of the input.\n\nThis affects programs which parse untrusted PEM inputs.",
      "cve": "CVE-2025-61723",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-61723",
          "value": "CVE-2025-61723",
          "url": "https://scout.docker.com/v/CVE-2025-61723?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-61723?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "1975941a97f2bdb59fc7e4b554054d77033e3350210a4a28b3371758a11d3816",
      "category": "container_scanning",
      "message": "CVE-2025-61723 on stdlib@1.20.13",
      "description": "The processing time for parsing some invalid inputs scales non-linearly with respect to the size of the input.\n\nThis affects programs which parse untrusted PEM inputs.",
      "cve": "CVE-2025-61723",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-61723",
          "value": "CVE-2025-61723",
          "url": "https://scout.docker.com/v/CVE-2025-61723?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-61723?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "af170850ae2b3376ee9b089361c53b9a7df172ec3e197131de9183f7d6202ff2",
      "category": "container_scanning",
      "message": "CVE-2025-9231 on alpine/openssl@3.3.1-r3",
      "cve": "CVE-2025-9231",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.3.1-r3 to 3.3.5-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.3.1-r3?os_name=alpine&os_version=3.20"
          },
          "version": "3.3.1-r3"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-9231",
          "value": "CVE-2025-9231",
          "url": "https://scout.docker.com/v/CVE-2025-9231?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C3.3.5-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-9231?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C3.3.5-r0"
        }
      ]
    },
    {
      "id": "dcc1ddf035121bf59e13730508396f1958dab6b7c4a5e2708f0cf23fa37d8cc4",
      "category": "container_scanning",
      "message": "CVE-2024-24786 on google.golang.org/protobuf@1.28.1",
      "description": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.",
      "cve": "CVE-2024-24786",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade google.golang.org/protobuf@1.28.1 to 1.33.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/google.golang.org/protobuf@1.28.1"
          },
          "version": "1.28.1"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24786",
          "value": "CVE-2024-24786",
          "url": "https://scout.docker.com/v/CVE-2024-24786?s=github&n=protobuf&ns=google.golang.org&t=golang&vr=%3C1.33.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24786?s=github&n=protobuf&ns=google.golang.org&t=golang&vr=%3C1.33.0"
        }
      ]
    },
    {
      "id": "00a3bad43a41f296434d4e82cd612031e100174e7a7c2907ce539a3bd4cb3e45",
      "category": "container_scanning",
      "message": "CVE-2025-26465 on alpine/openssh@9.7_p1-r4",
      "cve": "CVE-2025-26465",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssh@9.7_p1-r4 to 9.7_p1-r5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssh@9.7_p1-r4?os_name=alpine&os_version=3.20"
          },
          "version": "9.7_p1-r4"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-26465",
          "value": "CVE-2025-26465",
          "url": "https://scout.docker.com/v/CVE-2025-26465?s=alpine&n=openssh&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C9.7_p1-r5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-26465?s=alpine&n=openssh&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C9.7_p1-r5"
        }
      ]
    },
    {
      "id": "fd08c405db5c046117ee3c15b727ed5b76460edaee05d269d2a62ba62c9ce300",
      "category": "container_scanning",
      "message": "CVE-2025-4673 on stdlib@1.20.13",
      "description": "Proxy-Authorization and Proxy-Authenticate headers persisted on cross-origin redirects potentially leaking sensitive information.",
      "cve": "CVE-2025-4673",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.23.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-4673",
          "value": "CVE-2025-4673",
          "url": "https://scout.docker.com/v/CVE-2025-4673?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-4673?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ]
    },
    {
      "id": "0d8b9a457cc2b3658ca9b04547f3b4abb089736a77f60b3fe37457dfefae188b",
      "category": "container_scanning",
      "message": "CVE-2025-4673 on stdlib@1.22.5",
      "description": "Proxy-Authorization and Proxy-Authenticate headers persisted on cross-origin redirects potentially leaking sensitive information.",
      "cve": "CVE-2025-4673",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.23.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-4673",
          "value": "CVE-2025-4673",
          "url": "https://scout.docker.com/v/CVE-2025-4673?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-4673?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ]
    },
    {
      "id": "ec410a75fdbadc510856652890470480029604d0555329e9787ff6c00a2c6326",
      "category": "container_scanning",
      "message": "CVE-2025-4673 on stdlib@1.21.11",
      "description": "Proxy-Authorization and Proxy-Authenticate headers persisted on cross-origin redirects potentially leaking sensitive information.",
      "cve": "CVE-2025-4673",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.23.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-4673",
          "value": "CVE-2025-4673",
          "url": "https://scout.docker.com/v/CVE-2025-4673?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-4673?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ]
    },
    {
      "id": "d7c7f1ddbba49a696f9890ae99f5f7fe453b5fb0491512a715e9fd2a73cc483c",
      "category": "container_scanning",
      "message": "CVE-2023-51767 on alpine/openssh@9.7_p1-r4",
      "cve": "CVE-2023-51767",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssh@9.7_p1-r4?os_name=alpine&os_version=3.20"
          },
          "version": "9.7_p1-r4"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-51767",
          "value": "CVE-2023-51767",
          "url": "https://scout.docker.com/v/CVE-2023-51767?s=alpine&n=openssh&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C%3D9.7_p1-r4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-51767?s=alpine&n=openssh&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C%3D9.7_p1-r4"
        }
      ]
    },
    {
      "id": "eb56e8a323d70a88252c5cd5ee36713906bcc1242de50ac9d8b2da75c7cc02cb",
      "category": "container_scanning",
      "message": "CVE-2025-0725 on alpine/curl@8.9.0-r0",
      "cve": "CVE-2025-0725",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.9.0-r0 to 8.12.0-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.9.0-r0?os_name=alpine&os_version=3.20"
          },
          "version": "8.9.0-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-0725",
          "value": "CVE-2025-0725",
          "url": "https://scout.docker.com/v/CVE-2025-0725?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.12.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-0725?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.12.0-r0"
        }
      ]
    },
    {
      "id": "e745d1970a3cc8336a0039c54b1760f03d8cc73485e04bbff1cbe82d660a8d55",
      "category": "container_scanning",
      "message": "CVE-2022-21698 on go.opentelemetry.io/contrib/instrumentation@0.29.0",
      "description": "Memory exhaustion in go.opentelemetry.io/contrib/instrumentation",
      "cve": "CVE-2022-21698",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade go.opentelemetry.io/contrib/instrumentation@0.29.0 to 0.44.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/go.opentelemetry.io/contrib/instrumentation@0.29.0#net/http/otelhttp"
          },
          "version": "0.29.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-21698",
          "value": "CVE-2022-21698",
          "url": "https://scout.docker.com/v/CVE-2022-21698?s=golang&n=net%2Fhttp%2Fotelhttp&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.44.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-21698?s=golang&n=net%2Fhttp%2Fotelhttp&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.44.0"
        }
      ]
    },
    {
      "id": "46563567f64a4d2334dae820fa2f405f6be2a40ac390e094670c6b5ef143a584",
      "category": "container_scanning",
      "message": "CVE-2022-21698 on go.opentelemetry.io/contrib/instrumentation@0.29.0",
      "description": "Memory exhaustion in go.opentelemetry.io/contrib/instrumentation",
      "cve": "CVE-2022-21698",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade go.opentelemetry.io/contrib/instrumentation@0.29.0 to 0.44.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/go.opentelemetry.io/contrib/instrumentation@0.29.0#net/http/httptrace/otelhttptrace"
          },
          "version": "0.29.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-21698",
          "value": "CVE-2022-21698",
          "url": "https://scout.docker.com/v/CVE-2022-21698?s=golang&n=net%2Fhttp%2Fhttptrace%2Fotelhttptrace&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.44.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-21698?s=golang&n=net%2Fhttp%2Fhttptrace%2Fotelhttptrace&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.44.0"
        }
      ]
    },
    {
      "id": "a261b9c4b44c8c3967861f1b16434ed90bfb7ce3281b9cf63fec34bf414e7d68",
      "category": "container_scanning",
      "message": "CVE-2022-30635 on stdlib@1.20.13",
      "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
      "cve": "CVE-2022-30635",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30635",
          "value": "CVE-2022-30635",
          "url": "https://scout.docker.com/v/CVE-2022-30635?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30635?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "e515d65dcc51afa3c540ce30f46b7091976386d38db39e933bb5d52aaed0fcd0",
      "category": "container_scanning",
      "message": "CVE-2022-30635 on stdlib@1.22.5",
      "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
      "cve": "CVE-2022-30635",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30635",
          "value": "CVE-2022-30635",
          "url": "https://scout.docker.com/v/CVE-2022-30635?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30635?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "c601e573c88496b6a1b4b5c3583a93dfd09b26f6381a14905b3ad06ff8fe18ef",
      "category": "container_scanning",
      "message": "CVE-2022-30635 on stdlib@1.21.11",
      "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
      "cve": "CVE-2022-30635",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30635",
          "value": "CVE-2022-30635",
          "url": "https://scout.docker.com/v/CVE-2022-30635?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30635?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "a19014e8c6da1028c380db258bcbb0eda109dfbb990dce8f6dc93077d4b6d491",
      "category": "container_scanning",
      "message": "CVE-2023-25151 on go.opentelemetry.io/contrib/instrumentation@0.29.0",
      "description": "Memory exhaustion in go.opentelemetry.io/contrib/instrumentation",
      "cve": "CVE-2023-25151",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade go.opentelemetry.io/contrib/instrumentation@0.29.0 to 0.44.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/go.opentelemetry.io/contrib/instrumentation@0.29.0#net/http/otelhttp"
          },
          "version": "0.29.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-25151",
          "value": "CVE-2023-25151",
          "url": "https://scout.docker.com/v/CVE-2023-25151?s=golang&n=net%2Fhttp%2Fotelhttp&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.44.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-25151?s=golang&n=net%2Fhttp%2Fotelhttp&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.44.0"
        }
      ]
    },
    {
      "id": "83081153d98cc815646c04654c4ed97f26a48bb613b4d04db4244b9bb4df1056",
      "category": "container_scanning",
      "message": "CVE-2023-25151 on go.opentelemetry.io/contrib/instrumentation@0.29.0",
      "description": "Memory exhaustion in go.opentelemetry.io/contrib/instrumentation",
      "cve": "CVE-2023-25151",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade go.opentelemetry.io/contrib/instrumentation@0.29.0 to 0.44.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/go.opentelemetry.io/contrib/instrumentation@0.29.0#net/http/httptrace/otelhttptrace"
          },
          "version": "0.29.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-25151",
          "value": "CVE-2023-25151",
          "url": "https://scout.docker.com/v/CVE-2023-25151?s=golang&n=net%2Fhttp%2Fhttptrace%2Fotelhttptrace&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.44.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-25151?s=golang&n=net%2Fhttp%2Fhttptrace%2Fotelhttptrace&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.44.0"
        }
      ]
    },
    {
      "id": "47ed2e5df5bdcc563e965800378f2b767bec5ff27df092f57e903357ac19c596",
      "category": "container_scanning",
      "message": "CVE-2023-44487 on google.golang.org/grpc@1.50.1",
      "description": "An attacker can send HTTP/2 requests, cancel them, and send subsequent requests. This is valid by the HTTP/2 protocol, but would cause the gRPC-Go server to launch more concurrent method handlers than the configured maximum stream limit, grpc.MaxConcurrentStreams. This results in a denial of service due to resource consumption.",
      "cve": "CVE-2023-44487",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade google.golang.org/grpc@1.50.1 to 1.56.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/google.golang.org/grpc@1.50.1"
          },
          "version": "1.50.1"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-44487",
          "value": "CVE-2023-44487",
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=golang&n=grpc&ns=google.golang.org&t=golang&vr=%3C1.56.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=golang&n=grpc&ns=google.golang.org&t=golang&vr=%3C1.56.3"
        }
      ]
    },
    {
      "id": "8871008e320f99da0a3d8267c4d2e733cf93b283fd937daa16158688dc4ef189",
      "category": "container_scanning",
      "message": "CVE-2023-45142 on go.opentelemetry.io/contrib/instrumentation@0.29.0",
      "description": "### Summary\n\nThis handler wrapper https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\nout of the box adds labels\n\n- `http.user_agent`\n- `http.method`\n\nthat have unbound cardinality. It leads to the server's potential memory exhaustion when many malicious requests are sent to it.\n\n### Details\n\nHTTP header User-Agent or HTTP method for requests can be easily set by an attacker to be random and long. The library internally uses [httpconv.ServerRequest](https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159) that records every value for HTTP [method](https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L204) and [User-Agent](https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223).\n\n### PoC\n\nSend many requests with long randomly generated HTTP methods or/and User agents (e.g. a million) and observe how memory consumption increases during it.\n\n### Impact\n\nIn order to be affected, the program has to configure a metrics pipeline, use [otelhttp.NewHandler](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65) wrapper, and does not filter any unknown HTTP methods or User agents on the level of CDN, LB, previous middleware, etc.\n\n### Others\n\nIt is similar to already reported vulnerabilities\n- https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh ([open-telemetry/opentelemetry-go-contrib](https://github.com/open-telemetry/opentelemetry-go-contrib))\n- https://github.com/advisories/GHSA-cg3q-j54f-5p7p ([prometheus/client_golang](https://github.com/prometheus/client_golang))\n\n### Workaround for affected versions\n\nAs a workaround to stop being affected [otelhttp.WithFilter()](https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp/filters) can be used, but it requires manual careful configuration to not log certain requests entirely.\n\nFor convenience and safe usage of this library, it should by default mark with the label `unknown` non-standard HTTP methods and User agents to show that such requests were made but do not increase cardinality. In case someone wants to stay with the current behavior, library API should allow to enable it.\n\nThe other possibility is to disable HTTP metrics instrumentation by passing [`otelhttp.WithMeterProvider`](https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp#WithMeterProvider) option with [`noop.NewMeterProvider`](https://pkg.go.dev/go.opentelemetry.io/otel/metric/noop#NewMeterProvider).\n\n### Solution provided by upgrading\n\nIn PR https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277, released with package version 0.44.0, the values collected for attribute `http.request.method` were changed to be restricted to a set of well-known values and other high cardinality attributes were removed.\n\n### References\n\n- https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\n- https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0\n",
      "cve": "CVE-2023-45142",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade go.opentelemetry.io/contrib/instrumentation@0.29.0 to 0.44.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/go.opentelemetry.io/contrib/instrumentation@0.29.0#net/http/otelhttp"
          },
          "version": "0.29.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45142",
          "value": "CVE-2023-45142",
          "url": "https://scout.docker.com/v/CVE-2023-45142?s=github&n=net%2Fhttp%2Fotelhttp&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.44.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45142?s=github&n=net%2Fhttp%2Fotelhttp&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.44.0"
        }
      ]
    },
    {
      "id": "36332785ebcc54f73ff0de291a305e73f5b75ba8bb980eaa248e1d0065aea32b",
      "category": "container_scanning",
      "message": "CVE-2023-45142 on go.opentelemetry.io/contrib/instrumentation@0.29.0",
      "description": "### Summary\n\nThis handler wrapper https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\nout of the box adds labels\n\n- `http.user_agent`\n- `http.method`\n\nthat have unbound cardinality. It leads to the server's potential memory exhaustion when many malicious requests are sent to it.\n\n### Details\n\nHTTP header User-Agent or HTTP method for requests can be easily set by an attacker to be random and long. The library internally uses [httpconv.ServerRequest](https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159) that records every value for HTTP [method](https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L204) and [User-Agent](https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223).\n\n### PoC\n\nSend many requests with long randomly generated HTTP methods or/and User agents (e.g. a million) and observe how memory consumption increases during it.\n\n### Impact\n\nIn order to be affected, the program has to configure a metrics pipeline, use [otelhttp.NewHandler](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65) wrapper, and does not filter any unknown HTTP methods or User agents on the level of CDN, LB, previous middleware, etc.\n\n### Others\n\nIt is similar to already reported vulnerabilities\n- https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh ([open-telemetry/opentelemetry-go-contrib](https://github.com/open-telemetry/opentelemetry-go-contrib))\n- https://github.com/advisories/GHSA-cg3q-j54f-5p7p ([prometheus/client_golang](https://github.com/prometheus/client_golang))\n\n### Workaround for affected versions\n\nAs a workaround to stop being affected [otelhttp.WithFilter()](https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp/filters) can be used, but it requires manual careful configuration to not log certain requests entirely.\n\nFor convenience and safe usage of this library, it should by default mark with the label `unknown` non-standard HTTP methods and User agents to show that such requests were made but do not increase cardinality. In case someone wants to stay with the current behavior, library API should allow to enable it.\n\nThe other possibility is to disable HTTP metrics instrumentation by passing [`otelhttp.WithMeterProvider`](https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp#WithMeterProvider) option with [`noop.NewMeterProvider`](https://pkg.go.dev/go.opentelemetry.io/otel/metric/noop#NewMeterProvider).\n\n### Solution provided by upgrading\n\nIn PR https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277, released with package version 0.44.0, the values collected for attribute `http.request.method` were changed to be restricted to a set of well-known values and other high cardinality attributes were removed.\n\n### References\n\n- https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\n- https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0\n",
      "cve": "CVE-2023-45142",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade go.opentelemetry.io/contrib/instrumentation@0.29.0 to 0.44.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/go.opentelemetry.io/contrib/instrumentation@0.29.0#net/http/httptrace/otelhttptrace"
          },
          "version": "0.29.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45142",
          "value": "CVE-2023-45142",
          "url": "https://scout.docker.com/v/CVE-2023-45142?s=github&n=net%2Fhttp%2Fhttptrace%2Fotelhttptrace&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.44.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45142?s=github&n=net%2Fhttp%2Fhttptrace%2Fotelhttptrace&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.44.0"
        }
      ]
    },
    {
      "id": "5771da90929687c68496126f59217bf7ce90673309f6ebb989206fee65795a40",
      "category": "container_scanning",
      "message": "CVE-2023-45288 on stdlib@1.20.13",
      "description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames.\n\nMaintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed.\n\nThis permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send.\n\nThe fix sets a limit on the amount of excess header frames we will process before closing a connection.",
      "cve": "CVE-2023-45288",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.21.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45288",
          "value": "CVE-2023-45288",
          "url": "https://scout.docker.com/v/CVE-2023-45288?s=golang&n=stdlib&t=golang&vr=%3C1.21.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45288?s=golang&n=stdlib&t=golang&vr=%3C1.21.9"
        }
      ]
    },
    {
      "id": "d8af9ef3851428dd28fda78fe320f1b61661180a0ede7f475649b668300b0cd3",
      "category": "container_scanning",
      "message": "CVE-2023-47108 on go.opentelemetry.io/contrib/instrumentation@0.29.0",
      "description": "The grpc Unary Server Interceptor created by the otelgrpc package added the labels net.peer.sock.addr and net.peer.sock.port with unbounded cardinality. This can lead to the server's potential memory exhaustion when many malicious requests are sent. This leads to a denial-of-service.",
      "cve": "CVE-2023-47108",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade go.opentelemetry.io/contrib/instrumentation@0.29.0 to 0.46.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/go.opentelemetry.io/contrib/instrumentation@0.29.0#google.golang.org/grpc/otelgrpc"
          },
          "version": "0.29.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-47108",
          "value": "CVE-2023-47108",
          "url": "https://scout.docker.com/v/CVE-2023-47108?s=golang&n=google.golang.org%2Fgrpc%2Fotelgrpc&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.46.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-47108?s=golang&n=google.golang.org%2Fgrpc%2Fotelgrpc&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.46.0"
        }
      ]
    },
    {
      "id": "6550250fed207ac91c6fe49574b039980767fecc455a98dbbf5bae4188281266",
      "category": "container_scanning",
      "message": "CVE-2024-24784 on stdlib@1.20.13",
      "description": "The ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers.",
      "cve": "CVE-2024-24784",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24784",
          "value": "CVE-2024-24784",
          "url": "https://scout.docker.com/v/CVE-2024-24784?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24784?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "3e13c4808b7382790a9907b63a652411935904febdf7cebcbeb5332b27a03f0b",
      "category": "container_scanning",
      "message": "CVE-2024-24791 on stdlib@1.20.13",
      "description": "The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an \"Expect: 100-continue\" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail.\n\nAn attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending \"Expect: 100-continue\" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail.",
      "cve": "CVE-2024-24791",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.21.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24791",
          "value": "CVE-2024-24791",
          "url": "https://scout.docker.com/v/CVE-2024-24791?s=golang&n=stdlib&t=golang&vr=%3C1.21.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24791?s=golang&n=stdlib&t=golang&vr=%3C1.21.12"
        }
      ]
    },
    {
      "id": "df2b16dccdf9fdff41f373e91e6384912ae078e0ffe11efaa0c69e8aedbdee51",
      "category": "container_scanning",
      "message": "CVE-2024-24791 on stdlib@1.21.11",
      "description": "The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an \"Expect: 100-continue\" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail.\n\nAn attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending \"Expect: 100-continue\" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail.",
      "cve": "CVE-2024-24791",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.21.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24791",
          "value": "CVE-2024-24791",
          "url": "https://scout.docker.com/v/CVE-2024-24791?s=golang&n=stdlib&t=golang&vr=%3C1.21.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24791?s=golang&n=stdlib&t=golang&vr=%3C1.21.12"
        }
      ]
    },
    {
      "id": "5e0224daa7feab793646d481f84150152c3c0e603369f22468a63a7a0b4f3855",
      "category": "container_scanning",
      "message": "CVE-2024-34156 on stdlib@1.21.11",
      "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
      "cve": "CVE-2024-34156",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34156",
          "value": "CVE-2024-34156",
          "url": "https://scout.docker.com/v/CVE-2024-34156?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34156?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "da1f0fe69b671f3a640847289de99a9a701843f5e79135f794f1ba9adfe6209c",
      "category": "container_scanning",
      "message": "CVE-2024-34156 on stdlib@1.20.13",
      "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
      "cve": "CVE-2024-34156",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34156",
          "value": "CVE-2024-34156",
          "url": "https://scout.docker.com/v/CVE-2024-34156?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34156?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "46234725a5ac0923d5ab73e1ea94b295632bf6a29b4057c463ee220d568c0a15",
      "category": "container_scanning",
      "message": "CVE-2024-34156 on stdlib@1.22.5",
      "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
      "cve": "CVE-2024-34156",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34156",
          "value": "CVE-2024-34156",
          "url": "https://scout.docker.com/v/CVE-2024-34156?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34156?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "6df7ae0d4df60038bda4d6349b3e796317c21865afee211aa624025785f8bf9b",
      "category": "container_scanning",
      "message": "CVE-2024-34158 on stdlib@1.22.5",
      "description": "Calling Parse on a \"// +build\" build tag line with deeply nested expressions can cause a panic due to stack exhaustion.",
      "cve": "CVE-2024-34158",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34158",
          "value": "CVE-2024-34158",
          "url": "https://scout.docker.com/v/CVE-2024-34158?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34158?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "2ec819db3eabd21b8785729398c396c3877d5264f6940e17d81357b8b46733db",
      "category": "container_scanning",
      "message": "CVE-2024-34158 on stdlib@1.20.13",
      "description": "Calling Parse on a \"// +build\" build tag line with deeply nested expressions can cause a panic due to stack exhaustion.",
      "cve": "CVE-2024-34158",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34158",
          "value": "CVE-2024-34158",
          "url": "https://scout.docker.com/v/CVE-2024-34158?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34158?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "f773c83af8a7c8a1b5c51530c93d58d0a2dd83e3d1a04f2ee8f7022b55e17046",
      "category": "container_scanning",
      "message": "CVE-2024-34158 on stdlib@1.21.11",
      "description": "Calling Parse on a \"// +build\" build tag line with deeply nested expressions can cause a panic due to stack exhaustion.",
      "cve": "CVE-2024-34158",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34158",
          "value": "CVE-2024-34158",
          "url": "https://scout.docker.com/v/CVE-2024-34158?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34158?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "3365152cc76eac4bea7628bad82a9285711bc7c9436529e479b44e784ba74e9f",
      "category": "container_scanning",
      "message": "CVE-2024-45490 on alpine/expat@2.6.2-r0",
      "cve": "CVE-2024-45490",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/expat@2.6.2-r0 to 2.6.3-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/expat@2.6.2-r0?os_name=alpine&os_version=3.20"
          },
          "version": "2.6.2-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45490",
          "value": "CVE-2024-45490",
          "url": "https://scout.docker.com/v/CVE-2024-45490?s=alpine&n=expat&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.6.3-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45490?s=alpine&n=expat&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.6.3-r0"
        }
      ]
    },
    {
      "id": "8b62b465ef6180a632ccf6738d6b32e6189372e2a6df2a2242d62604c06e480c",
      "category": "container_scanning",
      "message": "CVE-2024-52005 on alpine/git@2.45.2-r0",
      "cve": "CVE-2024-52005",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/git@2.45.2-r0?os_name=alpine&os_version=3.20"
          },
          "version": "2.45.2-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-52005",
          "value": "CVE-2024-52005",
          "url": "https://scout.docker.com/v/CVE-2024-52005?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C%3D2.45.2-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-52005?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C%3D2.45.2-r0"
        }
      ]
    },
    {
      "id": "d71644ba979d1431e6c045f2c2b781cd2a65a63dc25ef584da9b35d6a8ac83d0",
      "category": "container_scanning",
      "message": "CVE-2024-6119 on alpine/openssl@3.3.1-r3",
      "cve": "CVE-2024-6119",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.3.1-r3 to 3.3.2-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.3.1-r3?os_name=alpine&os_version=3.20"
          },
          "version": "3.3.1-r3"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-6119",
          "value": "CVE-2024-6119",
          "url": "https://scout.docker.com/v/CVE-2024-6119?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C3.3.2-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-6119?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C3.3.2-r0"
        }
      ]
    },
    {
      "id": "f1ef68363dc9f2427a37c81e156214669848c2ae8ea2300a76f6eaf8f4014ebd",
      "category": "container_scanning",
      "message": "CVE-2024-8176 on alpine/expat@2.6.2-r0",
      "cve": "CVE-2024-8176",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/expat@2.6.2-r0 to 2.7.0-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/expat@2.6.2-r0?os_name=alpine&os_version=3.20"
          },
          "version": "2.6.2-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-8176",
          "value": "CVE-2024-8176",
          "url": "https://scout.docker.com/v/CVE-2024-8176?s=alpine&n=expat&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.7.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-8176?s=alpine&n=expat&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.7.0-r0"
        }
      ]
    },
    {
      "id": "49c5ebd117451d61c4d2abfd94b91f14f45d692241765ac057b79c0ccb5f78f4",
      "category": "container_scanning",
      "message": "CVE-2025-22868 on golang.org/x/oauth2@0.21.0",
      "description": "An attacker can pass a malicious malformed token which causes unexpected memory to be consumed during parsing.",
      "cve": "CVE-2025-22868",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/oauth2@0.21.0 to 0.27.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/oauth2@0.21.0"
          },
          "version": "0.21.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22868",
          "value": "CVE-2025-22868",
          "url": "https://scout.docker.com/v/CVE-2025-22868?s=github&n=oauth2&ns=golang.org%2Fx&t=golang&vr=%3C0.27.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22868?s=github&n=oauth2&ns=golang.org%2Fx&t=golang&vr=%3C0.27.0"
        }
      ]
    },
    {
      "id": "c868938f48bfc0f8bc91e6b709057a2e0becbcf88b57f2ef9e58c2ea354bd7c5",
      "category": "container_scanning",
      "message": "CVE-2025-22868 on golang.org/x/oauth2@0.11.0",
      "description": "An attacker can pass a malicious malformed token which causes unexpected memory to be consumed during parsing.",
      "cve": "CVE-2025-22868",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/oauth2@0.11.0 to 0.27.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/oauth2@0.11.0"
          },
          "version": "0.11.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22868",
          "value": "CVE-2025-22868",
          "url": "https://scout.docker.com/v/CVE-2025-22868?s=github&n=oauth2&ns=golang.org%2Fx&t=golang&vr=%3C0.27.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22868?s=github&n=oauth2&ns=golang.org%2Fx&t=golang&vr=%3C0.27.0"
        }
      ]
    },
    {
      "id": "d33881ff305c098ba2a67e050c437d6f59496543370d1a86d34dac9b641786d4",
      "category": "container_scanning",
      "message": "CVE-2025-22868 on golang.org/x/oauth2@0.1.0",
      "description": "An attacker can pass a malicious malformed token which causes unexpected memory to be consumed during parsing.",
      "cve": "CVE-2025-22868",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/oauth2@0.1.0 to 0.27.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/oauth2@0.1.0"
          },
          "version": "0.1.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22868",
          "value": "CVE-2025-22868",
          "url": "https://scout.docker.com/v/CVE-2025-22868?s=github&n=oauth2&ns=golang.org%2Fx&t=golang&vr=%3C0.27.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22868?s=github&n=oauth2&ns=golang.org%2Fx&t=golang&vr=%3C0.27.0"
        }
      ]
    },
    {
      "id": "dcded057fb9dadb4bc2c39b3dd6fca00c595fdfe9793867c237c2ce6822e9c31",
      "category": "container_scanning",
      "message": "CVE-2025-22869 on golang.org/x/crypto@0.14.0",
      "description": "SSH servers which implement file transfer protocols are vulnerable to a denial of service attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted.",
      "cve": "CVE-2025-22869",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/crypto@0.14.0 to 0.35.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/crypto@0.14.0"
          },
          "version": "0.14.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22869",
          "value": "CVE-2025-22869",
          "url": "https://scout.docker.com/v/CVE-2025-22869?s=golang&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.35.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22869?s=golang&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.35.0"
        }
      ]
    },
    {
      "id": "e6b08a6e72ea38fb7fff4beb163ac64acd1377f12b79404f8255bd1c52a72f3f",
      "category": "container_scanning",
      "message": "CVE-2025-22869 on golang.org/x/crypto@0.23.0",
      "description": "SSH servers which implement file transfer protocols are vulnerable to a denial of service attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted.",
      "cve": "CVE-2025-22869",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/crypto@0.23.0 to 0.35.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/crypto@0.23.0"
          },
          "version": "0.23.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22869",
          "value": "CVE-2025-22869",
          "url": "https://scout.docker.com/v/CVE-2025-22869?s=golang&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.35.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22869?s=golang&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.35.0"
        }
      ]
    },
    {
      "id": "9d8dfb04505d0b25606723346e1f5da7f5d5049a0a88d89e863f8d647d948555",
      "category": "container_scanning",
      "message": "CVE-2025-5399 on alpine/curl@8.9.0-r0",
      "cve": "CVE-2025-5399",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.9.0-r0 to 8.14.1-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.9.0-r0?os_name=alpine&os_version=3.20"
          },
          "version": "8.9.0-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-5399",
          "value": "CVE-2025-5399",
          "url": "https://scout.docker.com/v/CVE-2025-5399?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.14.1-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-5399?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.14.1-r0"
        }
      ]
    },
    {
      "id": "b2ccc328cc7724ea8b16403eab4ea5b92880872291aba517d3ddf487c9dab49d",
      "category": "container_scanning",
      "message": "CVE-2025-58188 on stdlib@1.20.13",
      "description": "Validating certificate chains which contain DSA public keys can cause programs to panic, due to a interface cast that assumes they implement the Equal method.\n\nThis affects programs which validate arbitrary certificate chains.",
      "cve": "CVE-2025-58188",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58188",
          "value": "CVE-2025-58188",
          "url": "https://scout.docker.com/v/CVE-2025-58188?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58188?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "73c61116dde86dde50aa9fdb6f4c91b667a90bf83bacbc54f77275c7862b38c6",
      "category": "container_scanning",
      "message": "CVE-2025-58188 on stdlib@1.22.5",
      "description": "Validating certificate chains which contain DSA public keys can cause programs to panic, due to a interface cast that assumes they implement the Equal method.\n\nThis affects programs which validate arbitrary certificate chains.",
      "cve": "CVE-2025-58188",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58188",
          "value": "CVE-2025-58188",
          "url": "https://scout.docker.com/v/CVE-2025-58188?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58188?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "6f496c68ce91b35ded6444798d37a6686cfdab92def39180d1fbb98427f6f2db",
      "category": "container_scanning",
      "message": "CVE-2025-58188 on stdlib@1.21.11",
      "description": "Validating certificate chains which contain DSA public keys can cause programs to panic, due to a interface cast that assumes they implement the Equal method.\n\nThis affects programs which validate arbitrary certificate chains.",
      "cve": "CVE-2025-58188",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58188",
          "value": "CVE-2025-58188",
          "url": "https://scout.docker.com/v/CVE-2025-58188?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58188?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "617867161476939e01def105b2403d0988d3974a1b140efb4640c41276df63d4",
      "category": "container_scanning",
      "message": "CVE-2025-59375 on alpine/expat@2.6.2-r0",
      "cve": "CVE-2025-59375",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/expat@2.6.2-r0 to 2.7.2-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/expat@2.6.2-r0?os_name=alpine&os_version=3.20"
          },
          "version": "2.6.2-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-59375",
          "value": "CVE-2025-59375",
          "url": "https://scout.docker.com/v/CVE-2025-59375?s=alpine&n=expat&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.7.2-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-59375?s=alpine&n=expat&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.7.2-r0"
        }
      ]
    },
    {
      "id": "5fc8608a8527c4712fe52245a3f6a02e4f469a5ccb9c744023782c34fc6c2808",
      "category": "container_scanning",
      "message": "CVE-2025-61725 on stdlib@1.20.13",
      "description": "The ParseAddress function constructeds domain-literal address components through repeated string concatenation. When parsing large domain-literal components, this can cause excessive CPU consumption.",
      "cve": "CVE-2025-61725",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-61725",
          "value": "CVE-2025-61725",
          "url": "https://scout.docker.com/v/CVE-2025-61725?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-61725?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "d1c7d05bfc765282cc7dfae76dbea41f01c42c6517051447f9beb9a4587b0108",
      "category": "container_scanning",
      "message": "CVE-2025-61725 on stdlib@1.22.5",
      "description": "The ParseAddress function constructeds domain-literal address components through repeated string concatenation. When parsing large domain-literal components, this can cause excessive CPU consumption.",
      "cve": "CVE-2025-61725",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-61725",
          "value": "CVE-2025-61725",
          "url": "https://scout.docker.com/v/CVE-2025-61725?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-61725?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "b9a7c4c50167e022a3afcf51bd8cae381bf9ea6ce2998c69abb9c93c503ef256",
      "category": "container_scanning",
      "message": "CVE-2025-61725 on stdlib@1.21.11",
      "description": "The ParseAddress function constructeds domain-literal address components through repeated string concatenation. When parsing large domain-literal components, this can cause excessive CPU consumption.",
      "cve": "CVE-2025-61725",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-61725",
          "value": "CVE-2025-61725",
          "url": "https://scout.docker.com/v/CVE-2025-61725?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-61725?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "f0f9d2b477de0d52c9b8ad85c4987f8f7077b88382ad67a8286f6ebebcfda4ce",
      "category": "container_scanning",
      "message": "CVE-2025-9086 on alpine/curl@8.9.0-r0",
      "cve": "CVE-2025-9086",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.9.0-r0 to 8.14.1-r2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.9.0-r0?os_name=alpine&os_version=3.20"
          },
          "version": "8.9.0-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-9086",
          "value": "CVE-2025-9086",
          "url": "https://scout.docker.com/v/CVE-2025-9086?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.14.1-r2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-9086?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.14.1-r2"
        }
      ]
    },
    {
      "id": "396cd34a75297b54e46b68143e9618803b972f0fe16bb1a7dc170c2e85e6107c",
      "category": "container_scanning",
      "message": "CVE-2025-9230 on alpine/openssl@3.3.1-r3",
      "cve": "CVE-2025-9230",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.3.1-r3 to 3.3.5-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.3.1-r3?os_name=alpine&os_version=3.20"
          },
          "version": "3.3.1-r3"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-9230",
          "value": "CVE-2025-9230",
          "url": "https://scout.docker.com/v/CVE-2025-9230?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C3.3.5-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-9230?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C3.3.5-r0"
        }
      ]
    },
    {
      "id": "912d9274d704f9ca5dc8c54c63940477bad0f5a659abc69ca0c5c404feaccbe7",
      "category": "container_scanning",
      "message": "GHSA-m425-mq94-257g on google.golang.org/grpc@1.50.1",
      "description": "### Impact\nIn affected releases of gRPC-Go, it is possible for an attacker to send HTTP/2 requests, cancel them, and send subsequent requests, which is valid by the HTTP/2 protocol, but would cause the gRPC-Go server to launch more concurrent method handlers than the configured maximum stream limit.\n\n### Patches\nThis vulnerability was addressed by #6703 and has been included in patch releases: 1.56.3, 1.57.1, 1.58.3.  It is also included in the latest release, 1.59.0.\n\nAlong with applying the patch, users should also ensure they are using the `grpc.MaxConcurrentStreams` server option to apply a limit to the server's resources used for any single connection.\n\n### Workarounds\nNone.\n\n### References\n#6703\n",
      "cve": "GHSA-m425-mq94-257g",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade google.golang.org/grpc@1.50.1 to 1.56.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/google.golang.org/grpc@1.50.1"
          },
          "version": "1.50.1"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-m425-mq94-257g",
          "value": "GHSA-m425-mq94-257g",
          "url": "https://scout.docker.com/v/GHSA-m425-mq94-257g?s=github&n=grpc&ns=google.golang.org&t=golang&vr=%3C1.56.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-m425-mq94-257g?s=github&n=grpc&ns=google.golang.org&t=golang&vr=%3C1.56.3"
        }
      ]
    },
    {
      "id": "4f0b35b7b7fb43c63df070814e7037f8fe04bff4535aed1db4f752d9b5b6ba2b",
      "category": "container_scanning",
      "message": "CVE-2025-48384 on alpine/git@2.45.2-r0",
      "cve": "CVE-2025-48384",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/git@2.45.2-r0 to 2.45.4-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/git@2.45.2-r0?os_name=alpine&os_version=3.20"
          },
          "version": "2.45.2-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-48384",
          "value": "CVE-2025-48384",
          "url": "https://scout.docker.com/v/CVE-2025-48384?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.45.4-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-48384?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.45.4-r0"
        }
      ]
    },
    {
      "id": "9c6137f91d01bf501cf800d41ad019b9cf105327a77b2f63894ee74053aa0e84",
      "category": "container_scanning",
      "message": "CVE-2025-26519 on alpine/musl@1.2.5-r0",
      "cve": "CVE-2025-26519",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/musl@1.2.5-r0 to 1.2.5-r1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/musl@1.2.5-r0?os_name=alpine&os_version=3.20"
          },
          "version": "1.2.5-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-26519",
          "value": "CVE-2025-26519",
          "url": "https://scout.docker.com/v/CVE-2025-26519?s=alpine&n=musl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C1.2.5-r1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-26519?s=alpine&n=musl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C1.2.5-r1"
        }
      ]
    },
    {
      "id": "d07ab5c7f9eda978f6d35177a0b38796c23fe754c433d5dc626da4156e185e6f",
      "category": "container_scanning",
      "message": "CVE-2025-31498 on alpine/c-ares@1.28.1-r0",
      "cve": "CVE-2025-31498",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/c-ares@1.28.1-r0?os_name=alpine&os_version=3.20"
          },
          "version": "1.28.1-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-31498",
          "value": "CVE-2025-31498",
          "url": "https://scout.docker.com/v/CVE-2025-31498?s=alpine&n=c-ares&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C%3D1.33.1-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-31498?s=alpine&n=c-ares&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C%3D1.33.1-r0"
        }
      ]
    },
    {
      "id": "8e23b2d47fd746390d0440837a8c65138cd0d18ca111d0faa3a50386f2edb7c9",
      "category": "container_scanning",
      "message": "CVE-2025-46835 on alpine/git@2.45.2-r0",
      "cve": "CVE-2025-46835",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/git@2.45.2-r0 to 2.45.4-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/git@2.45.2-r0?os_name=alpine&os_version=3.20"
          },
          "version": "2.45.2-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-46835",
          "value": "CVE-2025-46835",
          "url": "https://scout.docker.com/v/CVE-2025-46835?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.45.4-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-46835?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.45.4-r0"
        }
      ]
    },
    {
      "id": "1ba7e9cea17e9616414a0e625a930ba853366b7955beebe20d7da5a76bc088f1",
      "category": "container_scanning",
      "message": "CVE-2025-27614 on alpine/git@2.45.2-r0",
      "cve": "CVE-2025-27614",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/git@2.45.2-r0 to 2.45.4-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/git@2.45.2-r0?os_name=alpine&os_version=3.20"
          },
          "version": "2.45.2-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-27614",
          "value": "CVE-2025-27614",
          "url": "https://scout.docker.com/v/CVE-2025-27614?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.45.4-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-27614?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.45.4-r0"
        }
      ]
    },
    {
      "id": "7cd65c9fc738311e7db05f90e01bcdadbe5f965c47ef92d9463424d20ecfd624",
      "category": "container_scanning",
      "message": "CVE-2025-46334 on alpine/git@2.45.2-r0",
      "cve": "CVE-2025-46334",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/git@2.45.2-r0 to 2.45.4-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/git@2.45.2-r0?os_name=alpine&os_version=3.20"
          },
          "version": "2.45.2-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-46334",
          "value": "CVE-2025-46334",
          "url": "https://scout.docker.com/v/CVE-2025-46334?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.45.4-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-46334?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.45.4-r0"
        }
      ]
    },
    {
      "id": "eeb2d8a2e49a8a99ea43dc880499c585c0d442ccde0b8caa0a54956ca172fb3d",
      "category": "container_scanning",
      "message": "CVE-2025-48385 on alpine/git@2.45.2-r0",
      "cve": "CVE-2025-48385",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/git@2.45.2-r0 to 2.45.4-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/git@2.45.2-r0?os_name=alpine&os_version=3.20"
          },
          "version": "2.45.2-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-48385",
          "value": "CVE-2025-48385",
          "url": "https://scout.docker.com/v/CVE-2025-48385?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.45.4-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-48385?s=alpine&n=git&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.45.4-r0"
        }
      ]
    },
    {
      "id": "8e6b8c8d760d49d38d14be3f70c26d87e4240bd34c2a45cf0b7f7f1e58da07f6",
      "category": "container_scanning",
      "message": "CVE-2024-23651 on github.com/moby/buildkit@0.11.7-0.20240124010513-435cb77e369c",
      "description": "### Impact\nTwo malicious build steps running in parallel sharing the same cache mounts with subpaths could cause a race condition that can lead to files from the host system being accessible to the build container.\n\n### Patches\nThe issue has been fixed in v0.12.5\n\n### Workarounds\nAvoid using BuildKit frontend from an untrusted source or building an untrusted Dockerfile containing cache mounts with `--mount=type=cache,source=...` options.\n\n### References\nhttps://www.openwall.com/lists/oss-security/2019/05/28/1\n",
      "cve": "CVE-2024-23651",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/moby/buildkit@0.11.7-0.20240124010513-435cb77e369c to 0.12.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/moby/buildkit@0.11.7-0.20240124010513-435cb77e369c"
          },
          "version": "0.11.7-0.20240124010513-435cb77e369c"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-23651",
          "value": "CVE-2024-23651",
          "url": "https://scout.docker.com/v/CVE-2024-23651?s=github&n=buildkit&ns=github.com%2Fmoby&t=golang&vr=%3C0.12.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-23651?s=github&n=buildkit&ns=github.com%2Fmoby&t=golang&vr=%3C0.12.5"
        }
      ]
    },
    {
      "id": "0f0b51716ffebe43a8aee38c70dca96536063e0d10c15f72a9eafa27766b1085",
      "category": "container_scanning",
      "message": "CVE-2025-30204 on github.com/golang-jwt/jwt@4.4.2",
      "description": "### Summary\n\nFunction [`parse.ParseUnverified`](https://github.com/golang-jwt/jwt/blob/c035977d9e11c351f4c05dfeae193923cbab49ee/parser.go#L138-L139) currently splits (via a call to [strings.Split](https://pkg.go.dev/strings#Split)) its argument (which is untrusted data) on periods.\n\nAs a result, in the face of a malicious request whose _Authorization_ header consists of `Bearer ` followed by many period characters, a call to that function incurs allocations to the tune of O(n) bytes (where n stands for the length of the function's argument), with a constant factor of about 16. Relevant weakness: [CWE-405: Asymmetric Resource Consumption (Amplification)](https://cwe.mitre.org/data/definitions/405.html)\n\n### Details\n\nSee [`parse.ParseUnverified`](https://github.com/golang-jwt/jwt/blob/c035977d9e11c351f4c05dfeae193923cbab49ee/parser.go#L138-L139) \n\n### Impact\n\nExcessive memory allocation",
      "cve": "CVE-2025-30204",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/golang-jwt/jwt@4.4.2 to 4.5.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/golang-jwt/jwt@4.4.2#v4"
          },
          "version": "4.4.2"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-30204",
          "value": "CVE-2025-30204",
          "url": "https://scout.docker.com/v/CVE-2025-30204?s=github&n=v4&ns=github.com%2Fgolang-jwt%2Fjwt&t=golang&vr=%3C4.5.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-30204?s=github&n=v4&ns=github.com%2Fgolang-jwt%2Fjwt&t=golang&vr=%3C4.5.2"
        }
      ]
    },
    {
      "id": "f92907dcf7aa00a09eaa33f757e91031986fb9eac5d93a6bc33338d49509dea6",
      "category": "container_scanning",
      "message": "CVE-2025-31115 on alpine/xz@5.6.1-r3",
      "cve": "CVE-2025-31115",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/xz@5.6.1-r3 to 5.6.2-r1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/xz@5.6.1-r3?os_name=alpine&os_version=3.20"
          },
          "version": "5.6.1-r3"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-31115",
          "value": "CVE-2025-31115",
          "url": "https://scout.docker.com/v/CVE-2025-31115?s=alpine&n=xz&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C5.6.2-r1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-31115?s=alpine&n=xz&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C5.6.2-r1"
        }
      ]
    },
    {
      "id": "45ea94aa3b5cfc547255af98e9cff7f4843155e337e86cb4a9f1744e4f3e879f",
      "category": "container_scanning",
      "message": "CVE-2024-45337 on golang.org/x/crypto@0.23.0",
      "description": "Applications and libraries which misuse the ServerConfig.PublicKeyCallback callback may be susceptible to an authorization bypass.\n\nThe documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions.\n\nFor example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key.\n\nSince this API is widely misused, as a partial mitigation golang.org/x/crypto@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth.\n\nUsers should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the ServerConn.Permissions field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.",
      "cve": "CVE-2024-45337",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/crypto@0.23.0 to 0.31.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/crypto@0.23.0"
          },
          "version": "0.23.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45337",
          "value": "CVE-2024-45337",
          "url": "https://scout.docker.com/v/CVE-2024-45337?s=github&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.31.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45337?s=github&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.31.0"
        }
      ]
    },
    {
      "id": "55568e68aa4f0e586bbe8e7df0d730f413e971ba82a2d01117260ad7e5af5443",
      "category": "container_scanning",
      "message": "CVE-2024-45337 on golang.org/x/crypto@0.14.0",
      "description": "Applications and libraries which misuse the ServerConfig.PublicKeyCallback callback may be susceptible to an authorization bypass.\n\nThe documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions.\n\nFor example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key.\n\nSince this API is widely misused, as a partial mitigation golang.org/x/crypto@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth.\n\nUsers should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the ServerConn.Permissions field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.",
      "cve": "CVE-2024-45337",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/crypto@0.14.0 to 0.31.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/crypto@0.14.0"
          },
          "version": "0.14.0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45337",
          "value": "CVE-2024-45337",
          "url": "https://scout.docker.com/v/CVE-2024-45337?s=github&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.31.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45337?s=github&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.31.0"
        }
      ]
    },
    {
      "id": "363f53565d84ceda877c994874281d1f952bc9d36ff2d044e42a1d55ba432172",
      "category": "container_scanning",
      "message": "CVE-2025-22871 on stdlib@1.20.13",
      "description": "The net/http package improperly accepts a bare LF as a line terminator in chunked data chunk-size lines. This can permit request smuggling if a net/http server is used in conjunction with a server that incorrectly accepts a bare LF as part of a chunk-ext.",
      "cve": "CVE-2025-22871",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.23.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22871",
          "value": "CVE-2025-22871",
          "url": "https://scout.docker.com/v/CVE-2025-22871?s=golang&n=stdlib&t=golang&vr=%3C1.23.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22871?s=golang&n=stdlib&t=golang&vr=%3C1.23.8"
        }
      ]
    },
    {
      "id": "4fb9a3ea38743a3d0107ce0b6fb1e060a1d9f4cc12ac87a34067fa673bd1e29e",
      "category": "container_scanning",
      "message": "CVE-2025-22871 on stdlib@1.21.11",
      "description": "The net/http package improperly accepts a bare LF as a line terminator in chunked data chunk-size lines. This can permit request smuggling if a net/http server is used in conjunction with a server that incorrectly accepts a bare LF as part of a chunk-ext.",
      "cve": "CVE-2025-22871",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.21.11 to 1.23.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.21.11"
          },
          "version": "1.21.11"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22871",
          "value": "CVE-2025-22871",
          "url": "https://scout.docker.com/v/CVE-2025-22871?s=golang&n=stdlib&t=golang&vr=%3C1.23.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22871?s=golang&n=stdlib&t=golang&vr=%3C1.23.8"
        }
      ]
    },
    {
      "id": "fcf8a2c1618c85bb67a128274e1d08e4cfe15407c683a448d4c2d5fc5262c1f3",
      "category": "container_scanning",
      "message": "CVE-2025-22871 on stdlib@1.22.5",
      "description": "The net/http package improperly accepts a bare LF as a line terminator in chunked data chunk-size lines. This can permit request smuggling if a net/http server is used in conjunction with a server that incorrectly accepts a bare LF as part of a chunk-ext.",
      "cve": "CVE-2025-22871",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.22.5 to 1.23.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.22.5"
          },
          "version": "1.22.5"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22871",
          "value": "CVE-2025-22871",
          "url": "https://scout.docker.com/v/CVE-2025-22871?s=golang&n=stdlib&t=golang&vr=%3C1.23.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22871?s=golang&n=stdlib&t=golang&vr=%3C1.23.8"
        }
      ]
    },
    {
      "id": "505cce132e0a66232a9d8b99f6cc13bb38fabdcb035bd9c8b68fb2bc4114e06e",
      "category": "container_scanning",
      "message": "CVE-2024-41110 on github.com/docker/docker@27.0.3+incompatible",
      "description": "A security vulnerability has been detected in certain versions of Docker Engine, which could allow an attacker to bypass [authorization plugins (AuthZ)](https://docs.docker.com/engine/extend/plugins_authorization/) under specific circumstances. The base likelihood of this being exploited is low. This advisory outlines the issue, identifies the affected versions, and provides remediation steps for impacted users.\n\n### Impact\n\nUsing a specially-crafted API request, an Engine API client could make the daemon forward the request or response to an [authorization plugin](https://docs.docker.com/engine/extend/plugins_authorization/) without the body. In certain circumstances, the authorization plugin may allow a request which it would have otherwise denied if the body had been forwarded to it.\n\n\nA security issue was discovered In 2018,  where an attacker could bypass AuthZ plugins using a specially crafted API request. This could lead to unauthorized actions, including privilege escalation. Although this issue was fixed in Docker Engine [v18.09.1](https://docs.docker.com/engine/release-notes/18.09/#security-fixes-1) in January 2019, the fix was not carried forward to later major versions, resulting in a regression. Anyone who depends on authorization plugins that introspect the request and/or response body to make access control decisions is potentially impacted.\n\nDocker EE v19.03.x and all versions of Mirantis Container Runtime **are not vulnerable.**\n\n### Vulnerability details\n\n- **AuthZ bypass and privilege escalation:** An attacker could exploit a bypass using an API request with Content-Length set to 0, causing the Docker daemon to forward the request without the body to the AuthZ plugin, which might approve the request incorrectly.\n- **Initial fix:** The issue was fixed in Docker Engine [v18.09.1](https://docs.docker.com/engine/release-notes/18.09/#security-fixes-1) January 2019..\n- **Regression:** The fix was not included in Docker Engine v19.03 or newer versions. This was identified in April 2024 and patches were released for the affected versions on July 23, 2024. The issue was assigned [CVE-2024-41110](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-41110).\n\n### Patches\n\n- docker-ce v27.1.1 containes patches to fix the vulnerability.\n- Patches have also been merged into the master, 19.0, 20.0, 23.0, 24.0, 25.0, 26.0, and 26.1 release branches.\n\n### Remediation steps\n\n- If you are running an affected version, update to the most recent patched version.\n- Mitigation if unable to update immediately:\n    - Avoid using AuthZ plugins.\n    - Restrict access to the Docker API to trusted parties, following the principle of least privilege.\n\n\n### References\n\n- https://github.com/moby/moby/commit/fc274cd2ff4cf3b48c91697fb327dd1fb95588fb\n- https://github.com/moby/moby/commit/a79fabbfe84117696a19671f4aa88b82d0f64fc1\n- https://www.docker.com/blog/docker-security-advisory-docker-engine-authz-plugin/",
      "cve": "CVE-2024-41110",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/docker/docker@27.0.3+incompatible to 27.1.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/docker@27.0.3%2Bincompatible"
          },
          "version": "27.0.3+incompatible"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-41110",
          "value": "CVE-2024-41110",
          "url": "https://scout.docker.com/v/CVE-2024-41110?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D27.0.0%2C%3C27.1.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-41110?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D27.0.0%2C%3C27.1.1"
        }
      ]
    },
    {
      "id": "6808046a5e1c48da38574bb052de2c0be8cd8438a7598ad1386fc61c4b5d2575",
      "category": "container_scanning",
      "message": "CVE-2024-41110 on github.com/docker/docker@27.1.0+incompatible",
      "description": "A security vulnerability has been detected in certain versions of Docker Engine, which could allow an attacker to bypass [authorization plugins (AuthZ)](https://docs.docker.com/engine/extend/plugins_authorization/) under specific circumstances. The base likelihood of this being exploited is low. This advisory outlines the issue, identifies the affected versions, and provides remediation steps for impacted users.\n\n### Impact\n\nUsing a specially-crafted API request, an Engine API client could make the daemon forward the request or response to an [authorization plugin](https://docs.docker.com/engine/extend/plugins_authorization/) without the body. In certain circumstances, the authorization plugin may allow a request which it would have otherwise denied if the body had been forwarded to it.\n\n\nA security issue was discovered In 2018,  where an attacker could bypass AuthZ plugins using a specially crafted API request. This could lead to unauthorized actions, including privilege escalation. Although this issue was fixed in Docker Engine [v18.09.1](https://docs.docker.com/engine/release-notes/18.09/#security-fixes-1) in January 2019, the fix was not carried forward to later major versions, resulting in a regression. Anyone who depends on authorization plugins that introspect the request and/or response body to make access control decisions is potentially impacted.\n\nDocker EE v19.03.x and all versions of Mirantis Container Runtime **are not vulnerable.**\n\n### Vulnerability details\n\n- **AuthZ bypass and privilege escalation:** An attacker could exploit a bypass using an API request with Content-Length set to 0, causing the Docker daemon to forward the request without the body to the AuthZ plugin, which might approve the request incorrectly.\n- **Initial fix:** The issue was fixed in Docker Engine [v18.09.1](https://docs.docker.com/engine/release-notes/18.09/#security-fixes-1) January 2019..\n- **Regression:** The fix was not included in Docker Engine v19.03 or newer versions. This was identified in April 2024 and patches were released for the affected versions on July 23, 2024. The issue was assigned [CVE-2024-41110](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-41110).\n\n### Patches\n\n- docker-ce v27.1.1 containes patches to fix the vulnerability.\n- Patches have also been merged into the master, 19.0, 20.0, 23.0, 24.0, 25.0, 26.0, and 26.1 release branches.\n\n### Remediation steps\n\n- If you are running an affected version, update to the most recent patched version.\n- Mitigation if unable to update immediately:\n    - Avoid using AuthZ plugins.\n    - Restrict access to the Docker API to trusted parties, following the principle of least privilege.\n\n\n### References\n\n- https://github.com/moby/moby/commit/fc274cd2ff4cf3b48c91697fb327dd1fb95588fb\n- https://github.com/moby/moby/commit/a79fabbfe84117696a19671f4aa88b82d0f64fc1\n- https://www.docker.com/blog/docker-security-advisory-docker-engine-authz-plugin/",
      "cve": "CVE-2024-41110",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/docker/docker@27.1.0+incompatible to 27.1.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/docker@27.1.0%2Bincompatible"
          },
          "version": "27.1.0+incompatible"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-41110",
          "value": "CVE-2024-41110",
          "url": "https://scout.docker.com/v/CVE-2024-41110?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D27.0.0%2C%3C27.1.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-41110?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D27.0.0%2C%3C27.1.1"
        }
      ]
    },
    {
      "id": "38fcc956970fad0b6e0c6d212537bbd249b70e809f668bd8924fd14ba86024b5",
      "category": "container_scanning",
      "message": "CVE-2024-41110 on github.com/docker/docker@24.0.9",
      "description": "A security vulnerability has been detected in certain versions of Docker Engine, which could allow an attacker to bypass [authorization plugins (AuthZ)](https://docs.docker.com/engine/extend/plugins_authorization/) under specific circumstances. The base likelihood of this being exploited is low. This advisory outlines the issue, identifies the affected versions, and provides remediation steps for impacted users.\n\n### Impact\n\nUsing a specially-crafted API request, an Engine API client could make the daemon forward the request or response to an [authorization plugin](https://docs.docker.com/engine/extend/plugins_authorization/) without the body. In certain circumstances, the authorization plugin may allow a request which it would have otherwise denied if the body had been forwarded to it.\n\n\nA security issue was discovered In 2018,  where an attacker could bypass AuthZ plugins using a specially crafted API request. This could lead to unauthorized actions, including privilege escalation. Although this issue was fixed in Docker Engine [v18.09.1](https://docs.docker.com/engine/release-notes/18.09/#security-fixes-1) in January 2019, the fix was not carried forward to later major versions, resulting in a regression. Anyone who depends on authorization plugins that introspect the request and/or response body to make access control decisions is potentially impacted.\n\nDocker EE v19.03.x and all versions of Mirantis Container Runtime **are not vulnerable.**\n\n### Vulnerability details\n\n- **AuthZ bypass and privilege escalation:** An attacker could exploit a bypass using an API request with Content-Length set to 0, causing the Docker daemon to forward the request without the body to the AuthZ plugin, which might approve the request incorrectly.\n- **Initial fix:** The issue was fixed in Docker Engine [v18.09.1](https://docs.docker.com/engine/release-notes/18.09/#security-fixes-1) January 2019..\n- **Regression:** The fix was not included in Docker Engine v19.03 or newer versions. This was identified in April 2024 and patches were released for the affected versions on July 23, 2024. The issue was assigned [CVE-2024-41110](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-41110).\n\n### Patches\n\n- docker-ce v27.1.1 containes patches to fix the vulnerability.\n- Patches have also been merged into the master, 19.0, 20.0, 23.0, 24.0, 25.0, 26.0, and 26.1 release branches.\n\n### Remediation steps\n\n- If you are running an affected version, update to the most recent patched version.\n- Mitigation if unable to update immediately:\n    - Avoid using AuthZ plugins.\n    - Restrict access to the Docker API to trusted parties, following the principle of least privilege.\n\n\n### References\n\n- https://github.com/moby/moby/commit/fc274cd2ff4cf3b48c91697fb327dd1fb95588fb\n- https://github.com/moby/moby/commit/a79fabbfe84117696a19671f4aa88b82d0f64fc1\n- https://www.docker.com/blog/docker-security-advisory-docker-engine-authz-plugin/",
      "cve": "CVE-2024-41110",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/docker/docker@24.0.9 to 25.0.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/docker@24.0.9"
          },
          "version": "24.0.9"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-41110",
          "value": "CVE-2024-41110",
          "url": "https://scout.docker.com/v/CVE-2024-41110?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D24.0.0%2C%3C25.0.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-41110?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D24.0.0%2C%3C25.0.6"
        }
      ]
    },
    {
      "id": "37f958f30424c7b12b64ccae6708640a4c3e5cdc595d38e95bff217921112c64",
      "category": "container_scanning",
      "message": "CVE-2024-23653 on github.com/moby/buildkit@0.11.7-0.20240124010513-435cb77e369c",
      "description": "### Impact\nIn addition to running containers as build steps, BuildKit also provides APIs for running interactive containers based on built images. It was possible to use these APIs to ask BuildKit to run a container with elevated privileges. Normally, running such containers is only allowed if special `security.insecure` entitlement is enabled both by buildkitd configuration and allowed by the user initializing the build request.\n\n### Patches\nThe issue has been fixed in v0.12.5 .\n\n### Workarounds\nAvoid using BuildKit frontends from untrusted sources. A frontend image is usually specified as the `#syntax` line on your Dockerfile, or with `--frontend` flag when using `buildctl build` command.\n\n### References\n\n",
      "cve": "CVE-2024-23653",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/moby/buildkit@0.11.7-0.20240124010513-435cb77e369c to 0.12.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/moby/buildkit@0.11.7-0.20240124010513-435cb77e369c"
          },
          "version": "0.11.7-0.20240124010513-435cb77e369c"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-23653",
          "value": "CVE-2024-23653",
          "url": "https://scout.docker.com/v/CVE-2024-23653?s=github&n=buildkit&ns=github.com%2Fmoby&t=golang&vr=%3C0.12.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-23653?s=github&n=buildkit&ns=github.com%2Fmoby&t=golang&vr=%3C0.12.5"
        }
      ]
    },
    {
      "id": "d537fd4cdf1b30c9f9b3134b16a571603037b16fae6a047f9e7aef7d94e67ffe",
      "category": "container_scanning",
      "message": "CVE-2024-24790 on stdlib@1.20.13",
      "description": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.",
      "cve": "CVE-2024-24790",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.13 to 1.21.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.13"
          },
          "version": "1.20.13"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24790",
          "value": "CVE-2024-24790",
          "url": "https://scout.docker.com/v/CVE-2024-24790?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24790?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ]
    },
    {
      "id": "949bd2d1a500079aff4fd6f3bac909d9549f77ba9aa10753c986f4f7912ffd9b",
      "category": "container_scanning",
      "message": "CVE-2024-45491 on alpine/expat@2.6.2-r0",
      "cve": "CVE-2024-45491",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/expat@2.6.2-r0 to 2.6.3-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/expat@2.6.2-r0?os_name=alpine&os_version=3.20"
          },
          "version": "2.6.2-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45491",
          "value": "CVE-2024-45491",
          "url": "https://scout.docker.com/v/CVE-2024-45491?s=alpine&n=expat&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.6.3-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45491?s=alpine&n=expat&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.6.3-r0"
        }
      ]
    },
    {
      "id": "82f98c6b7e9da8715cbaad00f76163f8cb9e7eb4ed382f92cab8099d605ab41b",
      "category": "container_scanning",
      "message": "CVE-2024-45492 on alpine/expat@2.6.2-r0",
      "cve": "CVE-2024-45492",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/expat@2.6.2-r0 to 2.6.3-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/expat@2.6.2-r0?os_name=alpine&os_version=3.20"
          },
          "version": "2.6.2-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45492",
          "value": "CVE-2024-45492",
          "url": "https://scout.docker.com/v/CVE-2024-45492?s=alpine&n=expat&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.6.3-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45492?s=alpine&n=expat&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C2.6.3-r0"
        }
      ]
    },
    {
      "id": "127dce38b9bd4895a516cf5e8825ea8c5bf318101db1913c095a7e4e586a82cb",
      "category": "container_scanning",
      "message": "CVE-2025-0665 on alpine/curl@8.9.0-r0",
      "cve": "CVE-2025-0665",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.9.0-r0 to 8.12.0-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.9.0-r0?os_name=alpine&os_version=3.20"
          },
          "version": "8.9.0-r0"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-0665",
          "value": "CVE-2025-0665",
          "url": "https://scout.docker.com/v/CVE-2025-0665?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.12.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-0665?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.20&vr=%3C8.12.0-r0"
        }
      ]
    },
    {
      "id": "05fe8774845df9a3d62575eee54c5d8930f4d22802407545cf1a02ef46aadf27",
      "category": "container_scanning",
      "message": "CVE-2024-23652 on github.com/moby/buildkit@0.11.7-0.20240124010513-435cb77e369c",
      "description": "### Impact\nA malicious BuildKit frontend or Dockerfile using `RUN --mount` could trick the feature that removes empty files created for the mountpoints into removing a file outside the container, from the host system.\n\n### Patches\nThe issue has been fixed in v0.12.5\n\n### Workarounds\nAvoid using BuildKit frontend from an untrusted source or building an untrusted Dockerfile containing `RUN --mount` feature.\n\n### References\n\n",
      "cve": "CVE-2024-23652",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/moby/buildkit@0.11.7-0.20240124010513-435cb77e369c to 0.12.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/moby/buildkit@0.11.7-0.20240124010513-435cb77e369c"
          },
          "version": "0.11.7-0.20240124010513-435cb77e369c"
        },
        "operating_system": "alpine 3.20",
        "image": "docker:24-dind"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-23652",
          "value": "CVE-2024-23652",
          "url": "https://scout.docker.com/v/CVE-2024-23652?s=github&n=buildkit&ns=github.com%2Fmoby&t=golang&vr=%3C0.12.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-23652?s=github&n=buildkit&ns=github.com%2Fmoby&t=golang&vr=%3C0.12.5"
        }
      ]
    }
  ],
  "remediations": [],
  "scan": {
    "start_time": "2025-10-31T16:06:22",
    "end_time": "2025-10-31T16:06:22",
    "status": "success",
    "type": "container_scanning",
    "scanner": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    },
    "analyzer": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    }
  }
}
