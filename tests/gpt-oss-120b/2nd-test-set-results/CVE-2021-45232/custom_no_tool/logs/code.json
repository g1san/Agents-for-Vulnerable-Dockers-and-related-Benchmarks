{
    "files": [
        {
            "location": "./../../dockers/CVE-2021-45232/custom_no_tool/docker-compose.yml",
            "content": "services:\n  vulnerable_app:\n    build: ./vulnerable\n    ports:\n      - \"8080:80\"\n    environment:\n      - FLASK_ENV=development\n    depends_on:\n      - apisix\n  apisix:\n    image: apache/apisix:2.11.0-alpine\n    ports:\n      - \"9080:9080\"\n      - \"9443:9443\"\n      - \"9180:9180\"\n    environment:\n      - APISIX_ETCD_HOST=etcd:2379\n    depends_on:\n      - etcd\n  apisix_dashboard:\n    image: apache/apisix-dashboard:2.9.0\n    ports:\n      - \"9000:9000\"\n    environment:\n      - DASHBOARD_ETCD_HOST=etcd:2379\n      - DASHBOARD_APISIX_ADMIN_API_URL=http://apisix:9180/apisix/admin\n    depends_on:\n      - apisix\n  etcd:\n    image: bitnami/etcd:3.5.0\n    environment:\n      - ALLOW_NONE_AUTHENTICATION=yes\n      - ETCD_ADVERTISE_CLIENT_URLS=http://0.0.0.0:2379\n      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379\n    ports:\n      - \"2379:2379\""
        },
        {
            "location": "./../../dockers/CVE-2021-45232/custom_no_tool/vulnerable/Dockerfile",
            "content": "FROM python:3.8-bullseye\nWORKDIR /app\n# Install system build tools required for compiling Python packages\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates \\\n        python3-dev && \\\n    rm -rf /var/lib/apt/lists/*\n# Copy requirements first so pip can install them\nCOPY requirements.txt requirements.txt\nRUN pip install --upgrade pip && \\\n    pip install --no-cache-dir -r requirements.txt\n# Copy application code after dependencies are installed\nCOPY app.py app.py\nEXPOSE 80\nCMD [\"python3\", \"app.py\"]"
        },
        {
            "location": "./../../dockers/CVE-2021-45232/custom_no_tool/vulnerable/requirements.txt",
            "content": "Flask==2.0.1\nWerkzeug==2.0.3"
        },
        {
            "location": "./../../dockers/CVE-2021-45232/custom_no_tool/vulnerable/app.py",
            "content": "from flask import Flask, request, abort\napp = Flask(__name__)\n\nSAFE_COMMANDS = {\n    \"ls\": [\"ls\", \"-la\"],\n    \"date\": [\"date\"]\n}\n\n@app.route('/')\ndef index():\n    cmd = request.args.get('cmd')\n    if cmd:\n        # Allow only predefined safe commands; otherwise reject\n        if cmd not in SAFE_COMMANDS:\n            abort(400, description=\"Invalid command\")\n        try:\n            result = __import__('subprocess').run(\n                SAFE_COMMANDS[cmd],\n                capture_output=True,\n                text=True,\n                check=True\n            )\n            return f\"<pre>{result.stdout}</pre>\"\n        except Exception as e:\n            return f\"Error executing command: {e}\", 500\n    return \"Send a 'cmd' parameter with an allowed command (ls, date).\"\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=80)\n"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2021-45232/custom_no_tool"
}