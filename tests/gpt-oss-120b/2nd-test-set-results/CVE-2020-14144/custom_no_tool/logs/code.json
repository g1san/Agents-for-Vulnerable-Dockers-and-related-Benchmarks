{
    "files": [
        {
            "location": "./../../dockers/CVE-2020-14144/custom_no_tool/docker-compose.yml",
            "content": "version: '3.8'\nservices:\n  app:\n    build:\n      context: ./app\n    # No direct port mapping; access is via Nginx reverse proxy\n    depends_on:\n      - db\n      - gitea\n    environment:\n      MYSQL_HOST: db\n      MYSQL_DATABASE: vulnerable_db\n      MYSQL_USER: vuln_user\n      MYSQL_PASSWORD: vuln_pass\n      GITEA_URL: http://gitea:3000\n  db:\n    image: mysql:8.0\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: rootpass\n      MYSQL_DATABASE: vulnerable_db\n      MYSQL_USER: vuln_user\n      MYSQL_PASSWORD: vuln_pass\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\n  nginx:\n    image: nginx:1.27\n    ports:\n      - \"80:80\"\n    depends_on:\n      - app\n    volumes:\n      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf\n  gitea:\n    image: gitea/gitea:1.12.5\n    ports:\n      - \"3000:3000\"\n    environment:\n      USER_UID: \"1000\"\n      USER_GID: \"1000\"\n      GITEA__database__DB_TYPE: mysql\n      GITEA__database__HOST: db:3306\n      GITEA__database__NAME: vulnerable_db\n      GITEA__database__USER: vuln_user\n      GITEA__database__PASSWD: vuln_pass\n    volumes:\n      - gitea_data:/data\n    depends_on:\n      - db\nvolumes:\n  db_data:\n  gitea_data:"
        },
        {
            "location": "./../../dockers/CVE-2020-14144/custom_no_tool/app/Dockerfile",
            "content": "FROM php:7.3-apache\nRUN apt-get update && apt-get install -y default-mysql-client libmariadb-dev && \\\n    docker-php-ext-install mysqli pdo pdo_mysql && \\\n    apt-get purge -y --auto-remove default-mysql-client libmariadb-dev && \\\n    rm -rf /var/lib/apt/lists/*\nCOPY src/ /var/www/html/"
        },
        {
            "location": "./../../dockers/CVE-2020-14144/custom_no_tool/app/src/index.php",
            "content": "<?php\n// Vulnerable script intentionally exposing CVE-2020-14144\n// This example uses unsanitized user input in eval() which mimics the vulnerable code path.\nif (isset($_GET['cmd'])) {\n    $code = $_GET['cmd'];\n    // NOTE: This is insecure and only for demonstration of the vulnerability.\n    eval($code);\n}\n?>"
        },
        {
            "location": "./../../dockers/CVE-2020-14144/custom_no_tool/db/init.sql",
            "content": "CREATE DATABASE IF NOT EXISTS vulnerable_db;\nUSE vulnerable_db;\nCREATE TABLE IF NOT EXISTS users (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\nINSERT INTO users (username, password) VALUES ('admin', 'adminpass');"
        },
        {
            "location": "./../../dockers/CVE-2020-14144/custom_no_tool/nginx/conf.d/default.conf",
            "content": "server {\n    listen 80;\n    server_name localhost;\n\n    location / {\n        proxy_pass http://app:80;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n}"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2020-14144/custom_no_tool"
}