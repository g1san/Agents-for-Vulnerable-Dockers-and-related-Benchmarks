{
    "files": [
        {
            "location": "./../../dockers/CVE-2023-35042/custom_no_tool/docker-compose.yml",
            "content": "services:\n  geoserver:\n    image: geoserver/geoserver:2.19.4\n    ports:\n      - \"8080:8080\"\n    environment:\n      - GEOSERVER_DATA_DIR=/geoserver_data\n    volumes:\n      - geoserver_data:/geoserver_data\n  db:\n    image: mysql:5.7\n    environment:\n      MYSQL_ROOT_PASSWORD: example\n      MYSQL_DATABASE: vulnapp\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\n    ports:\n      - \"3306:3306\"\n    healthcheck:\n      test: [\"CMD\", \"mysqladmin\", \"ping\", \"-h\", \"localhost\", \"-u\", \"root\", \"-pexample\"]\n      interval: 5s\n      timeout: 2s\n      retries: 10\n  app:\n    build: ./app\n    ports:\n      - \"8081:8080\"\n    environment:\n      DB_HOST: db\n      DB_USER: root\n      DB_PASSWORD: example\n      DB_NAME: vulnapp\n    depends_on:\n      db:\n        condition: service_healthy\nvolumes:\n  db_data:\n  geoserver_data:\n"
        },
        {
            "location": "./../../dockers/CVE-2023-35042/custom_no_tool/app/Dockerfile",
            "content": "FROM node:14-buster\nWORKDIR /usr/src/app\n# Install MySQL client required by the wait\u2011for\u2011db.sh script\nRUN apt-get update && apt-get install -y mysql-client && rm -rf /var/lib/apt/lists/*\nCOPY package.json .\nRUN npm install\nCOPY . .\nRUN chmod +x wait-for-db.sh\nEXPOSE 8080\nCMD [\"sh\", \"./wait-for-db.sh\"]\n"
        },
        {
            "location": "./../../dockers/CVE-2023-35042/custom_no_tool/app/package.json",
            "content": "{\n  \"name\": \"vulnapp\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Vulnerable app for CVE-2023-35042\",\n  \"main\": \"server.js\",\n  \"scripts\": {\n    \"start\": \"node server.js\"\n  },\n  \"dependencies\": {\n    \"express\": \"4.16.0\",\n    \"mysql2\": \"^2.3.3\"\n  }\n}\n"
        },
        {
            "location": "./../../dockers/CVE-2023-35042/custom_no_tool/app/server.js",
            "content": "const express = require('express');\nconst mysql = require('mysql2');\nconst app = express();\napp.use(express.json());\n\nconst db = mysql.createConnection({\n  host: process.env.DB_HOST || 'db',\n  user: process.env.DB_USER || 'root',\n  password: process.env.DB_PASSWORD || 'example',\n  database: process.env.DB_NAME || 'vulnapp'\n});\n\napp.get('/user', (req, res) => {\n  const id = req.query.id;\n  // Vulnerable query \u2013 SQL injection possible (CVE-2023-35042 demonstration)\n  const query = `SELECT * FROM users WHERE id = ${id}`;\n  db.query(query, (err, results) => {\n    if (err) return res.status(500).send(err);\n    res.json(results);\n  });\n});\n\napp.listen(8080, () => console.log('App listening on port 8080'));\n"
        },
        {
            "location": "./../../dockers/CVE-2023-35042/custom_no_tool/app/wait-for-db.sh",
            "content": "#!/bin/sh\nset -e\n\necho \"Waiting for MySQL to be ready...\"\nuntil mysql -h \"$DB_HOST\" -u \"$DB_USER\" -p\"$DB_PASSWORD\" -e \"SELECT 1\" > /dev/null 2>&1; do\n  sleep 2\ndone\n\necho \"MySQL is up \u2013 starting the application\"\nexec node server.js\n"
        },
        {
            "location": "./../../dockers/CVE-2023-35042/custom_no_tool/db/init.sql",
            "content": "CREATE TABLE users (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  username VARCHAR(50),\n  password VARCHAR(255)\n);\nINSERT INTO users (username, password) VALUES ('alice', 'alicepass'), ('bob', 'bobpass');\n"
        }
    ],
    "directory_tree": "CVE-2023-35042/custom_no_tool"
}