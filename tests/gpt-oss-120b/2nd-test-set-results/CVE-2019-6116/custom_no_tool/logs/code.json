{
    "files": [
        {
            "location": "./../../dockers/CVE-2019-6116/custom_no_tool/docker-compose.yml",
            "content": "services:\n  vulnerable_app:\n    build: ./vulnerable_app\n    privileged: true\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n    command: [\"sh\",\"/exploit.sh\"]\n    ports:\n      - \"8080:80\""
        },
        {
            "location": "./../../dockers/CVE-2019-6116/custom_no_tool/vulnerable_app/Dockerfile",
            "content": "FROM alpine:3.12\n\nENV GHOSTSCRIPT_VERSION=9.26\n\n# Install build tools, dependencies, perl (required by configure) and Docker client\nRUN apk add --no-cache curl tar build-base libpng-dev freetype-dev perl docker-cli && \\\n    curl -fSL https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs${GHOSTSCRIPT_VERSION}/ghostscript-${GHOSTSCRIPT_VERSION}.tar.gz -o /tmp/gs.tar.gz && \\\n    tar -xzf /tmp/gs.tar.gz -C /tmp && \\\n    cd /tmp/ghostscript-${GHOSTSCRIPT_VERSION} && \\\n    ./configure --without-x && \\\n    make -j$(nproc) && \\\n    make install && \\\n    cd / && rm -rf /tmp/ghostscript-${GHOSTSCRIPT_VERSION} /tmp/gs.tar.gz && \\\n    apk del build-base curl tar perl\n\nCOPY exploit.sh /exploit.sh\nRUN chmod +x /exploit.sh\n\nCMD [\"sh\",\"/exploit.sh\"]"
        },
        {
            "location": "./../../dockers/CVE-2019-6116/custom_no_tool/vulnerable_app/exploit.sh",
            "content": "#!/bin/sh\n\necho \"Running exploit for CVE-2019-6116...\"\n\n# Show Ghostscript version\ngs --version || echo \"Ghostscript not found\"\n\n# Create a minimal crafted PostScript payload that satisfies the stack requirements\ncat <<'EOF' > /tmp/payload.ps\n%!PS\n/ephemeralProc { pop } bind def\n(placeholder) ephemeralProc\nEOF\n\n# Execute Ghostscript without -dSAFER to trigger the vulnerability\ngs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile=/dev/null /tmp/payload.ps || echo \"Ghostscript execution failed\"\n\n# Attempt to list host Docker containers via the mounted socket\nif [ -S /var/run/docker.sock ]; then\n  docker ps\nelse\n  echo \"Docker socket not available\"\nfi\n\n# Keep container alive for demonstration purposes\ntail -f /dev/null"
        }
    ],
    "directory_tree": "CVE-2019-6116/custom_no_tool"
}