{
    "files": [
        {
            "location": "./../../dockers/CVE-2014-3704/custom_no_tool/docker-compose.yml",
            "content": "services:\n  db:\n    image: mysql:5.5\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: rootpass\n      MYSQL_DATABASE: drupaldb\n      MYSQL_USER: drupal\n      MYSQL_PASSWORD: drupalpass\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\n    healthcheck:\n      test: [\"CMD\", \"mysqladmin\", \"ping\", \"-h\", \"localhost\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n  drupal:\n    build: ./web\n    ports:\n      - \"8080:80\"\n    depends_on:\n      db:\n        condition: service_healthy\n    environment:\n      DRUPAL_DB_HOST: db\n      DRUPAL_DB_NAME: drupaldb\n      DRUPAL_DB_USER: drupal\n      DRUPAL_DB_PASS: drupalpass\nvolumes:\n  db_data:"
        },
        {
            "location": "./../../dockers/CVE-2014-3704/custom_no_tool/web/Dockerfile",
            "content": "FROM php:5.6-apache\n# Use archive.debian.org because the default stretch repositories are no longer available\nRUN sed -i 's|http://deb.debian.org|http://archive.debian.org|g' /etc/apt/sources.list && \\\n    sed -i 's|http://security.debian.org|http://archive.debian.org|g' /etc/apt/sources.list && \\\n    echo 'Acquire::Check-Valid-Until \"false\";' > /etc/apt/apt.conf.d/99no-check-valid-until\n# Install build\u2011time libraries and compile the required PHP extensions\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        libpng-dev \\\n        libjpeg-dev \\\n        libfreetype6-dev \\\n        git \\\n        wget \\\n    && docker-php-ext-install mysqli pdo_mysql \\\n    && rm -rf /var/lib/apt/lists/*\n# Download Drupal 7.31 source and extract it\nRUN mkdir -p /usr/src/drupal && \\\n    wget -q -O - https://ftp.drupal.org/files/projects/drupal-7.31.tar.gz | tar -xz -C /usr/src/drupal --strip-components=1\n# Copy the extracted Drupal files into the web root\nRUN cp -R /usr/src/drupal/. /var/www/html/\n# Ensure the web server can read the files\nRUN chown -R www-data:www-data /var/www/html"
        },
        {
            "location": "./../../dockers/CVE-2014-3704/custom_no_tool/web/drupal/sites/default/settings.php",
            "content": "<?php\n$databases = array (\n  'default' => \n  array (\n    'default' => \n    array (\n      'database' => getenv('DRUPAL_DB_NAME'),\n      'username' => getenv('DRUPAL_DB_USER'),\n      'password' => getenv('DRUPAL_DB_PASS'),\n      'host' => getenv('DRUPAL_DB_HOST'),\n      'port' => '',\n      'driver' => 'mysql',\n      'prefix' => '',\n    ),\n  ),\n);\n$settings['hash_salt'] = 'randomhashsalt';\n\n// Global MySQLi connection used by the vulnerable driver.\n$mysqli = new mysqli(\n  getenv('DRUPAL_DB_HOST'),\n  getenv('DRUPAL_DB_USER'),\n  getenv('DRUPAL_DB_PASS'),\n  getenv('DRUPAL_DB_NAME')\n);\nif ($mysqli->connect_error) {\n  die('MySQLi Connection Error (' . $mysqli->connect_errno . ') ' . $mysqli->connect_error);\n}\n$GLOBALS['mysqli'] = $mysqli;\n?>"
        },
        {
            "location": "./../../dockers/CVE-2014-3704/custom_no_tool/web/drupal/includes/database/mysql.inc",
            "content": "<?php\n/**\n * Vulnerable MySQL database driver for Drupal 7.31 (CVE-2014-3704).\n * This file has been adapted to use the mysqli extension that is\n * available in the PHP 5.6 Docker image.\n */\n\nfunction db_query($query, $args = array(), $options = array()) {\n  // Keep the original unsafe interpolation for demonstration purposes.\n  if (!empty($args)) {\n    $query = @vsprintf($query, $args);\n  }\n  $result = $GLOBALS['mysqli']->query($query);\n  if ($result === false) {\n    watchdog('database', 'Database query error: %query', array('%query' => $query), WATCHDOG_ERROR);\n    return false;\n  }\n  return $result;\n}\n\nfunction db_begin() {\n  $GLOBALS['mysqli']->query('START TRANSACTION');\n}\n\nfunction db_commit() {\n  $GLOBALS['mysqli']->query('COMMIT');\n}\n\nfunction db_rollback() {\n  $GLOBALS['mysqli']->query('ROLLBACK');\n}\n?>"
        },
        {
            "location": "./../../dockers/CVE-2014-3704/custom_no_tool/db/init.sql",
            "content": "CREATE TABLE IF NOT EXISTS test_table (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  name VARCHAR(100) NOT NULL\n);\nINSERT INTO test_table (name) VALUES ('test1'), ('test2');"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2014-3704/custom_no_tool"
}