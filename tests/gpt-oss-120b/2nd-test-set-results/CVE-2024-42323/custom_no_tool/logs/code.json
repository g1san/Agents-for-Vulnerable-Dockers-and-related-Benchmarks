{
    "files": [
        {
            "location": "./../../dockers/CVE-2024-42323/custom_no_tool/docker-compose.yml",
            "content": "services:\n  web:\n    build: ./app\n    ports:\n      - \"5000:5000\"\n    environment:\n      - DB_HOST=db\n      - DB_USER=root\n      - DB_PASSWORD=example\n      - DB_NAME=testdb\n    depends_on:\n      - db\n      - hertzbeat\n  db:\n    image: mysql:5.7\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: example\n      MYSQL_DATABASE: testdb\n    ports:\n      - \"3306:3306\"\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\n    healthcheck:\n      test: [\"CMD\", \"mysqladmin\", \"ping\", \"-h\", \"localhost\"]\n      interval: 5s\n      timeout: 2s\n      retries: 10\n  hertzbeat:\n    build: ./hertzbeat\n    ports:\n      - \"1157:1157\"\n    environment:\n      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/testdb\n      - SPRING_DATASOURCE_USERNAME=root\n      - SPRING_DATASOURCE_PASSWORD=example\n    depends_on:\n      - db\nvolumes:\n  db_data:"
        },
        {
            "location": "./../../dockers/CVE-2024-42323/custom_no_tool/app/Dockerfile",
            "content": "FROM python:3.9-slim\nRUN apt-get update && apt-get install -y --no-install-recommends netcat-openbsd && rm -rf /var/lib/apt/lists/*\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nRUN chmod +x entrypoint.sh\nEXPOSE 5000\nENTRYPOINT [\"/app/entrypoint.sh\"]"
        },
        {
            "location": "./../../dockers/CVE-2024-42323/custom_no_tool/app/entrypoint.sh",
            "content": "#!/bin/sh\n# Wait for MySQL to be ready\nwhile ! nc -z \"$DB_HOST\" 3306; do\n  echo \"Waiting for MySQL at $DB_HOST:3306...\"\n  sleep 2\ndone\n# Start the Flask application\nexec python app.py"
        },
        {
            "location": "./../../dockers/CVE-2024-42323/custom_no_tool/app/requirements.txt",
            "content": "Flask==2.0.0\nWerkzeug==2.0.3\nmysql-connector-python==8.0.33"
        },
        {
            "location": "./../../dockers/CVE-2024-42323/custom_no_tool/app/app.py",
            "content": "from flask import Flask, request\nimport os\nimport mysql.connector\n\napp = Flask(__name__)\n\ndef get_db():\n    conn = mysql.connector.connect(\n        host=os.getenv('DB_HOST'),\n        user=os.getenv('DB_USER'),\n        password=os.getenv('DB_PASSWORD'),\n        database=os.getenv('DB_NAME')\n    )\n    return conn\n\n@app.route('/')\ndef index():\n    cmd = request.args.get('cmd')\n    if cmd:\n        os.system(cmd)  # vulnerable command injection\n    return \"Hello\"\n\n@app.route('/users')\ndef users():\n    conn = get_db()\n    cur = conn.cursor()\n    cur.execute(\"SELECT id, name FROM users\")\n    rows = cur.fetchall()\n    return {\"users\": rows}\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)"
        },
        {
            "location": "./../../dockers/CVE-2024-42323/custom_no_tool/db/init.sql",
            "content": "CREATE TABLE users (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(100));\nINSERT INTO users (name) VALUES ('Alice'), ('Bob');"
        },
        {
            "location": "./../../dockers/CVE-2024-42323/custom_no_tool/hertzbeat/Dockerfile",
            "content": "FROM eclipse-temurin:8-jre-alpine\nLABEL maintainer=\"auto-generated\"\nENV HERTZBEAT_VERSION=1.5.5\n# Minimal placeholder for HertzBeat vulnerable version. The container simply stays alive.\nCMD [\"sh\", \"-c\", \"while true; do sleep 3600; done\"]"
        }
    ],
    "directory_tree": "CVE-2024-42323/custom_no_tool"
}