const express = require('express');
const mongoose = require('mongoose');
const app = express();

// Vulnerable endpoint that triggers prototype pollution in Express 4.16.0
app.use(express.json());
app.post('/pollute', (req, res) => {
  // The request body is merged into req.body prototype chain (simulated vulnerability)
  const payload = req.body;
  Object.assign(Object.prototype, payload);
  res.send('Prototype polluted');
});

// Simple data endpoint
app.get('/data', async (req, res) => {
  const Test = mongoose.model('Test', new mongoose.Schema({ name: String }));
  const docs = await Test.find();
  res.json(docs);
});

const mongoUri = process.env.MONGO_URI || 'mongodb://localhost:27017/vulnapp';
mongoose.connect(mongoUri, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => console.log('Mongo connected'))
  .catch(err => console.error('Mongo connection error:', err));

app.listen(3000, () => console.log('Web app listening on port 3000'));