{
    "files": [
        {
            "location": "./../../dockers/CVE-2022-41678/custom_no_tool/docker-compose.yml",
            "content": "services:\n  activemq:\n    build: ./activemq\n    ports:\n      - \"61616:61616\"\n      - \"8161:8161\"\n    environment:\n      - ACTIVEMQ_ADMIN_LOGIN=admin\n      - ACTIVEMQ_ADMIN_PASSWORD=admin\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:8161\"]\n      interval: 30s\n      timeout: 10s\n      retries: 5\n\n  web:\n    build: ./web\n    ports:\n      - \"8080:8080\"\n    depends_on:\n      - db\n    environment:\n      - DB_HOST=db\n      - DB_USER=vuln_user\n      - DB_PASSWORD=vuln_pass\n      - DB_NAME=vuln_db\n\n  db:\n    image: mysql:5.7\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: rootpass\n      MYSQL_DATABASE: vuln_db\n      MYSQL_USER: vuln_user\n      MYSQL_PASSWORD: vuln_pass\n    ports:\n      - \"3306:3306\"\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\n\nvolumes:\n  db_data:"
        },
        {
            "location": "./../../dockers/CVE-2022-41678/custom_no_tool/activemq/Dockerfile",
            "content": "FROM apache/activemq:5.16.0\nRUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*"
        },
        {
            "location": "./../../dockers/CVE-2022-41678/custom_no_tool/web/Dockerfile",
            "content": "FROM node:14-bullseye\n\n# Set production environment\nENV NODE_ENV=production\n\nWORKDIR /app\n\n# Copy dependency manifests\nCOPY package*.json ./\n\n# Install exact dependency versions\nRUN npm ci --only=production\n\n# Copy application source code\nCOPY . .\n\nEXPOSE 8080\nCMD [\"node\", \"app.js\"]"
        },
        {
            "location": "./../../dockers/CVE-2022-41678/custom_no_tool/web/package.json",
            "content": "{\n  \"name\": \"vulnerable-app\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Demo app vulnerable to CVE-2022-41678\",\n  \"main\": \"app.js\",\n  \"scripts\": {\n    \"start\": \"node app.js\"\n  },\n  \"dependencies\": {\n    \"express\": \"4.16.0\",\n    \"mysql\": \"2.18.1\"\n  }\n}"
        },
        {
            "location": "./../../dockers/CVE-2022-41678/custom_no_tool/web/package-lock.json",
            "content": "{\n  \"name\": \"vulnerable-app\",\n  \"lockfileVersion\": 1,\n  \"requires\": true,\n  \"dependencies\": {\n    \"express\": {\n      \"version\": \"4.16.0\",\n      \"resolved\": \"https://registry.npmjs.org/express/-/express-4.16.0.tgz\",\n      \"integrity\": \"sha512-...\",\n      \"requires\": {\n        \"accepts\": \"~1.3.5\",\n        \"array-flatten\": \"1.1.1\",\n        \"body-parser\": \"1.18.3\",\n        \"content-disposition\": \"0.5.2\",\n        \"content-type\": \"~1.0.4\",\n        \"cookie\": \"0.3.1\",\n        \"cookie-signature\": \"1.0.6\",\n        \"debug\": \"2.6.9\",\n        \"depd\": \"~1.1.2\",\n        \"encodeurl\": \"~1.0.2\",\n        \"escape-html\": \"~0.0.1\",\n        \"etag\": \"~1.8.1\",\n        \"finalhandler\": \"1.1.2\",\n        \"fresh\": \"0.5.2\",\n        \"merge-descriptors\": \"1.0.1\",\n        \"methods\": \"1.1.2\",\n        \"on-finished\": \"2.3.0\",\n        \"parseurl\": \"~1.3.3\",\n        \"path-to-regexp\": \"0.1.7\",\n        \"proxy-addr\": \"~2.0.5\",\n        \"qs\": \"6.5.2\",\n        \"range-parser\": \"1.2.1\",\n        \"send\": \"0.16.2\",\n        \"serve-static\": \"1.13.2\",\n        \"setprototypeof\": \"1.1.0\",\n        \"statuses\": \"1.3.1\",\n        \"type-is\": \"1.6.18\",\n        \"utils-merge\": \"1.0.1\",\n        \"vary\": \"1.1.2\"\n      }\n    },\n    \"mysql\": {\n      \"version\": \"2.18.1\",\n      \"resolved\": \"https://registry.npmjs.org/mysql/-/mysql-2.18.1.tgz\",\n      \"integrity\": \"sha512-...\"\n    }\n  }\n}"
        },
        {
            "location": "./../../dockers/CVE-2022-41678/custom_no_tool/web/app.js",
            "content": "const express = require('express');\nconst mysql = require('mysql');\nconst app = express();\nconst port = 8080;\n\n// Vulnerable: Directly uses query parameters in SQL without sanitization (SQL Injection)\napp.get('/search', (req, res) => {\n  const term = req.query.q || '';\n  const connection = mysql.createConnection({\n    host: process.env.DB_HOST,\n    user: process.env.DB_USER,\n    password: process.env.DB_PASSWORD,\n    database: process.env.DB_NAME\n  });\n  connection.query(`SELECT * FROM data WHERE value LIKE '%${term}%'`, (err, results) => {\n    if (err) {\n      return res.status(500).send('Database error');\n    }\n    res.json(results);\n  });\n});\n\napp.listen(port, () => {\n  console.log(`App listening on port ${port}`);\n});"
        },
        {
            "location": "./../../dockers/CVE-2022-41678/custom_no_tool/db/init.sql",
            "content": "CREATE DATABASE IF NOT EXISTS vuln_db;\nUSE vuln_db;\nCREATE TABLE IF NOT EXISTS data (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  value VARCHAR(255) NOT NULL\n);\nINSERT INTO data (value) VALUES ('test1'), ('test2'), ('example');"
        }
    ],
    "directory_tree": "custom_no_tool/\n\u251c\u2500 docker-compose.yml\n\u251c\u2500 activemq/\n\u2502   \u2514\u2500 Dockerfile\n\u251c\u2500 web/\n\u2502   \u251c\u2500 Dockerfile\n\u2502   \u251c\u2500 package.json\n\u2502   \u251c\u2500 package-lock.json\n\u2502   \u2514\u2500 app.js\n\u2514\u2500 db/\n    \u2514\u2500 init.sql"
}