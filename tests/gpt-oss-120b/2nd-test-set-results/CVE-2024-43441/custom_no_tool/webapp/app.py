import os
import json
import requests
from flask import Flask, request, jsonify

app = Flask(__name__)

HG_HOST = os.getenv('HG_HOST', 'hugegraph')
HG_PORT = os.getenv('HG_PORT', '8182')
HG_URL = f'http://{HG_HOST}:{HG_PORT}'

def hg_query(gremlin):
    payload = {'gremlin': gremlin}
    resp = requests.post(f'{HG_URL}/gremlin', json=payload)
    resp.raise_for_status()
    return resp.json()

@app.route('/')
def index():
    return "Vulnerable WebApp ready (HugeGraph backend)"

@app.route('/process', methods=['POST'])
def process():
    data = request.json or {}
    result = data.get('input', '')
    return jsonify({"result": result})

# Example endpoint that returns all vertices of label 'person'
@app.route('/users')
def list_users():
    try:
        result = hg_query("g.V().hasLabel('person').valueMap()")
        # Transform result to a more friendly format
        vertices = []
        for item in result.get('result', []):
            vertex = {k: v[0] if isinstance(v, list) else v for k, v in item.items()}
            vertices.append(vertex)
        return jsonify(vertices)
    except Exception as e:
        return jsonify({"error": str(e)}), 500

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=80)