{
    "files": [
        {
            "location": "./../../dockers/CVE-2021-26120/custom_no_tool/docker-compose.yml",
            "content": "version: '3.8'\nservices:\n  vulnerable_app:\n    build:\n      context: ./app\n    image: vulnerable_app:latest\n    container_name: vulnerable_app\n    ports:\n      - \"80:80\"\n    depends_on:\n      - docker\n      - db\n    restart: unless-stopped\n\n  docker:\n    image: docker:20.10.2-dind   # version known to contain CVE-2021-26120 (unrelated to the application layer)\n    container_name: docker_dind\n    privileged: true\n    environment:\n      - DOCKER_TLS_CERTDIR=\n    command: [\"-H\", \"tcp://0.0.0.0:2375\"]\n    ports:\n      - \"2375:2375\"\n    restart: unless-stopped\n\n  db:\n    build:\n      context: ./db\n    image: vulnerable_mysql:latest\n    container_name: vulnerable_mysql\n    environment:\n      MYSQL_ROOT_PASSWORD: rootpass\n      MYSQL_DATABASE: testdb\n    ports:\n      - \"3306:3306\"\n    restart: unless-stopped"
        },
        {
            "location": "./../../dockers/CVE-2021-26120/custom_no_tool/app/Dockerfile",
            "content": "FROM php:8.0-apache\n\n# Install system dependencies required by Composer and potential PHP extensions\nRUN apt-get update && \\\n    apt-get install -y git unzip libzip-dev libpng-dev libjpeg-dev && \\\n    docker-php-ext-install zip && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install Composer\nRUN curl -sS https://getcomposer.org/installer | php && \\\n    mv composer.phar /usr/local/bin/composer\n\n# Set working directory for the web app\nWORKDIR /var/www/html\n\n# Copy application source (includes composer.json)\nCOPY . /var/www/html\n\n# Install PHP dependencies (Smarty) via Composer\nRUN composer install --no-interaction --prefer-dist\n\n# Create Smarty directories with proper permissions\nRUN mkdir -p /var/www/html/templates /var/www/html/templates_c && \\\n    chown -R www-data:www-data /var/www/html\n\n# Enable Apache rewrite module (optional, not required for this demo)\nRUN a2enmod rewrite\n\nEXPOSE 80\n\nCMD [\"apache2-foreground\"]"
        },
        {
            "location": "./../../dockers/CVE-2021-26120/custom_no_tool/app/index.php",
            "content": "<?php\nrequire __DIR__ . '/vendor/autoload.php';\n\nuse Smarty;\n\n$func = isset($_GET['func']) ? $_GET['func'] : 'demo_function';\n\n$smarty = new Smarty();\n$smarty->setTemplateDir(__DIR__.'/templates/');\n$smarty->setCompileDir(__DIR__.'/templates_c/');\n\n// Build a template string that uses the supplied function name.\n// If the function name contains malicious PHP code, the vulnerability is triggered.\n$templateString = \"{function $func}Hello from vulnerable Smarty!{/function}\";\n\n// Render the template from the string.\n$output = $smarty->fetch('string:' . $templateString);\n\necho $output;\n?>"
        },
        {
            "location": "./../../dockers/CVE-2021-26120/custom_no_tool/app/composer.json",
            "content": "{\n  \"require\": {\n    \"smarty/smarty\": \"3.1.*\"\n  }\n}"
        },
        {
            "location": "./../../dockers/CVE-2021-26120/custom_no_tool/db/Dockerfile",
            "content": "FROM mysql:5.7\nCOPY init.sql /docker-entrypoint-initdb.d/"
        },
        {
            "location": "./../../dockers/CVE-2021-26120/custom_no_tool/db/init.sql",
            "content": "CREATE TABLE users (id INT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(50), password VARCHAR(255));\nINSERT INTO users (username, password) VALUES ('alice', 'password1'), ('bob', 'password2');"
        }
    ],
    "directory_tree": "custom_no_tool/\n\u2502   docker-compose.yml\n\u251c\u2500\u2500 app/\n\u2502   \u2502   Dockerfile\n\u2502   \u2502   index.php\n\u2502   \u2502   composer.json\n\u251c\u2500\u2500 db/\n\u2502   \u2502   Dockerfile\n\u2502   \u2502   init.sql"
}