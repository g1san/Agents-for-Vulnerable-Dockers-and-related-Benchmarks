{
  "version": "15.0.6",
  "vulnerabilities": [
    {
      "id": "3db1334c40ae3c6d2adb2e80ef9fa366e5f45367aabcd2586f80f965deb13b48",
      "category": "container_scanning",
      "message": "GHSA-2x5j-vhc8-9cwm on github.com/cloudflare/circl@1.6.0",
      "description": "The CIRCL implementation of FourQ fails to validate user-supplied low-order points during Diffie-Hellman key exchange, potentially allowing attackers to force the identity point and compromise session security.\n\nMoreover, there is an incorrect point validation in ScalarMult can lead to incorrect results in the isEqual function and if a point is on the curve.",
      "cve": "GHSA-2x5j-vhc8-9cwm",
      "severity": "Unknown",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/cloudflare/circl@1.6.0 to 1.6.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/cloudflare/circl@1.6.0"
          },
          "version": "1.6.0"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-2x5j-vhc8-9cwm",
          "value": "GHSA-2x5j-vhc8-9cwm",
          "url": "https://scout.docker.com/v/GHSA-2x5j-vhc8-9cwm?s=gitlab&n=circl&ns=github.com%2Fcloudflare&t=golang&vr=%3C1.6.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-2x5j-vhc8-9cwm?s=gitlab&n=circl&ns=github.com%2Fcloudflare&t=golang&vr=%3C1.6.1"
        }
      ]
    },
    {
      "id": "fb087b885e67c90b147e15be59e3980ccefcac437065b6ccff936e2b6e307924",
      "category": "container_scanning",
      "message": "CVE-2020-8912 on github.com/aws/aws-sdk-go@1.55.6",
      "description": "A vulnerability in the in-band key negotiation exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. An attacker with write access to the targeted bucket can change the encryption algorithm of an object in the bucket, which can then allow them to change AES-GCM to AES-CTR. Using this in combination with a decryption oracle can reveal the authentication key used by AES-GCM as decrypting the GMAC tag leaves the authentication key recoverable as an algebraic equation. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
      "cve": "CVE-2020-8912",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/aws/aws-sdk-go@1.55.6"
          },
          "version": "1.55.6"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-8912",
          "value": "CVE-2020-8912",
          "url": "https://scout.docker.com/v/CVE-2020-8912?s=golang&n=aws-sdk-go&ns=github.com%2Faws&t=golang&vr=%3E%3D0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-8912?s=golang&n=aws-sdk-go&ns=github.com%2Faws&t=golang&vr=%3E%3D0"
        }
      ]
    },
    {
      "id": "73a6154f55583f66a100681065433759817de72d561a7b2eb9d44a4019c3c4c0",
      "category": "container_scanning",
      "message": "CVE-2024-58251 on alpine/busybox@1.37.0-r12",
      "cve": "CVE-2024-58251",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/busybox@1.37.0-r12?os_name=alpine&os_version=3.21"
          },
          "version": "1.37.0-r12"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-58251",
          "value": "CVE-2024-58251",
          "url": "https://scout.docker.com/v/CVE-2024-58251?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C%3D1.37.0-r13"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-58251?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C%3D1.37.0-r13"
        }
      ]
    },
    {
      "id": "93c06c2404315e972d12c761b15d02f0381c018c1bfa897a5571ee3d7ce57222",
      "category": "container_scanning",
      "message": "CVE-2025-46394 on alpine/busybox@1.37.0-r12",
      "cve": "CVE-2025-46394",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/busybox@1.37.0-r12?os_name=alpine&os_version=3.21"
          },
          "version": "1.37.0-r12"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-46394",
          "value": "CVE-2025-46394",
          "url": "https://scout.docker.com/v/CVE-2025-46394?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C%3D1.37.0-r13"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-46394?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C%3D1.37.0-r13"
        }
      ]
    },
    {
      "id": "2c5576d9b52be29ece994f5d54cef77f1fbfb827c1211228a58f296c1645bb3a",
      "category": "container_scanning",
      "message": "CVE-2025-58183 on stdlib@1.24.2",
      "description": "tar.Reader does not set a maximum size on the number of sparse region data blocks in GNU tar pax 1.0 sparse files. A maliciously-crafted archive containing a large number of sparse regions can cause a Reader to read an unbounded amount of data from the archive into memory. When reading from a compressed source, a small compressed input can result in large allocations.",
      "cve": "CVE-2025-58183",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.24.2 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.24.2"
          },
          "version": "1.24.2"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58183",
          "value": "CVE-2025-58183",
          "url": "https://scout.docker.com/v/CVE-2025-58183?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58183?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "d5fd85be7ba1677be24b1a23ca54ed94a4972fd4a048739318abc9c833905392",
      "category": "container_scanning",
      "message": "CVE-2025-8556 on github.com/cloudflare/circl@1.6.0",
      "description": "### Impact\nThe CIRCL implementation of FourQ fails to validate user-supplied low-order points during Diffie-Hellman key exchange, potentially allowing attackers to force the identity point and compromise session security.\n\nMoreover, there is an incorrect point validation in ScalarMult can lead to incorrect results in the isEqual function and if a point is on the curve.\n\n\n### Patches\nVersion 1.6.1 (https://github.com/cloudflare/circl/tree/v1.6.1) mitigates the identified issues.\n\nWe acknowledge Alon Livne (Botanica Software Labs) for the reported findings.",
      "cve": "CVE-2025-8556",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/cloudflare/circl@1.6.0 to 1.6.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/cloudflare/circl@1.6.0"
          },
          "version": "1.6.0"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-8556",
          "value": "CVE-2025-8556",
          "url": "https://scout.docker.com/v/CVE-2025-8556?s=github&n=circl&ns=github.com%2Fcloudflare&t=golang&vr=%3C1.6.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-8556?s=github&n=circl&ns=github.com%2Fcloudflare&t=golang&vr=%3C1.6.1"
        }
      ]
    },
    {
      "id": "9d3acf3934b6b78673264d2e8fa3271ac18f9e826d909c9a24f19986f6be8b88",
      "category": "container_scanning",
      "message": "CVE-2025-5025 on alpine/curl@8.12.1-r1",
      "cve": "CVE-2025-5025",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.12.1-r1 to 8.14.0-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.12.1-r1?os_name=alpine&os_version=3.21"
          },
          "version": "8.12.1-r1"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-5025",
          "value": "CVE-2025-5025",
          "url": "https://scout.docker.com/v/CVE-2025-5025?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C8.14.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-5025?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C8.14.0-r0"
        }
      ]
    },
    {
      "id": "313a10aac452f3be1709d48c6c90121254f2bd4ee8928671fa3dc1c4d45e815f",
      "category": "container_scanning",
      "message": "CVE-2025-10148 on alpine/curl@8.12.1-r1",
      "cve": "CVE-2025-10148",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.12.1-r1 to 8.14.1-r2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.12.1-r1?os_name=alpine&os_version=3.21"
          },
          "version": "8.12.1-r1"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-10148",
          "value": "CVE-2025-10148",
          "url": "https://scout.docker.com/v/CVE-2025-10148?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C8.14.1-r2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-10148?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C8.14.1-r2"
        }
      ]
    },
    {
      "id": "518a41f005cbd11405309fa25142c685f4489e5996891e950dd36a8cbbd6d8a9",
      "category": "container_scanning",
      "message": "CVE-2025-47912 on stdlib@1.24.2",
      "description": "The Parse function permits values other than IPv6 addresses to be included in square brackets within the host component of a URL. RFC 3986 permits IPv6 addresses to be included within the host component, enclosed within square brackets. For example: \"http://[::1]/\". IPv4 addresses and hostnames must not appear within square brackets. Parse did not enforce this requirement.",
      "cve": "CVE-2025-47912",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.24.2 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.24.2"
          },
          "version": "1.24.2"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-47912",
          "value": "CVE-2025-47912",
          "url": "https://scout.docker.com/v/CVE-2025-47912?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-47912?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "c5a2de8e22d9d0aa783833866214ec69435ff83ea8f370174e4ebdc90128deb1",
      "category": "container_scanning",
      "message": "CVE-2025-58185 on stdlib@1.24.2",
      "description": "Parsing a maliciously crafted DER payload could allocate large amounts of memory, causing memory exhaustion.",
      "cve": "CVE-2025-58185",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.24.2 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.24.2"
          },
          "version": "1.24.2"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58185",
          "value": "CVE-2025-58185",
          "url": "https://scout.docker.com/v/CVE-2025-58185?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58185?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "42e2573363145c00499193aae9dc8aab57a1d5651b5b741a4c32636fdb3b462d",
      "category": "container_scanning",
      "message": "CVE-2025-58186 on stdlib@1.24.2",
      "description": "Despite HTTP headers having a default limit of 1MB, the number of cookies that can be parsed does not have a limit. By sending a lot of very small cookies such as \"a=;\", an attacker can make an HTTP server allocate a large amount of structs, causing large memory consumption.",
      "cve": "CVE-2025-58186",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.24.2 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.24.2"
          },
          "version": "1.24.2"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58186",
          "value": "CVE-2025-58186",
          "url": "https://scout.docker.com/v/CVE-2025-58186?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58186?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "9afa39beb0ed41048dfe8a4a88b81263bbc2197e2d76efadbfcd95ae49940977",
      "category": "container_scanning",
      "message": "CVE-2025-58189 on stdlib@1.24.2",
      "description": "When Conn.Handshake fails during ALPN negotiation the error contains attacker controlled information (the ALPN protocols sent by the client) which is not escaped.",
      "cve": "CVE-2025-58189",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.24.2 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.24.2"
          },
          "version": "1.24.2"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58189",
          "value": "CVE-2025-58189",
          "url": "https://scout.docker.com/v/CVE-2025-58189?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58189?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "b07b76e3901400bc97e9a1ead45d61f288b44a24e546aa3ebd5e78a1f4e153ac",
      "category": "container_scanning",
      "message": "CVE-2025-61724 on stdlib@1.24.2",
      "description": "The Reader.ReadResponse function constructs a response string through repeated string concatenation of lines. When the number of lines in a response is large, this can cause excessive CPU consumption.",
      "cve": "CVE-2025-61724",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.24.2 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.24.2"
          },
          "version": "1.24.2"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-61724",
          "value": "CVE-2025-61724",
          "url": "https://scout.docker.com/v/CVE-2025-61724?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-61724?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "f461c2851dfffc3de5e879c20498e11eee6ba0a8f06e798a913d0cc5acaa7750",
      "category": "container_scanning",
      "message": "CVE-2025-0913 on stdlib@1.24.2",
      "description": "os.OpenFile(path, os.O_CREATE|O_EXCL) behaved differently on Unix and Windows systems when the target path was a dangling symlink. On Unix systems, OpenFile with O_CREATE and O_EXCL flags never follows symlinks. On Windows, when the target path was a symlink to a nonexistent location, OpenFile would create a file in that location. OpenFile now always returns an error when the O_CREATE and O_EXCL flags are both set and the target path is a symlink.",
      "cve": "CVE-2025-0913",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.24.2 to 1.24.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.24.2"
          },
          "version": "1.24.2"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-0913",
          "value": "CVE-2025-0913",
          "url": "https://scout.docker.com/v/CVE-2025-0913?s=golang&n=stdlib&t=golang&vr=%3E%3D1.24.0-0%2C%3C1.24.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-0913?s=golang&n=stdlib&t=golang&vr=%3E%3D1.24.0-0%2C%3C1.24.4"
        }
      ]
    },
    {
      "id": "38b69d20fec36a89bbf30647d7e1249676f60b526e679251bfe0d6d3a0899aec",
      "category": "container_scanning",
      "message": "CVE-2020-8911 on github.com/aws/aws-sdk-go@1.55.6",
      "description": "A padding oracle vulnerability exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. The SDK allows users to encrypt files with AES-CBC without computing a Message Authentication Code (MAC), which then allows an attacker who has write access to the target's S3 bucket and can observe whether or not an endpoint with access to the key can decrypt a file, they can reconstruct the plaintext with (on average) 128*length (plaintext) queries to the endpoint, by exploiting CBC's ability to manipulate the bytes of the next block and PKCS5 padding errors. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
      "cve": "CVE-2020-8911",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/aws/aws-sdk-go@1.55.6"
          },
          "version": "1.55.6"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-8911",
          "value": "CVE-2020-8911",
          "url": "https://scout.docker.com/v/CVE-2020-8911?s=golang&n=aws-sdk-go&ns=github.com%2Faws&t=golang&vr=%3E%3D0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-8911?s=golang&n=aws-sdk-go&ns=github.com%2Faws&t=golang&vr=%3E%3D0"
        }
      ]
    },
    {
      "id": "d56f2ee6de9b40e8c3c8c16b9284529c019bc284ecda2693f6eac3ac58d68447",
      "category": "container_scanning",
      "message": "CVE-2025-46331 on github.com/openfga/openfga@1.8.6",
      "description": "Overview\nOpenFGA v1.8.10 or previous (Helm chart <= openfga-0.2.28, docker <= v.1.8.10) are vulnerable to authorization bypass when certain Check and ListObject calls are executed.\n\nAm I Affected?\nIf you are using OpenFGA v1.8.10 or previous, specifically under the following conditions, you are affected by this authorization bypass vulnerability:\n- Calling Check API or ListObjects with an [authorization model](https://openfga.dev/docs/concepts#what-is-an-authorization-model) that has tuple cycle.\n- [Check query cache](https://github.com/openfga/openfga/blob/9b5974458b777707ed2a30ba6303699499e655ee/.config-schema.json#L528) is enabled, and\n- There are multiple check / list objects requests involving the tuple cycle within the check query TTL\n\nFix\nUpgrade to v1.8.11. This upgrade is backwards compatible.",
      "cve": "CVE-2025-46331",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/openfga/openfga@1.8.6 to 1.8.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/openfga/openfga@1.8.6"
          },
          "version": "1.8.6"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-46331",
          "value": "CVE-2025-46331",
          "url": "https://scout.docker.com/v/CVE-2025-46331?s=github&n=openfga&ns=github.com%2Fopenfga&t=golang&vr=%3E%3D1.3.6%2C%3C1.8.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-46331?s=github&n=openfga&ns=github.com%2Fopenfga&t=golang&vr=%3E%3D1.3.6%2C%3C1.8.11"
        }
      ]
    },
    {
      "id": "2b87d2e62afb8b2adc298d95b9d4046b75f82f16ca0cc7d5dba407679a8c4209",
      "category": "container_scanning",
      "message": "CVE-2025-48371 on github.com/openfga/openfga@1.8.6",
      "description": "### Overview\nOpenFGA v1.8.0 to v1.8.12 ( openfga-0.2.16 <= Helm chart <= openfga-0.2.31, v1.8.0 <= docker <= v.1.8.12) are vulnerable to authorization bypass when certain Check and ListObject calls are executed.\n\n\n### Am I Affected?\nIf you are using OpenFGA v1.8.0 to v1.8.12, specifically under the following conditions, you are affected by this authorization bypass vulnerability:\n- Calling Check API or ListObjects with an [authorization model](https://openfga.dev/docs/concepts#what-is-an-authorization-model) that has a relationship directly assignable by both [type bound public access](https://openfga.dev/docs/concepts#what-is-type-bound-public-access) and [userset](https://openfga.dev/docs/modeling/building-blocks/usersets), and\n- There are check or list object queries with [contextual tuples](https://openfga.dev/docs/interacting/contextual-tuples) for the relationship that can be directly assignable by both [type bound public access](https://openfga.dev/docs/concepts#what-is-type-bound-public-access) and [userset](https://openfga.dev/docs/modeling/building-blocks/usersets), and\n- Those contextual tuples’s user field is an userset, and\n- Type bound public access tuples are not assigned to the relationship\n\n### Fix\nUpgrade to v1.8.13. This upgrade is backwards compatible.\n\n### Acknowledgments\nOkta would like to thank @udyvish for discovering this vulnerability.",
      "cve": "CVE-2025-48371",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/openfga/openfga@1.8.6 to 1.8.13",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/openfga/openfga@1.8.6"
          },
          "version": "1.8.6"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-48371",
          "value": "CVE-2025-48371",
          "url": "https://scout.docker.com/v/CVE-2025-48371?s=github&n=openfga&ns=github.com%2Fopenfga&t=golang&vr=%3E%3D1.8.0%2C%3C1.8.13"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-48371?s=github&n=openfga&ns=github.com%2Fopenfga&t=golang&vr=%3E%3D1.8.0%2C%3C1.8.13"
        }
      ]
    },
    {
      "id": "4f60a57f09c1c8cae06bf4eaf5099efe71a908c586e6dcefbc47a78bc34d4d95",
      "category": "container_scanning",
      "message": "CVE-2025-9232 on alpine/openssl@3.3.3-r0",
      "cve": "CVE-2025-9232",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.3.3-r0 to 3.3.5-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.3.3-r0?os_name=alpine&os_version=3.21"
          },
          "version": "3.3.3-r0"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-9232",
          "value": "CVE-2025-9232",
          "url": "https://scout.docker.com/v/CVE-2025-9232?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C3.3.5-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-9232?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C3.3.5-r0"
        }
      ]
    },
    {
      "id": "6080c8ea7c949250bc72ea6ee1f90c413fa1f462f348e1c79cc436baa9fc5bd9",
      "category": "container_scanning",
      "message": "CVE-2025-47906 on stdlib@1.24.2",
      "description": "If the PATH environment variable contains paths which are executables (rather than just directories), passing certain strings to LookPath (\"\", \".\", and \"..\"), can result in the binaries listed in the PATH being unexpectedly returned.",
      "cve": "CVE-2025-47906",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.24.2 to 1.24.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.24.2"
          },
          "version": "1.24.2"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-47906",
          "value": "CVE-2025-47906",
          "url": "https://scout.docker.com/v/CVE-2025-47906?s=golang&n=stdlib&t=golang&vr=%3E%3D1.24.0%2C%3C1.24.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-47906?s=golang&n=stdlib&t=golang&vr=%3E%3D1.24.0%2C%3C1.24.6"
        }
      ]
    },
    {
      "id": "95c4b78903b803ee3ac6af843db3a3f3b69e261a8201981ac412a5cdfbcf7ac6",
      "category": "container_scanning",
      "message": "CVE-2025-4947 on alpine/curl@8.12.1-r1",
      "cve": "CVE-2025-4947",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.12.1-r1 to 8.14.0-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.12.1-r1?os_name=alpine&os_version=3.21"
          },
          "version": "8.12.1-r1"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-4947",
          "value": "CVE-2025-4947",
          "url": "https://scout.docker.com/v/CVE-2025-4947?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C8.14.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-4947?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C8.14.0-r0"
        }
      ]
    },
    {
      "id": "9ca6f73b0f2810719871ceb7c51f4822826d432e645c1fffa6d824e4e154fe40",
      "category": "container_scanning",
      "message": "CVE-2025-58187 on stdlib@1.24.2",
      "description": "Due to the design of the name constraint checking algorithm, the processing time of some inputs scals non-linearly with respect to the size of the certificate.\n\nThis affects programs which validate arbitrary certificate chains.",
      "cve": "CVE-2025-58187",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.24.2 to 1.24.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.24.2"
          },
          "version": "1.24.2"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58187",
          "value": "CVE-2025-58187",
          "url": "https://scout.docker.com/v/CVE-2025-58187?s=golang&n=stdlib&t=golang&vr=%3C1.24.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58187?s=golang&n=stdlib&t=golang&vr=%3C1.24.9"
        }
      ]
    },
    {
      "id": "4ad8a7bd230171f73e4224bb3afffc78c1f35dffd9b5f4d16740ca5ea355ea8b",
      "category": "container_scanning",
      "message": "CVE-2025-61723 on stdlib@1.24.2",
      "description": "The processing time for parsing some invalid inputs scales non-linearly with respect to the size of the input.\n\nThis affects programs which parse untrusted PEM inputs.",
      "cve": "CVE-2025-61723",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.24.2 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.24.2"
          },
          "version": "1.24.2"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-61723",
          "value": "CVE-2025-61723",
          "url": "https://scout.docker.com/v/CVE-2025-61723?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-61723?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "5b55e3a039df8081e897b01fd9f6a0c09fb7e628da9a693165df49612b494cb7",
      "category": "container_scanning",
      "message": "CVE-2025-9231 on alpine/openssl@3.3.3-r0",
      "cve": "CVE-2025-9231",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.3.3-r0 to 3.3.5-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.3.3-r0?os_name=alpine&os_version=3.21"
          },
          "version": "3.3.3-r0"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-9231",
          "value": "CVE-2025-9231",
          "url": "https://scout.docker.com/v/CVE-2025-9231?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C3.3.5-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-9231?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C3.3.5-r0"
        }
      ]
    },
    {
      "id": "d12dcb24afa77621bd5d996feaff84b03f58a5e0aa8b0c3b7dd286202942397f",
      "category": "container_scanning",
      "message": "CVE-2025-4673 on stdlib@1.24.2",
      "description": "Proxy-Authorization and Proxy-Authenticate headers persisted on cross-origin redirects potentially leaking sensitive information.",
      "cve": "CVE-2025-4673",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.24.2 to 1.24.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.24.2"
          },
          "version": "1.24.2"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-4673",
          "value": "CVE-2025-4673",
          "url": "https://scout.docker.com/v/CVE-2025-4673?s=golang&n=stdlib&t=golang&vr=%3E%3D1.24.0-0%2C%3C1.24.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-4673?s=golang&n=stdlib&t=golang&vr=%3E%3D1.24.0-0%2C%3C1.24.4"
        }
      ]
    },
    {
      "id": "2ba562dcf37e943c17fd50cd975642174f189433cef298fd5a5c401e1b187832",
      "category": "container_scanning",
      "message": "CVE-2025-22874 on stdlib@1.24.2",
      "description": "Calling Verify with a VerifyOptions.KeyUsages that contains ExtKeyUsageAny unintentionally disabledpolicy validation. This only affected certificate chains which contain policy graphs, which are rather uncommon.",
      "cve": "CVE-2025-22874",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.24.2 to 1.24.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.24.2"
          },
          "version": "1.24.2"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22874",
          "value": "CVE-2025-22874",
          "url": "https://scout.docker.com/v/CVE-2025-22874?s=golang&n=stdlib&t=golang&vr=%3E%3D1.24.0-0%2C%3C1.24.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22874?s=golang&n=stdlib&t=golang&vr=%3E%3D1.24.0-0%2C%3C1.24.4"
        }
      ]
    },
    {
      "id": "df4f061f02fb7d3ba2e0d6afde6619a79dcea8b9a5dd9b7b41dfbe2a55919d5b",
      "category": "container_scanning",
      "message": "CVE-2025-30153 on github.com/getkin/kin-openapi@0.126.0",
      "description": "### Summary\n\nWhen validating a request with a multipart/form-data schema, if the OpenAPI schema allows it, an attacker can upload a crafted ZIP file (e.g., a ZIP bomb), causing the server to consume all available system memory.\n\n### Details\n\nThe root cause comes from the [ZipFileBodyDecoder](https://github.com/getkin/kin-openapi/blob/6da871e0e170b7637eb568c265c08bc2b5d6e7a3/openapi3filter/req_resp_decoder.go#L1523), which is registered [automatically](https://github.com/getkin/kin-openapi/blob/6da871e0e170b7637eb568c265c08bc2b5d6e7a3/openapi3filter/req_resp_decoder.go#L1275) by the module (contrary to what the [documentation says](https://github.com/getkin/kin-openapi?tab=readme-ov-file#custom-content-type-for-body-of-http-requestresponse).\n\n### PoC\nTo reproduce the vulnerability, you can use the following OpenAPI schema:\n```yaml\nopenapi: 3.0.0\ninfo:\n  title: 'Validator'\n  version: 0.0.1\npaths:\n  /:\n    post:\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - file\n              properties:\n                file:\n                  type: string\n                  format: binary\n      responses:\n        '200':\n          description: Created\n```\nAnd this code to validate the request (nothing fancy, it basically only calls the `openapi3filter.ValidateRequest` function`):\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"net/http\"\n\n\t\"github.com/getkin/kin-openapi/openapi3filter\"\n\tlegacyrouter \"github.com/getkin/kin-openapi/routers/legacy\"\n\n\t\"github.com/getkin/kin-openapi/openapi3\"\n)\n\nfunc handler(w http.ResponseWriter, r *http.Request) {\n\tloader := openapi3.NewLoader()\n\n\tdoc, err := loader.LoadFromFile(\"schema.yaml\")\n\tif err != nil {\n\t\thttp.Error(w, \"Failed to load OpenAPI document\", http.StatusInternalServerError)\n\t\treturn\n\t}\n\n\tif err := doc.Validate(r.Context()); err != nil {\n\t\thttp.Error(w, \"Invalid OpenAPI document\", http.StatusBadRequest)\n\t\treturn\n\t}\n\n\trouter, err := legacyrouter.NewRouter(doc)\n\tif err != nil {\n\t\thttp.Error(w, \"Failed to create router\", http.StatusInternalServerError)\n\t\treturn\n\t}\n\n\troute, pathParams, err := router.FindRoute(r)\n\tif err != nil {\n\t\thttp.Error(w, \"Failed to find route\", http.StatusNotFound)\n\t\treturn\n\t}\n\n\tinput := &openapi3filter.RequestValidationInput{\n\t\tRequest:     r,\n\t\tQueryParams: r.URL.Query(),\n\t\tRoute:       route,\n\t\tPathParams:  pathParams,\n\t}\n\n\tif err := openapi3filter.ValidateRequest(r.Context(), input); err != nil {\n\t\thttp.Error(w, fmt.Sprintf(\"Request validation failed: %v\", err), http.StatusBadRequest)\n\t\treturn\n\t}\n\n\tw.Write([]byte(\"request ok !\"))\n}\n\nfunc main() {\n\thttp.HandleFunc(\"/\", handler)\n\tlog.Fatal(http.ListenAndServe(\":8080\", nil))\n\n}\n```\n\nWe also need to create a zip bomb. This command will create a 4.7GB file and compress it to to 4.7MB zip archive:\n```shell\nperl -e 'print \"0\" x 5000000000' > /tmp/bigfile.txt; zip -9 /tmp/bomb.zip /tmp/bigfile.txt\n```\n\nRun the PoC provided, and upload the zip bomb with `curl localhost:8080/  -F file=\"@/tmp/bomb.zip;type=application/zip\" -v`.\n\nObserve the memory consumption of the test server during and after the upload (it jumped to a bit over 22GB in my testing, with only a 4.7MB input file, you can reduce the size of the generated file to not kill your test machine when reproducing.) \n\n### Impact\n\nAn attacker can trigger an out-of-memory (OOM) condition, leading to server crashes or degraded performance.\nIt seems to only be exploitable if the OpenAPI schema allows for multipart upload.\n\n### Remediation\n\nI see at least 2 potential fixes/improvements:\n - Do not register by default the zip file decoder (I honestly was a bit surprised to see it was enabled by default, it seems to be quite a niche use-case ?)\n - Update `ZipFileBodyDecoder` to enforce a maximum size of the decompressed archive and bailout as soon as it's reached (probably with a small default value and allow the users to configure it through the input options ?)",
      "cve": "CVE-2025-30153",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/getkin/kin-openapi@0.126.0 to 0.131.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/getkin/kin-openapi@0.126.0"
          },
          "version": "0.126.0"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-30153",
          "value": "CVE-2025-30153",
          "url": "https://scout.docker.com/v/CVE-2025-30153?s=github&n=kin-openapi&ns=github.com%2Fgetkin&t=golang&vr=%3C0.131.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-30153?s=github&n=kin-openapi&ns=github.com%2Fgetkin&t=golang&vr=%3C0.131.0"
        }
      ]
    },
    {
      "id": "258866a5b45c914c4f54f5885612115c98531aa534eaf07e2deb534b76770f10",
      "category": "container_scanning",
      "message": "CVE-2025-5399 on alpine/curl@8.12.1-r1",
      "cve": "CVE-2025-5399",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.12.1-r1 to 8.14.1-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.12.1-r1?os_name=alpine&os_version=3.21"
          },
          "version": "8.12.1-r1"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-5399",
          "value": "CVE-2025-5399",
          "url": "https://scout.docker.com/v/CVE-2025-5399?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C8.14.1-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-5399?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C8.14.1-r0"
        }
      ]
    },
    {
      "id": "47d1b68fbc1b2670d5226e756925199b88595dfe42944f7dedd7167e2179f0ee",
      "category": "container_scanning",
      "message": "CVE-2025-58188 on stdlib@1.24.2",
      "description": "Validating certificate chains which contain DSA public keys can cause programs to panic, due to a interface cast that assumes they implement the Equal method.\n\nThis affects programs which validate arbitrary certificate chains.",
      "cve": "CVE-2025-58188",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.24.2 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.24.2"
          },
          "version": "1.24.2"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58188",
          "value": "CVE-2025-58188",
          "url": "https://scout.docker.com/v/CVE-2025-58188?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58188?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "7e3c5808613b1c4cc22c4e71906f847e8dc238aa95a119072f95db7e01cd82ec",
      "category": "container_scanning",
      "message": "CVE-2025-61725 on stdlib@1.24.2",
      "description": "The ParseAddress function constructeds domain-literal address components through repeated string concatenation. When parsing large domain-literal components, this can cause excessive CPU consumption.",
      "cve": "CVE-2025-61725",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.24.2 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.24.2"
          },
          "version": "1.24.2"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-61725",
          "value": "CVE-2025-61725",
          "url": "https://scout.docker.com/v/CVE-2025-61725?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-61725?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "5da403f73c497288cf15c83cab16cd9413f7c359391b91187f93c5fdb56074b1",
      "category": "container_scanning",
      "message": "CVE-2025-9086 on alpine/curl@8.12.1-r1",
      "cve": "CVE-2025-9086",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.12.1-r1 to 8.14.1-r2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.12.1-r1?os_name=alpine&os_version=3.21"
          },
          "version": "8.12.1-r1"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-9086",
          "value": "CVE-2025-9086",
          "url": "https://scout.docker.com/v/CVE-2025-9086?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C8.14.1-r2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-9086?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C8.14.1-r2"
        }
      ]
    },
    {
      "id": "9acc1d4bfdea5cc156e8b242643746891f295fff1da1beb50446e92c010fb880",
      "category": "container_scanning",
      "message": "CVE-2025-9230 on alpine/openssl@3.3.3-r0",
      "cve": "CVE-2025-9230",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.3.3-r0 to 3.3.5-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.3.3-r0?os_name=alpine&os_version=3.21"
          },
          "version": "3.3.3-r0"
        },
        "operating_system": "alpine 3.21",
        "image": "grafana/grafana:12.0.0"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-9230",
          "value": "CVE-2025-9230",
          "url": "https://scout.docker.com/v/CVE-2025-9230?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C3.3.5-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-9230?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.21&vr=%3C3.3.5-r0"
        }
      ]
    }
  ],
  "remediations": [],
  "scan": {
    "start_time": "2025-10-31T20:42:59",
    "end_time": "2025-10-31T20:42:59",
    "status": "success",
    "type": "container_scanning",
    "scanner": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    },
    "analyzer": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    }
  }
}
