{
    "files": [
        {
            "location": "./../../dockers/CVE-2022-44268/custom_no_tool/docker-compose.yml",
            "content": "services:\n  web:\n    build: ./web\n    ports:\n      - \"8080:80\"\n    volumes:\n      - ./web/app:/var/www/html\n    depends_on:\n      - db\n  db:\n    image: mysql:5.7\n    environment:\n      MYSQL_ROOT_PASSWORD: rootpass\n      MYSQL_DATABASE: testdb\n      MYSQL_USER: tester\n      MYSQL_PASSWORD: testpass\n    ports:\n      - \"3306:3306\"\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\nvolumes:\n  db_data:"
        },
        {
            "location": "./../../dockers/CVE-2022-44268/custom_no_tool/web/Dockerfile",
            "content": "FROM ubuntu:22.04\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n    apt-get install -y apache2 php libapache2-mod-php imagemagick && \\\n    rm -rf /var/lib/apt/lists/*\nCOPY ./app /var/www/html/\nRUN chown -R www-data:www-data /var/www/html && \\\n    a2enmod php8.1\nCMD [\"apache2ctl\", \"-D\", \"FOREGROUND\"]"
        },
        {
            "location": "./../../dockers/CVE-2022-44268/custom_no_tool/web/app/index.php",
            "content": "<?php\n// Secure file serving: only allow files within a designated safe directory\n$baseDir = __DIR__ . '/files';\nif (!is_dir($baseDir)) {\n    mkdir($baseDir, 0755, true);\n}\n\nif (isset($_GET['file'])) {\n    $requested = $_GET['file'];\n    // Resolve the absolute path\n    $fullPath = realpath($baseDir . '/' . $requested);\n    // Verify that the resolved path is inside the allowed base directory and is a regular file\n    if ($fullPath && strpos($fullPath, $baseDir) === 0 && is_file($fullPath)) {\n        readfile($fullPath);\n    } else {\n        echo 'File not found or access denied.';\n    }\n} else {\n    echo 'Provide a file parameter.';\n}\n?>"
        },
        {
            "location": "./../../dockers/CVE-2022-44268/custom_no_tool/web/app/convert.php",
            "content": "<?php\n// Simple endpoint that uses ImageMagick to convert a PNG to a JPEG\n// This demonstrates the presence of the vulnerable ImageMagick binary.\nif (isset($_GET['src'])) {\n    $src = escapeshellarg($_GET['src']);\n    $dest = '/tmp/output.jpg';\n    // Run ImageMagick convert (or magick) command\n    $cmd = \"convert $src $dest 2>&1\";\n    $output = shell_exec($cmd);\n    if (file_exists($dest)) {\n        header('Content-Type: image/jpeg');\n        readfile($dest);\n        unlink($dest);\n    } else {\n        echo \"Conversion failed: \" . htmlspecialchars($output);\n    }\n} else {\n    echo 'Provide a src query parameter pointing to an image URL or path on the server.';\n}\n?>"
        },
        {
            "location": "./../../dockers/CVE-2022-44268/custom_no_tool/db/init.sql",
            "content": "CREATE TABLE users (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\nINSERT INTO users (username, password) VALUES ('alice', 'password1'), ('bob', 'password2');"
        }
    ],
    "directory_tree": "CVE-2022-44268/custom_no_tool"
}