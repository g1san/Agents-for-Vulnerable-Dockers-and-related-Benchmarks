{
    "files": [
        {
            "location": "./../../dockers/CVE-2019-11581/custom_no_tool/docker-compose.yml",
            "content": "version: '3.8'\nservices:\n  jira:\n    build:\n      context: ./jira\n      dockerfile: Dockerfile\n    container_name: jira\n    ports:\n      - \"8080:8080\"\n    environment:\n      - JIRA_DB_HOST=postgres\n      - JIRA_DB_PORT=5432\n      - JIRA_DB_NAME=jiradb\n      - JIRA_DB_USER=jirauser\n      - JIRA_DB_PASSWORD=jirapass\n    depends_on:\n      postgres:\n        condition: service_healthy\n    networks:\n      - jira-net\n    volumes:\n      - jira-home:/var/atlassian/application-data/jira\n      - jira-conf:/opt/atlassian/jira/conf\n  postgres:\n    image: postgres:13\n    container_name: postgres\n    ports:\n      - \"5432:5432\"\n    environment:\n      - POSTGRES_USER=jirauser\n      - POSTGRES_PASSWORD=jirapass\n      - POSTGRES_DB=jiradb\n    volumes:\n      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro\n    healthcheck:\n      test: [\"CMD\", \"pg_isready\", \"-U\", \"jirauser\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n    networks:\n      - jira-net\n  nginx:\n    image: nginx:1.23\n    container_name: nginx\n    ports:\n      - \"80:80\"\n    volumes:\n      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro\n    depends_on:\n      - jira\n    networks:\n      - jira-net\nnetworks:\n  jira-net:\n    driver: bridge\nvolumes:\n  jira-home:\n    driver: local\n  jira-conf:\n    driver: local"
        },
        {
            "location": "./../../dockers/CVE-2019-11581/custom_no_tool/jira/Dockerfile",
            "content": "FROM atlassian/jira-software:7.13.4\n\n# Copy the custom entrypoint that ensures proper ownership before starting Jira\nCOPY entrypoint.sh /entrypoint-custom.sh\nRUN chmod +x /entrypoint-custom.sh\n\n# Use the custom entrypoint; the base image already defines the appropriate CMD\nENTRYPOINT [\"/entrypoint-custom.sh\"]"
        },
        {
            "location": "./../../dockers/CVE-2019-11581/custom_no_tool/jira/entrypoint.sh",
            "content": "#!/bin/bash\n# Re\u2011apply correct ownership on each start (covers freshly created volumes)\nchown -R 2000:2000 /var/atlassian/application-data/jira || true\nchown -R 2000:2000 /opt/atlassian/jira/conf || true\n# Exec the original Atlassian entrypoint with the \"run\" argument\nexec /entrypoint.sh run"
        },
        {
            "location": "./../../dockers/CVE-2019-11581/custom_no_tool/nginx/nginx.conf",
            "content": "events {}\nhttp {\n    upstream jira {\n        server jira:8080;\n    }\n    server {\n        listen 80;\n        location / {\n            proxy_pass http://jira;\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        }\n    }\n}"
        },
        {
            "location": "./../../dockers/CVE-2019-11581/custom_no_tool/postgres/init.sql",
            "content": "-- Simple test dataset for Jira (placeholder)\nCREATE TABLE IF NOT EXISTS test_table (\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(255) NOT NULL,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\n\nINSERT INTO test_table (name) VALUES ('sample data 1'), ('sample data 2');\n"
        }
    ],
    "directory_tree": "CVE-2019-11581/custom_no_tool/\n\u251c\u2500 docker-compose.yml\n\u251c\u2500 jira/\n\u2502  \u251c\u2500 Dockerfile\n\u2502  \u2514\u2500 entrypoint.sh\n\u251c\u2500 nginx/\n\u2502  \u2514\u2500 nginx.conf\n\u2514\u2500 postgres/\n   \u2514\u2500 init.sql"
}