{
    "files": [
        {
            "location": "./../../dockers/CVE-2022-26134/custom_no_tool/docker-compose.yml",
            "content": "version: '3.8'\nservices:\n  confluence:\n    image: atlassian/confluence-server:7.13.0\n    container_name: confluence\n    ports:\n      - \"8090:8090\"\n    environment:\n      - ATL_JDBC_URL=jdbc:postgresql://db:5432/confluence\n      - ATL_JDBC_USER=confluence\n      - ATL_JDBC_PASSWORD=confluence\n      - ATL_DB_TYPE=postgresql\n    depends_on:\n      db:\n        condition: service_healthy\n    volumes:\n      - confluence-data:/var/atlassian/application-data/confluence\n  db:\n    image: postgres:13\n    container_name: confluence-db\n    environment:\n      - POSTGRES_DB=confluence\n      - POSTGRES_USER=confluence\n      - POSTGRES_PASSWORD=confluence\n    volumes:\n      - db-data:/var/lib/postgresql/data\n      - ./init-db:/docker-entrypoint-initdb.d\n    healthcheck:\n      test: [\"CMD\", \"pg_isready\", \"-U\", \"confluence\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\nvolumes:\n  confluence-data:\n  db-data:\n"
        },
        {
            "location": "./../../dockers/CVE-2022-26134/custom_no_tool/init-db/init.sql",
            "content": "-- This script runs when the PostgreSQL container starts.\n-- Confluence will create its own schema on first startup, so no manual setup is required.\n-- Adding a simple test entry to verify DB connectivity.\nCREATE TABLE IF NOT EXISTS test_table (id SERIAL PRIMARY KEY, info TEXT);\nINSERT INTO test_table (info) VALUES ('CVE-2022-26134 test entry');\n"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2022-26134/custom_no_tool"
}