{
    "files": [
        {
            "location": "./../../dockers/CVE-2018-14574/custom_no_tool/docker-compose.yml",
            "content": "services:\n  web:\n    build: ./web\n    ports:\n      - \"8080:8000\"\n    environment:\n      DJANGO_SETTINGS_MODULE: app.settings\n    volumes:\n      - ./web/app:/app\n"
        },
        {
            "location": "./../../dockers/CVE-2018-14574/custom_no_tool/web/Dockerfile",
            "content": "FROM python:3.8-slim\n\n# Install system dependencies needed for building Python packages\nRUN apt-get update && apt-get install -y \\\n    build-essential \\\n    libffi-dev \\\n    libssl-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install the vulnerable Django version (1.11.14) which contains CVE\u20112018\u201114574\nRUN pip install \"Django==1.11.14\"\n\n# Create application directory\nWORKDIR /app\n\n# Copy the Django project into the container\nCOPY app/ /app/\n\nEXPOSE 8000\n\nCMD [\"python\", \"manage.py\", \"runserver\", \"0.0.0.0:8000\"]"
        },
        {
            "location": "./../../dockers/CVE-2018-14574/custom_no_tool/web/app/manage.py",
            "content": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"app.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"
        },
        {
            "location": "./../../dockers/CVE-2018-14574/custom_no_tool/web/app/app/__init__.py",
            "content": ""
        },
        {
            "location": "./../../dockers/CVE-2018-14574/custom_no_tool/web/app/app/settings.py",
            "content": "import os\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'insecure-secret-key-for-demo'\n\nDEBUG = True\n\nALLOWED_HOSTS = ['*']\n\nINSTALLED_APPS = [\n    'django.contrib.contenttypes',\n    'django.contrib.staticfiles',\n    'app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.common.CommonMiddleware',\n]\n\nROOT_URLCONF = 'app.urls'\n\nTEMPLATES = []\n\nWSGI_APPLICATION = 'app.wsgi.application'\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\nSTATIC_URL = '/static/'\n"
        },
        {
            "location": "./../../dockers/CVE-2018-14574/custom_no_tool/web/app/app/urls.py",
            "content": "from django.conf.urls import url\nfrom . import views\n\nurlpatterns = [\n    url(r'^redirect/$', views.redirect_view, name='redirect'),\n]"
        },
        {
            "location": "./../../dockers/CVE-2018-14574/custom_no_tool/web/app/app/views.py",
            "content": "from django.shortcuts import redirect\n\ndef redirect_view(request):\n    # Vulnerable open\u2011redirect: the 'next' parameter is taken directly from user input\n    target = request.GET.get('next', '/')\n    return redirect(target)\n"
        },
        {
            "location": "./../../dockers/CVE-2018-14574/custom_no_tool/web/app/app/wsgi.py",
            "content": "import os\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'app.settings')\napplication = get_wsgi_application()\n"
        }
    ],
    "directory_tree": "custom_no_tool"
}