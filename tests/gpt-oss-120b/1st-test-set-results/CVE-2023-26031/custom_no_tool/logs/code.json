{
    "files": [
        {
            "location": "./../../dockers/CVE-2023-26031/custom_no_tool/docker-compose.yml",
            "content": "version: \"3.9\"\nservices:\n  hadoop:\n    build: ./hadoop\n    container_name: hadoop_node\n    environment:\n      - HADOOP_CONF_DIR=/opt/hadoop/etc/hadoop\n    ports:\n      - \"8088:8088\"\n    privileged: true\n    volumes:\n      - hadoop_data:/opt/hadoop\n  vulnerable_app:\n    build: ./app\n    container_name: vulnerable_app\n    ports:\n      - \"8080:8080\"\n    environment:\n      - NODE_ENV=production\n      - POSTGRES_USER=testuser\n      - POSTGRES_PASSWORD=testpass\n      - POSTGRES_DB=testdb\n    depends_on:\n      - db\n      - hadoop\n  db:\n    image: postgres:13-alpine\n    container_name: vulnerable_db\n    environment:\n      POSTGRES_USER: testuser\n      POSTGRES_PASSWORD: testpass\n      POSTGRES_DB: testdb\n    ports:\n      - \"5432:5432\"\n    volumes:\n      - db_data:/var/lib/postgresql/data\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\nvolumes:\n  db_data:\n  hadoop_data:"
        },
        {
            "location": "./../../dockers/CVE-2023-26031/custom_no_tool/app/Dockerfile",
            "content": "FROM node:14-alpine\nWORKDIR /usr/src/app\nCOPY package*.json ./\n# Install build tools required for native modules (e.g., pg), then install production dependencies, and finally remove the build tools to keep the image lightweight.\nRUN apk add --no-cache python3 make g++ \\\n    && npm install --only=production \\\n    && apk del python3 make g++\nCOPY . .\nEXPOSE 8080\nCMD [\"node\", \"index.js\"]"
        },
        {
            "location": "./../../dockers/CVE-2023-26031/custom_no_tool/app/package.json",
            "content": "{\n  \"name\": \"vulnerable-app\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Demo app to reproduce CVE-2023-26031\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"node index.js\"\n  },\n  \"dependencies\": {\n    \"express\": \"4.17.1\",\n    \"pg\": \"8.7.1\"\n  }\n}"
        },
        {
            "location": "./../../dockers/CVE-2023-26031/custom_no_tool/app/index.js",
            "content": "const express = require('express');\nconst { Pool } = require('pg');\n\n// Intentionally vulnerable configuration: uses default credentials that are exposed via environment variables.\nconst pool = new Pool({\n  user: process.env.POSTGRES_USER,\n  host: 'db',\n  database: process.env.POSTGRES_DB,\n  password: process.env.POSTGRES_PASSWORD,\n  port: 5432,\n});\n\nconst app = express();\napp.get('/', async (req, res) => {\n  try {\n    const result = await pool.query('SELECT * FROM users');\n    res.json(result.rows);\n  } catch (err) {\n    res.status(500).send('Database error');\n  }\n});\n\napp.listen(8080, () => {\n  console.log('Vulnerable app listening on port 8080');\n});"
        },
        {
            "location": "./../../dockers/CVE-2023-26031/custom_no_tool/db/init.sql",
            "content": "CREATE TABLE IF NOT EXISTS users (\n    id SERIAL PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\n\nINSERT INTO users (username, password) VALUES\n('alice', 'alicepass'),\n('bob', 'bobpass'),\n('charlie', 'charliepass');"
        },
        {
            "location": "./../../dockers/CVE-2023-26031/custom_no_tool/hadoop/Dockerfile",
            "content": "FROM openjdk:8-jdk\nARG HADOOP_VERSION=3.3.1\nENV HADOOP_HOME=/opt/hadoop\nENV HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop\nENV PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin\n\n# Install utilities needed for download and extraction, plus ssh client required by Hadoop scripts.\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        wget bash openssh-client rsync tar gzip ca-certificates \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Download and extract Hadoop\nRUN wget -q https://downloads.apache.org/hadoop/common/hadoop-${HADOOP_VERSION}/hadoop-${HADOOP_VERSION}.tar.gz \\\n    && tar -xzf hadoop-${HADOOP_VERSION}.tar.gz -C /opt \\\n    && mv /opt/hadoop-${HADOOP_VERSION} $HADOOP_HOME \\\n    && rm hadoop-${HADOOP_VERSION}.tar.gz\n\n# Copy minimal configuration files\nCOPY core-site.xml $HADOOP_CONF_DIR/\nCOPY hdfs-site.xml $HADOOP_CONF_DIR/\nCOPY yarn-site.xml $HADOOP_CONF_DIR/\nCOPY mapred-site.xml $HADOOP_CONF_DIR/\n\n# Ensure container-executor is present and setuid root (simulated for exploit)\nRUN chmod u+s $HADOOP_HOME/sbin/container-executor || true\n\nEXPOSE 8088 8042 50070\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"yarn\", \"nodemanager\"]"
        },
        {
            "location": "./../../dockers/CVE-2023-26031/custom_no_tool/hadoop/docker-entrypoint.sh",
            "content": "#!/bin/bash\nset -e\n\n# Start the Hadoop ResourceManager and NodeManager\n$HADOOP_HOME/sbin/start-yarn.sh\n\n# Keep the container running\nexec \"$@\""
        },
        {
            "location": "./../../dockers/CVE-2023-26031/custom_no_tool/hadoop/core-site.xml",
            "content": "<?xml version=\"1.0\"?>\n<configuration>\n  <property>\n    <name>fs.defaultFS</name>\n    <value>hdfs://localhost:9000</value>\n  </property>\n</configuration>"
        },
        {
            "location": "./../../dockers/CVE-2023-26031/custom_no_tool/hadoop/hdfs-site.xml",
            "content": "<?xml version=\"1.0\"?>\n<configuration>\n  <property>\n    <name>dfs.replication</name>\n    <value>1</value>\n  </property>\n</configuration>"
        },
        {
            "location": "./../../dockers/CVE-2023-26031/custom_no_tool/hadoop/yarn-site.xml",
            "content": "<?xml version=\"1.0\"?>\n<configuration>\n  <property>\n    <name>yarn.nodemanager.aux-services</name>\n    <value>mapreduce_shuffle</value>\n  </property>\n  <property>\n    <name>yarn.nodemanager.container-executor.class</name>\n    <value>org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor</value>\n  </property>\n  <property>\n    <name>yarn.nodemanager.container-executor.path</name>\n    <value>/opt/hadoop/sbin/container-executor</value>\n  </property>\n</configuration>"
        },
        {
            "location": "./../../dockers/CVE-2023-26031/custom_no_tool/hadoop/mapred-site.xml",
            "content": "<?xml version=\"1.0\"?>\n<configuration>\n  <property>\n    <name>mapreduce.framework.name</name>\n    <value>yarn</value>\n  </property>\n</configuration>"
        }
    ],
    "directory_tree": "CVE-2023-26031/\n\u251c\u2500 custom_no_tool/\n\u2502  \u251c\u2500 docker-compose.yml\n\u2502  \u251c\u2500 app/\n\u2502  \u2502  \u251c\u2500 Dockerfile\n\u2502  \u2502  \u251c\u2500 package.json\n\u2502  \u2502  \u251c\u2500 index.js\n\u2502  \u251c\u2500 db/\n\u2502  \u2502  \u251c\u2500 init.sql\n\u2502  \u251c\u2500 hadoop/\n\u2502  \u2502  \u251c\u2500 Dockerfile\n\u2502  \u2502  \u251c\u2500 docker-entrypoint.sh\n\u2502  \u2502  \u251c\u2500 core-site.xml\n\u2502  \u2502  \u251c\u2500 hdfs-site.xml\n\u2502  \u2502  \u251c\u2500 yarn-site.xml\n\u2502  \u2502  \u251c\u2500 mapred-site.xml"
}