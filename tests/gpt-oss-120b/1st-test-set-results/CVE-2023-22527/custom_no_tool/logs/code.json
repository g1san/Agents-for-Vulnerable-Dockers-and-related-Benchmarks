{
    "files": [
        {
            "location": "./../../dockers/CVE-2023-22527/custom_no_tool/Dockerfile",
            "content": "FROM atlassian/confluence-server:8.5.3\n\n# Install any missing runtime dependencies that the patched image might need\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        wget \\\n        unzip \\\n        netcat-openbsd && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Ensure the Confluence start script is executable (path used by the entrypoint wrapper)\nRUN chmod +x /opt/atlassian/confluence/bin/start-confluence.sh || true\n\n# Copy the wait\u2011for\u2011it script into the image (kept for optional manual use)\nCOPY wait-for-it.sh /usr/local/bin/wait-for-it.sh\nRUN chmod +x /usr/local/bin/wait-for-it.sh\n\n# Use the default entrypoint from the base image; no custom command overrides"
        },
        {
            "location": "./../../dockers/CVE-2023-22527/custom_no_tool/wait-for-it.sh",
            "content": "#!/usr/bin/env bash\n# Minimal wait\u2011for\u2011it implementation (POSIX compatible)\nHOST=$1\nshift\nPORT=$1\nshift\nwhile ! nc -z \"$HOST\" \"$PORT\"; do\n  echo \"Waiting for $HOST:$PORT...\"\n  sleep 2\ndone\nexec \"$@\""
        },
        {
            "location": "./../../dockers/CVE-2023-22527/custom_no_tool/docker-compose.yml",
            "content": "version: \"3.9\"\n\nservices:\n  confluence:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    image: custom-confluence:latest\n    container_name: confluence\n    environment:\n      - ATL_JDBC_URL=jdbc:postgresql://db:5432/confluence\n      - ATL_JDBC_USER=confluence_user\n      - ATL_JDBC_PASSWORD=confluence_pass\n      - ATL_DB_TYPE=postgres\n    ports:\n      - \"8090:8090\"\n    depends_on:\n      db:\n        condition: service_healthy\n    restart: unless-stopped\n\n  db:\n    image: postgres:15\n    container_name: postgres\n    environment:\n      - POSTGRES_USER=confluence_user\n      - POSTGRES_PASSWORD=confluence_pass\n      - POSTGRES_DB=confluence\n    volumes:\n      - db_data:/var/lib/postgresql/data\n      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro\n    ports:\n      - \"5432:5432\"\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U confluence_user\"]\n      interval: 5s\n      timeout: 5s\n      retries: 10\n    restart: unless-stopped\n\n  nginx:\n    image: nginx:1.25\n    container_name: nginx\n    ports:\n      - \"80:80\"\n    volumes:\n      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro\n    depends_on:\n      - confluence\n    restart: unless-stopped\n\nvolumes:\n  db_data:\n    driver: local"
        },
        {
            "location": "./../../dockers/CVE-2023-22527/custom_no_tool/init.sql",
            "content": "-- Simple test data for Confluence database\nCREATE SCHEMA IF NOT EXISTS public;\n-- The official Confluence image creates its own tables on first start.\n-- This script only ensures the role and database exist, which are already created via environment variables.\n-- No additional test data is required for a functional deployment."
        },
        {
            "location": "./../../dockers/CVE-2023-22527/custom_no_tool/nginx.conf",
            "content": "server {\n    listen 80;\n    server_name _;\n    location / {\n        proxy_pass http://confluence:8090;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}"
        }
    ],
    "directory_tree": "CVE-2023-22527/custom_no_tool"
}