{
    "files": [
        {
            "location": "./../../dockers/CVE-2025-1974/custom_no_tool/docker-compose.yml",
            "content": "version: \"3.9\"\nservices:\n  webapp:\n    build:\n      context: ./webapp\n      dockerfile: Dockerfile\n    ports:\n      - \"8080:80\"\n    environment:\n      - VULN_MODE=unsafe\n    depends_on:\n      - db\n      - ingress-nginx\n\n  db:\n    image: mysql:5.7\n    environment:\n      MYSQL_ROOT_PASSWORD: rootpass\n      MYSQL_DATABASE: testdb\n      MYSQL_USER: user\n      MYSQL_PASSWORD: userpass\n    ports:\n      - \"3306:3306\"\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\n\n  ingress-nginx:\n    build:\n      context: ./ingress\n      dockerfile: Dockerfile\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    environment:\n      - POD_NAMESPACE=default\n    # No additional command needed; the custom image runs nginx directly\n\nvolumes:\n  db_data:"
        },
        {
            "location": "./../../dockers/CVE-2025-1974/custom_no_tool/ingress/Dockerfile",
            "content": "FROM nginx:stable\nCOPY default.conf /etc/nginx/conf.d/default.conf\n# Use the plain nginx binary without the default entrypoint scripts that try to modify the config\nCMD [\"nginx\", \"-g\", \"daemon off;\"]"
        },
        {
            "location": "./../../dockers/CVE-2025-1974/custom_no_tool/ingress/default.conf",
            "content": "server {\n    listen 80;\n    listen [::]:80;\n    server_name _;\n\n    # Use Docker's internal DNS resolver so the upstream name is resolved at runtime\n    resolver 127.0.0.11 valid=30s;\n    set $upstream \"http://webapp:80\";\n\n    location / {\n        proxy_pass $upstream;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}"
        }
    ],
    "directory_tree": "CVE-2025-1974/custom_no_tool/"
}