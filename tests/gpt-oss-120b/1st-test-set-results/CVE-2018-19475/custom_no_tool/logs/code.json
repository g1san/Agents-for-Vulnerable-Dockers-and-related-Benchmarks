{
    "files": [
        {
            "location": "./../../dockers/CVE-2018-19475/custom_no_tool/docker-compose.yml",
            "content": "version: '2.4'\nservices:\n  vulnerable_app:\n    build: ./vulnerable_app\n    ports:\n      - \"5000:5000\"\n    depends_on:\n      db:\n        condition: service_healthy\n    environment:\n      MYSQL_HOST: db\n      MYSQL_USER: testuser\n      MYSQL_PASSWORD: testpass\n      MYSQL_DB: testdb\n  db:\n    image: mysql:5.7\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: rootpass\n      MYSQL_DATABASE: testdb\n      MYSQL_USER: testuser\n      MYSQL_PASSWORD: testpass\n    ports:\n      - \"3306:3306\"\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\n    healthcheck:\n      test: [\"CMD\", \"mysqladmin\", \"ping\", \"-h\", \"localhost\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\nvolumes:\n  db_data:\n"
        },
        {
            "location": "./../../dockers/CVE-2018-19475/custom_no_tool/vulnerable_app/Dockerfile",
            "content": "FROM python:3.7-slim\nWORKDIR /app\n\n# Install build dependencies and MySQL client, then install Python packages and clean up\nCOPY requirements.txt ./\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        libssl-dev \\\n        default-mysql-client && \\\n    pip install --no-cache-dir -r requirements.txt && \\\n    apt-get purge -y --auto-remove build-essential libssl-dev && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY app.py ./\nEXPOSE 5000\nCMD [\"python\", \"app.py\"]\n"
        },
        {
            "location": "./../../dockers/CVE-2018-19475/custom_no_tool/vulnerable_app/requirements.txt",
            "content": "Flask==1.1.2\njinja2==2.11.3\nmysql-connector-python==8.0.22\nmarkupsafe==2.0.1\nitsdangerous==1.1.0\nWerkzeug==1.0.1\n"
        },
        {
            "location": "./../../dockers/CVE-2018-19475/custom_no_tool/vulnerable_app/app.py",
            "content": "import os\nimport subprocess\nfrom flask import Flask, request, jsonify\nimport mysql.connector\n\napp = Flask(__name__)\n\ndef get_db_connection():\n    conn = mysql.connector.connect(\n        host=os.getenv('MYSQL_HOST'),\n        user=os.getenv('MYSQL_USER'),\n        password=os.getenv('MYSQL_PASSWORD'),\n        database=os.getenv('MYSQL_DB')\n    )\n    return conn\n\n# Whitelisted commands for the /execute endpoint\nALLOWED_COMMANDS = {\n    'date': ['date'],\n    'whoami': ['whoami']\n}\n\n@app.route('/execute')\ndef execute():\n    cmd_key = request.args.get('cmd')\n    if not cmd_key:\n        return jsonify({'error': 'cmd parameter missing'}), 400\n    if cmd_key not in ALLOWED_COMMANDS:\n        return jsonify({'error': 'command not allowed'}), 403\n    try:\n        result = subprocess.run(ALLOWED_COMMANDS[cmd_key], capture_output=True, text=True, check=True)\n        output = result.stdout\n    except subprocess.CalledProcessError as e:\n        output = e.stderr or 'Command execution failed'\n    return jsonify({'output': output})\n\n@app.route('/users')\ndef list_users():\n    conn = get_db_connection()\n    cursor = conn.cursor(dictionary=True)\n    cursor.execute('SELECT id, username FROM users')\n    rows = cursor.fetchall()\n    cursor.close()\n    conn.close()\n    return jsonify(rows)\n\nif __name__ == '__main__':\n    # Ensure DB is ready before starting the app \u2013 retry until a connection succeeds\n    import time\n    for _ in range(15):\n        try:\n            conn = get_db_connection()\n            conn.close()\n            break\n        except Exception:\n            time.sleep(2)\n    app.run(host='0.0.0.0', port=5000)\n"
        },
        {
            "location": "./../../dockers/CVE-2018-19475/custom_no_tool/db/init.sql",
            "content": "CREATE TABLE IF NOT EXISTS users (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\nINSERT INTO users (username, password) VALUES ('alice', 'alicepass'), ('bob', 'bobpass');\n"
        }
    ],
    "directory_tree": "CVE-2018-19475/custom_no_tool"
}