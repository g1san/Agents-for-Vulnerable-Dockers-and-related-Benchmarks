import os
import subprocess
from flask import Flask, request, jsonify
import mysql.connector

app = Flask(__name__)

def get_db_connection():
    conn = mysql.connector.connect(
        host=os.getenv('MYSQL_HOST'),
        user=os.getenv('MYSQL_USER'),
        password=os.getenv('MYSQL_PASSWORD'),
        database=os.getenv('MYSQL_DB')
    )
    return conn

# Whitelisted commands for the /execute endpoint
ALLOWED_COMMANDS = {
    'date': ['date'],
    'whoami': ['whoami']
}

@app.route('/execute')
def execute():
    cmd_key = request.args.get('cmd')
    if not cmd_key:
        return jsonify({'error': 'cmd parameter missing'}), 400
    if cmd_key not in ALLOWED_COMMANDS:
        return jsonify({'error': 'command not allowed'}), 403
    try:
        result = subprocess.run(ALLOWED_COMMANDS[cmd_key], capture_output=True, text=True, check=True)
        output = result.stdout
    except subprocess.CalledProcessError as e:
        output = e.stderr or 'Command execution failed'
    return jsonify({'output': output})

@app.route('/users')
def list_users():
    conn = get_db_connection()
    cursor = conn.cursor(dictionary=True)
    cursor.execute('SELECT id, username FROM users')
    rows = cursor.fetchall()
    cursor.close()
    conn.close()
    return jsonify(rows)

if __name__ == '__main__':
    # Ensure DB is ready before starting the app â€“ retry until a connection succeeds
    import time
    for _ in range(15):
        try:
            conn = get_db_connection()
            conn.close()
            break
        except Exception:
            time.sleep(2)
    app.run(host='0.0.0.0', port=5000)
