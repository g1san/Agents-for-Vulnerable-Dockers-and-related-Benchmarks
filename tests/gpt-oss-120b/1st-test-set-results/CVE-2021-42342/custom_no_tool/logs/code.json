{
    "files": [
        {
            "location": "./../../dockers/CVE-2021-42342/custom_no_tool/docker-compose.yml",
            "content": "version: \"3.8\"\nservices:\n  web:\n    build: ./app\n    ports:\n      - \"8080:8080\"\n    environment:\n      - DATABASE_HOST=db\n      - DATABASE_USER=vulnuser\n      - DATABASE_PASSWORD=vulnpass\n      - DATABASE_NAME=vulndb\n    depends_on:\n      db:\n        condition: service_healthy\n    entrypoint: [\"/app/entrypoint.sh\"]\n  db:\n    image: mysql:5.7\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: rootpass\n      MYSQL_DATABASE: vulndb\n      MYSQL_USER: vulnuser\n      MYSQL_PASSWORD: vulnpass\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\n    healthcheck:\n      test: sh -c 'mysqladmin ping -h localhost -u root -p\"$MYSQL_ROOT_PASSWORD\" --silent'\n      interval: 10s\n      timeout: 5s\n      retries: 5\nvolumes:\n  db_data:"
        },
        {
            "location": "./../../dockers/CVE-2021-42342/custom_no_tool/app/Dockerfile",
            "content": "FROM python:3.9-slim\nWORKDIR /app\n# Install MySQL client for mysqladmin\nRUN apt-get update && apt-get install -y default-mysql-client && rm -rf /var/lib/apt/lists/*\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY app.py .\nCOPY files/ /app/files/\nCOPY entrypoint.sh /app/entrypoint.sh\nRUN chmod +x /app/entrypoint.sh\nEXPOSE 8080\nCMD [\"python\", \"app.py\"]"
        },
        {
            "location": "./../../dockers/CVE-2021-42342/custom_no_tool/app/requirements.txt",
            "content": "Flask==2.0.1\nWerkzeug==2.0.3\nPyMySQL==1.0.2"
        },
        {
            "location": "./../../dockers/CVE-2021-42342/custom_no_tool/app/app.py",
            "content": "import os\nimport pathlib\nfrom flask import Flask, request, abort\nimport pymysql\napp = Flask(__name__)\n\ndef get_db_connection():\n    return pymysql.connect(\n        host=os.getenv('DATABASE_HOST'),\n        user=os.getenv('DATABASE_USER'),\n        password=os.getenv('DATABASE_PASSWORD'),\n        database=os.getenv('DATABASE_NAME'),\n        charset='utf8mb4',\n        cursorclass=pymysql.cursors.DictCursor\n    )\n\n# Hardened endpoint \u2013 prevents directory traversal via \"file\" query parameter\n@app.route('/view')\ndef view_file():\n    filename = request.args.get('file')\n    if not filename:\n        abort(400, 'file parameter required')\n    # Disallow path traversal sequences\n    if '..' in pathlib.PurePath(filename).parts:\n        abort(400, 'Invalid file path')\n    base_dir = pathlib.Path('/app/files')\n    target_path = (base_dir / filename).resolve()\n    if not str(target_path).startswith(str(base_dir)):\n        abort(400, 'Invalid file path')\n    try:\n        with open(target_path, 'r') as f:\n            content = f.read()\n        return f\"<pre>{content}</pre>\"\n    except Exception as e:\n        return str(e), 500\n\n# Simple data display endpoint to confirm DB connectivity\n@app.route('/users')\ndef list_users():\n    conn = get_db_connection()\n    with conn.cursor() as cur:\n        cur.execute('SELECT id, username FROM users')\n        rows = cur.fetchall()\n    conn.close()\n    return {'users': rows}\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=8080)"
        },
        {
            "location": "./../../dockers/CVE-2021-42342/custom_no_tool/app/entrypoint.sh",
            "content": "#!/bin/sh\n# Wait for MySQL to become reachable before starting the Flask app\nset -e\n# Initial pause to give MySQL container time to finish initialization\nsleep 5\nhost=\"${DATABASE_HOST:-db}\"\nport=3306\nmax_tries=120\ntries=0\nwhile ! mysqladmin ping -h \"$host\" -P \"$port\" --silent; do\n  tries=$((tries + 1))\n  if [ $tries -ge $max_tries ]; then\n    echo \"MySQL not reachable after $max_tries attempts, exiting.\"\n    exit 1\n  fi\n  echo \"Waiting for MySQL at $host:$port... (attempt $tries)\"\n  sleep 2\ndone\nexec python app.py"
        },
        {
            "location": "./../../dockers/CVE-2021-42342/custom_no_tool/app/files/secret.txt",
            "content": "Sensitive data that should not be exposed."
        },
        {
            "location": "./../../dockers/CVE-2021-42342/custom_no_tool/db/init.sql",
            "content": "CREATE TABLE users (id INT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(50) NOT NULL);\nINSERT INTO users (username) VALUES ('alice'), ('bob'), ('charlie');"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2021-42342/custom_no_tool"
}