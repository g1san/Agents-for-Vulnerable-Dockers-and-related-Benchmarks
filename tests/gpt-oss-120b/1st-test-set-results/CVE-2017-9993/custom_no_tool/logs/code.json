{
    "files": [
        {
            "location": "./../../dockers/CVE-2017-9993/custom_no_tool/Dockerfile",
            "content": "FROM debian:bullseye-slim\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install required packages and runtime dependencies for Gogs\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        tzdata \\\n        git \\\n        openssh-client \\\n        wget \\\n        curl \\\n        ffmpeg \\\n        libsqlite3-0 \\\n        libssl1.1 \\\n        unzip && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Create gogs user and application directory\nRUN adduser --disabled-password --gecos \"\" gogs && \\\n    mkdir -p /app/gogs && \\\n    chown -R gogs:gogs /app/gogs\n\n# Download and extract Gogs binary (v0.11.0) \u2013 zip archive\nENV GOGS_VERSION=0.11.0\nENV GOGS_URL=https://github.com/gogs/gogs/releases/download/v${GOGS_VERSION}/gogs_${GOGS_VERSION}_linux_amd64.zip\nRUN curl -L -o /tmp/gogs.zip \"$GOGS_URL\" && \\\n    unzip /tmp/gogs.zip -d /app/gogs && \\\n    mv /app/gogs/gogs_${GOGS_VERSION}_linux_amd64/* /app/gogs/ && \\\n    rmdir /app/gogs/gogs_${GOGS_VERSION}_linux_amd64 && \\\n    rm /tmp/gogs.zip && \\\n    chmod +x /app/gogs/gogs && \\\n    chown -R gogs:gogs /app/gogs\n\n# Expose ports (web UI and SSH)\nEXPOSE 3000 22\n\n# Set working directory\nWORKDIR /app/gogs\n\n# Run as the gogs user\nUSER gogs\n\n# Entrypoint \u2013 start Gogs web server\nENTRYPOINT [\"./gogs\", \"web\"]"
        },
        {
            "location": "./../../dockers/CVE-2017-9993/custom_no_tool/docker-compose.yml",
            "content": "services:\n  gogs:\n    build: .\n    ports:\n      - \"3000:3000\"\n      - \"22:22\"\n    environment:\n      - USER_UID=1000\n      - USER_GID=1000\n    volumes:\n      - ./data/gogs:/data\n    depends_on:\n      - db\n  db:\n    image: mysql:5.7\n    environment:\n      MYSQL_ROOT_PASSWORD: rootpass\n      MYSQL_DATABASE: gogs\n      MYSQL_USER: gogs\n      MYSQL_PASSWORD: gogs_pass\n    ports:\n      - \"3306:3306\"\n    volumes:\n      - ./data/mysql:/var/lib/mysql\n      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro\n    command: --default-authentication-plugin=mysql_native_password"
        },
        {
            "location": "./../../dockers/CVE-2017-9993/custom_no_tool/README.md",
            "content": "# CVE-2017-9993 Reproduction Environment\n\nThis Docker Compose setup creates a minimal environment that includes the vulnerable Gogs service (version **0.11.0**) which is affected by CVE-2017-9993. The accompanying MySQL database is pre\u2011configured with a small test dataset so Gogs can start without manual intervention.\n\n## How to run\n```bash\ncd ./../../dockers/CVE-2017-9993/custom_no_tool\ndocker compose up -d --build\n```\n\nThe Gogs web interface will be reachable at `http://localhost:3000`. Use the default admin credentials (`admin` / `admin`) or create a new account.\n\nThe exploit for CVE-2017-9993 can be performed against the running Gogs instance on port **3000**.\n\n## Test data\nA simple SQL file (`init.sql`) is mounted into the MySQL container and creates a dummy table `test` with a few rows. This demonstrates that the database is automatically populated on first start.\n\n## Notes on the Dockerfile\n* The Gogs binary is downloaded as a **ZIP** archive. After extraction, the contained folder is flattened so that the `gogs` executable resides directly in `/app/gogs`.\n* All required packages (`ca-certificates`, `tzdata`, `git`, `openssh-client`, `wget`, `curl`, `ffmpeg`) **plus** the runtime libraries needed by the Gogs binary (`libsqlite3-0`, `libssl1.1`) are installed via `apt-get`.\n* The `gogs` user owns the entire `/app/gogs` directory after extraction, ensuring the service can start without permission issues.\n* No `gosu` utility is required; the container switches to the `gogs` user with the `USER` directive.\n\nWith these changes the stack builds and starts automatically using `docker compose up`."
        },
        {
            "location": "./../../dockers/CVE-2017-9993/custom_no_tool/init.sql",
            "content": "CREATE TABLE IF NOT EXISTS test (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(50) NOT NULL,\n    value VARCHAR(100)\n);\nINSERT INTO test (name, value) VALUES\n    ('alpha', 'first row'),\n    ('beta', 'second row'),\n    ('gamma', 'third row');"
        }
    ],
    "directory_tree": "CVE-2017-9993/custom_no_tool"
}