{
    "files": [
        {
            "location": "./../../dockers/CVE-2018-16509/custom_no_tool/docker-compose.yml",
            "content": "services:\n  vulnerable_app:\n    build: ./app\n    ports:\n      - \"8080:8080\"\n    environment:\n      - VULN=true"
        },
        {
            "location": "./../../dockers/CVE-2018-16509/custom_no_tool/app/Dockerfile",
            "content": "FROM python:3.9-slim-bullseye\n\n# Install specific vulnerable Ghostscript (9.22) and required system libraries for Pillow\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        wget \\\n        libjpeg62-turbo-dev \\\n        zlib1g-dev \\\n        libopenjp2-7-dev && \\\n    wget -O /tmp/gs.deb http://snapshot.debian.org/archive/debian/20200501T000000Z/pool/main/g/ghostscript/ghostscript_9.22~dfsg-0+deb9u2_amd64.deb && \\\n    dpkg -i /tmp/gs.deb || apt-get -fy install && \\\n    rm -rf /tmp/gs.deb && \\\n    rm -rf /var/lib/apt/lists/*\n\nWORKDIR /app\n\n# Install Python dependencies\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Copy application source\nCOPY app.py .\n\nEXPOSE 8080\n\nCMD [\"python\", \"app.py\"]"
        },
        {
            "location": "./../../dockers/CVE-2018-16509/custom_no_tool/app/requirements.txt",
            "content": "Flask==2.2.5\nPillow==9.5.0"
        },
        {
            "location": "./../../dockers/CVE-2018-16509/custom_no_tool/app/app.py",
            "content": "from flask import Flask, request, jsonify\nfrom PIL import Image\nimport os\nimport subprocess\n\napp = Flask(__name__)\n\nUPLOAD_FOLDER = '/tmp/uploads'\nos.makedirs(UPLOAD_FOLDER, exist_ok=True)\n\n@app.route('/')\ndef index():\n    return \"Ghostscript CVE-2018-16509 vulnerable service running\"\n\n@app.route('/upload', methods=['POST'])\ndef upload_file():\n    if 'file' not in request.files:\n        return jsonify({'error': 'No file part'}), 400\n    file = request.files['file']\n    if file.filename == '':\n        return jsonify({'error': 'No selected file'}), 400\n    file_path = os.path.join(UPLOAD_FOLDER, file.filename)\n    file.save(file_path)\n    try:\n        # Open the file with Pillow which will invoke Ghostscript for EPS/PS files\n        img = Image.open(file_path)\n        img.load()\n        # Optional: force processing to trigger potential exploit paths\n        img.convert('RGB')\n    except Exception as e:\n        return jsonify({'error': str(e)}), 500\n    finally:\n        # Clean up uploaded file\n        try:\n            os.remove(file_path)\n        except OSError:\n            pass\n    return jsonify({'status': 'file processed successfully'})\n\nif __name__ == '__main__':\n    # Bind to all interfaces so Docker can reach the app\n    app.run(host='0.0.0.0', port=8080)\n"
        }
    ],
    "directory_tree": "CVE-2018-16509/custom_no_tool"
}