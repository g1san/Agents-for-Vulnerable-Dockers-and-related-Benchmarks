{
    "files": [
        {
            "location": "./../../dockers/CVE-2015-5531/custom_no_tool/docker-compose.yml",
            "content": "services:\n  web:\n    build: ./app\n    ports:\n      - \"8080:80\"\n    depends_on:\n      - db\n      - elasticsearch\n    environment:\n      DB_HOST: db\n      DB_USER: vulnuser\n      DB_PASSWORD: vulnpass\n      DB_NAME: vulndb\n      ELASTIC_HOST: elasticsearch\n  db:\n    image: mysql:5.5\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: rootpass\n      MYSQL_DATABASE: vulndb\n      MYSQL_USER: vulnuser\n      MYSQL_PASSWORD: vulnpass\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\n  elasticsearch:\n    build: ./elasticsearch\n    environment:\n      - discovery.type=single-node\n    ports:\n      - \"9200:9200\"\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    restart: always\nvolumes:\n  db_data:"
        },
        {
            "location": "./../../dockers/CVE-2015-5531/custom_no_tool/app/Dockerfile",
            "content": "FROM php:7.4-apache\nRUN apt-get update && apt-get install -y default-mysql-client default-libmysqlclient-dev && docker-php-ext-install mysqli && rm -rf /var/lib/apt/lists/*\nCOPY src/ /var/www/html/\nEXPOSE 80"
        },
        {
            "location": "./../../dockers/CVE-2015-5531/custom_no_tool/app/src/index.php",
            "content": "<?php\n// Secure payload handling \u2013 replace unsafe unserialize with JSON validation\nif (isset($_GET['payload'])) {\n    $data = $_GET['payload'];\n    $decoded = base64_decode($data, true);\n    if ($decoded === false) {\n        http_response_code(400);\n        echo \"Invalid base64 payload.\";\n        exit;\n    }\n    // Expect a JSON object with a simple string field \"action\"\n    $json = json_decode($decoded, true);\n    if (json_last_error() !== JSON_ERROR_NONE) {\n        http_response_code(400);\n        echo \"Payload is not valid JSON.\";\n        exit;\n    }\n    if (!isset($json['action']) || !is_string($json['action'])) {\n        http_response_code(400);\n        echo \"Missing or invalid 'action' field.\";\n        exit;\n    }\n    // Process the allowed action safely\n    echo \"Processed action: \" . htmlspecialchars($json['action']);\n} else {\n    echo \"Send payload via ?payload=BASE64_JSON_STRING\";\n}\n?>"
        },
        {
            "location": "./../../dockers/CVE-2015-5531/custom_no_tool/db/init.sql",
            "content": "CREATE TABLE users (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  username VARCHAR(50) NOT NULL,\n  password VARCHAR(255) NOT NULL\n);\nINSERT INTO users (username, password) VALUES ('admin', MD5('admin'));"
        },
        {
            "location": "./../../dockers/CVE-2015-5531/custom_no_tool/elasticsearch/Dockerfile",
            "content": "FROM docker.elastic.co/elasticsearch/elasticsearch:1.6.1\nENV discovery.type=single-node\nEXPOSE 9200 9300"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2015-5531/custom_no_tool"
}