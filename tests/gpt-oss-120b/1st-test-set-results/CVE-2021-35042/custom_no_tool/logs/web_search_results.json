{
    "desc": "CVE-2021-35042 is a critical vulnerability in the Django web framework (Python package `django`). The flaw resides in the `QuerySet.order_by()` method, which fails to properly sanitise field names that are supplied from untrusted client input. When a view forwards a request parameter directly to `order_by()`, an attacker can inject arbitrary SQL fragments into the generated `ORDER BY` clause. This results in a classic SQL injection (CWE\u201189) that can be exploited without authentication. Exploitation allows an attacker to read, modify, or delete any data accessible to the database connection, potentially dumping credential hashes, enumerating the schema, or performing further database\u2011level attacks. The vulnerability affects all supported Django 3.1.x releases prior to 3.1.13 and all Django 3.2.x releases prior to 3.2.5. It was introduced as a regression in Django 3.1 while deprecating a code path, and was fixed in Django 3.1.13 and 3.2.5.",
    "attack_type": "SQL injection",
    "services": [
        {
            "name": "python",
            "version": [
                "3.9-slim"
            ],
            "dependency_type": "HARD",
            "description": "Container running a Django application that includes the vulnerable Django versions: 3.0a1 through 3.0.12, 3.1a1 through 3.1.12, and 3.2a1 through 3.2.4. The vulnerability is triggered by a view that passes a request's `order_by` parameter directly to `QuerySet.order_by()`."
        },
        {
            "name": "postgres",
            "version": [
                "13"
            ],
            "dependency_type": "SOFT-DB",
            "description": "Relational database used by the Django application to store data. PostgreSQL is required because the exploit demonstrated for this CVE relies on PostgreSQL's ability to execute multiple statements in a single query."
        }
    ],
    "input_tokens": 7400,
    "output_tokens": 2130
}