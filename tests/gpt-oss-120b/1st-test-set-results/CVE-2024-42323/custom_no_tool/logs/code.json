{
    "files": [
        {
            "location": "./../../dockers/CVE-2024-42323/custom_no_tool/Dockerfile",
            "content": "FROM openjdk:11-jre-slim\n\nARG HERTZBEAT_VERSION=1.5.9\nENV HERTZBEAT_HOME=/opt/hertzbeat\n\n# Install utilities, download HertzBeat, extract it, ensure lib directory exists, replace SnakeYAML with vulnerable version\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends wget tar ca-certificates && \\\n    mkdir -p $HERTZBEAT_HOME && \\\n    wget -O /tmp/hertzbeat.tar.gz https://archive.apache.org/dist/hertzbeat/${HERTZBEAT_VERSION}/apache-hertzbeat-${HERTZBEAT_VERSION}-bin.tar.gz && \\\n    tar -xzf /tmp/hertzbeat.tar.gz -C $HERTZBEAT_HOME --strip-components=1 && \\\n    rm -f /tmp/hertzbeat.tar.gz && \\\n    mkdir -p $HERTZBEAT_HOME/lib && \\\n    wget -O $HERTZBEAT_HOME/lib/snakeyaml.jar https://repo1.maven.org/maven2/org/yaml/snakeyaml/1.33/snakeyaml-1.33.jar && \\\n    chmod +x $HERTZBEAT_HOME/bin/start.sh && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*\n\nWORKDIR $HERTZBEAT_HOME\nEXPOSE 1157\nCMD [\"sh\",\"-c\",\"bin/start.sh\"]"
        },
        {
            "location": "./../../dockers/CVE-2024-42323/custom_no_tool/docker-compose.yml",
            "content": "version: '3.8'\nservices:\n  mysql:\n    image: mysql:8.0.33\n    container_name: hertzbeat_mysql\n    restart: unless-stopped\n    environment:\n      MYSQL_ROOT_PASSWORD: rootpass\n      MYSQL_DATABASE: hertzbeat\n      MYSQL_USER: hertzbeat\n      MYSQL_PASSWORD: hbpass\n    ports:\n      - \"3306:3306\"\n    healthcheck:\n      test: [\"CMD\", \"mysqladmin\", \"ping\", \"-h\", \"localhost\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n    volumes:\n      - mysql_data:/var/lib/mysql\n      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro\n\n  hertzbeat:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    container_name: hertzbeat_app\n    depends_on:\n      mysql:\n        condition: service_healthy\n    restart: unless-stopped\n    ports:\n      - \"1157:1157\"\n    environment:\n      TZ: UTC\n      DB_HOST: mysql\n      DB_PORT: 3306\n      DB_NAME: hertzbeat\n      DB_USER: hertzbeat\n      DB_PASSWORD: hbpass\n    links:\n      - mysql\nvolumes:\n  mysql_data:"
        },
        {
            "location": "./../../dockers/CVE-2024-42323/custom_no_tool/init.sql",
            "content": "CREATE TABLE IF NOT EXISTS test_table (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(255) NOT NULL\n);\nINSERT INTO test_table (name) VALUES ('test');"
        },
        {
            "location": "./../../dockers/CVE-2024-42323/custom_no_tool/README.txt",
            "content": "CVE\u20112024\u201142323 Reproducible Docker Environment\n\nThis directory contains everything required to spin up a full stack that demonstrates the vulnerable Apache HertzBeat instance.\n\n## Services\n- **apache/hertzbeat** (built from source, version 1.5.9) \u2013 the application containing the SnakeYAML deserialization flaw.\n- **mysql** (image: mysql:8.0.33) \u2013 the database used by HertzBeat.\n- **openjdk** (base image: openjdk:11-jre-slim) \u2013 Java runtime for the HertzBeat container.\n\n## How to start\n```bash\ncd ./../../dockers/CVE-2024-42323/custom_no_tool\nsudo docker compose up --build -d\n```\nDocker Compose will:\n1. Pull the MySQL 8.0.33 image and initialise it with a simple `test_table` via `init.sql`.\n2. Build the HertzBeat image from the provided Dockerfile, downloading the 1.5.9 binary and replacing the default SnakeYAML jar with version 1.33 (the version that contains the vulnerable `load` method).\n3. Wait for MySQL to become healthy before starting HertzBeat.\n\nBoth services expose their default ports on the host:\n- MySQL: **3306**\n- HertzBeat UI/API: **1157**\n\nNo manual configuration is required \u2013 the compose file defines the necessary environment variables, health\u2011checks and dependency ordering.\n\n## Stopping the stack\n```bash\nsudo docker compose down -v\n```\nThe `-v` flag also removes the persisted MySQL volume.\n\nYou can now interact with the HertzBeat API (e.g., `/api/monitors/import`) to test the remote code execution payload described in the CVE."
        }
    ],
    "directory_tree": "CVE-2024-42323/custom_no_tool"
}