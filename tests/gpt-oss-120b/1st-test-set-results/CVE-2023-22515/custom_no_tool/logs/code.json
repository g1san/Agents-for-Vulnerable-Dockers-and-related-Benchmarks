{
    "files": [
        {
            "location": "./../../dockers/CVE-2023-22515/custom_no_tool/docker-compose.yml",
            "content": "version: '3.8'\nservices:\n  web:\n    build: ./vulnerable_app\n    ports:\n      - \"5000:5000\"\n    environment:\n      - FLASK_APP=app.py\n      - FLASK_RUN_HOST=0.0.0.0\n    depends_on:\n      - db\n      - confluence\n  db:\n    image: postgres:13-alpine\n    environment:\n      POSTGRES_USER: testuser\n      POSTGRES_PASSWORD: testpass\n      POSTGRES_DB: testdb\n    volumes:\n      - db_data:/var/lib/postgresql/data\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\n    ports:\n      - \"5432:5432\"\n  confluence:\n    image: atlassian/confluence:8.4.2\n    ports:\n      - \"8090:8090\"\n      - \"8091:8091\"\n    environment:\n      - ATL_JDBC_URL=jdbc:postgresql://db:5432/testdb\n      - ATL_JDBC_USER=testuser\n      - ATL_JDBC_PASSWORD=testpass\n      - ATL_DB_TYPE=postgresql\n    depends_on:\n      - db\n    volumes:\n      - confluence_data:/var/atlassian/application-data/confluence\nvolumes:\n  db_data:\n  confluence_data:"
        },
        {
            "location": "./../../dockers/CVE-2023-22515/custom_no_tool/vulnerable_app/Dockerfile",
            "content": "FROM python:3.11-slim\nWORKDIR /app\nCOPY requirements.txt requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nEXPOSE 5000\nCMD [\"python\", \"-m\", \"flask\", \"run\"]"
        },
        {
            "location": "./../../dockers/CVE-2023-22515/custom_no_tool/vulnerable_app/requirements.txt",
            "content": "flask==2.3.2\npsycopg2-binary==2.9.6\npyyaml==6.0"
        },
        {
            "location": "./../../dockers/CVE-2023-22515/custom_no_tool/vulnerable_app/app.py",
            "content": "import os\nimport yaml\nfrom flask import Flask, request, jsonify\nimport psycopg2\napp = Flask(__name__)\n\ndef get_db_connection():\n    conn = psycopg2.connect(\n        host='db',\n        database='testdb',\n        user='testuser',\n        password='testpass'\n    )\n    return conn\n\n# Vulnerable endpoint \u2013 unsafe yaml.load leads to CVE-2023-22515 exploitation\n@app.route('/vulnerable', methods=['POST'])\ndef vulnerable():\n    data = request.data\n    # Unsafe loading (CVE-2023-22515)\n    obj = yaml.load(data, Loader=yaml.FullLoader)\n    return jsonify({'status': 'loaded', 'type': str(type(obj))})\n\n@app.route('/users', methods=['GET'])\ndef list_users():\n    conn = get_db_connection()\n    cur = conn.cursor()\n    cur.execute('SELECT id, username FROM users;')\n    rows = cur.fetchall()\n    cur.close()\n    conn.close()\n    return jsonify([{'id': r[0], 'username': r[1]} for r in rows])\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)"
        },
        {
            "location": "./../../dockers/CVE-2023-22515/custom_no_tool/db/init.sql",
            "content": "CREATE TABLE users (\n    id SERIAL PRIMARY KEY,\n    username VARCHAR(50) NOT NULL\n);\nINSERT INTO users (username) VALUES ('alice'), ('bob'), ('charlie');"
        }
    ],
    "directory_tree": "CVE-2023-22515/custom_no_tool"
}