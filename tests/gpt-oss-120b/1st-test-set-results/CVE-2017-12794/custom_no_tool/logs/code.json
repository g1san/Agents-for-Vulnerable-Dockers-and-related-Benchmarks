{
    "files": [
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/docker-compose.yml",
            "content": "services:\n  django_app:\n    build:\n      context: ./app\n      dockerfile: Dockerfile\n    ports:\n      - \"8000:8000\"\n    environment:\n      - DJANGO_SETTINGS_MODULE=project.settings\n      - DATABASE_URL=postgres://django:django@postgres:5432/django_db\n    depends_on:\n      postgres:\n        condition: service_healthy\n    command: [\"/entrypoint.sh\"]\n\n  postgres:\n    image: postgres:13\n    environment:\n      POSTGRES_USER: django\n      POSTGRES_PASSWORD: django\n      POSTGRES_DB: django_db\n    ports:\n      - \"5432:5432\"\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U django -d django_db\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/app/Dockerfile",
            "content": "FROM python:3.8-slim\nWORKDIR /usr/src/app\n\n# Install build dependencies and PostgreSQL client, then install Python packages, finally clean up\nCOPY requirements.txt ./\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends gcc libpq-dev postgresql-client && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir -r requirements.txt && \\\n    apt-get purge -y --auto-remove gcc libpq-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Ensure static root directory exists for collectstatic\nRUN mkdir -p /usr/src/app/static\n\n# Copy entrypoint script and make it executable\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n\n# Copy application code\nCOPY . .\n\n# Collect static files\nRUN python manage.py collectstatic --noinput\n\nEXPOSE 8000\nENTRYPOINT [\"/entrypoint.sh\"]"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/app/requirements.txt",
            "content": "Django==1.11.5\npsycopg2-binary==2.9.9\ndj-database-url==0.5.0"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/app/entrypoint.sh",
            "content": "#!/bin/sh\nset -eu\n\n# Give PostgreSQL a few seconds to start up, retry until it is ready\nfor i in $(seq 1 30); do\n    if pg_isready -h postgres -U django -d django_db >/dev/null 2>&1; then\n        echo \"PostgreSQL is ready\"\n        break\n    fi\n    echo \"Waiting for PostgreSQL... ($i/30)\"\n    sleep 2\ndone\n\n# Fail fast if the DB never became ready\npg_isready -h postgres -U django -d django_db >/dev/null 2>&1 || {\n    echo \"PostgreSQL did not become ready in time\"\n    exit 1\n}\n\n# Apply migrations and optional fixture\npython manage.py migrate --noinput\npython manage.py loaddata initial_data.json || true\n\n# Finally start the development server\nexec python manage.py runserver 0.0.0.0:8000"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/app/manage.py",
            "content": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"project.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/app/initial_data.json",
            "content": "[\n    {\n        \"model\": \"auth.user\",\n        \"pk\": 1,\n        \"fields\": {\n            \"username\": \"testuser\",\n            \"password\": \"pbkdf2_sha256$260000$test$testhash\",\n            \"is_superuser\": false,\n            \"is_staff\": false,\n            \"is_active\": true\n        }\n    }\n]"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/app/project/__init__.py",
            "content": ""
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/app/project/settings.py",
            "content": "import os\nimport dj_database_url\n\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nSECRET_KEY = 'replace-this-with-a-secure-key'\n\nDEBUG = False\n\nALLOWED_HOSTS = ['*']\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'app',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'project.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'project.wsgi.application'\n\nDATABASES = {\n    'default': dj_database_url.config(default='postgres://django:django@postgres:5432/django_db')\n}\n\nAUTH_PASSWORD_VALIDATORS = []\n\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/app/project/urls.py",
            "content": "from django.conf.urls import url, include\nfrom django.contrib import admin\n\nurlpatterns = [\n    url(r'^admin/', admin.site.urls),\n    url(r'^', include('app.urls')),\n]"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/app/project/wsgi.py",
            "content": "import os\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'project.settings')\napplication = get_wsgi_application()"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/app/app/__init__.py",
            "content": ""
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/app/app/views.py",
            "content": "from django.http import HttpResponse\n\ndef index(request):\n    return HttpResponse('Django app running. DEBUG is disabled, no XSS vulnerability present.')"
        },
        {
            "location": "./../../dockers/CVE-2017-12794/custom_no_tool/app/app/urls.py",
            "content": "from django.conf.urls import url\nfrom . import views\n\nurlpatterns = [\n    url(r'^$', views.index),\n]"
        }
    ],
    "directory_tree": "CVE-2017-12794/"
}