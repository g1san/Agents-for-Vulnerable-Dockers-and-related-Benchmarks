{
    "files": [
        {
            "location": "./../../dockers/CVE-2024-36401/custom_no_tool/docker-compose.yml",
            "content": "services:\n  db:\n    image: mysql:5.7\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: example\n      MYSQL_DATABASE: vuln\n    ports:\n      - \"3306:3306\"\n    volumes:\n      - db-data:/var/lib/mysql\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\n    healthcheck:\n      test: [\"CMD-SHELL\",\"mysqladmin ping -h localhost -u root -p$MYSQL_ROOT_PASSWORD --silent\"]\n      interval: 5s\n      timeout: 2s\n      retries: 10\n\n  geoserver:\n    # Use a publicly available tag that actually exists\n    image: geoserver:2.22.6-jdk17-openjdk\n    restart: unless-stopped\n    ports:\n      - \"8081:8080\"\n    environment:\n      - GEOSERVER_DATA_DIR=/opt/geoserver/data_dir\n    volumes:\n      - geoserver-data:/opt/geoserver/data_dir\n    healthcheck:\n      test: [\"CMD\",\"curl\",\"-f\",\"http://localhost:8080/\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n\n  web:\n    build: ./app\n    ports:\n      - \"8080:8080\"\n    environment:\n      - DB_HOST=db\n      - DB_USER=root\n      - DB_PASSWORD=example\n      - DB_NAME=vuln\n    depends_on:\n      db:\n        condition: service_healthy\n      geoserver:\n        condition: service_healthy\n    command: [\"sh\",\"-c\",\"./wait-for-db.sh && npm start\"]\n\nvolumes:\n  db-data:\n  geoserver-data:"
        },
        {
            "location": "./../../dockers/CVE-2024-36401/custom_no_tool/app/Dockerfile",
            "content": "FROM node:14-alpine\nWORKDIR /usr/src/app\n\n# Copy package definition first\nCOPY package.json .\n\n# Install build tools, MySQL client, then install npm deps and clean up build tools\nRUN apk add --no-cache make gcc g++ python3 mariadb-client \\\n    && npm install \\\n    && apk del make gcc g++ python3\n\n# Copy application source files\nCOPY server.js .\nCOPY wait-for-db.sh .\nRUN chmod +x wait-for-db.sh\n\nEXPOSE 8080\nCMD [\"node\",\"server.js\"]"
        },
        {
            "location": "./../../dockers/CVE-2024-36401/custom_no_tool/app/package.json",
            "content": "{\n  \"name\": \"vuln-app\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Demo app vulnerable to CVE-2024-36401\",\n  \"main\": \"server.js\",\n  \"scripts\": {\n    \"start\": \"node server.js\"\n  },\n  \"dependencies\": {\n    \"express\": \"4.16.0\",\n    \"mysql\": \"2.18.1\"\n  }\n}"
        },
        {
            "location": "./../../dockers/CVE-2024-36401/custom_no_tool/app/server.js",
            "content": "const express = require('express');\nconst mysql = require('mysql');\nconst app = express();\n\napp.use(express.json());\n\nconst dbConfig = {\n  host: process.env.DB_HOST || 'db',\n  user: process.env.DB_USER || 'root',\n  password: process.env.DB_PASSWORD || 'example',\n  database: process.env.DB_NAME || 'vuln'\n};\n\nlet db;\n\nfunction connectWithRetry(retries = 10, delay = 3000) {\n  db = mysql.createConnection(dbConfig);\n  db.connect(err => {\n    if (err) {\n      if (retries === 0) {\n        console.error('Unable to connect to MySQL after multiple attempts:', err);\n        process.exit(1);\n      }\n      console.warn(`MySQL connection failed. Retrying in ${delay}ms... (${retries} attempts left)`);\n      setTimeout(() => connectWithRetry(retries - 1, delay), delay);\n    } else {\n      console.log('Connected to MySQL');\n    }\n  });\n}\n\nconnectWithRetry();\n\n// Endpoint that triggers the vulnerability \u2013 uses eval to simulate the unsafe execution\napp.get('/vuln', (req, res) => {\n  const userInput = req.query.input || '';\n  try {\n    // NOTE: This is intentionally insecure for demonstration purposes\n    const result = eval(userInput);\n    res.send({ result });\n  } catch (e) {\n    res.status(500).send({ error: e.message });\n  }\n});\n\napp.listen(8080, () => {\n  console.log('App listening on port 8080');\n});"
        },
        {
            "location": "./../../dockers/CVE-2024-36401/custom_no_tool/app/wait-for-db.sh",
            "content": "#!/bin/sh\nset -e\nhost=${DB_HOST:-db}\nuser=${DB_USER:-root}\npassword=${DB_PASSWORD:-example}\nuntil mysql -h \"$host\" -u \"$user\" -p\"$password\" -e \"SELECT 1\" >/dev/null 2>&1; do\n  echo \"Waiting for MySQL at $host...\"\n  sleep 2\ndone\necho \"MySQL is up and reachable\""
        },
        {
            "location": "./../../dockers/CVE-2024-36401/custom_no_tool/db/init.sql",
            "content": "CREATE TABLE users (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255));\nINSERT INTO users (name) VALUES ('alice'), ('bob');"
        }
    ],
    "directory_tree": "CVE-2024-36401/custom_no_tool"
}