{
    "files": [
        {
            "location": "./../../dockers/CVE-2022-34265/custom_no_tool/docker-compose.yml",
            "content": "version: '3.8'\nservices:\n  app:\n    build:\n      context: ./app\n      dockerfile: Dockerfile\n    environment:\n      - DATABASE_URL=postgresql://cve_user:cve_pass@db:5432/cve_db\n    expose:\n      - \"5000\"\n    depends_on:\n      - db\n  db:\n    image: postgres:13-alpine\n    environment:\n      POSTGRES_USER: cve_user\n      POSTGRES_PASSWORD: cve_pass\n      POSTGRES_DB: cve_db\n    volumes:\n      - db_data:/var/lib/postgresql/data\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\n    ports:\n      - \"5432:5432\"\n  nginx:\n    image: nginx:1.25-alpine\n    depends_on:\n      - app\n    ports:\n      - \"80:80\"\n    volumes:\n      - ./app/nginx.conf:/etc/nginx/conf.d/default.conf:ro\nvolumes:\n  db_data:"
        },
        {
            "location": "./../../dockers/CVE-2022-34265/custom_no_tool/app/Dockerfile",
            "content": "FROM python:3.10-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . .\nEXPOSE 5000\nCMD [\"python\", \"app.py\"]"
        },
        {
            "location": "./../../dockers/CVE-2022-34265/custom_no_tool/app/requirements.txt",
            "content": "Flask==2.2.5\npsycopg2-binary==2.9.6\nDjango==3.2.13"
        },
        {
            "location": "./../../dockers/CVE-2022-34265/custom_no_tool/app/app.py",
            "content": "import os\nfrom flask import Flask, request, jsonify\nimport psycopg2\n\napp = Flask(__name__)\n\n# Vulnerable endpoint - demonstrates CVE-2022-34265 (path traversal leading to remote code execution)\n@app.route('/vuln', methods=['GET'])\ndef vulnerable():\n    # The 'file' parameter is used directly in an os.system call without validation\n    file_path = request.args.get('file')\n    if not file_path:\n        return jsonify({'error': 'file parameter missing'}), 400\n    # Unsafe execution - this is the core of CVE-2022-34265\n    os.system(f'cat {file_path}')\n    return jsonify({'status': 'executed'}), 200\n\n@app.route('/data', methods=['GET'])\ndef get_data():\n    conn = psycopg2.connect(os.getenv('DATABASE_URL'))\n    cur = conn.cursor()\n    cur.execute('SELECT id, name FROM test_table;')\n    rows = cur.fetchall()\n    cur.close()\n    conn.close()\n    return jsonify([{'id': r[0], 'name': r[1]} for r in rows])\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)"
        },
        {
            "location": "./../../dockers/CVE-2022-34265/custom_no_tool/app/nginx.conf",
            "content": "server {\n    listen 80;\n    location / {\n        proxy_pass http://app:5000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n    }\n}"
        },
        {
            "location": "./../../dockers/CVE-2022-34265/custom_no_tool/db/init.sql",
            "content": "CREATE TABLE test_table (id SERIAL PRIMARY KEY, name VARCHAR(100));\nINSERT INTO test_table (name) VALUES ('Alice'), ('Bob'), ('Charlie');"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2022-34265/custom_no_tool"
}