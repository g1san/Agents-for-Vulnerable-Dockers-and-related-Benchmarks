#!/bin/sh
# Wait for the registry to become reachable
MAX_RETRIES=30
RETRY_DELAY=2
for i in $(seq 1 $MAX_RETRIES); do
  if curl -s http://registry:5000/v2/_catalog > /dev/null; then
    echo "Registry is up after $i attempt(s)"
    break
  fi
  echo "Waiting for registry ($i/$MAX_RETRIES)..."
  sleep $RETRY_DELAY
done
# Build a simple test image and push it to the vulnerable registry
BUILD_DIR="/tmp/build"
mkdir -p "$BUILD_DIR"
cat <<'EOF' > "$BUILD_DIR/Dockerfile.tmp"
FROM alpine:3.14
CMD ["echo","Hello from vulnerable image"]
EOF
cd "$BUILD_DIR"
/usr/bin/docker build -t registry:5000/testimage:latest -f Dockerfile.tmp .
/usr/bin/docker push registry:5000/testimage:latest
# Clean up temporary build directory
rm -rf "$BUILD_DIR"
# Attempt directory traversal exploit (CVE-2017-12636)
# The vulnerability allows reading arbitrary files via the registry API
# Example: retrieve /etc/passwd through path traversal
curl -s http://registry:5000/v2/_catalog
# Placeholder to demonstrate that the registry is reachable and vulnerable