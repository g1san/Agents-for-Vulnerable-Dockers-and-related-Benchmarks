from flask import Flask, request, jsonify
import subprocess
import os

app = Flask(__name__)

@app.route('/')
def index():
    return "Vulnerable app for CVE-2022-41678"

@app.route('/run', methods=['POST'])
def run_container():
    # This endpoint demonstrates the vulnerability: it allows a client to execute arbitrary Docker commands via the mounted Docker socket.
    cmd = request.json.get('cmd')
    if not cmd:
        return jsonify({'error': 'No command provided'}), 400
    # Explicit path to docker binary to avoid PATH issues
    full_cmd = ['/usr/bin/docker', 'run', '--rm', 'alpine', 'sh', '-c', cmd]
    try:
        result = subprocess.check_output(full_cmd, stderr=subprocess.STDOUT, text=True)
        return jsonify({'output': result})
    except subprocess.CalledProcessError as e:
        return jsonify({'error': e.output}), 500

if __name__ == '__main__':
    # Bind to all interfaces so Docker can map the port.
    app.run(host='0.0.0.0', port=5000)