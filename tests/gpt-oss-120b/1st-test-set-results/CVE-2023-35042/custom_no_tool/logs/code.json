{
    "files": [
        {
            "location": "./../../dockers/CVE-2023-35042/custom_no_tool/docker-compose.yml",
            "content": "services:\n  db:\n    image: mysql:5.7\n    environment:\n      MYSQL_ROOT_PASSWORD: rootpass\n      MYSQL_DATABASE: vulnapp\n      MYSQL_USER: user\n      MYSQL_PASSWORD: userpass\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro\n    healthcheck:\n      test: [\"CMD\", \"mysqladmin\", \"ping\", \"-h\", \"localhost\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n    command: --default-authentication-plugin=mysql_native_password\n\n  app:\n    build: ./app\n    depends_on:\n      db:\n        condition: service_healthy\n      geoserver:\n        condition: service_healthy\n    environment:\n      DB_HOST: db\n      DB_USER: user\n      DB_PASSWORD: userpass\n      DB_NAME: vulnapp\n    ports:\n      - \"8080:80\"\n\n  geoserver:\n    image: osgeo/geoserver:2.20.4\n    environment:\n      JAVA_OPTS: \"-Xms512m -Xmx1024m\"\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:8080/geoserver/web\"]\n      interval: 15s\n      timeout: 5s\n      retries: 5\n    ports:\n      - \"8081:8080\"\n\nvolumes:\n  db_data:"
        },
        {
            "location": "./../../dockers/CVE-2023-35042/custom_no_tool/app/Dockerfile",
            "content": "FROM php:8.1-apache\n\nRUN apt-get update && apt-get install -y \\\n    build-essential \\\n    pkg-config \\\n    default-mysql-client \\\n    libmysqlclient-dev \\\n    libzip-dev \\\n    libpng-dev \\\n    libjpeg-dev \\\n    zlib1g-dev \\\n    && docker-php-ext-install mysqli pdo_mysql zip \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*\n\nCOPY index.php /var/www/html/index.php"
        },
        {
            "location": "./../../dockers/CVE-2023-35042/custom_no_tool/app/index.php",
            "content": "<?php\n// Safe handling of input \u2013 replace unsafe unserialize with JSON decoding\nif (isset($_GET['data'])) {\n    $data = json_decode($_GET['data'], true);\n    if (json_last_error() !== JSON_ERROR_NONE) {\n        echo \"Invalid JSON data.\";\n        exit;\n    }\n    // Process the decoded data safely (example placeholder)\n    echo \"Data processed safely.\";\n    exit;\n}\n\n// Normal application logic: display a secret from the database\n$dsn = \"mysql:host={$_ENV['DB_HOST']};dbname={$_ENV['DB_NAME']}\";\ntry {\n    $pdo = new PDO($dsn, $_ENV['DB_USER'], $_ENV['DB_PASSWORD']);\n    $stmt = $pdo->query(\"SELECT flag FROM secrets LIMIT 1\");\n    $row = $stmt->fetch(PDO::FETCH_ASSOC);\n    echo \"Secret: \" . htmlspecialchars($row['flag']);\n} catch (PDOException $e) {\n    echo \"Database error.\";\n}\n?>"
        },
        {
            "location": "./../../dockers/CVE-2023-35042/custom_no_tool/db/init.sql",
            "content": "CREATE TABLE secrets (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    flag VARCHAR(255) NOT NULL\n);\n\nINSERT INTO secrets (flag) VALUES ('CVE-2023-35042-EXPLOIT');"
        }
    ],
    "directory_tree": "CVE-2023-35042/custom_no_tool"
}