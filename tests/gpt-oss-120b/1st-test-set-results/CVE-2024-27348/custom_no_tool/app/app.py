import os
import json
from flask import Flask, request, jsonify, abort
import redis

app = Flask(__name__)

r = redis.Redis(host=os.getenv('REDIS_HOST', 'redis'), port=int(os.getenv('REDIS_PORT', 6379)))

@app.route('/')
def index():
    return 'Secure app'

@app.route('/store', methods=['POST'])
def store():
    key = request.form.get('key')
    data = request.form.get('data')
    if not key or not data:
        abort(400, description='Missing key or data')
    try:
        # Validate that data is valid JSON
        json_obj = json.loads(data)
    except json.JSONDecodeError:
        abort(400, description='Data must be valid JSON')
    # Store the JSON string safely
    r.set(key, json.dumps(json_obj))
    return 'Stored', 201

@app.route('/load', methods=['GET'])
def load():
    key = request.args.get('key')
    if not key:
        abort(400, description='Missing key')
    raw = r.get(key)
    if raw is None:
        return 'Not found', 404
    try:
        # Load JSON safely
        obj = json.loads(raw)
    except json.JSONDecodeError:
        abort(500, description='Corrupted data')
    return jsonify(obj)

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=False)