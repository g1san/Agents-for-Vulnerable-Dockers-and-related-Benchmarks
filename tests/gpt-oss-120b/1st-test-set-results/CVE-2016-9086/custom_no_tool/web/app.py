# -*- coding: utf-8 -*-
import os
from flask import Flask, request, abort
import psycopg2
import json

app = Flask(__name__)

# Safe endpoint â€“ parses JSON instead of unsafe pickle deserialization
@app.route('/safe', methods=['POST'])
def safe():
    try:
        data = request.get_json(force=True)
        return f"Received: {json.dumps(data)}"
    except Exception as e:
        abort(400, str(e))

def get_db_connection():
    conn = psycopg2.connect(
        host=os.getenv('DATABASE_HOST'),
        database=os.getenv('DATABASE_NAME'),
        user=os.getenv('DATABASE_USER'),
        password=os.getenv('DATABASE_PASSWORD')
    )
    return conn

@app.route('/')
def index():
    conn = get_db_connection()
    cur = conn.cursor()
    cur.execute('SELECT message FROM greetings LIMIT 1;')
    row = cur.fetchone()
    conn.close()
    return row[0] if row else 'Hello from vulnerable app!'

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=80)