const express = require('express');
const mongoose = require('mongoose');
const app = express();
const port = 8080;

// Connect to PostgreSQL via environment variables (placeholder, not used directly)
// In a real scenario, you would use a PostgreSQL client. For this demo we focus on the vulnerable part.

// Vulnerable endpoint that renders user-provided input without sanitization
app.get('/search', (req, res) => {
  const query = req.query.q || '';
  // The following line uses eval to demonstrate a code injection vulnerability (CVE-2024-7314)
  // In practice, the vulnerable library would evaluate the query string.
  try {
    const result = eval(query);
    res.send(`Result: ${result}`);
  } catch (e) {
    res.status(400).send('Invalid expression');
  }
});

app.listen(port, () => {
  console.log(`Vulnerable app listening at http://0.0.0.0:${port}`);
});