#!/bin/bash

# Wait for MySQL
echo "Waiting for MySQL..."
while ! mysqladmin ping -h db -u cacti -pcacti --silent; do
    sleep 1
done
echo "MySQL is up!"

# Initialize database if needed
if ! mysql -h db -u cacti -pcacti cacti -e "SHOW TABLES" 2>/dev/null | grep -q "poller"; then
    echo "Initializing Cacti database..."
    mysql -h db -u cacti -pcacti cacti < /var/www/localhost/htdocs/cacti.sql
    
    # Create poller and host entries for vulnerability testing
    echo "Setting up vulnerability test data..."
    mysql -h db -u cacti -pcacti cacti << EOF
    INSERT IGNORE INTO poller (id, name, hostname, dbdefault, dbuser, dbpass, dbport, dbssl, total_time, max_time, min_time, avg_time, total_polls, last_update, last_status, status) 
    VALUES (1, 'Main Poller', 'localhost', 'cacti', 'cacti', 'cacti', 3306, 0, 0, 0, 0, 0, 0, '0000-00-00 00:00:00', '0000-00-00 00:00:00', 0);
    
    INSERT IGNORE INTO host (id, poller_id, hostname, description, status, status_event_count, status_fail_date, status_rec_date, status_last_error, min_time, max_time, cur_time, avg_time, polling_time, total_polls, failed_polls, availability) 
    VALUES (1, 1, 'localhost', 'Localhost', 3, 0, '0000-00-00 00:00:00', '0000-00-00 00:00:00', '', 0, 0, 0, 0, 0, 0, 0, 100);
    
    INSERT IGNORE INTO data_local (id, host_id, snmp_query_id, snmp_index) 
    VALUES (1, 1, 0, '');
    
    UPDATE user_auth SET password=MD5('admin') WHERE username='admin';
EOF

    echo "Database initialization complete!"
fi

# Fix permissions
chown -R apache:apache /var/www/localhost/htdocs

# Configure cron for polling (not starting cron to keep container simple)
echo "*/5 * * * * php /var/www/localhost/htdocs/poller.php > /dev/null 2>&1" > /etc/crontabs/apache

echo "Setup complete. Starting Apache..."