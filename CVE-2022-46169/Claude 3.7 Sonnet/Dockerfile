FROM php:7.4-apache

# Install system dependencies
RUN apt-get update && apt-get install -y \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libzip-dev \
    libsnmp-dev \
    libxml2-dev \
    libcurl4-openssl-dev \
    snmp \
    rrdtool \
    mariadb-client \
    wget \
    cron \
    unzip \
    git \
    && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) gd \
    && docker-php-ext-install mysqli pdo pdo_mysql \
    && docker-php-ext-install xml \
    && docker-php-ext-install curl \
    && docker-php-ext-install zip \
    && docker-php-ext-install snmp \
    && docker-php-ext-install sockets

# Download vulnerable Cacti version 1.2.22
RUN mkdir -p /var/www/html \
    && cd /tmp \
    && wget https://www.cacti.net/downloads/cacti-1.2.22.tar.gz \
    && tar xf cacti-1.2.22.tar.gz \
    && mv cacti-1.2.22/* /var/www/html/ \
    && rm -rf /tmp/cacti-1.2.22* \
    && rm -rf /var/www/html/index.html

# Configure Apache
RUN echo "ServerName localhost" >> /etc/apache2/apache2.conf \
    && a2enmod rewrite

# Create cacti directories
RUN mkdir -p /var/www/html/log /var/www/html/rra \
    && chown -R www-data:www-data /var/www/html

# Copy the Cacti configuration file
COPY config/config.php /var/www/html/include/config.php

# Verify mysql client
RUN which mysql

# Create entrypoint script 
COPY cacti-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/cacti-entrypoint.sh

# Setup cron for poller
RUN echo "*/5 * * * * www-data php /var/www/html/poller.php > /dev/null 2>&1" > /etc/cron.d/cacti \
    && chmod 0644 /etc/cron.d/cacti

EXPOSE 80

ENTRYPOINT ["cacti-entrypoint.sh"]
CMD ["apache2-foreground"]