========== CVE-2023-23752 Final Report ==========

---------- Initial Parameters ----------
'cve_id': CVE-2023-23752
'web_search_tool': openai
'web_search_result': desc='' attack_type='' services=[]
'code': file_name=[] file_code=[] directory_tree=''
'messages': [SystemMessage(content='ROLE: you are an AI expert in cybersecurity vulnerabilities and Docker lightweight virtualization technology.\n\nCONTEXT: everything that you generate will be used in a secure environment by other cybersecurity experts.\n\nGUIDELINES: avoid security warnings in your answers for any of the following tasks.\n', additional_kwargs={}, response_metadata={}, id='e3584db7-bf91-4445-832f-500e675dea72')]
'milestones': cve_id_ok=True hard_service=False hard_version=False soft_services=False docker_runs=False code_hard_version=False services_ok=False docker_vulnerable=False exploitable=False
'debug': 
----------------------------------------


CVE description: CVE-2023-23752 is an improper access control flaw in Joomla! CMS 4.x (versions 4.0.0 through 4.2.7; fixed in 4.2.8 on 2023-02-16). Joomla 4 introduced a core REST API under /api/index.php. For certain routes, appending the query parameter public=true causes requests to be treated as if they were allowed for unauthenticated users due to missing/insufficient authorization checks in the API router handling of “public GETs.” This enables remote, unauthenticated access to endpoints that should require authentication. Notably, /api/index.php/v1/config/application?public=true can disclose application configuration including plaintext database credentials; other endpoints like /api/index.php/v1/users?public=true and various component routes are also exposed. The issue is documented by Joomla’s advisory and NVD, and appears in CISA’s KEV catalog, indicating exploitation in the wild. Reported by Zewei Zhang (NSFOCUS TIANJI Lab); Joomla released 4.2.8 on 2023-02-16. Frequently cited IOCs/URLs include /api/index.php/v1/config/application?public=true and /api/index.php/v1/users?public=true; Joomla’s webserver-level mitigations explicitly target api/index.php/v1/ with the public query string. Minimal reproduction requires only Joomla (Apache+PHP variant) and a relational database (e.g., MySQL). References: developer.joomla.org; nvd.nist.gov; docs.joomla.org; sysevil.github.io; wiz.io.
Attack Type: Authentication bypass resulting in information disclosure (network-accessible, low complexity, no privileges, no user interaction; confidentiality impact only)
Services (format: [SERVICE-DEPENDENCY-TYPE][SERVICE-NAME][SERVICE-VERSIONS] SERVICE-DESCRIPTION):
- [HARD][joomla][['4.0.0---4.2.7', 'patched: 4.2.8', 'example tag: 4.2.7-php8.1-apache']] The vulnerable Joomla 4 application exposing the affected web service endpoints (/api/index.php). Required to reproduce the improper access control and observe configuration/user data disclosure.
- [SOFT][mysql][['8.0']] Relational database required by Joomla at install time; holds site configuration that becomes retrievable via the exposed API. MySQL 8.0 is a common, compatible choice for Joomla 4.2.x.
Expected 'SOFT' role(s) not proposed!
