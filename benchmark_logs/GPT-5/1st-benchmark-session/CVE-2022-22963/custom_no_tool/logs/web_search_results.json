{
    "desc": "CVE-2022-22963 is a critical vulnerability in Spring Cloud Function\u2019s routing feature that allows expression injection through Spring Expression Language (SpEL) and leads to arbitrary command execution within the application process. The issue manifests when an application includes Spring Cloud Function, enables routing, and exposes an HTTP endpoint that honors the header named \"spring.cloud.function.routing-expression\" (commonly via the default function router endpoint, often /functionRouter). The framework evaluates the value of this header as a SpEL expression using a StandardEvaluationContext without sufficient restriction. An attacker who can reach the HTTP endpoint can therefore supply a crafted expression that the application evaluates server-side. Typical malicious payloads invoke methods like T(java.lang.Runtime).getRuntime().exec(...) or access arbitrary classes and beans, enabling execution of operating system commands, reading of local files, exfiltration of secrets (such as environment variables or cloud credentials), and lateral movement via outbound network calls. No authentication or user interaction is required; the only prerequisite is network reachability to an affected application that has routing enabled. The vulnerability affects Spring Cloud Function versions 3.1.6, 3.2.2, and older unsupported versions. It is distinct from the Spring Core vulnerabilities (e.g., the widely publicized Spring4Shell) because it resides in Spring Cloud Function\u2019s routing-expression evaluation path. Impact is severe: successful exploitation grants full control of the application process within the container or host context, allowing data theft, service manipulation, and potentially persistence. This also applies to serverless deployments that expose HTTP endpoints (for example, via API Gateway to AWS Lambda) using Spring Cloud Function, because the same routing-expression evaluation occurs in those environments. Recommended mitigation is to upgrade to Spring Cloud Function 3.1.7 or 3.2.3 (or later), which remove the unsafe evaluation path; no additional configuration changes are required once upgraded. As interim hardening (not a complete fix), operators can disable routing, avoid exposing the function router endpoint, or implement strict request filtering to block the routing-expression header; however, the authoritative fix is to upgrade. The vulnerability has been assigned high severity (for example, CVSS reported as 9.8 by multiple vendors) and has been reported as known exploited in the wild.",
    "attack_type": "unauthenticated remote code execution over the network",
    "services": [
        {
            "name": "spring-cloud-function",
            "version": [
                "0---3.1.5",
                "3.1.6",
                "0---3.2.1",
                "3.2.2"
            ],
            "dependency_type": "HARD",
            "description": "The vulnerable library that must be present in the application for the system to be exploitable. When routing is enabled and the HTTP endpoint honors the header spring.cloud.function.routing-expression, these versions evaluate user-supplied SpEL, enabling arbitrary command execution."
        },
        {
            "name": "eclipse-temurin",
            "version": [
                "11-jre"
            ],
            "dependency_type": "SOFT",
            "description": "Java Runtime Environment used to run the containerized Spring application that embeds the vulnerable Spring Cloud Function library. Any compatible JRE (for example, Java 8 or 11) suffices; Java 11 JRE is a stable choice for running typical Spring Boot applications."
        }
    ],
    "input_tokens": 5471,
    "output_tokens": 5565
}