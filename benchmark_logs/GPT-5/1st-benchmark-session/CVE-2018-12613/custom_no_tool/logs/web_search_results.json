{
    "desc": "CVE-2018-12613 is a vulnerability in phpMyAdmin 4.8.x before 4.8.2 that stems from an improper whitelist check in the page loading and redirection logic. In affected versions, index.php accepts a page name through a parameter and relies on a validation routine (Core::checkPageValidity) that decodes the input before validating it. Because of this decode-then-validate flaw, an attacker can use a double-encoding trick to bypass the whitelist and make phpMyAdmin include attacker-controlled paths. The end result is that arbitrary local files on the server can be included in the phpMyAdmin execution context. This enables local file inclusion, which can also be leveraged into remote code execution in typical deployments.\n\nIn the common case, exploitation requires a valid, authenticated phpMyAdmin session, because the vulnerable code path is normally reached after login. Two configuration choices can relax this requirement and make exploitation easier: enabling AllowArbitraryServer (which allows connecting phpMyAdmin to an attacker-controlled database host) and setting ServerDefault to 0 (which can bypass the login screen). The most common and realistic attack path in default-like environments is: the attacker authenticates to phpMyAdmin, causes phpMyAdmin to store attacker-controlled data in a file that the application can later include (for example, content written into the user\u2019s PHP session file by normal phpMyAdmin features such as query history), and then abuses the double-encoding validation bypass to include that local file. When the included file contains attacker-supplied PHP code, it is executed with the privileges of the web server user, yielding full remote code execution within the scope of the web application container. Even without code execution, the local file inclusion alone can expose sensitive files readable by the web server.\n\nImpact: confidentiality, integrity, and availability can all be compromised. An attacker can read local files and, in common configurations, execute arbitrary PHP code on the server via session poisoning or similar file-writing avenues. The vulnerable service is the phpMyAdmin web interface (HTTP). A typical affected stack is the standard Apache/PHP/phpMyAdmin front end connected to a MySQL-compatible database. The issue is fixed in phpMyAdmin 4.8.2 and later; upgrading to a non-vulnerable release is the recommended remediation. NIST and MITRE describe the scope as phpMyAdmin 4.8.x before 4.8.2 and note that authenticated access is typically required unless certain configurations are enabled.",
    "attack_type": "Local file inclusion that can lead to remote code execution",
    "services": [
        {
            "name": "phpmyadmin",
            "version": [
                "4.8.0---4.8.1"
            ],
            "dependency_type": "HARD",
            "description": "The vulnerable web application and HTTP interface where the flaw exists. This image includes the web server and PHP runtime needed to expose phpMyAdmin and handle PHP sessions, making the system susceptible to CVE-2018-12613 when running an affected version."
        },
        {
            "name": "mariadb",
            "version": [
                "10.3"
            ],
            "dependency_type": "SOFT-DB",
            "description": "Relational database server required by phpMyAdmin to authenticate and exercise normal features (such as executing SQL queries) that populate user session data. Any compatible MySQL-family server would work; MariaDB 10.3 is a stable, compatible choice."
        }
    ],
    "input_tokens": 6999,
    "output_tokens": 6811
}