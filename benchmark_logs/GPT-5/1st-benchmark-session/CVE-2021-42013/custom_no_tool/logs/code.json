{
    "file_name": [
        "compose.yaml",
        "httpd/Dockerfile",
        "httpd/httpd.conf",
        "httpd/entrypoint.sh",
        "httpd/www/index.html",
        "httpd/cgi-bin/test.sh",
        "httpd/assets/README.txt"
    ],
    "file_code": [
        "services:\n  httpd:\n    build:\n      context: ./httpd\n      dockerfile: Dockerfile\n    ports:\n      - \"8080:80\"\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-fsS\", \"http://localhost/\"]\n      interval: 10s\n      timeout: 3s\n      retries: 5\n      start_period: 5s\n    restart: unless-stopped\n",
        "FROM debian:bullseye-slim\n\nENV DEBIAN_FRONTEND=noninteractive \\\n    HTTPD_VERSION=2.4.50 \\\n    PREFIX=/usr/local/apache2\n\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    curl \\\n    ca-certificates \\\n    bzip2 \\\n    tar \\\n    libpcre3-dev \\\n    libexpat1-dev \\\n    libssl-dev \\\n    zlib1g-dev \\\n && rm -rf /var/lib/apt/lists/*\n\n# Fetch and build httpd 2.4.50 with APR and APR-Util bundled\nRUN curl -fsSL https://archive.apache.org/dist/httpd/httpd-${HTTPD_VERSION}.tar.bz2 -o /tmp/httpd.tar.bz2 \\\n && curl -fsSL https://archive.apache.org/dist/apr/apr-1.7.0.tar.bz2 -o /tmp/apr.tar.bz2 \\\n && curl -fsSL https://archive.apache.org/dist/apr/apr-util-1.6.1.tar.bz2 -o /tmp/apr-util.tar.bz2 \\\n && tar -xjf /tmp/httpd.tar.bz2 -C /tmp \\\n && tar -xjf /tmp/apr.tar.bz2 -C /tmp \\\n && tar -xjf /tmp/apr-util.tar.bz2 -C /tmp \\\n && mv /tmp/apr-1.7.0 /tmp/httpd-${HTTPD_VERSION}/srclib/apr \\\n && mv /tmp/apr-util-1.6.1 /tmp/httpd-${HTTPD_VERSION}/srclib/apr-util \\\n && cd /tmp/httpd-${HTTPD_VERSION} \\\n && ./configure \\\n      --prefix=${PREFIX} \\\n      --enable-so \\\n      --enable-mods-shared=reallyall \\\n      --enable-mpms-shared=all \\\n      --with-mpm=prefork \\\n      --enable-cgi \\\n && make -j\"$(nproc)\" \\\n && make install \\\n && rm -rf /tmp/*\n\n# Copy configuration and web content\nCOPY httpd.conf ${PREFIX}/conf/httpd.conf\nCOPY www/ ${PREFIX}/htdocs/\nCOPY cgi-bin/ ${PREFIX}/cgi-bin/\nCOPY assets/ /var/www/assets/\nCOPY entrypoint.sh /entrypoint.sh\n\nRUN chmod +x /entrypoint.sh \\\n && chmod +x ${PREFIX}/cgi-bin/test.sh\n\nEXPOSE 80\nCMD [\"/entrypoint.sh\"]\n",
        "ServerRoot \"/usr/local/apache2\"\nListen 80\nServerName localhost\n\n# Load MPM (built as a DSO) and essential modules\nLoadModule mpm_prefork_module modules/mod_mpm_prefork.so\nLoadModule authz_core_module modules/mod_authz_core.so\nLoadModule authz_host_module modules/mod_authz_host.so\nLoadModule log_config_module modules/mod_log_config.so\nLoadModule unixd_module modules/mod_unixd.so\nLoadModule dir_module modules/mod_dir.so\nLoadModule alias_module modules/mod_alias.so\nLoadModule mime_module modules/mod_mime.so\nLoadModule negotiation_module modules/mod_negotiation.so\nLoadModule headers_module modules/mod_headers.so\nLoadModule setenvif_module modules/mod_setenvif.so\nLoadModule cgi_module modules/mod_cgi.so\nLoadModule autoindex_module modules/mod_autoindex.so\nLoadModule env_module modules/mod_env.so\n# Required for AddOutputFilter and INCLUDES filter\nLoadModule filter_module modules/mod_filter.so\nLoadModule include_module modules/mod_include.so\n\nUser daemon\nGroup daemon\n\nDocumentRoot \"/usr/local/apache2/htdocs\"\n<Directory />\n    AllowOverride none\n    Require all denied\n</Directory>\n\n<Directory \"/usr/local/apache2/htdocs\">\n    Options Indexes FollowSymLinks\n    AllowOverride None\n    Require all granted\n</Directory>\n\nDirectoryIndex index.html\n\n# Alias-like path with relaxed access control (vulnerable surface)\nAlias /assets/ \"/var/www/assets/\"\n<Directory \"/var/www/assets\">\n    Options Indexes FollowSymLinks\n    AllowOverride None\n    Require all granted\n</Directory>\n\n# CGI enabled under aliased path scope (for code execution via traversal)\nScriptAlias /cgi-bin/ \"/usr/local/apache2/cgi-bin/\"\n<Directory \"/usr/local/apache2/cgi-bin\">\n    AllowOverride None\n    Options +ExecCGI\n    Require all granted\n</Directory>\n\n# Log to Docker-managed stdout/stderr so `docker logs` shows output\nErrorLog \"/proc/self/fd/2\"\nCustomLog \"/proc/self/fd/1\" combined\n\nTypesConfig conf/mime.types\nAddType text/html .shtml\nAddOutputFilter INCLUDES .shtml\n",
        "#!/bin/sh\nset -e\n# Run httpd in the foreground and direct error logging to stderr for visibility\nexec /usr/local/apache2/bin/httpd -DFOREGROUND -e debug -E /proc/self/fd/2\n",
        "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>CVE-2021-42013 Testbed</title>\n  </head>\n  <body>\n    <h1>Apache httpd 2.4.50 vulnerable environment</h1>\n    <p>DocumentRoot is served from /usr/local/apache2/htdocs.</p>\n    <ul>\n      <li>Alias path: <a href=\"/assets/\">/assets/</a></li>\n      <li>CGI path: <a href=\"/cgi-bin/test.sh\">/cgi-bin/test.sh</a></li>\n    </ul>\n  </body>\n</html>\n",
        "#!/bin/sh\n# Simple CGI script to verify CGI execution\n# Outputs a header, a blank line, then some system info\n\necho \"Content-Type: text/plain\"\necho\necho \"CGI test script running\"\nid\nuname -a\n",
        "This is an aliased directory exposed at /assets/ with relaxed access controls.\nIt exists to provide an Alias-like path that is susceptible to traversal on Apache httpd 2.4.50.\n"
    ],
    "directory_tree": "./../../dockers/CVE-2021-42013/custom_no_tool\n\u251c\u2500\u2500 compose.yaml\n\u2514\u2500\u2500 httpd\n    \u251c\u2500\u2500 Dockerfile\n    \u251c\u2500\u2500 entrypoint.sh\n    \u251c\u2500\u2500 httpd.conf\n    \u251c\u2500\u2500 assets\n    \u2502   \u2514\u2500\u2500 README.txt\n    \u251c\u2500\u2500 cgi-bin\n    \u2502   \u2514\u2500\u2500 test.sh\n    \u2514\u2500\u2500 www\n        \u2514\u2500\u2500 index.html\n"
}