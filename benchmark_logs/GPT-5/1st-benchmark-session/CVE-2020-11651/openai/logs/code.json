{
    "file_name": [
        "./../../dockers/CVE-2020-11651/openai/docker-compose.yml",
        "./../../dockers/CVE-2020-11651/openai/master/Dockerfile",
        "./../../dockers/CVE-2020-11651/openai/master/master",
        "./../../dockers/CVE-2020-11651/openai/master/entrypoint-master.sh",
        "./../../dockers/CVE-2020-11651/openai/minion/Dockerfile",
        "./../../dockers/CVE-2020-11651/openai/minion/minion",
        "./../../dockers/CVE-2020-11651/openai/minion/entrypoint-minion.sh"
    ],
    "file_code": [
        "services:\n  salt-master:\n    build:\n      context: ./master\n      dockerfile: Dockerfile\n    image: cve-2020-11651/salt-master:2019.2.3\n    container_name: cve-2020-11651-master\n    command: [\"-l\", \"info\", \"-c\", \"/etc/salt\"]\n    ports:\n      - \"4505:4505\"\n      - \"4506:4506\"\n    volumes:\n      - master-pki:/etc/salt/pki\n      - master-cache:/var/cache/salt\n    restart: unless-stopped\n\n  salt-minion:\n    build:\n      context: ./minion\n      dockerfile: Dockerfile\n    image: cve-2020-11651/salt-minion:2019.2.3\n    container_name: cve-2020-11651-minion\n    depends_on:\n      - salt-master\n    command: [\"-l\", \"info\", \"-c\", \"/etc/salt\"]\n    volumes:\n      - minion-pki:/etc/salt/pki\n      - minion-cache:/var/cache/salt\n    restart: unless-stopped\n\nvolumes:\n  master-pki:\n  master-cache:\n  minion-pki:\n  minion-cache:\n",
        "FROM saltstack/salt:2019.2.3\n\n# Copy the master configuration into the default path expected by Salt\nCOPY master /etc/salt/master\n\n# Use the base image's default ENTRYPOINT (salt-master) and pass flags via CMD\nCMD [\"-l\", \"info\", \"-c\", \"/etc/salt\"]\n",
        "# Salt master configuration for CVE-2020-11651 reproduction\n# This master runs a vulnerable Salt version (2019.2.3) via docker-compose.\n# It will auto-accept minion keys so the included minion can connect immediately.\n\nauto_accept: True\nlog_level: info\ninterface: 0.0.0.0\n# Defaults are sufficient, included here for clarity\npublisher_port: 4505\nret_port: 4506\n",
        "#!/bin/sh\nset -e\n# Resolve the real salt-master binary regardless of installation path\nif [ -x /usr/local/bin/salt-master ]; then\n  BIN=/usr/local/bin/salt-master\nelif [ -x /usr/bin/salt-master ]; then\n  BIN=/usr/bin/salt-master\nelif command -v salt-master >/dev/null 2>&1; then\n  BIN=\"$(command -v salt-master)\"\nelse\n  echo \"salt-master binary not found in /usr/local/bin, /usr/bin, or PATH\" >&2\n  exit 127\nfi\nexec \"$BIN\" \"$@\"\n",
        "FROM saltstack/salt:2019.2.3\n\n# Copy the minion configuration into the default path expected by Salt\nCOPY minion /etc/salt/minion\n\n# Use the base image's default ENTRYPOINT (salt-minion) and pass flags via CMD\nCMD [\"-l\", \"info\", \"-c\", \"/etc/salt\"]\n",
        "# Salt minion configuration connecting to the master service\nmaster: salt-master\nid: minion1\nlog_level: info\n# Default master_port is 4506; no change needed\n",
        "#!/bin/sh\nset -e\n# Resolve the real salt-minion binary regardless of installation path\nif [ -x /usr/local/bin/salt-minion ]; then\n  BIN=/usr/local/bin/salt-minion\nelif [ -x /usr/bin/salt-minion ]; then\n  BIN=/usr/bin/salt-minion\nelif command -v salt-minion >/dev/null 2>&1; then\n  BIN=\"$(command -v salt-minion)\"\nelse\n  echo \"salt-minion binary not found in /usr/local/bin, /usr/bin, or PATH\" >&2\n  exit 127\nfi\nexec \"$BIN\" \"$@\"\n"
    ],
    "directory_tree": "./../../dockers/CVE-2020-11651/openai\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 master\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u251c\u2500\u2500 entrypoint-master.sh\n\u2502   \u2514\u2500\u2500 master\n\u2514\u2500\u2500 minion\n    \u251c\u2500\u2500 Dockerfile\n    \u251c\u2500\u2500 entrypoint-minion.sh\n    \u2514\u2500\u2500 minion\n"
}