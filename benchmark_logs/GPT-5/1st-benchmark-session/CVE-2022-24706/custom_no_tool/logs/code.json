{
    "file_name": [
        "./../../dockers/CVE-2022-24706/custom_no_tool/compose.yaml",
        "./../../dockers/CVE-2022-24706/custom_no_tool/couchdb/Dockerfile",
        "./../../dockers/CVE-2022-24706/custom_no_tool/couchdb/local.ini",
        "./../../dockers/CVE-2022-24706/custom_no_tool/couchdb/start-couchdb.sh"
    ],
    "file_code": [
        "---------- ./../../dockers/CVE-2022-24706/custom_no_tool/compose.yaml ----------\nversion: \"3.8\"\nservices:\n  couchdb:\n    build:\n      context: ./couchdb\n    image: cve-2022-24706-couchdb:3.2.1\n    container_name: cve-2022-24706-couchdb\n    hostname: couchdb\n    environment:\n      COUCHDB_USER: admin\n      COUCHDB_PASSWORD: admin\n      NODENAME: couchdb\n    ports:\n      - \"5984:5984\"   # CouchDB HTTP API\n      - \"4369:4369\"   # epmd\n      - \"9100:9100\"   # Erlang distribution fixed port (via vm.args)\n    restart: unless-stopped\n\n",
        "---------- ./../../dockers/CVE-2022-24706/custom_no_tool/couchdb/Dockerfile ----------\nFROM couchdb:3.2.1\n\n# Ensure we can modify config files\nUSER root\n\n# Expose HTTP externally and keep defaults minimal\nCOPY local.ini /opt/couchdb/etc/local.d/local.ini\n\n# Make Erlang distribution externally reachable and set a known cookie\n# - Fix distribution port to 9100 and bind to all interfaces\n# - Force the Erlang cookie to a known value used historically by packages\nRUN set -eux; \\\n    vm=\"/opt/couchdb/etc/vm.args\"; \\\n    if grep -q \"^-setcookie\" \"$vm\"; then \\\n      sed -ri 's|^-setcookie .*|-setcookie monster|' \"$vm\"; \\\n    else \\\n      echo \"-setcookie monster\" >> \"$vm\"; \\\n    fi; \\\n    grep -q \"inet_dist_listen_min\" \"$vm\" || echo \"-kernel inet_dist_listen_min 9100\" >> \"$vm\"; \\\n    grep -q \"inet_dist_listen_max\" \"$vm\" || echo \"-kernel inet_dist_listen_max 9100\" >> \"$vm\"; \\\n    grep -q \"inet_dist_use_interface\" \"$vm\" || echo \"-kernel inet_dist_use_interface {0,0,0,0}\" >> \"$vm\"; \\\n    chown -R couchdb:couchdb /opt/couchdb/etc\n\n# Startup wrapper to auto-initialize single-node CouchDB\nCOPY start-couchdb.sh /usr/local/bin/start-couchdb.sh\nRUN chmod +x /usr/local/bin/start-couchdb.sh\n\nUSER couchdb\n\nEXPOSE 5984 4369 9100\n\nENTRYPOINT [\"/usr/local/bin/start-couchdb.sh\"]\n",
        "---------- ./../../dockers/CVE-2022-24706/custom_no_tool/couchdb/local.ini ----------\n; Minimal CouchDB config for external HTTP/epmd exposure\n[chttpd]\nbind_address = 0.0.0.0\nport = 5984\n\n[httpd]\nbind_address = 0.0.0.0\n\n",
        "---------- ./../../dockers/CVE-2022-24706/custom_no_tool/couchdb/start-couchdb.sh ----------\n#!/usr/bin/env bash\nset -euo pipefail\n\nVM_ARGS=\"/opt/couchdb/etc/vm.args\"\nLOCAL_INI=\"/opt/couchdb/etc/local.d/local.ini\"\nHOST=\"$(hostname)\"\nUSER_NAME=\"${COUCHDB_USER:-admin}\"\nUSER_PASS=\"${COUCHDB_PASSWORD:-admin}\"\nNODE=\"${NODENAME:-couchdb}\"\n\n# Ensure nodename is set consistently in vm.args (replicates official entrypoint behavior)\nif grep -qE \"^-name \" \"$VM_ARGS\"; then\n  sed -ri \"s|^-name .*|-name ${NODE}@${HOST}|\" \"$VM_ARGS\"\nelse\n  echo \"-name ${NODE}@${HOST}\" >> \"$VM_ARGS\"\nfi\n\n# Ensure an admin account exists in local.ini\nif ! grep -q \"^\\[admins\\]\" \"$LOCAL_INI\"; then\n  printf \"\\n[admins]\\n%s = %s\\n\" \"$USER_NAME\" \"$USER_PASS\" >> \"$LOCAL_INI\"\nelse\n  if ! grep -q \"^${USER_NAME} *= \" \"$LOCAL_INI\"; then\n    printf \"%s = %s\\n\" \"$USER_NAME\" \"$USER_PASS\" >> \"$LOCAL_INI\"\n  fi\nfi\n\n# Start CouchDB in background\n/opt/couchdb/bin/couchdb -o /proc/self/fd/1 -e /proc/self/fd/2 &\n\n# Wait for HTTP API to be ready\nfor i in $(seq 1 60); do\n  if curl -fsS http://127.0.0.1:5984/ >/dev/null; then\n    break\n  fi\n  sleep 1\ndone\n\nAUTH=\"${USER_NAME}:${USER_PASS}\"\n\n# Initialize single-node setup if system DBs are missing\nif ! curl -fsS -u \"$AUTH\" http://127.0.0.1:5984/_users >/dev/null; then\n  curl -fsS -u \"$AUTH\" -H 'Content-Type: application/json' \\\n    -X POST http://127.0.0.1:5984/_cluster_setup \\\n    -d \"{\\\"action\\\":\\\"enable_single_node\\\",\\\"username\\\":\\\"${USER_NAME}\\\",\\\"password\\\":\\\"${USER_PASS}\\\",\\\"bind_address\\\":\\\"0.0.0.0\\\",\\\"port\\\":5984,\\\"node_count\\\":\\\"1\\\"}\" || true\nfi\n\n# Ensure system DBs exist (_users, _replicator, _global_changes)\nfor db in _users _replicator _global_changes; do\n  if ! curl -fsS -u \"$AUTH\" \"http://127.0.0.1:5984/${db}\" >/dev/null; then\n    curl -fsS -u \"$AUTH\" -X PUT \"http://127.0.0.1:5984/${db}\" || true\n  fi\ndone\n\n# Keep foreground attached to CouchDB\nwait\n"
    ],
    "directory_tree": "./../../dockers/CVE-2022-24706/custom_no_tool\n\u251c\u2500\u2500 compose.yaml\n\u2514\u2500\u2500 couchdb\n    \u251c\u2500\u2500 Dockerfile\n    \u251c\u2500\u2500 local.ini\n    \u2514\u2500\u2500 start-couchdb.sh\n"
}