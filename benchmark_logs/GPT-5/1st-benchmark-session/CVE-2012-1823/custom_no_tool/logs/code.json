{
    "file_name": [
        "compose.yaml",
        "Dockerfile",
        "conf/php-cgi.conf",
        "cgi-bin/php-cgi",
        "src/index.php",
        "src/secret.php"
    ],
    "file_code": [
        "services:\n  web:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    image: cve-2012-1823:httpd-2.4.58-php-5.4.1-cgi\n    ports:\n      - \"8080:80\"\n",
        "FROM httpd:2.4.58\n\n# Build and install vulnerable PHP CGI (5.4.1)\nRUN set -eux; \\\n    apt-get update; \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates curl build-essential autoconf pkg-config \\\n        libxml2-dev zlib1g-dev; \\\n    rm -rf /var/lib/apt/lists/*\n\n# Fetch, compile, and install php-cgi 5.4.1 (affected by CVE-2012-1823)\nRUN set -eux; \\\n    curl -fsSL https://museum.php.net/php5/php-5.4.1.tar.gz -o /tmp/php-5.4.1.tar.gz; \\\n    cd /tmp; \\\n    tar -xzf php-5.4.1.tar.gz; \\\n    cd php-5.4.1; \\\n    ./buildconf --force || true; \\\n    ./configure --enable-cgi --disable-all; \\\n    make -j\"$(nproc)\"; \\\n    make install; \\\n    cd /; \\\n    rm -rf /tmp/php-5.4.1 /tmp/php-5.4.1.tar.gz; \\\n    php-cgi -v\n\n# Apache configuration to wire PHP via CGI SAPI\nCOPY conf/php-cgi.conf /usr/local/apache2/conf/extra/php-cgi.conf\nRUN set -eux; \\\n    printf \"\\n# Include PHP CGI wiring for CVE-2012-1823 reproduction\\nInclude conf/extra/php-cgi.conf\\n\" >> /usr/local/apache2/conf/httpd.conf\n\n# CGI wrapper and sample vulnerable PHP app\nCOPY cgi-bin/php-cgi /usr/local/apache2/cgi-bin/php-cgi\nRUN chmod +x /usr/local/apache2/cgi-bin/php-cgi\n\nCOPY src/ /usr/local/apache2/htdocs/\n",
        "# Enable CGI on Apache 2.4.58 and route .php to php-cgi (PHP 5.4.1)\nLoadModule cgid_module modules/mod_cgid.so\nLoadModule actions_module modules/mod_actions.so\n\nScriptAlias /cgi-bin/ \"/usr/local/apache2/cgi-bin/\"\n<Directory \"/usr/local/apache2/cgi-bin\">\n    AllowOverride None\n    Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch\n    Require all granted\n</Directory>\n\n# Ensure .php files are handled by php-cgi\nAddHandler application/x-httpd-php .php\nAction application/x-httpd-php /cgi-bin/php-cgi\n\nDirectoryIndex index.php index.html\n",
        "#!/bin/sh\n# Simple wrapper to execute the vulnerable php-cgi binary\nexec /usr/local/bin/php-cgi\n",
        "<?php\nheader('Content-Type: text/plain');\necho \"Vulnerable PHP CGI SAPI version: \" . phpversion() . \"\\n\";\necho \"Request URI: \" . $_SERVER['REQUEST_URI'] . \"\\n\";\n\n// Include a file so its source can be disclosed via the CGI option injection (-s)\ninclude 'secret.php';\n\necho \"\\nTry accessing: /secret.php?-s to view highlighted source via CGI option injection.\\n\";\n",
        "<?php\n// Example sensitive content that can be exposed via source disclosure\n$secret = \"SENSITIVE: database_password = 'p@ssw0rd!'\";\n\nif (isset($_GET['show'])) {\n    echo $secret . \"\\n\";\n}\n"
    ],
    "directory_tree": "./../../dockers/CVE-2012-1823/custom_no_tool\n\u251c\u2500\u2500 compose.yaml\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 cgi-bin\n\u2502   \u2514\u2500\u2500 php-cgi\n\u251c\u2500\u2500 conf\n\u2502   \u2514\u2500\u2500 php-cgi.conf\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 index.php\n    \u2514\u2500\u2500 secret.php\n"
}