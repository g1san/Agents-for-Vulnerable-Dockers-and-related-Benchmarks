{
    "files": [
        {
            "location": "./../../dockers/CVE-2022-24706/openai/docker-compose.yml",
            "content": "version: \"3.8\"\n\nservices:\n  couchdb:\n    build:\n      context: ./couchdb\n    container_name: cve-2022-24706-couchdb\n    environment:\n      - COUCHDB_USER=admin\n      - COUCHDB_PASSWORD=adminpass\n    network_mode: host\n    restart: unless-stopped\n"
        },
        {
            "location": "./../../dockers/CVE-2022-24706/openai/couchdb/Dockerfile",
            "content": "FROM couchdb:3.2.1\n\nUSER root\n\n# Utilities for health checks and initialization\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n       curl netcat-openbsd ca-certificates \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Insecure, predictable Erlang cookie for reproducibility of CVE-2022-24706\nCOPY erlang.cookie /opt/couchdb/.erlang.cookie\n\n# Expose HTTP on all interfaces and keep defaults otherwise\nCOPY local.ini /opt/couchdb/etc/local.d/local.ini\n\n# Initialization scripts\nCOPY init-db.sh /init-db.sh\nCOPY custom-entrypoint.sh /custom-entrypoint.sh\n\nRUN chown -R couchdb:couchdb /opt/couchdb \\\n    && chmod 400 /opt/couchdb/.erlang.cookie \\\n    && chmod +x /custom-entrypoint.sh /init-db.sh\n\nUSER couchdb\n\n# Default ports (Erlang distribution chooses a dynamic high port by default)\nEXPOSE 5984 4369\n\nENTRYPOINT [\"/custom-entrypoint.sh\"]\n"
        },
        {
            "location": "./../../dockers/CVE-2022-24706/openai/couchdb/local.ini",
            "content": "[chttpd]\nbind_address = 0.0.0.0\n\n[httpd]\nbind_address = 0.0.0.0\n"
        },
        {
            "location": "./../../dockers/CVE-2022-24706/openai/couchdb/erlang.cookie",
            "content": "cve24706cookie\n"
        },
        {
            "location": "./../../dockers/CVE-2022-24706/openai/couchdb/init-db.sh",
            "content": "#!/bin/sh\nset -e\n\nHOST=127.0.0.1\nUSER=${COUCHDB_USER:-admin}\nPASS=${COUCHDB_PASSWORD:-adminpass}\n\n# Wait for CouchDB to be reachable\nfor i in $(seq 1 60); do\n  if curl -fsS http://$HOST:5984/ >/dev/null 2>&1; then\n    break\n  fi\n  sleep 1\ndone\n\n# If admin party is enabled, use no auth; otherwise use provided creds\nAUTH=\"\"\nif curl -fsS http://$HOST:5984/_session >/dev/null 2>&1; then\n  AUTH=\"-u ${USER}:${PASS}\"\nfi\n\n# Create a test database and populate with a sample document\ncurl -fsS $AUTH -X PUT http://$HOST:5984/testdb || true\ncurl -fsS $AUTH -H 'Content-Type: application/json' -d '{\"_id\":\"doc1\",\"type\":\"test\",\"message\":\"Hello from CVE-2022-24706 PoC\"}' \\\n  -X POST http://$HOST:5984/testdb || true\n"
        },
        {
            "location": "./../../dockers/CVE-2022-24706/openai/couchdb/custom-entrypoint.sh",
            "content": "#!/bin/sh\nset -e\n\n# Ensure cookie permissions are correct for Erlang\nchown couchdb:couchdb /opt/couchdb/.erlang.cookie\nchmod 400 /opt/couchdb/.erlang.cookie\n\n# Start CouchDB in background\n/docker-entrypoint.sh couchdb &\nPID=$!\n\n# Wait for HTTP API to become available, then initialize data\nfor i in $(seq 1 60); do\n  if curl -fsS http://127.0.0.1:5984/ >/dev/null 2>&1; then\n    break\n  fi\n  sleep 1\ndone\n\n/sh /init-db.sh || true\n\n# Wait on CouchDB process\nwait $PID\n"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2022-24706/openai\n\u2514\u2500\u2500 docker-compose.yml\n\u2514\u2500\u2500 couchdb\n    \u251c\u2500\u2500 Dockerfile\n    \u251c\u2500\u2500 local.ini\n    \u251c\u2500\u2500 erlang.cookie\n    \u251c\u2500\u2500 init-db.sh\n    \u2514\u2500\u2500 custom-entrypoint.sh"
}