{
    "files": [
        {
            "location": "./../../dockers/CVE-2022-24706/custom/README.txt",
            "content": "This setup runs Apache CouchDB 3.2.1 and automatically seeds a test database.\n\nHow to run:\n- docker compose up -d\n- Service: http://127.0.0.1:5984 (admin/admin)\n\nNotes:\n- Healthcheck probes /_up until CouchDB is ready.\n- Seeding is performed by an os_daemon process that creates a database named \"testdb\" and a sample document.\n- A custom image is built on top of couchdb:3.2.1 to include curl (required by healthcheck and seeding).\n"
        },
        {
            "location": "./../../dockers/CVE-2022-24706/custom/docker-compose.yml",
            "content": "version: \"3.8\"\nservices:\n  couchdb:\n    image: custom-couchdb:3.2.1\n    build:\n      context: .\n      dockerfile: Dockerfile\n    container_name: couchdb_secure\n    environment:\n      - COUCHDB_USER=admin\n      - COUCHDB_PASSWORD=admin\n      - ERL_FLAGS=-kernel inet_dist_listen_min 9100 inet_dist_listen_max 9100 -proto_dist inet_tcp -kernel inet_dist_use_interface {127,0,0,1}\n    ports:\n      - \"5984:5984\"\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-sf\", \"http://127.0.0.1:5984/_up\"]\n      interval: 5s\n      timeout: 3s\n      retries: 20\n    restart: unless-stopped\n"
        },
        {
            "location": "./../../dockers/CVE-2022-24706/custom/Dockerfile",
            "content": "FROM couchdb:3.2.1\n\n# Install curl for healthcheck and seeding\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends curl ca-certificates \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Add CouchDB local config and seeding script\nCOPY config/local.ini /opt/couchdb/etc/local.d/local.ini\nCOPY scripts/seed.sh /usr/local/bin/seed.sh\nRUN chmod +x /usr/local/bin/seed.sh\n\n# The official entrypoint will read env vars and start CouchDB in foreground.\n# No CMD/ENTRYPOINT override required.\n"
        },
        {
            "location": "./../../dockers/CVE-2022-24706/custom/config/local.ini",
            "content": "[chttpd]\nbind_address = 0.0.0.0\n\n[couchdb]\nmax_document_size = 5000000\n\n[log]\nlevel = info\n\n[os_daemons]\nseeder = /bin/sh /usr/local/bin/seed.sh\n"
        },
        {
            "location": "./../../dockers/CVE-2022-24706/custom/scripts/start.sh",
            "content": "#!/usr/bin/env sh\n# Deprecated: no longer used. Startup is handled by the image entrypoint.\n# Seeding is managed by os_daemons via scripts/seed.sh.\nexit 0\n"
        },
        {
            "location": "./../../dockers/CVE-2022-24706/custom/scripts/seed.sh",
            "content": "#!/usr/bin/env sh\nset -eu\n\nCOUCH_USER=\"${COUCHDB_USER:-admin}\"\nCOUCH_PASS=\"${COUCHDB_PASSWORD:-admin}\"\nCOUCH_URL=\"http://127.0.0.1:5984\"\nAUTH_URL=\"http://${COUCH_USER}:${COUCH_PASS}@127.0.0.1:5984\"\n\n# wait for /_up\nfor i in $(seq 1 60); do\n  if curl -sf \"${COUCH_URL}/_up\" >/dev/null 2>&1; then\n    break\n  fi\n  sleep 2\ndone\n\n# create test database (idempotent)\ncurl -sf -X PUT \"${AUTH_URL}/testdb\" || true\n\n# insert a sample document (idempotent-like; ignore conflicts)\nTS=$(date -u +%FT%TZ || true)\nDOC='{\"type\":\"sample\",\"msg\":\"hello\",\"ts\":\"'\"${TS}\"'\"}'\n\ncurl -sf -H 'Content-Type: application/json' -X POST \\\n  \"${AUTH_URL}/testdb\" -d \"${DOC}\" || true\n\nexit 0\n"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2022-24706/custom\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 README.txt\n\u251c\u2500\u2500 config\n\u2502   \u2514\u2500\u2500 local.ini\n\u251c\u2500\u2500 docker-compose.yml\n\u2514\u2500\u2500 scripts\n    \u251c\u2500\u2500 seed.sh\n    \u2514\u2500\u2500 start.sh"
}