{
    "files": [
        {
            "location": "./../../dockers/CVE-2022-22947/custom_no_tool/docker-compose.yml",
            "content": "services:\n  gateway:\n    image: bitnami/spring-cloud-gateway:3.1.0\n    build:\n      context: .\n      dockerfile: Dockerfile\n    container_name: scg-vuln-22947\n    ports:\n      - \"8080:8080\"\n    environment:\n      - SPRING_CONFIG_ADDITIONAL_LOCATION=file:/config/\n    volumes:\n      - ./config:/config:ro\n    restart: unless-stopped\n"
        },
        {
            "location": "./../../dockers/CVE-2022-22947/custom_no_tool/Dockerfile",
            "content": "# === Build stage ===\nFROM maven:3.9.9-eclipse-temurin-17 AS build\nWORKDIR /src\nCOPY pom.xml .\nRUN --mount=type=cache,target=/root/.m2 mvn -q -e -B -DskipTests dependency:go-offline\nCOPY src ./src\nRUN --mount=type=cache,target=/root/.m2 mvn -q -e -B -DskipTests package\n\n# === Runtime stage ===\nFROM eclipse-temurin:17-jre-jammy\nENV JAVA_OPTS=\"\"\nWORKDIR /app\nCOPY --from=build /src/target/app.jar /app/app.jar\n# Default Spring Boot port\nEXPOSE 8080\nHEALTHCHECK --interval=10s --timeout=3s --retries=30 CMD wget -qO- http://127.0.0.1:8080/actuator/health || exit 1\nENTRYPOINT [\"sh\",\"-c\",\"exec java $JAVA_OPTS -jar /app/app.jar\"]\n"
        },
        {
            "location": "./../../dockers/CVE-2022-22947/custom_no_tool/pom.xml",
            "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.example</groupId>\n  <artifactId>scg-vuln-22947</artifactId>\n  <version>1.0.0</version>\n  <name>scg-vuln-22947</name>\n  <description>Spring Cloud Gateway 3.1.0 with Actuator</description>\n\n  <parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>2.6.4</version>\n    <relativePath/>\n  </parent>\n\n  <properties>\n    <java.version>17</java.version>\n    <spring-cloud.version>2021.0.0</spring-cloud.version>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-dependencies</artifactId>\n        <version>${spring-cloud.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <dependencies>\n    <!-- Explicitly use Spring Cloud Gateway 3.1.0 (affected version) -->\n    <dependency>\n      <groupId>org.springframework.cloud</groupId>\n      <artifactId>spring-cloud-starter-gateway</artifactId>\n      <version>3.1.0</version>\n    </dependency>\n\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-actuator</artifactId>\n    </dependency>\n\n    <!-- Optional: for graceful startup logging, micrometer core is pulled by actuator -->\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter</artifactId>\n    </dependency>\n\n    <!-- Testing (not executed in container build) -->\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-test</artifactId>\n      <scope>test</scope>\n      <exclusions>\n        <exclusion>\n          <groupId>org.junit.vintage</groupId>\n          <artifactId>junit-vintage-engine</artifactId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n  </dependencies>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-maven-plugin</artifactId>\n        <configuration>\n          <mainClass>com.example.gateway.Application</mainClass>\n          <layers>\n            <enabled>true</enabled>\n          </layers>\n        </configuration>\n      </plugin>\n    </plugins>\n    <finalName>app</finalName>\n  </build>\n</project>\n"
        },
        {
            "location": "./../../dockers/CVE-2022-22947/custom_no_tool/src/main/java/com/example/gateway/Application.java",
            "content": "package com.example.gateway;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class Application {\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n}\n"
        },
        {
            "location": "./../../dockers/CVE-2022-22947/custom_no_tool/config/application.yml",
            "content": "server:\n  port: 8080\n\n# Expose and enable actuator endpoints (including the vulnerable Gateway actuator endpoints)\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    gateway:\n      enabled: true\n    health:\n      show-details: always\n\nspring:\n  application:\n    name: scg-vuln-22947\n  cloud:\n    gateway:\n      # A minimal example route to ensure the gateway is operational out-of-the-box\n      routes:\n        - id: example-route\n          uri: http://example.org\n          predicates:\n            - Path=/test/**\n      # Keep filters list open; vulnerable actuator will accept route updates\n      default-filters: []\n"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2022-22947/custom_no_tool\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 config\n\u2502   \u2514\u2500\u2500 application.yml\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 pom.xml\n\u2514\u2500\u2500 src\n    \u2514\u2500\u2500 main\n        \u2514\u2500\u2500 java\n            \u2514\u2500\u2500 com\n                \u2514\u2500\u2500 example\n                    \u2514\u2500\u2500 gateway\n                        \u2514\u2500\u2500 Application.java\n"
}