{
    "desc": "CVE-2024-23897 is an arbitrary file read vulnerability in the Jenkins core command line interface (CLI) argument parser on the controller. Jenkins uses the args4j library, whose expand-at-files feature interprets an @ followed by a file path (e.g., @/etc/passwd) as \u201cread this file and substitute its contents into the CLI argument list.\u201d Up to Jenkins weekly 2.441 and LTS 2.426.2, this feature was not disabled for CLI processing, allowing remote users to craft CLI inputs that cause Jenkins to read files from the controller filesystem. An attacker who knows a file path can read it using the controller\u2019s default character encoding. With Overall/Read permission, full file contents can be retrieved; without it, the interface still leaks the first few lines (confirmed techniques allow reading at least the first three lines on a default, plugin-free controller). While reads occur as text, binary files (e.g., cryptographic keys) may be partially recoverable depending on the platform\u2019s default charset (e.g., UTF-8 vs. Windows-1252), affecting reconstruction feasibility. Jenkins\u2019 security team outlined realistic follow-on attack chains once secrets are obtained, including RCE via Resource Root URLs, admin login by forging \u201cRemember me\u201d cookies, RCE via stored XSS in build logs, CSRF bypass via forged crumbs, decryption of Jenkins-stored secrets, deletion of items, and downloading JVM heap dumps. NIST/NVD classifies the issue under improper limitation of a pathname to a restricted directory (path traversal) and lists it in CISA KEV; severity is assessed as critical due to practical escalation paths. Affected versions: Jenkins weekly up to and including 2.441 and LTS up to and including 2.426.2; fixed in weekly 2.442 and LTS 2.426.3 (and LTS 2.440.1 includes related CLI WebSocket hardening). Internet scans reported many exposed vulnerable Jenkins instances soon after disclosure, with public PoCs and incident reports increasing operational risk.",
    "attack_type": "Arbitrary file read via the Jenkins CLI, typically enabling privilege escalation and potential remote code execution by harvesting secrets and abusing authenticated/admin capabilities.",
    "services": [
        {
            "name": "jenkins/jenkins",
            "version": [
                "jenkins/jenkins:2.441-slim",
                "jenkins/jenkins:2.441-alpine-jdk11",
                "jenkins/jenkins:2.441",
                "jenkins/jenkins:2.426.2-jdk17"
            ],
            "dependency_type": "HARD",
            "description": "Jenkins controller (the only required component) running the vulnerable CLI on its embedded Winstone/Jetty servlet container. No external DB, reverse proxy, message queue, or cache is needed for a functional, vulnerable setup. Typical exposed ports by the image are 8080/tcp (web UI and CLI endpoints) and 50000/tcp (inbound agents), though only 8080 is relevant to exercising this CVE."
        }
    ],
    "input_tokens": 46086,
    "output_tokens": 3709
}