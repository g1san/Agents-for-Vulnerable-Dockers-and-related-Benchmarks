{
    "files": [
        {
            "location": "./../../dockers/CVE-2024-23897/custom_no_tool/docker-compose.yml",
            "content": "version: \"3.8\"\n\nservices:\n  jenkins:\n    build: ./jenkins\n    image: local/jenkins-cve-2024-23897:2.441\n    ports:\n      - \"8080:8080\"\n      - \"50000:50000\"\n    environment:\n      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false -Djenkins.CLI.disabled=false\n      - JENKINS_SLAVE_AGENT_PORT=50000\n    restart: unless-stopped\n    volumes:\n      - jenkins_home:/var/jenkins_home\n\nvolumes:\n  jenkins_home:\n"
        },
        {
            "location": "./../../dockers/CVE-2024-23897/custom_no_tool/jenkins/Dockerfile",
            "content": "FROM jenkins/jenkins:2.441\n\nUSER root\n# Seed JENKINS_HOME with initialization scripts and a demo secret file\nCOPY init.groovy.d /usr/share/jenkins/ref/init.groovy.d\nCOPY secret-demo /usr/share/jenkins/ref/secret-demo\nRUN chown -R jenkins:jenkins /usr/share/jenkins/ref\n\nUSER jenkins\n"
        },
        {
            "location": "./../../dockers/CVE-2024-23897/custom_no_tool/jenkins/init.groovy.d/01-security.groovy",
            "content": "import jenkins.model.*\nimport hudson.security.*\n\n// Disable setup wizard explicitly\nSystem.setProperty('jenkins.install.runSetupWizard', 'false')\n\ndef instance = Jenkins.getInstance()\n\n// Security realm: internal database\nif (!(instance.getSecurityRealm() instanceof HudsonPrivateSecurityRealm)) {\n  def hudsonRealm = new HudsonPrivateSecurityRealm(false)\n  instance.setSecurityRealm(hudsonRealm)\n}\n\ndef hudsonRealm = instance.getSecurityRealm()\n\n// Create admin user if absent\nString adminUser = 'admin'\nString adminPass = 'admin'\nif (hudsonRealm.getAllUsers().find { it.id == adminUser } == null) {\n  def u = hudsonRealm.createAccount(adminUser, adminPass)\n  u.save()\n}\n\n// Authorization: Grant Anonymous Overall/Read to make testing straightforward\n// and grant full admin to the admin user\ndef strategy = new GlobalMatrixAuthorizationStrategy()\nstrategy.add(Jenkins.READ, 'anonymous')\nstrategy.add(Jenkins.ADMINISTER, adminUser)\ninstance.setAuthorizationStrategy(strategy)\n\n// Basic instance tweaks\ninstance.setNumExecutors(2)\ninstance.save()\n\nprintln '\\n[Jenkins Init] Security configured. Admin credentials: admin / admin'\nprintln '[Jenkins Init] Anonymous has Overall/Read.'\nprintln '[Jenkins Init] Demo secret at /var/jenkins_home/secret-demo/flag.txt'\\\n"
        },
        {
            "location": "./../../dockers/CVE-2024-23897/custom_no_tool/jenkins/init.groovy.d/02-agent-port.groovy",
            "content": "import jenkins.model.Jenkins\n\ndef instance = Jenkins.get()\nif (instance.getSlaveAgentPort() != 50000) {\n  instance.setSlaveAgentPort(50000)\n  instance.save()\n}\nprintln '[Jenkins Init] Inbound agent TCP port set to 50000'\n"
        },
        {
            "location": "./../../dockers/CVE-2024-23897/custom_no_tool/jenkins/secret-demo/flag.txt",
            "content": "CVE-2024-23897 demo secret\\nThis file lives at /var/jenkins_home/secret-demo/flag.txt and is intended for file-read testing via Jenkins CLI argument expansion.\\nRandomToken: 4a2f1c3e-9b67-4e4b-930f-3c1be61f7e2a\\n"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2024-23897/custom_no_tool\n\u251c\u2500\u2500 docker-compose.yml\n\u2514\u2500\u2500 jenkins\n    \u251c\u2500\u2500 Dockerfile\n    \u251c\u2500\u2500 init.groovy.d\n    \u2502   \u251c\u2500\u2500 01-security.groovy\n    \u2502   \u2514\u2500\u2500 02-agent-port.groovy\n    \u2514\u2500\u2500 secret-demo\n        \u2514\u2500\u2500 flag.txt"
}