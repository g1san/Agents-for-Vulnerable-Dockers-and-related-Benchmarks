{
    "desc": "CVE-2024-23897 is an arbitrary file read vulnerability in the Jenkins core command-line interface. Jenkins\u2019 built-in CLI (exposed via the controller, typically at /cli and commonly used through the jenkins-cli.jar) relies on the args4j argument parser. In affected releases, the parser\u2019s expandAtFiles feature was not disabled, so any CLI argument beginning with the at sign followed by a file path (for example, @/etc/passwd) is interpreted as \u201creplace this argument with the contents of the referenced file.\u201d Because this evaluation occurs during argument parsing, it precedes or circumvents normal command-specific permission checks in certain code paths. As a result, a remote attacker with network access to the Jenkins controller can cause the controller process to read and echo back contents of files on the controller\u2019s filesystem using the controller\u2019s default character encoding.\n\nImpact and access requirements are nuanced:\n- With Overall/Read permission, an attacker can typically obtain the full contents of arbitrary text files on the controller host.\n- Without Overall/Read permission, many affected releases still return the initial portion of the file; recent Jenkins versions without any plugins have been confirmed to leak up to the first three lines. Some commands may trigger exceptions early, causing partial disclosure even before comprehensive permission checks run.\n- The leakage is influenced by the Java process\u2019s default charset. Text encodings such as UTF-8 may limit reliable extraction of binary secrets, whereas single-byte encodings (for example, Windows-1252) can make exfiltration of non-text secrets more feasible.\n\nSecurity consequences include a serious breach of confidentiality. Reading sensitive files such as Jenkins credentials files, master.key, secrets.key, user configuration XML files, /proc/self/environ, or other configuration and secret material can enable follow-on attacks, including session hijacking, cross-site scripting via crafted logs, and in some deployments remote code execution when combined with other core features or conditions (for example, when the Resource Root URL is enabled and the CLI WebSocket endpoint is reachable). No plugins are required to be present to exploit the core issue; the vulnerable surface is the Jenkins core CLI itself. The issue is fixed by disabling @-file expansion in Jenkins 2.442 and LTS lines 2.426.3 and 2.440.1 and later. As an immediate mitigation, administrators can disable CLI access on the controller to remove the attack surface.\n\nIn short, the vulnerability stems from unsafe argument expansion in the Jenkins core CLI that allows remote attackers to cause the controller to read and return file contents, resulting in arbitrary file read and significant information disclosure, with potential escalation to further impacts if the disclosed information includes sensitive secrets.",
    "attack_type": "Arbitrary file read and information disclosure via unsafe command-line interface argument expansion; can enable remote code execution when combined with disclosed secrets and additional Jenkins features",
    "services": [
        {
            "name": "jenkins/jenkins",
            "version": [
                "2.441",
                "2.441-jdk17",
                "2.426.2-lts",
                "2.426.2-lts-jdk17"
            ],
            "dependency_type": "HARD",
            "description": "Jenkins controller providing the vulnerable core CLI (args4j @-file expansion). These specific image tags correspond to versions cited as affected by authoritative sources and are sufficient to run a standalone, network-accessible Jenkins instance exposing the vulnerable CLI."
        }
    ],
    "input_tokens": 10966,
    "output_tokens": 2542
}