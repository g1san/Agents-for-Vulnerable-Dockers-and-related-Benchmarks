{
    "desc": "CVE-2012-1823 is a flaw in the Common Gateway Interface Server Application Programming Interface of PHP (the php-cgi binary) that allows a remote client to inject command-line options through the HTTP request\u2019s query string when PHP is executed as a Common Gateway Interface program behind a web server. The root cause is improper parsing of query strings that do not contain an equals sign. In affected versions, the web server forwards the QUERY_STRING to the php-cgi process, which erroneously treats it as argv-style options instead of request parameters. This enables attackers to supply php-cgi flags such as -s (show source) to disclose application source code, or -d to set configuration directives at runtime. By setting configuration directives like allow_url_include=1 and auto_prepend_file=php://input and then sending PHP code in the request body, an attacker can have that code executed by the interpreter before the target script, resulting in remote execution of arbitrary PHP code under the web server\u2019s account.\n\nThe vulnerability primarily affects deployments where PHP is wired to the web server via the Common Gateway Interface pathway (not the FastCGI php-fpm SAPI, and not Apache\u2019s mod_php). Typical vulnerable topologies include Apache HTTP Server configured to invoke php-cgi through mod_cgi/mod_actions or other servers that pass the raw request query to php-cgi. Patches changed php-cgi\u2019s option handling to avoid interpreting a query string as options when it lacks an equals sign and does not begin with a hyphen; however, historically there were platform-specific pitfalls (for example, on some Windows code pages a \u201csoft hyphen\u201d character could be converted into a hyphen, reintroducing option parsing). The practical impacts are severe: complete source disclosure of PHP files and remote execution of arbitrary PHP code via maliciously supplied configuration options and prepended input. Exploitation requires only network access to a PHP-CGI endpoint and no authentication by default.",
    "attack_type": "remote arbitrary code execution and source code disclosure via command-line argument injection into a Common Gateway Interface handler",
    "services": [
        {
            "name": "php",
            "version": [
                "5.3.0",
                "5.3.1",
                "5.3.2",
                "5.3.3",
                "5.3.4",
                "5.3.5",
                "5.3.6",
                "5.3.7",
                "5.3.8",
                "5.3.9",
                "5.3.10",
                "5.3.11",
                "5.4.0",
                "5.4.1"
            ],
            "dependency_type": "HARD",
            "description": "PHP executed as the Common Gateway Interface binary (php-cgi). These upstream PHP versions are vulnerable to argument injection via the QUERY_STRING when run as Common Gateway Interface behind a web server, enabling option injection (-s, -d) that leads to source disclosure and remote code execution."
        },
        {
            "name": "httpd",
            "version": [
                "2.4.58"
            ],
            "dependency_type": "SOFT-WEB",
            "description": "Apache HTTP Server to receive HTTP requests and invoke php-cgi via Common Gateway Interface. Any reasonably current Apache 2.4 works; it must be configured to pass requests to php-cgi (not mod_php and not php-fpm)."
        }
    ],
    "input_tokens": 7116,
    "output_tokens": 2578
}