{
  "version": "15.0.6",
  "vulnerabilities": [
    {
      "id": "445a50f3351924a56bc2157131d575d53960344cdd30477d70c3cfdf7983648d",
      "category": "container_scanning",
      "message": "CVE-2024-2236 on ubuntu/libgcrypt20@1.10.3-2build1",
      "description": "A timing-based side-channel flaw was found in libgcrypt's RSA implementation. This issue may allow a remote attacker to initiate a Bleichenbacher-style attack, which can lead to the decryption of RSA ciphertexts.",
      "cve": "CVE-2024-2236",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libgcrypt20@1.10.3-2build1?os_distro=noble&os_name=ubuntu&os_version=24.04"
          },
          "version": "1.10.3-2build1"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-2236",
          "value": "CVE-2024-2236",
          "url": "https://scout.docker.com/v/CVE-2024-2236?s=ubuntu&n=libgcrypt20&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-2236?s=ubuntu&n=libgcrypt20&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ]
    },
    {
      "id": "00b66e14eead047eb9448d62063339646e1ce637a5b7e4518b3581f7f3439a0a",
      "category": "container_scanning",
      "message": "CVE-2024-41996 on ubuntu/openssl@3.0.13-0ubuntu3.6",
      "description": "Validating the order of the public keys in the Diffie-Hellman Key Agreement Protocol, when an approved safe prime is used, allows remote attackers (from the client side) to trigger unnecessarily expensive server-side DHE modular-exponentiation calculations. The client may cause asymmetric resource consumption. The basic attack scenario is that the client must claim that it can only communicate with DHE, and the server must be configured to allow DHE and validate the order of the public key.",
      "cve": "CVE-2024-41996",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/openssl@3.0.13-0ubuntu3.6?os_distro=noble&os_name=ubuntu&os_version=24.04"
          },
          "version": "3.0.13-0ubuntu3.6"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-41996",
          "value": "CVE-2024-41996",
          "url": "https://scout.docker.com/v/CVE-2024-41996?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-41996?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ]
    },
    {
      "id": "9f28ef9544f292543eb9831e08891b9c0747a4ef6e626e1be5e7f4701771cafc",
      "category": "container_scanning",
      "message": "CVE-2024-56433 on ubuntu/shadow@1:4.13+dfsg1-4ubuntu3.2",
      "description": "shadow-utils (aka shadow) 4.4 through 4.17.0 establishes a default /etc/subuid behavior (e.g., uid 100000 through 165535 for the first user account) that can realistically conflict with the uids of users defined on locally administered networks, potentially leading to account takeover, e.g., by leveraging newuidmap for access to an NFS home directory (or same-host resources in the case of remote logins by these local network users). NOTE: it may also be argued that system administrators should not have assigned uids, within local networks, that are within the range that can occur in /etc/subuid.",
      "cve": "CVE-2024-56433",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/shadow@1%3A4.13%2Bdfsg1-4ubuntu3.2?os_distro=noble&os_name=ubuntu&os_version=24.04"
          },
          "version": "1:4.13+dfsg1-4ubuntu3.2"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-56433",
          "value": "CVE-2024-56433",
          "url": "https://scout.docker.com/v/CVE-2024-56433?s=ubuntu&n=shadow&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-56433?s=ubuntu&n=shadow&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ]
    },
    {
      "id": "9426041d274949f3b8fcad887e6c7f3443e152862e620f67ec96a7650d15e69d",
      "category": "container_scanning",
      "message": "CVE-2025-0167 on ubuntu/curl@8.5.0-2ubuntu10.6",
      "description": "When asked to use a `.netrc` file for credentials **and** to follow HTTP redirects, curl could leak the password used for the first host to the followed-to host under certain circumstances.  This flaw only manifests itself if the netrc file has a `default` entry that omits both login and password. A rare circumstance.",
      "cve": "CVE-2025-0167",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/curl@8.5.0-2ubuntu10.6?os_distro=noble&os_name=ubuntu&os_version=24.04"
          },
          "version": "8.5.0-2ubuntu10.6"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-0167",
          "value": "CVE-2025-0167",
          "url": "https://scout.docker.com/v/CVE-2025-0167?s=ubuntu&n=curl&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-0167?s=ubuntu&n=curl&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ]
    },
    {
      "id": "effdb54e7a96c71c275aa3e5196a99f2d1fcd7117285d02d8909e4495a191bf5",
      "category": "container_scanning",
      "message": "CVE-2025-10148 on ubuntu/curl@8.5.0-2ubuntu10.6",
      "description": "curl's websocket code did not update the 32 bit mask pattern for each new outgoing frame as the specification says. Instead it used a fixed mask that persisted and was used throughout the entire connection.  A predictable mask pattern allows for a malicious server to induce traffic between the two communicating parties that could be interpreted by an involved proxy (configured or transparent) as genuine, real, HTTP traffic with content and thereby poison its cache. That cached poisoned content could then be served to all users of that proxy.",
      "cve": "CVE-2025-10148",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/curl@8.5.0-2ubuntu10.6?os_distro=noble&os_name=ubuntu&os_version=24.04"
          },
          "version": "8.5.0-2ubuntu10.6"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-10148",
          "value": "CVE-2025-10148",
          "url": "https://scout.docker.com/v/CVE-2025-10148?s=ubuntu&n=curl&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-10148?s=ubuntu&n=curl&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ]
    },
    {
      "id": "f497a92a55dd50416daaf86f4ed3dd3c725ee4878d68e50f28f2a6c3a6a39db2",
      "category": "container_scanning",
      "message": "CVE-2025-9086 on ubuntu/curl@8.5.0-2ubuntu10.6",
      "description": "1. A cookie is set using the `secure` keyword for `https://target` 2. curl is redirected to or otherwise made to speak with `http://target` (same hostname, but using clear text HTTP) using the same cookie set 3. The same cookie name is set - but with just a slash as path (`path='/'`). Since this site is not secure, the cookie *should* just be ignored. 4. A bug in the path comparison logic makes curl read outside a heap buffer boundary  The bug either causes a crash or it potentially makes the comparison come to the wrong conclusion and lets the clear-text site override the contents of the secure cookie, contrary to expectations and depending on the memory contents immediately following the single-byte allocation that holds the path.  The presumed and correct behavior would be to plainly ignore the second set of the cookie since it was already set as secure on a secure host so overriding it on an insecure host should not be okay.",
      "cve": "CVE-2025-9086",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/curl@8.5.0-2ubuntu10.6?os_distro=noble&os_name=ubuntu&os_version=24.04"
          },
          "version": "8.5.0-2ubuntu10.6"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-9086",
          "value": "CVE-2025-9086",
          "url": "https://scout.docker.com/v/CVE-2025-9086?s=ubuntu&n=curl&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-9086?s=ubuntu&n=curl&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ]
    },
    {
      "id": "454763090f062fb2841a30b00175a123bc4b3b8bfd307a39ecbbf8a1cc0af689",
      "category": "container_scanning",
      "message": "CVE-2023-26049 on org.eclipse.jetty/jetty-server@9.4.42.v20210604",
      "description": "Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism.\n\nIf Jetty sees a cookie VALUE that starts with `\"` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered.\n\nSo, a cookie header such as:\n\n`DISPLAY_LANGUAGE=\"b; JSESSIONID=1337; c=d\"` will be parsed as one cookie, with the name `DISPLAY_LANGUAGE` and a value of `b; JSESSIONID=1337; c=d`\n\ninstead of 3 separate cookies.\n\n### Impact\nThis has security implications because if, say, `JSESSIONID` is an `HttpOnly` cookie, and the `DISPLAY_LANGUAGE` cookie value is rendered on the page, an attacker can smuggle the `JSESSIONID` cookie into the `DISPLAY_LANGUAGE` cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server.\n\n### Patches\n* 9.4.51.v20230217 - via PR #9352\n* 10.0.15 - via PR #9339\n* 11.0.15 - via PR #9339\n\n### Workarounds\nNo workarounds\n\n### References\n* https://www.rfc-editor.org/rfc/rfc2965\n* https://www.rfc-editor.org/rfc/rfc6265\n",
      "cve": "CVE-2023-26049",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade org.eclipse.jetty/jetty-server@9.4.42.v20210604 to 9.4.51.v20230217",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.42.v20210604"
          },
          "version": "9.4.42.v20210604"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-26049",
          "value": "CVE-2023-26049",
          "url": "https://scout.docker.com/v/CVE-2023-26049?s=github&n=jetty-server&ns=org.eclipse.jetty&t=maven&vr=%3C9.4.51.v20230217"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-26049?s=github&n=jetty-server&ns=org.eclipse.jetty&t=maven&vr=%3C9.4.51.v20230217"
        }
      ]
    },
    {
      "id": "f97270cadafb429bbaa05e40be10bd23db2a21522ed3d8f7bd09f7b7288e293c",
      "category": "container_scanning",
      "message": "CVE-2022-2047 on org.eclipse.jetty/jetty-http@9.4.42.v20210604",
      "description": "### Description\nURI use within Jetty's `HttpURI` class can parse invalid URIs such as `http://localhost;/path` as having an authority with a host of `localhost;`.\n\nA URIs of the type `http://localhost;/path` should be interpreted to be either invalid or as `localhost;` to be the userinfo and no host.\nHowever, `HttpURI.host` returns `localhost;` which is definitely wrong.\n\n### Impact\nThis can lead to errors with Jetty's `HttpClient`, and Jetty's `ProxyServlet` / `AsyncProxyServlet` / `AsyncMiddleManServlet` wrongly interpreting an authority with no host as one with a host.\n\n### Patches\nPatched in PR [#8146](https://github.com/eclipse/jetty.project/pull/8146) for Jetty version 9.4.47.\nPatched in PR [#8014](https://github.com/eclipse/jetty.project/pull/8015) for Jetty versions 10.0.10, and 11.0.10\n\n### Workarounds\nNone.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@webtide.com.",
      "cve": "CVE-2022-2047",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade org.eclipse.jetty/jetty-http@9.4.42.v20210604 to 9.4.47",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.42.v20210604"
          },
          "version": "9.4.42.v20210604"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-2047",
          "value": "CVE-2022-2047",
          "url": "https://scout.docker.com/v/CVE-2022-2047?s=github&n=jetty-http&ns=org.eclipse.jetty&t=maven&vr=%3C9.4.47"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-2047?s=github&n=jetty-http&ns=org.eclipse.jetty&t=maven&vr=%3C9.4.47"
        }
      ]
    },
    {
      "id": "773534192e7d7d624bbc2f12360a4fb1afb9ae9059edc48bbeeaf635ce502a7d",
      "category": "container_scanning",
      "message": "CVE-2022-3219 on ubuntu/gnupg2@2.4.4-2ubuntu17.3",
      "description": "GnuPG can be made to spin on a relatively small input by (for example) crafting a public key with thousands of signatures attached, compressed down to just a few KB.",
      "cve": "CVE-2022-3219",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/gnupg2@2.4.4-2ubuntu17.3?os_distro=noble&os_name=ubuntu&os_version=24.04"
          },
          "version": "2.4.4-2ubuntu17.3"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-3219",
          "value": "CVE-2022-3219",
          "url": "https://scout.docker.com/v/CVE-2022-3219?s=ubuntu&n=gnupg2&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-3219?s=ubuntu&n=gnupg2&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ]
    },
    {
      "id": "2481366ca549a006968513416f1aa2065263c44d8053480b119aeca5c8333b8b",
      "category": "container_scanning",
      "message": "CVE-2023-36479 on org.eclipse.jetty/jetty-webapp@9.4.42.v20210604",
      "description": "If a user sends a request to a `org.eclipse.jetty.servlets.CGI` Servlet for a binary with a space in its name, the servlet will escape the command by wrapping it in quotation marks. This wrapped command, plus an optional command prefix, will then be executed through a call to Runtime.exec. If the original binary name provided by the user contains a quotation mark followed by a space, the resulting command line will contain multiple tokens instead of one. For example, if a request references a binary called file” name “here, the escaping algorithm will generate the command line string “file” name “here”, which will invoke the binary named file, not the one that the user requested.\n\n```java\nif (execCmd.length() > 0 && execCmd.charAt(0) != '\"' && execCmd.contains(\" \"))\nexecCmd = \"\\\"\" + execCmd + \"\\\"\";\n```",
      "cve": "CVE-2023-36479",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade org.eclipse.jetty/jetty-webapp@9.4.42.v20210604 to 9.4.52.v20230823, 10.0.16, 11.0.16",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.eclipse.jetty/jetty-webapp@9.4.42.v20210604"
          },
          "version": "9.4.42.v20210604"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-36479",
          "value": "CVE-2023-36479",
          "url": "https://scout.docker.com/v/CVE-2023-36479?s=gitlab&n=jetty-webapp&ns=org.eclipse.jetty&t=maven&vr=%3E%3D9.0.0%2C%3C9.4.52"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-36479?s=gitlab&n=jetty-webapp&ns=org.eclipse.jetty&t=maven&vr=%3E%3D9.0.0%2C%3C9.4.52"
        }
      ]
    },
    {
      "id": "ab5f2a01668fb8d7153cb28b9a902b80e67a5fc4ac30884a5271d87a40b6ae54",
      "category": "container_scanning",
      "message": "GHSA-58qw-p7qm-5rvh on org.eclipse.jetty/jetty-xml@9.4.42.v20210604",
      "description": "### From the reporter\n\n> `XmlParser` is vulnerable to XML external entity (XXE) vulnerability.\n>  XmlParser is being used when parsing Jetty’s xml configuration files. An attacker might exploit\n> this vulnerability in order to achieve SSRF or cause a denial of service.\n> One possible scenario is importing a (remote) malicious WAR into a Jetty’s server, while the\n> WAR includes a malicious web.xml.\n\n### Impact\nThere are no circumstances in a normally deployed Jetty server where potentially hostile XML is given to the XmlParser class without the attacker already having arbitrary access to the server. I.e. in order to exploit `XmlParser` the attacker would already have the ability to deploy and execute hostile code.  Specifically, Jetty has no protection against malicious web application and potentially hostile web applications should only be run on an isolated virtualisation.  \n\nThus this is not considered a vulnerability of the Jetty server itself, as any such usage of the jetty XmlParser is equally vulnerable as a direct usage of the JVM supplied SAX parser.  No CVE will be allocated to this advisory.\n\nHowever, any direct usage of the `XmlParser` class by an application may be vulnerable.  The impact would greatly depend on how the application uses `XmlParser`, but it could be a denial of service due to large entity expansion, or possibly the revealing local files if the XML results are accessible remotely.\n\n### Patches\nAbility to configure the SAXParserFactory to fit the needs of your particular XML parser implementation have been merged as part of PR #10067\n\n### Workarounds\nDon't use `XmlParser` to parse data from users.\n\n\n",
      "cve": "GHSA-58qw-p7qm-5rvh",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade org.eclipse.jetty/jetty-xml@9.4.42.v20210604 to 9.4.52.v20230823",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.eclipse.jetty/jetty-xml@9.4.42.v20210604"
          },
          "version": "9.4.42.v20210604"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-58qw-p7qm-5rvh",
          "value": "GHSA-58qw-p7qm-5rvh",
          "url": "https://scout.docker.com/v/GHSA-58qw-p7qm-5rvh?s=github&n=jetty-xml&ns=org.eclipse.jetty&t=maven&vr=%3C%3D9.4.51"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-58qw-p7qm-5rvh?s=github&n=jetty-xml&ns=org.eclipse.jetty&t=maven&vr=%3C%3D9.4.51"
        }
      ]
    },
    {
      "id": "fad8356a9f38b692c42c30f9d97153aa8e43bc8a08f0067cc98f0c6c1e290be8",
      "category": "container_scanning",
      "message": "CVE-2016-2781 on ubuntu/coreutils@9.4-3ubuntu6.1",
      "description": "chroot in GNU coreutils, when used with --userspec, allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal's input buffer.",
      "cve": "CVE-2016-2781",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/coreutils@9.4-3ubuntu6.1?os_distro=noble&os_name=ubuntu&os_version=24.04"
          },
          "version": "9.4-3ubuntu6.1"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2016-2781",
          "value": "CVE-2016-2781",
          "url": "https://scout.docker.com/v/CVE-2016-2781?s=ubuntu&n=coreutils&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2016-2781?s=ubuntu&n=coreutils&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ]
    },
    {
      "id": "45b2a5bd0342d075df9f75ad1899147c61a3c885bb9e51c06c5cb218f4e5554a",
      "category": "container_scanning",
      "message": "CVE-2025-45582 on ubuntu/tar@1.35+dfsg-3build1",
      "description": "GNU Tar through 1.35 allows file overwrite via directory traversal in crafted TAR archives, with a certain two-step process. First, the victim must extract an archive that contains a ../ symlink to a critical directory. Second, the victim must extract an archive that contains a critical file, specified via a relative pathname that begins with the symlink name and ends with that critical file's name. Here, the extraction follows the symlink and overwrites the critical file. This bypasses the protection mechanism of \"Member name contains '..'\" that would occur for a single TAR archive that attempted to specify the critical file via a ../ approach. For example, the first archive can contain \"x -> ../../../../../home/victim/.ssh\" and the second archive can contain x/authorized_keys. This can affect server applications that automatically extract any number of user-supplied TAR archives, and were relying on the blocking of traversal. This can also affect software installation processes in which \"tar xf\" is run more than once (e.g., when installing a package can automatically install two dependencies that are set up as untrusted tarballs instead of official packages). NOTE: the official GNU Tar manual has an otherwise-empty directory for each \"tar xf\" in its Security Rules of Thumb; however, third-party advice leads users to run \"tar xf\" more than once into the same directory.",
      "cve": "CVE-2025-45582",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/tar@1.35%2Bdfsg-3build1?os_distro=noble&os_name=ubuntu&os_version=24.04"
          },
          "version": "1.35+dfsg-3build1"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-45582",
          "value": "CVE-2025-45582",
          "url": "https://scout.docker.com/v/CVE-2025-45582?s=ubuntu&n=tar&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-45582?s=ubuntu&n=tar&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ]
    },
    {
      "id": "d636aafadeeb43047c75a612c5e984cafe583d34bf027cc2b9d20b8d5d61f8c7",
      "category": "container_scanning",
      "message": "CVE-2025-8941 on ubuntu/pam@1.5.3-5ubuntu5.5",
      "description": "A flaw was found in linux-pam. The pam_namespace module may improperly handle user-controlled paths, allowing local users to exploit symlink attacks and race conditions to elevate their privileges to root. This CVE provides a \"complete\" fix for CVE-2025-6020.",
      "cve": "CVE-2025-8941",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/pam@1.5.3-5ubuntu5.5?os_distro=noble&os_name=ubuntu&os_version=24.04"
          },
          "version": "1.5.3-5ubuntu5.5"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-8941",
          "value": "CVE-2025-8941",
          "url": "https://scout.docker.com/v/CVE-2025-8941?s=ubuntu&n=pam&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-8941?s=ubuntu&n=pam&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ]
    },
    {
      "id": "1cbf8c08c250fc9395c8878fb6a1f23e54720b975ab4ba37c2a8bdfe7d946ffa",
      "category": "container_scanning",
      "message": "CVE-2023-41900 on org.eclipse.jetty/jetty-webapp@9.4.42.v20210604",
      "description": "If a Jetty `OpenIdAuthenticator` uses the optional nested `LoginService`, and that `LoginService` decides to revoke an already authenticated user, then the current request will still treat the user as authenticated. The authentication is then cleared from the session and subsequent requests will not be treated as authenticated.\n\nSo a request on a previously authenticated session could be allowed to bypass authentication after it had been rejected by the `LoginService`.",
      "cve": "CVE-2023-41900",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.eclipse.jetty/jetty-webapp@9.4.42.v20210604 to 9.4.52.v20230823, 10.0.16, 11.0.16",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.eclipse.jetty/jetty-webapp@9.4.42.v20210604"
          },
          "version": "9.4.42.v20210604"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-41900",
          "value": "CVE-2023-41900",
          "url": "https://scout.docker.com/v/CVE-2023-41900?s=gitlab&n=jetty-webapp&ns=org.eclipse.jetty&t=maven&vr=%3E%3D9.4.21%2C%3C9.4.52"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-41900?s=gitlab&n=jetty-webapp&ns=org.eclipse.jetty&t=maven&vr=%3E%3D9.4.21%2C%3C9.4.52"
        }
      ]
    },
    {
      "id": "ae75adfcec44960fb8fbd30fab20d258486f46d7b2f7e6b8d247d902fd9500c7",
      "category": "container_scanning",
      "message": "CVE-2021-34429 on org.eclipse.jetty/jetty-webapp@9.4.42.v20210604",
      "description": "### Description\nURIs can be crafted using some encoded characters to access the content of the `WEB-INF` directory and/or bypass some security constraints.\nThis is a variation of the vulnerability reported in [CVE-2021-28164](https://nvd.nist.gov/vuln/detail/CVE-2021-28164)/[GHSA-v7ff-8wcx-gmc5](https://github.com/eclipse/jetty.project/security/advisories/GHSA-v7ff-8wcx-gmc5).\n\n### Impact\nThe default compliance mode allows requests with URIs that contain a %u002e segment to access protected resources within the WEB-INF directory. For example, a request to `/%u002e/WEB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.  Similarly, an encoded null character can prevent correct normalization so that /.%00/WEB-INF/web.xml cal also retrieve the web.xml file.\n\n### Workarounds\nSome Jetty [rewrite rules](https://www.eclipse.org/jetty/documentation/jetty-9/index.html#rewrite-handler) can be deployed to rewrite any request containing encoded dot segments or null characters in the raw request URI, to a known not found resource:\n```xml\n<Call name=\"addRule\">\n  <Arg>\n    <New class=\"org.eclipse.jetty.rewrite.handler.RewriteRegexRule\">\n      <Set name=\"regex\">.*/(?:\\.+/)+.*</Set>\n      <Set name=\"replacement\">/WEB-INF/Not-Found</Set>\n    </New>\n  </Arg>\n</Call>\n<Call name=\"addRule\">\n  <Arg>\n    <New class=\"org.eclipse.jetty.rewrite.handler.ValidUrlRule\"/>\n  </Arg>\n</Call>\n```\n\n### Analysis\nPrior to 9.4.37, Jetty was protected from this style of attack by two lines of defense:\n + URIs were decoded first and then normalized for `.` and `..` sequences. Whilst this is not according to the RFC, it did remove relative segments that were encoded or parameterized and made the resulting URI paths safe from any repeated normalization (often done by URI manipulation and file system mapping).\n + The `FileResource` class treated any difference between absolute path and canonical path of a resource as an alias, and thus the resource would not be served by default.\n\nPrior to 9.4.37, the `FileResource` class was replaced by the `PathResource` class that did not treat normalization differences as aliases.  Then release 9.4.37 updated the URI parsing to be compliant with the RFC, in that normalization is done before decoding.   This allowed various encodings or adornments to relative path segments that would not be normalized by the pure RFC URI normalization, but were normalized by the file system, thus allowing protected resources to be accessed via an alias.  Specifically by decoding URIs after normalization, it left them vulnerable to any subsequent normalization (potentially after checking security constraints) changing the URI singificantly.  Such extra normalization is often down by URI manipulation code and file systems.\n\nWith Jetty releases 9.4.43, 10.0.6, 11.0.6, we have restored several lines of defense:\n + URIs are first decoded and then normalized which is not strictly according to the current RFC.  Since the normalization is done after decoding, the URI paths produced are safe from further normalisation and the referenced resource cannot easily be so changed after passing security constraints.\n + During URI parsing checks are made for some specific segments/characters that are possible to be seen ambiguously by an application (e.g. encode dot segments, encoded separators, empty segments, parameterized dot segments and/or null characters). So even though Jetty code handles these URIs correctly, there is a risk that an application may not do so, thus such requests are rejected with a 400 Bad Request unless a specific compliance mode is set.\n + Once decoded and normalized by initial URI processing, Jetty will not decode or normalize a received URI again within its own resource handling. This avoids to possibility of double decode attacks.\n + The `ContextHandler.getResource(String path)` method always checks that the passed path is normalized, only accepting a non normal path if approved by an AliasChecker.  This is the method that is directly used by Jetty resource serving.\n + The API methods like `ServletContext.getResource(String path)` will normalize the  prior to calling `ContextHandler.getResource(String path)`. This allows applications to use non normal paths.\n + The `PathResource` class now considers any difference in normal/canonical name between a request resource name and the found resource name  to be an alias, which will only be served if approved by an explicit `AliasChecker`\n\nIn summary, the defense is a front line of detection of specific known URI alias attacks, with the last line defense of not allowing any aliasing of resources.\n\nMany thanks to @cangqingzhe from @CloverSecLabs for reporting this issue. ",
      "cve": "CVE-2021-34429",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.eclipse.jetty/jetty-webapp@9.4.42.v20210604 to 9.4.43",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.eclipse.jetty/jetty-webapp@9.4.42.v20210604"
          },
          "version": "9.4.42.v20210604"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-34429",
          "value": "CVE-2021-34429",
          "url": "https://scout.docker.com/v/CVE-2021-34429?s=github&n=jetty-webapp&ns=org.eclipse.jetty&t=maven&vr=%3E%3D9.4.37%2C%3C9.4.43"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-34429?s=github&n=jetty-webapp&ns=org.eclipse.jetty&t=maven&vr=%3E%3D9.4.37%2C%3C9.4.43"
        }
      ]
    },
    {
      "id": "9ffd9a405a4f0bd5aa943e39f243371d73c888e478c922fb46d99838a56a7d0c",
      "category": "container_scanning",
      "message": "CVE-2023-26048 on org.eclipse.jetty/jetty-server@9.4.42.v20210604",
      "description": "### Impact\nServlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and a very large content.\n\nThis happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk.\n\nAn attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`.\nHowever, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time.\n\nA very large number of parts may cause the same problem.\n\n### Patches\nPatched in Jetty versions\n\n* 9.4.51.v20230217 - via PR #9345\n* 10.0.14 - via PR #9344\n* 11.0.14 - via PR #9344\n\n### Workarounds\nMultipart parameter `maxRequestSize` must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).\nLimiting multipart parameter `maxFileSize` won't be enough because an attacker can send a large number of parts that summed up will cause memory issues.\n\n### References\n* https://github.com/eclipse/jetty.project/issues/9076\n* https://github.com/jakartaee/servlet/blob/6.0.0/spec/src/main/asciidoc/servlet-spec-body.adoc#32-file-upload\n",
      "cve": "CVE-2023-26048",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.eclipse.jetty/jetty-server@9.4.42.v20210604 to 9.4.51.v20230217",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.42.v20210604"
          },
          "version": "9.4.42.v20210604"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-26048",
          "value": "CVE-2023-26048",
          "url": "https://scout.docker.com/v/CVE-2023-26048?s=github&n=jetty-server&ns=org.eclipse.jetty&t=maven&vr=%3C9.4.51.v20230217"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-26048?s=github&n=jetty-server&ns=org.eclipse.jetty&t=maven&vr=%3C9.4.51.v20230217"
        }
      ]
    },
    {
      "id": "1ff03b68b9bcd5d792635c6f901d360483dee89cb41b91c83b6d21c12afc7cd4",
      "category": "container_scanning",
      "message": "CVE-2023-26049 on org.eclipse.jetty/jetty-client@9.4.42.v20210604",
      "description": "Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `\"` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=\"b; JSESSIONID=1337; c=d\"` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue.",
      "cve": "CVE-2023-26049",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.eclipse.jetty/jetty-client@9.4.42.v20210604 to 9.4.51.v20230217, 10.0.14, 11.0.14, 12.0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.eclipse.jetty/jetty-client@9.4.42.v20210604"
          },
          "version": "9.4.42.v20210604"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-26049",
          "value": "CVE-2023-26049",
          "url": "https://scout.docker.com/v/CVE-2023-26049?s=gitlab&n=jetty-client&ns=org.eclipse.jetty&t=maven&vr=%3C9.4.51"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-26049?s=gitlab&n=jetty-client&ns=org.eclipse.jetty&t=maven&vr=%3C9.4.51"
        }
      ]
    },
    {
      "id": "239ac88f260450a0a0804d9c96a441047038dde0b67569288b3af3942f1a62f9",
      "category": "container_scanning",
      "message": "CVE-2023-26049 on org.eclipse.jetty/jetty-webapp@9.4.42.v20210604",
      "description": "Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `\"` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=\"b; JSESSIONID=1337; c=d\"` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue.",
      "cve": "CVE-2023-26049",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.eclipse.jetty/jetty-webapp@9.4.42.v20210604 to 9.4.51.v20230217, 10.0.14, 11.0.14",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.eclipse.jetty/jetty-webapp@9.4.42.v20210604"
          },
          "version": "9.4.42.v20210604"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-26049",
          "value": "CVE-2023-26049",
          "url": "https://scout.docker.com/v/CVE-2023-26049?s=gitlab&n=jetty-webapp&ns=org.eclipse.jetty&t=maven&vr=%3C9.4.51"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-26049?s=gitlab&n=jetty-webapp&ns=org.eclipse.jetty&t=maven&vr=%3C9.4.51"
        }
      ]
    },
    {
      "id": "7c04130964ea4afdab78de0204278a95e5d1b7ca1b4c2388ed37f3e55e015b54",
      "category": "container_scanning",
      "message": "CVE-2023-40167 on org.eclipse.jetty/jetty-http@9.4.42.v20210604",
      "description": "### Impact\n\nJetty accepts the '+' character proceeding the content-length value in a HTTP/1 header field.  This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses.  There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response.\n\n### Workarounds\n\nThere is no workaround as there is no known exploit scenario.   \n\n### Original Report \n\n[RFC 9110 Secion 8.6](https://www.rfc-editor.org/rfc/rfc9110#section-8.6) defined the value of Content-Length header should be a string of 0-9 digits. However we found that Jetty accepts \"+\" prefixed Content-Length, which could lead to potential HTTP request smuggling.\n\nPayload:\n\n```\n POST / HTTP/1.1\n Host: a.com\n Content-Length: +16\n Connection: close\n ​\n 0123456789abcdef\n```\n\nWhen sending this payload to Jetty, it can successfully parse and identify the length.\n\nWhen sending this payload to NGINX, Apache HTTPd or other HTTP servers/parsers, they will return 400 bad request.\n\nThis behavior can lead to HTTP request smuggling and can be leveraged to bypass WAF or IDS.",
      "cve": "CVE-2023-40167",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.eclipse.jetty/jetty-http@9.4.42.v20210604 to 9.4.52",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.42.v20210604"
          },
          "version": "9.4.42.v20210604"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-40167",
          "value": "CVE-2023-40167",
          "url": "https://scout.docker.com/v/CVE-2023-40167?s=github&n=jetty-http&ns=org.eclipse.jetty&t=maven&vr=%3E%3D9.0.0%2C%3C%3D9.4.51"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-40167?s=github&n=jetty-http&ns=org.eclipse.jetty&t=maven&vr=%3E%3D9.0.0%2C%3C%3D9.4.51"
        }
      ]
    },
    {
      "id": "22cc1912ed54e83175d1af934f039a87bd2b09325d1b0219ba0b4ff789a05ce0",
      "category": "container_scanning",
      "message": "CVE-2023-40167 on org.eclipse.jetty/jetty-webapp@9.4.42.v20210604",
      "description": "### Impact\n\nJetty accepts the '+' character proceeding the content-length value in a HTTP/1 header field. This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses. There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response.\n\n### Workarounds\n\nThere is no workaround as there is no known exploit scenario. \n\n### Original Report \n\n[RFC 9110 Secion 8.6](https://www.rfc-editor.org/rfc/rfc9110#section-8.6) defined the value of Content-Length header should be a string of 0-9 digits. However we found that Jetty accepts \"+\" prefixed Content-Length, which could lead to potential HTTP request smuggling.\n\nPayload:\n\n```\n POST / HTTP/1.1\n Host: a.com\n Content-Length: +16\n Connection: close\n ​\n 0123456789abcdef\n```\n\nWhen sending this payload to Jetty, it can successfully parse and identify the length.\n\nWhen sending this payload to NGINX, Apache HTTPd or other HTTP servers/parsers, they will return 400 bad request.\n\nThis behavior can lead to HTTP request smuggling and can be leveraged to bypass WAF or IDS.",
      "cve": "CVE-2023-40167",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.eclipse.jetty/jetty-webapp@9.4.42.v20210604 to 9.4.52.v20230823, 10.0.16, 11.0.16",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.eclipse.jetty/jetty-webapp@9.4.42.v20210604"
          },
          "version": "9.4.42.v20210604"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-40167",
          "value": "CVE-2023-40167",
          "url": "https://scout.docker.com/v/CVE-2023-40167?s=gitlab&n=jetty-webapp&ns=org.eclipse.jetty&t=maven&vr=%3E%3D9.0.0%2C%3C9.4.52"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-40167?s=gitlab&n=jetty-webapp&ns=org.eclipse.jetty&t=maven&vr=%3E%3D9.0.0%2C%3C9.4.52"
        }
      ]
    },
    {
      "id": "8dba3648ffe77e1fdd350e68c2e044d536d00e2ffcef8d42a5118a75b14056ea",
      "category": "container_scanning",
      "message": "CVE-2023-40167 on org.eclipse.jetty/jetty-server@9.4.42.v20210604",
      "description": "### Impact\n\nJetty accepts the '+' character proceeding the content-length value in a HTTP/1 header field. This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses. There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response.\n\n### Workarounds\n\nThere is no workaround as there is no known exploit scenario. \n\n### Original Report \n\n[RFC 9110 Secion 8.6](https://www.rfc-editor.org/rfc/rfc9110#section-8.6) defined the value of Content-Length header should be a string of 0-9 digits. However we found that Jetty accepts \"+\" prefixed Content-Length, which could lead to potential HTTP request smuggling.\n\nPayload:\n\n```\n POST / HTTP/1.1\n Host: a.com\n Content-Length: +16\n Connection: close\n ​\n 0123456789abcdef\n```\n\nWhen sending this payload to Jetty, it can successfully parse and identify the length.\n\nWhen sending this payload to NGINX, Apache HTTPd or other HTTP servers/parsers, they will return 400 bad request.\n\nThis behavior can lead to HTTP request smuggling and can be leveraged to bypass WAF or IDS.",
      "cve": "CVE-2023-40167",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.eclipse.jetty/jetty-server@9.4.42.v20210604 to 9.4.52.v20230823, 10.0.16, 11.0.16, 12.0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.42.v20210604"
          },
          "version": "9.4.42.v20210604"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-40167",
          "value": "CVE-2023-40167",
          "url": "https://scout.docker.com/v/CVE-2023-40167?s=gitlab&n=jetty-server&ns=org.eclipse.jetty&t=maven&vr=%3E%3D9.0.0%2C%3C9.4.52"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-40167?s=gitlab&n=jetty-server&ns=org.eclipse.jetty&t=maven&vr=%3E%3D9.0.0%2C%3C9.4.52"
        }
      ]
    },
    {
      "id": "04d2cc44d079d1b807736eeafe502e46910a0992e48d968d28d1ea5d6bdac864",
      "category": "container_scanning",
      "message": "CVE-2024-8184 on org.eclipse.jetty/jetty-server@9.4.42.v20210604",
      "description": "### Impact\nRemote DOS attack can cause out of memory \n\n### Description\nThere exists a security vulnerability in Jetty's `ThreadLimitHandler.getRemote()` which\ncan be exploited by unauthorized users to cause remote denial-of-service (DoS) attack.  By\nrepeatedly sending crafted requests, attackers can trigger OutofMemory errors and exhaust the\nserver's memory.\n\n### Affected Versions\n\n* Jetty 12.0.0-12.0.8 (Supported)\n* Jetty 11.0.0-11.0.23 (EOL)\n* Jetty 10.0.0-10.0.23 (EOL)\n* Jetty 9.3.12-9.4.55 (EOL)\n\n### Patched Versions\n\n* Jetty 12.0.9\n* Jetty 11.0.24\n* Jetty 10.0.24\n* Jetty 9.4.56\n\n### Workarounds\n\nDo not use `ThreadLimitHandler`.  \nConsider use of `QoSHandler` instead to artificially limit resource utilization.\n\n### References\n\nJetty 12 - https://github.com/jetty/jetty.project/pull/11723",
      "cve": "CVE-2024-8184",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.eclipse.jetty/jetty-server@9.4.42.v20210604 to 9.4.56",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.42.v20210604"
          },
          "version": "9.4.42.v20210604"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-8184",
          "value": "CVE-2024-8184",
          "url": "https://scout.docker.com/v/CVE-2024-8184?s=github&n=jetty-server&ns=org.eclipse.jetty&t=maven&vr=%3E%3D9.3.12%2C%3C%3D9.4.55"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-8184?s=github&n=jetty-server&ns=org.eclipse.jetty&t=maven&vr=%3E%3D9.3.12%2C%3C%3D9.4.55"
        }
      ]
    },
    {
      "id": "394665dcc50fb278da597b7d16f34f82a33f0f60d07790bfbd3e3da60190be2e",
      "category": "container_scanning",
      "message": "CVE-2021-31879 on ubuntu/wget@1.21.4-1ubuntu4.1",
      "description": "GNU Wget through 1.21.1 does not omit the Authorization header upon a redirect to a different origin, a related issue to CVE-2018-1000007.",
      "cve": "CVE-2021-31879",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/wget@1.21.4-1ubuntu4.1?os_distro=noble&os_name=ubuntu&os_version=24.04"
          },
          "version": "1.21.4-1ubuntu4.1"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-31879",
          "value": "CVE-2021-31879",
          "url": "https://scout.docker.com/v/CVE-2021-31879?s=ubuntu&n=wget&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-31879?s=ubuntu&n=wget&ns=ubuntu&t=deb&osn=ubuntu&osv=24.04&vr=%3E%3D0"
        }
      ]
    },
    {
      "id": "5963ffcd0b7530f708c907ea82c67fb4c7749dff65bb761228d1d79a55afc61b",
      "category": "container_scanning",
      "message": "CVE-2024-6763 on org.eclipse.jetty/jetty-http@9.4.42.v20210604",
      "description": "## Summary\n\nEclipse Jetty is a lightweight, highly scalable, Java-based web server and Servlet engine . It includes a utility class, `HttpURI`, for URI/URL parsing.\n\nThe `HttpURI` class does insufficient validation on the authority segment of a URI.  However the behaviour of `HttpURI` differs from the common browsers in how it handles a URI that would be considered invalid if fully validated against the RRC.  Specifically `HttpURI` and the browser may differ on the value of the host extracted from an invalid URI and thus a combination of Jetty and a vulnerable browser may be vulnerable to a open redirect attack or to a SSRF attack if the URI is used after passing validation checks.\n\n## Details\n\n### Affected components\n\nThe vulnerable component is the `HttpURI` class when used as a utility class in an application.  The Jetty usage of the class is not vulnerable.\n\n### Attack overview\n\nThe `HttpURI` class does not well validate the authority section of a URI. When presented with an illegal authority that may contain user info (eg username:password#@hostname:port), then the parsing of the URI is not failed.  Moreover, the interpretation of what part of the authority is the host name differs from a common browser in  that they also do not fail, but they select a different host name from the illegal URI.\n\n### Attack scenario\n\nA typical attack scenario is illustrated in the diagram below. The Validator checks whether the attacker-supplied URL is on the blocklist. If not, the URI is passed to the Requester for redirection. The Requester is responsible for sending requests to the hostname specified by the URI.\n\nThis attack occurs when the Validator is the `org.eclipse.jetty.http.HttpURI` class and the Requester is the `Browser` (include chrome, firefox and Safari). An attacker can send a malformed URI to the Validator (e.g., `http://browser.check%23%40vulndetector.com/` ). After validation, the Validator finds that the hostname is not on the blocklist. However, the Requester can still send requests to the domain with the hostname `vulndetector.com`.\n\n## PoC\n\npayloads:\n\n```\nhttp://browser.check &@vulndetector.com/\nhttp://browser.check #@vulndetector.com/\nhttp://browser.check?@vulndetector.com/\nhttp://browser.check#@vulndetector.com/\nhttp://vulndetector.com\\\\/\n```\n\nThe problem of 302 redirect parsing in HTML tag scenarios. Below is a poc example. After clicking the button, the browser will open \"browser.check\", and jetty will parse this URL as \"vulndetector.com\".\n\n```\n<a href=\"http://browser.check#@vulndetector.com/\"></a>\n```\nA comparison of the parsing differences between Jetty and chrome is shown in the table below (note that neither should accept the URI as valid).\n\n| Invalid URI                                       | Jetty            | Chrome        |\n| ---------------------------------------------- | ---------------- | ------------- |\n| http://browser.check &@vulndetector.com/ | vulndetector.com | browser.check |\n| http://browser.check #@vulndetector.com/ | vulndetector.com | browser.check |\n| http://browser.check?@vulndetector.com/    | vulndetector.com | browser.check |\n| http://browser.check#@vulndetector.com/    | vulndetector.com | browser.check |\n\nThe problem of 302 redirect parsing in HTTP 302 Location\n\n| Input                    | Jetty          | Chrome        |\n| ------------------------ | -------------- | ------------- |\n| http://browser.check%5c/ | browser.check\\ | browser.check |\n\nIt is noteworthy that Spring Web also faced similar security vulnerabilities, being affected by the aforementioned four types of payloads. These issues have since been resolved and have been assigned three CVE numbers [3-5].\n\n## Impact\n\nThe impact of this vulnerability is limited to developers that use the Jetty HttpURI directly.  Example: your project implemented a blocklist to block on some hosts based on HttpURI's handling of authority section.  The vulnerability will help attackers bypass the protections that developers have set up for hosts. The vulnerability will lead to **SSRF**[1] and **URL Redirection**[2] vulnerabilities in several cases. \n\n## Mitigation\n\nThe attacks outlined above rely on decoded user data being passed to the `HttpURI` class. Application should not pass decoded user data as an encoded URI to any URI class/method, including `HttpURI`.  Such applications are likely to be vulnerable in other ways. \nThe immediate solution is to upgrade to a version of the class that will fully validate the characters of the URI authority.  Ultimately, Jetty will deprecate and remove support for user info in the authority per [RFC9110 Section 4.2.4](https://datatracker.ietf.org/doc/html/rfc9110#section-4.2.4). \n\nNote that the Chrome (and other browsers) parse the invalid user info section improperly as well (due to flawed WhatWG URL parsing rules that do not apply outside of a Web Browser).\n\n## Reference\n\n[1] https://cwe.mitre.org/data/definitions/918.html\n[2] https://cwe.mitre.org/data/definitions/601.html",
      "cve": "CVE-2024-6763",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.eclipse.jetty/jetty-http@9.4.42.v20210604 to 12.0.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.eclipse.jetty/jetty-http@9.4.42.v20210604"
          },
          "version": "9.4.42.v20210604"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-6763",
          "value": "CVE-2024-6763",
          "url": "https://scout.docker.com/v/CVE-2024-6763?s=github&n=jetty-http&ns=org.eclipse.jetty&t=maven&vr=%3E%3D7.0.0%2C%3C%3D12.0.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-6763?s=github&n=jetty-http&ns=org.eclipse.jetty&t=maven&vr=%3E%3D7.0.0%2C%3C%3D12.0.11"
        }
      ]
    },
    {
      "id": "702955421a3d054b6e0c2bc551704201aba015b4710367d4447d4ab9a4b79ab3",
      "category": "container_scanning",
      "message": "CVE-2024-13009 on org.eclipse.jetty/jetty-server@9.4.42.v20210604",
      "description": "In Eclipse Jetty versions 9.4.0 to 9.4.56 a buffer can be incorrectly released when confronted with a gzip error when inflating a request body. This can result in corrupted and/or inadvertent sharing of data between requests.",
      "cve": "CVE-2024-13009",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.eclipse.jetty/jetty-server@9.4.42.v20210604 to 9.4.57.v20241219",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.eclipse.jetty/jetty-server@9.4.42.v20210604"
          },
          "version": "9.4.42.v20210604"
        },
        "operating_system": "ubuntu 24.04",
        "image": "cve-2021-34429-jetty:9.4.42"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-13009",
          "value": "CVE-2024-13009",
          "url": "https://scout.docker.com/v/CVE-2024-13009?s=github&n=jetty-server&ns=org.eclipse.jetty&t=maven&vr=%3E%3D9.4.0%2C%3C%3D9.4.56"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-13009?s=github&n=jetty-server&ns=org.eclipse.jetty&t=maven&vr=%3E%3D9.4.0%2C%3C%3D9.4.56"
        }
      ]
    }
  ],
  "remediations": [],
  "scan": {
    "start_time": "2025-10-11T16:55:44",
    "end_time": "2025-10-11T16:55:44",
    "status": "success",
    "type": "container_scanning",
    "scanner": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    },
    "analyzer": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    }
  }
}
