{
    "desc": "CVE-2021-34429 is a vulnerability in the Eclipse Jetty web server and servlet container where improper Uniform Resource Identifier handling allows protected resources to be accessed using specially encoded path segments. In the affected Jetty releases (9.4.37\u20139.4.42, 10.0.1\u201310.0.5, and 11.0.1\u201311.0.5), Jetty\u2019s request path processing performed normalization before decoding in default compliance mode. A change introduced around Jetty 9.4.37 (including a move from FileResource to PathResource and alias checks) created a condition where certain encoded characters, such as the Unicode fullwidth dot %u002e or an encoded null %00, could later be interpreted in a way that bypassed security constraints and directory protections. As a result, a remote party could craft an HTTP request target like \u201c/%u002e/WEB-INF/web.xml\u201d or \u201c/.%00/WEB-INF/web.xml\u201d to trick Jetty into resolving paths within normally hidden locations such as WEB-INF. Because the WEB-INF tree is intended to be inaccessible directly over HTTP, this bypass can disclose sensitive configuration and application internals (for example, web.xml, framework descriptors, or other files packaged within a web application). Exploitation requires only network access to a vulnerable Jetty instance and the ability to send crafted HTTP requests; no authentication or user interaction is necessary. This issue is related to prior path handling weaknesses (a variant of CVE-2021-28164) and primarily affects confidentiality: attackers can read files and metadata not intended for direct exposure, potentially aiding further attacks such as reconnaissance of application endpoints, frameworks, or credentials embedded in configuration. The Jetty project fixed the issue by changing the processing order (decode before normalization), rejecting ambiguous or unsafe encodings, preventing double-decoding paths, and strengthening alias checks. Patched versions are 9.4.43 and later, 10.0.6 and later, and 11.0.6 and later. To reproduce a vulnerable environment for testing, only a Jetty service is required; no auxiliary services (such as databases, message queues, or reverse proxies) are necessary, as Jetty alone can serve a web application with a WEB-INF directory that demonstrates the exposure. Example proof: issuing \u201cGET /%u002e/WEB-INF/web.xml\u201d against a vulnerable Jetty returns HTTP 200 OK with the contents of web.xml, showing the protection bypass and file disclosure.",
    "attack_type": "Sensitive information disclosure through path traversal and security constraint bypass",
    "services": [
        {
            "name": "eclipse/jetty",
            "version": [
                "9.4.37-jre11",
                "9.4.38-jre11",
                "9.4.39-jre11",
                "9.4.40-jre11",
                "9.4.41-jre11",
                "9.4.42-jre11",
                "10.0.1-jdk11",
                "10.0.2-jdk11",
                "10.0.3-jdk11",
                "10.0.4-jdk11",
                "10.0.5-jdk11",
                "11.0.1-jdk11",
                "11.0.2-jdk11",
                "11.0.3-jdk11",
                "11.0.4-jdk11",
                "11.0.5-jdk11"
            ],
            "dependency_type": "HARD",
            "description": "Eclipse Jetty is the vulnerable HTTP server/servlet container. Any of the listed tags correspond to versions identified by NIST/MITRE as affected. Running this single service with a web application (containing WEB-INF) is sufficient to reproduce the vulnerability and test file disclosure via encoded path traversal."
        }
    ],
    "input_tokens": 48766,
    "output_tokens": 3185,
    "query": "CVE-2021-34429"
}