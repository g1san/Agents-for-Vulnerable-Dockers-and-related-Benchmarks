#!/usr/bin/env bash
set -euo pipefail

# This wrapper starts the original TeamCity server and automatically completes the initial setup
# so the instance is ready for unauthenticated testing on port 8111 without manual steps.

ORIG_ENTRYPOINT="/run-services.sh"
TEAMCITY_URL="http://127.0.0.1:8111"
ADMIN_USER="admin"
ADMIN_PASS="admin123!"

# Start TeamCity in background
${ORIG_ENTRYPOINT} &
TC_PID=$!

echo "[+] TeamCity starting (PID: ${TC_PID}). Waiting for HTTP endpoint..."

# Wait for HTTP to be up
for i in $(seq 1 120); do
  if curl -fsS "${TEAMCITY_URL}/" >/dev/null 2>&1; then
    echo "[+] HTTP is up."
    break
  fi
  sleep 2
  if ! kill -0 ${TC_PID} >/dev/null 2>&1; then
    echo "[-] TeamCity process exited unexpectedly." >&2
    wait ${TC_PID}
  fi
done

# Helper to POST form data with retries
post_with_retries() {
  local url="$1"; shift
  local data=("$@")
  for i in $(seq 1 30); do
    if curl -fsS -X POST -H "Content-Type: application/x-www-form-urlencoded" \
      --data-urlencode "${data[0]}" ${data[@]:1:+$(printf -- ' --data-urlencode %q' "${data[@]:1}")} \
      "${url}" >/dev/null 2>&1; then
      return 0
    fi
    sleep 2
  done
  return 1
}

# The setup wizard consists of: accept license -> choose internal DB -> create admin
# Try multiple known endpoints across TeamCity versions to be resilient.

# 1) Accept License
(
  post_with_retries "${TEAMCITY_URL}/setup/acceptLicense.html" "accept=true" || \
  post_with_retries "${TEAMCITY_URL}/app/installation/wizard/acceptLicense" "accept=true" || \
  post_with_retries "${TEAMCITY_URL}/showAgreement.html" "accept=true"
) && echo "[+] License accepted (or already accepted)." || echo "[!] License step may already be completed."

# 2) Select internal database
# Try endpoints used by the wizard to select the built-in HSQLDB.
(
  post_with_retries "${TEAMCITY_URL}/setup/setDatabase.html" "databaseType=Internal" || \
  post_with_retries "${TEAMCITY_URL}/app/installation/wizard/setInternalDb" "useInternalDb=true"
) && echo "[+] Internal database configured (or already configured)." || echo "[!] Database step may already be completed."

# 3) Create default admin user
(
  post_with_retries "${TEAMCITY_URL}/setup/createAdmin.html" \
    "username=${ADMIN_USER}" "password1=${ADMIN_PASS}" "password2=${ADMIN_PASS}" "name=Administrator" || \
  post_with_retries "${TEAMCITY_URL}/app/installation/wizard/createAdminUser" \
    "username=${ADMIN_USER}" "password=${ADMIN_PASS}" "confirmPassword=${ADMIN_PASS}" "name=Administrator"
) && echo "[+] Admin user ensured (or already exists)." || echo "[!] Admin user creation may already be completed."

# 4) Enable guest (optional, improves quick accessibility)
(
  post_with_retries "${TEAMCITY_URL}/admin/editProject.html?init=1" "guestLogin=true" || true
) >/dev/null 2>&1 || true

# Log basic status
echo "[+] TeamCity should be initialized. Access: ${TEAMCITY_URL}"
echo "[+] If admin user was created by this script: ${ADMIN_USER}:${ADMIN_PASS}"

# Bring foreground to the TeamCity process
wait ${TC_PID}
