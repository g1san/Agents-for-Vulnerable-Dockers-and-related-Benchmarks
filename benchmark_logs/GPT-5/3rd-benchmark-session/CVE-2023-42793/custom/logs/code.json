{
    "files": [
        {
            "location": "./../../dockers/CVE-2023-42793/custom/docker-compose.yml",
            "content": "services:\n  teamcity-server:\n    build:\n      context: ./teamcity\n      dockerfile: Dockerfile\n    image: cve-2023-42793/teamcity-server:2023.05.3\n    container_name: cve-2023-42793-teamcity\n    ports:\n      - \"8111:8111\"\n    environment:\n      - TEAMCITY_DATA_PATH=/data/teamcity_server/datadir\n      - TEAMCITY_SERVER_MEM_OPTS=-Xms512m -Xmx1024m\n      - TEAMCITY_HTTPS_PROXY_ENABLED=false\n    volumes:\n      - teamcity_data:/data/teamcity_server/datadir\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-fsS\", \"http://localhost:8111/\" ]\n      interval: 10s\n      timeout: 5s\n      retries: 30\n      start_period: 60s\n    restart: unless-stopped\n\nvolumes:\n  teamcity_data:\n    driver: local\n"
        },
        {
            "location": "./../../dockers/CVE-2023-42793/custom/teamcity/Dockerfile",
            "content": "# syntax=docker/dockerfile:1.4\nFROM jetbrains/teamcity-server:2023.05.3\n\n# Copy our auto-setup entrypoint wrapper with executable permissions at copy time\nCOPY --chmod=0755 entrypoint.sh /usr/local/bin/entrypoint.sh\n\n# Base image already includes curl; no need to apt-get install as non-root\nENV TEAMCITY_DATA_PATH=/data/teamcity_server/datadir\n\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n"
        },
        {
            "location": "./../../dockers/CVE-2023-42793/custom/teamcity/entrypoint.sh",
            "content": "#!/usr/bin/env bash\nset -euo pipefail\n\n# This wrapper starts the original TeamCity server and automatically completes the initial setup\n# so the instance is ready for unauthenticated testing on port 8111 without manual steps.\n\nORIG_ENTRYPOINT=\"/run-services.sh\"\nTEAMCITY_URL=\"http://127.0.0.1:8111\"\nADMIN_USER=\"admin\"\nADMIN_PASS=\"admin123!\"\n\n# Start TeamCity in background\n${ORIG_ENTRYPOINT} &\nTC_PID=$!\n\necho \"[+] TeamCity starting (PID: ${TC_PID}). Waiting for HTTP endpoint...\"\n\n# Wait for HTTP to be up\nfor i in $(seq 1 120); do\n  if curl -fsS \"${TEAMCITY_URL}/\" >/dev/null 2>&1; then\n    echo \"[+] HTTP is up.\"\n    break\n  fi\n  sleep 2\n  if ! kill -0 ${TC_PID} >/dev/null 2>&1; then\n    echo \"[-] TeamCity process exited unexpectedly.\" >&2\n    wait ${TC_PID}\n  fi\ndone\n\n# Helper to POST form data with retries\npost_with_retries() {\n  local url=\"$1\"; shift\n  local data=(\"$@\")\n  for i in $(seq 1 30); do\n    if curl -fsS -X POST -H \"Content-Type: application/x-www-form-urlencoded\" \\\n      --data-urlencode \"${data[0]}\" ${data[@]:1:+$(printf -- ' --data-urlencode %q' \"${data[@]:1}\")} \\\n      \"${url}\" >/dev/null 2>&1; then\n      return 0\n    fi\n    sleep 2\n  done\n  return 1\n}\n\n# The setup wizard consists of: accept license -> choose internal DB -> create admin\n# Try multiple known endpoints across TeamCity versions to be resilient.\n\n# 1) Accept License\n(\n  post_with_retries \"${TEAMCITY_URL}/setup/acceptLicense.html\" \"accept=true\" || \\\n  post_with_retries \"${TEAMCITY_URL}/app/installation/wizard/acceptLicense\" \"accept=true\" || \\\n  post_with_retries \"${TEAMCITY_URL}/showAgreement.html\" \"accept=true\"\n) && echo \"[+] License accepted (or already accepted).\" || echo \"[!] License step may already be completed.\"\n\n# 2) Select internal database\n# Try endpoints used by the wizard to select the built-in HSQLDB.\n(\n  post_with_retries \"${TEAMCITY_URL}/setup/setDatabase.html\" \"databaseType=Internal\" || \\\n  post_with_retries \"${TEAMCITY_URL}/app/installation/wizard/setInternalDb\" \"useInternalDb=true\"\n) && echo \"[+] Internal database configured (or already configured).\" || echo \"[!] Database step may already be completed.\"\n\n# 3) Create default admin user\n(\n  post_with_retries \"${TEAMCITY_URL}/setup/createAdmin.html\" \\\n    \"username=${ADMIN_USER}\" \"password1=${ADMIN_PASS}\" \"password2=${ADMIN_PASS}\" \"name=Administrator\" || \\\n  post_with_retries \"${TEAMCITY_URL}/app/installation/wizard/createAdminUser\" \\\n    \"username=${ADMIN_USER}\" \"password=${ADMIN_PASS}\" \"confirmPassword=${ADMIN_PASS}\" \"name=Administrator\"\n) && echo \"[+] Admin user ensured (or already exists).\" || echo \"[!] Admin user creation may already be completed.\"\n\n# 4) Enable guest (optional, improves quick accessibility)\n(\n  post_with_retries \"${TEAMCITY_URL}/admin/editProject.html?init=1\" \"guestLogin=true\" || true\n) >/dev/null 2>&1 || true\n\n# Log basic status\necho \"[+] TeamCity should be initialized. Access: ${TEAMCITY_URL}\"\necho \"[+] If admin user was created by this script: ${ADMIN_USER}:${ADMIN_PASS}\"\n\n# Bring foreground to the TeamCity process\nwait ${TC_PID}\n"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2023-42793/custom\n\u2514\u2500\u2500 docker-compose.yml\n\u2514\u2500\u2500 teamcity\n    \u251c\u2500\u2500 Dockerfile\n    \u2514\u2500\u2500 entrypoint.sh"
}