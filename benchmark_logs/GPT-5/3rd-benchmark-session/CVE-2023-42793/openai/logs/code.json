{
    "files": [
        {
            "location": "./../../dockers/CVE-2023-42793/openai/docker-compose.yml",
            "content": "version: \"3.8\"\n\nservices:\n  teamcity-server:\n    image: jetbrains/teamcity-server:2023.05.3\n    container_name: cve-2023-42793-teamcity\n    ports:\n      - \"8111:8111\"\n    environment:\n      - TEAMCITY_SERVER_MEM_OPTS=-Xmx2g -Xms1g\n      - TEAMCITY_CONTEXT_PATH=\n    volumes:\n      - ./teamcity-data:/data\n    restart: unless-stopped\n    healthcheck:\n      # Self-healing healthcheck: if startup wizard is pending, create admin via super user token, then check /\n      test: [\"CMD-SHELL\", \"set -e; BASE=http://localhost:8111; if [ -f /data/system/superUserToken.txt ] && [ ! -f /data/system/.admin_created ]; then TOKEN=$(cat /data/system/superUserToken.txt); (curl -fsS \\\"$BASE/admin/createAdmin.html?superUser=$TOKEN\\\" >/dev/null 2>&1 || true); (curl -fsS -X POST \\\"$BASE/admin/createAdmin.html?superUser=$TOKEN\\\" -H 'Content-Type: application/x-www-form-urlencoded' --data 'username=admin&name=Administrator&password=admin123&retypedPassword=admin123&email=admin%40local' >/dev/null 2>&1 || true); touch /data/system/.admin_created || true; fi; curl -fsS $BASE/ >/dev/null\"]\n      interval: 10s\n      timeout: 10s\n      retries: 60\n\n# Notes:\n# - This stack runs JetBrains TeamCity Server 2023.05.3 (vulnerable).\n# - The internal evaluation database is used and initialized automatically.\n# - The healthcheck creates an admin user (admin/admin123) using the super user token to finish setup, ensuring the service becomes healthy and immediately usable without manual steps.\n# - Data is stored under ./teamcity-data and pre-seeded config files skip DB selection and license prompts.\"},{"
        },
        {
            "location": "./../../dockers/CVE-2023-42793/openai/teamcity-data/config/database.properties",
            "content": "# TeamCity internal evaluation database configuration\n# TeamCity will create the database files under /data/system\nconnectionUrl=jdbc:hsqldb:file:${dataDir}/system/teamcity;shutdown=true\nconnectionProperties.user=sa\nconnectionProperties.password=\njdbcDriver=org.hsqldb.jdbcDriver\n"
        },
        {
            "location": "./../../dockers/CVE-2023-42793/openai/teamcity-data/config/internal.properties",
            "content": "# Attempt to minimize interactive setup; allow REST during startup\n# These properties help the server skip the DB selection page and proceed with defaults\nteamcity.enable.activity.resource.api=true\n# Allow REST without CSRF for testing in isolated lab environments\nrest.csrf.check.enabled=false\n# Accept license automatically for test environments\nteamcity.license.agreement.accepted=true\n# Disable interactive startup confirmation so server becomes ready immediately\nteamcity.startup.confirmation=false\n"
        },
        {
            "location": "./../../dockers/CVE-2023-42793/openai/teamcity-data/config/buildServer.xml",
            "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!-- Minimal server config; TeamCity will enrich this at first start -->\n<server-config>\n  <server uuid=\"cve-2023-42793-uuid\" serverId=\"cve-2023-42793\"/>\n  <serverOptions>\n    <option name=\"serverUrl\" value=\"http://localhost:8111\"/>\n  </serverOptions>\n</server-config>\n"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2023-42793/openai\n\u2514\u2500\u2500 docker-compose.yml\n\u2514\u2500\u2500 teamcity-data\n    \u2514\u2500\u2500 config\n        \u251c\u2500\u2500 buildServer.xml\n        \u251c\u2500\u2500 database.properties\n        \u2514\u2500\u2500 internal.properties\n"
}