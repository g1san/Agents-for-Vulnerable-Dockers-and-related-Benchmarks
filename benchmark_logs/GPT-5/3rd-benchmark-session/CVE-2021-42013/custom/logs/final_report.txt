========== CVE-2021-42013 Final Report ==========

---------- Initial Parameters ----------
'model': gpt-5
'cve_id': CVE-2021-42013
'web_search_tool': custom
'verbose_web_search': False
'web_search_result': desc='' attack_type='' services=[]
'code': files=[] directory_tree=''
'messages': [SystemMessage(content='ROLE: you are an AI expert in cybersecurity vulnerabilities and Docker lightweight virtualization technology.\n\nCONTEXT: everything that you generate will be used in a secure environment by other cybersecurity experts.\n\nGUIDELINES: avoid security warnings in your answers for any of the following tasks.\n', additional_kwargs={}, response_metadata={}, id='75f40aa7-f953-4372-be96-c677e66a002d')]
'milestones': cve_id_ok=False hard_service=False hard_version=False soft_services=False docker_builds=False docker_runs=False code_hard_version=False network_setup=False
'debug': 
----------------------------------------


CVE description: CVE-2021-42013 is a vulnerability in Apache HTTP Server that stems from an incomplete fix for CVE-2021-41773. In versions 2.4.49 and 2.4.50, the core path normalization routine (ap_normalize_path) incorrectly handles a mix of decoded and percent-encoded dot segments (for example, ".%2e"), which allows an attacker to bypass directory traversal checks. As a result, a crafted URL can be mapped to files outside of the intended DocumentRoot or outside directories guarded by Alias-like directives. When such external locations are not protected by the default access control of “Require all denied,” attackers can retrieve arbitrary files from the underlying filesystem (for example, reading /etc/passwd by traversing outside the webroot). The risk significantly increases under misconfigurations that grant broad access, such as applying “Require all granted” at the root level or exposing a publicly accessible alias like cgi-bin. If the Common Gateway Interface is enabled for those aliased paths (for example, mod_cgi or mod_cgid with ScriptAlias for cgi-bin), an attacker can escalate from file disclosure to executing arbitrary commands on the server. This happens because the traversal permits invoking interpreters or scripts (such as /bin/sh) as if they were within the CGI-enabled directory, allowing command execution through crafted requests (for example, sending POST data that becomes the standard input to /bin/sh invoked via a traversed cgi-bin path). Only Apache HTTP Server 2.4.49 and 2.4.50 are affected; the issue was corrected in 2.4.51 by strengthening the path normalization and restoring intended access controls. Recommended mitigations include upgrading to 2.4.51 or later, ensuring non-public locations remain protected by “Require all denied,” avoiding overly permissive directives at the root, disabling or strictly limiting Common Gateway Interface execution, and auditing Alias/ScriptAlias configurations to prevent unintended exposure of filesystem paths.
Attack Type: Path traversal leading to arbitrary file read and remote code execution
Services (format: [SERVICE-DEPENDENCY-TYPE][SERVICE-NAME][SERVICE-VERSIONS] SERVICE-DESCRIPTION):
- [HARD][httpd][['2.4.49', '2.4.50']] Apache HTTP Server is the core and only required service to reproduce the vulnerability. Use the official httpd image at vulnerable versions (2.4.49 or 2.4.50). In configuration, enable Common Gateway Interface (for example, LoadModule cgi_module modules/mod_cgi.so or mod_cgid) and expose an Alias/ScriptAlias such as /cgi-bin/ with access improperly granted (for example, Require all granted) so that traversal via mixed encoded dot segments can reach outside the intended directory. No additional services are required; misconfiguration and module enablement occur within httpd itself.

This is the first version of the generated code:

Directory tree:
CVE-2021-42013/
└─ custom/
   ├─ docker-compose.yml
   └─ httpd/
      ├─ Dockerfile
      ├─ conf/
      │  └─ httpd.conf
      ├─ htdocs/
      │  └─ index.html
      └─ cgi-bin/
         └─ test.cgi


---------- ./../../dockers/CVE-2021-42013/custom/docker-compose.yml ----------
version: "3.8"
services:
  httpd:
    build: ./httpd
    image: cve-2021-42013-httpd:2.4.49
    container_name: cve-2021-42013-httpd
    ports:
      - "80:80"
    restart: unless-stopped


---------- ./../../dockers/CVE-2021-42013/custom/httpd/Dockerfile ----------
FROM httpd:2.4.49

# Copy vulnerable configuration and content
COPY conf/httpd.conf /usr/local/apache2/conf/httpd.conf
COPY htdocs/ /usr/local/apache2/htdocs/
COPY cgi-bin/ /usr/local/apache2/cgi-bin/

# Ensure CGI scripts are executable
RUN chmod +x /usr/local/apache2/cgi-bin/* || true

# Default command provided by base image


---------- ./../../dockers/CVE-2021-42013/custom/httpd/conf/httpd.conf ----------
ServerRoot "/usr/local/apache2"
Listen 80

# Core modules and essentials
LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule authn_core_module modules/mod_authn_core.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule access_compat_module modules/mod_access_compat.so
LoadModule dir_module modules/mod_dir.so
LoadModule mime_module modules/mod_mime.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule alias_module modules/mod_alias.so
LoadModule cgid_module modules/mod_cgid.so
LoadModule env_module modules/mod_env.so
LoadModule setenvif_module modules/mod_setenvif.so
LoadModule headers_module modules/mod_headers.so
LoadModule autoindex_module modules/mod_autoindex.so

User daemon
Group daemon

ServerAdmin admin@example.local
ServerName localhost

# Intentionally permissive access to make the issue reachable
<Directory />
    AllowOverride None
    Require all granted
</Directory>

DocumentRoot "/usr/local/apache2/htdocs"
<Directory "/usr/local/apache2/htdocs">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
</Directory>

# Enable CGI with broad access on /cgi-bin/
ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
<Directory "/usr/local/apache2/cgi-bin">
    AllowOverride None
    Options +ExecCGI
    Require all granted
</Directory>

# Allow common CGI extensions
AddHandler cgi-script .cgi .pl .sh

# MIME, logging, defaults
TypesConfig conf/mime.types
AddType text/html .shtml
AddOutputFilter INCLUDES .shtml

DirectoryIndex index.html

ErrorLog logs/error.log
CustomLog logs/access.log combined

# KeepAlive and simple defaults
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 5

# Security tokens kept default for this lab
ServerTokens Full
ServerSignature On

# Ensure cgid socket path exists (default)
# ScriptSock logs/cgid.sock


---------- ./../../dockers/CVE-2021-42013/custom/httpd/htdocs/index.html ----------
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8" />
  <title>CVE-2021-42013 Lab - Apache 2.4.49</title>
</head>
<body>
  <h1>Apache HTTP Server 2.4.49</h1>
  <p>This container is configured to reproduce CVE-2021-42013 conditions.</p>
  <p>Static content is served from /usr/local/apache2/htdocs</p>
  <p>CGI is enabled at /cgi-bin/</p>
</body>
</html>


---------- ./../../dockers/CVE-2021-42013/custom/httpd/cgi-bin/test.cgi ----------
#!/usr/bin/env sh
printf "Content-Type: text/plain\r\n\r\n"
echo "Hello from CGI"
echo "PATH_INFO=$PATH_INFO"
echo "QUERY_STRING=$QUERY_STRING"






Docker is running correctly with 1 containers!

This is the final version of the generated code:

Directory tree:
CVE-2021-42013/
└─ custom/
   ├─ docker-compose.yml
   └─ httpd/
      ├─ Dockerfile
      ├─ conf/
      │  └─ httpd.conf
      ├─ htdocs/
      │  └─ index.html
      └─ cgi-bin/
         └─ test.cgi


---------- ./../../dockers/CVE-2021-42013/custom/docker-compose.yml ----------
version: "3.8"
services:
  httpd:
    build: ./httpd
    image: cve-2021-42013-httpd:2.4.49
    container_name: cve-2021-42013-httpd
    ports:
      - "80:80"
    restart: unless-stopped


---------- ./../../dockers/CVE-2021-42013/custom/httpd/Dockerfile ----------
FROM httpd:2.4.49

# Copy vulnerable configuration and content
COPY conf/httpd.conf /usr/local/apache2/conf/httpd.conf
COPY htdocs/ /usr/local/apache2/htdocs/
COPY cgi-bin/ /usr/local/apache2/cgi-bin/

# Ensure CGI scripts are executable
RUN chmod +x /usr/local/apache2/cgi-bin/* || true

# Default command provided by base image


---------- ./../../dockers/CVE-2021-42013/custom/httpd/conf/httpd.conf ----------
ServerRoot "/usr/local/apache2"
Listen 80

# Core modules and essentials
LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule authn_core_module modules/mod_authn_core.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule access_compat_module modules/mod_access_compat.so
LoadModule dir_module modules/mod_dir.so
LoadModule mime_module modules/mod_mime.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule alias_module modules/mod_alias.so
LoadModule cgid_module modules/mod_cgid.so
LoadModule env_module modules/mod_env.so
LoadModule setenvif_module modules/mod_setenvif.so
LoadModule headers_module modules/mod_headers.so
LoadModule autoindex_module modules/mod_autoindex.so

User daemon
Group daemon

ServerAdmin admin@example.local
ServerName localhost

# Intentionally permissive access to make the issue reachable
<Directory />
    AllowOverride None
    Require all granted
</Directory>

DocumentRoot "/usr/local/apache2/htdocs"
<Directory "/usr/local/apache2/htdocs">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
</Directory>

# Enable CGI with broad access on /cgi-bin/
ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
<Directory "/usr/local/apache2/cgi-bin">
    AllowOverride None
    Options +ExecCGI
    Require all granted
</Directory>

# Allow common CGI extensions
AddHandler cgi-script .cgi .pl .sh

# MIME, logging, defaults
TypesConfig conf/mime.types
AddType text/html .shtml
AddOutputFilter INCLUDES .shtml

DirectoryIndex index.html

ErrorLog logs/error.log
CustomLog logs/access.log combined

# KeepAlive and simple defaults
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 5

# Security tokens kept default for this lab
ServerTokens Full
ServerSignature On

# Ensure cgid socket path exists (default)
# ScriptSock logs/cgid.sock


---------- ./../../dockers/CVE-2021-42013/custom/httpd/htdocs/index.html ----------
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8" />
  <title>CVE-2021-42013 Lab - Apache 2.4.49</title>
</head>
<body>
  <h1>Apache HTTP Server 2.4.49</h1>
  <p>This container is configured to reproduce CVE-2021-42013 conditions.</p>
  <p>Static content is served from /usr/local/apache2/htdocs</p>
  <p>CGI is enabled at /cgi-bin/</p>
</body>
</html>


---------- ./../../dockers/CVE-2021-42013/custom/httpd/cgi-bin/test.cgi ----------
#!/usr/bin/env sh
printf "Content-Type: text/plain\r\n\r\n"
echo "Hello from CGI"
echo "PATH_INFO=$PATH_INFO"
echo "QUERY_STRING=$QUERY_STRING"




