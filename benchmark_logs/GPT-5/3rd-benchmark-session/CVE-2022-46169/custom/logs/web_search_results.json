{
    "desc": "CVE-2022-46169 is a security flaw in the Cacti network monitoring application\u2019s remote polling interface (notably the remote_agent.php endpoint) that enables an unauthenticated attacker to achieve arbitrary command execution on the Cacti server. The vulnerability arises from a two\u2011stage exploitation chain. First, there is an authentication bypass stemming from how remote_agent.php determines and authorizes the client. The code calls remote_client_authorized(), which relies on get_client_addr() to obtain the requester\u2019s IP address. This resolver trusts attacker-controlled HTTP forwarding headers (such as X-Forwarded-For or similar), allowing a remote attacker to spoof the source IP to the Cacti server\u2019s own address. The IP is then reverse-resolved using gethostbyaddr() and compared against poller hostnames in Cacti\u2019s database; by default, a local poller entry often matches, causing the authorization check to succeed without valid credentials. After this bypass, the attacker can trigger the polldata action that invokes poll_for_data(). Within this code path, certain poller items that use the POLLER_ACTION_SCRIPT_PHP execution mode lead to construction of a shell command via proc_open(), where the poller_id parameter taken from the request (retrieved via get_nfilter_request_var without strict type validation) is concatenated into the command line without proper sanitization. As a result, the attacker can inject shell metacharacters through poller_id (for example, using a value like ;id) to execute operating system commands under the privileges of the web server user. Practical exploitation typically requires valid host_id and local_data_id values, but those identifiers are often present by default (for example through common templates such as Device - Uptime) and can be guessed or enumerated. The combination of the client-IP-based authorization bypass and subsequent command injection yields unauthenticated arbitrary command execution. The issue was reported to affect Cacti 1.2.22, and it is fixed in 1.2.23 and in the 1.3.x line. Mitigations applied by the project include defaulting to REMOTE_ADDR for client IP determination unless explicitly configured to trust proxy headers, validating poller_id as an integer, and escaping shell arguments before use.",
    "attack_type": "Remote unauthenticated arbitrary command execution via authentication bypass followed by command injection",
    "services": [
        {
            "name": "cacti/cacti",
            "version": [
                "1.2.22"
            ],
            "dependency_type": "HARD",
            "description": "Cacti application container providing the vulnerable remote_agent.php endpoint. Version 1.2.22 is affected and enables the authentication-bypass plus command-injection chain that leads to unauthenticated arbitrary command execution."
        },
        {
            "name": "mariadb",
            "version": [
                "10.5"
            ],
            "dependency_type": "SOFT-DB",
            "description": "Relational database required by Cacti to operate (store poller configuration, devices, and templates that are referenced during the vulnerable code path). Any compatible 10.x series is suitable; 10.5 provides stable compatibility with Cacti 1.2.22."
        }
    ],
    "input_tokens": 120912,
    "output_tokens": 3287,
    "query": "CVE-2022-46169 details exploit Advisory Cacti Unauthenticated command injection pre-auth RCE"
}