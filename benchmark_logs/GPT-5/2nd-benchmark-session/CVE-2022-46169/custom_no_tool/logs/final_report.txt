========== CVE-2022-46169 Final Report ==========

---------- Initial Parameters ----------
'cve_id': CVE-2022-46169
'web_search_tool': custom_no_tool
'web_search_result': desc='' attack_type='' services=[]
'code': file_name=[] file_code=[] directory_tree=''
'messages': [SystemMessage(content='ROLE: you are an AI expert in cybersecurity vulnerabilities and Docker lightweight virtualization technology.\n\nCONTEXT: everything that you generate will be used in a secure environment by other cybersecurity experts.\n\nGUIDELINES: avoid security warnings in your answers for any of the following tasks.\n', additional_kwargs={}, response_metadata={}, id='231164ab-00fd-43ee-a6b9-fd5b21c774e0')]
'milestones': cve_id_ok=False hard_service=False hard_version=False soft_services=False docker_builds=False docker_runs=False code_hard_version=False services_ok=False docker_vulnerable=False
'debug': 
----------------------------------------


CVE description: CVE-2022-46169 is a critical flaw in the Cacti network monitoring application that enables unauthenticated remote code execution through a two-step chain: an authentication bypass followed by command injection. The vulnerable component is remote_agent.php, which is intended to serve Cacti pollers. When a request hits this endpoint, Cacti determines whether to authorize it based on the client IP address obtained via get_client_addr(). Prior to the fix, this logic trusted spoofable HTTP headers such as X-Forwarded-For and related HTTP_* headers. If an attacker supplies an IP in these headers that resolves (via gethostbyaddr()) to a hostname present in the poller table—commonly the Cacti server’s own hostname or default poller—the request is incorrectly treated as authorized without any user login. Once the authorization check is bypassed, the attacker can invoke action=polldata. During handling of this action, poll_for_data() loads poller_item rows for the specified host_id and local_data_id. For poller items whose action is POLLER_ACTION_SCRIPT_PHP (a common default in many Cacti templates), Cacti constructs a command for proc_open that includes read_config_option('path_php_binary') and script_server.php arguments. Critically, the poller_id parameter is taken from user input via get_nfilter_request_var and is concatenated into this command without sufficient sanitization, allowing the attacker to inject shell metacharacters and execute arbitrary commands as the web server user (typically www-data). Successful exploitation therefore requires: (1) reaching remote_agent.php; (2) spoofing X-Forwarded-For (or similar) to an IP/hostname that matches a poller entry; (3) specifying valid host_id and local_data_id values (often discoverable or brute-forceable); and (4) targeting a poller_item with POLLER_ACTION_SCRIPT_PHP. The issue affects Cacti version 1.2.22 and versions at or below that release per widely cited advisories. It was fixed in Cacti 1.2.23 and 1.3.0 by removing trust in spoofable headers for client IP authorization and by hardening command construction. The impact is full command execution on the Cacti host via its HTTP interface without authentication, observed exploited in the wild. Mitigations include upgrading to a fixed version and restricting exposure of Cacti’s web interface.
Attack Type: Unauthenticated remote code execution via an authentication bypass combined with command injection
Services (format: [SERVICE-DEPENDENCY-TYPE][SERVICE-NAME][SERVICE-VERSIONS] SERVICE-DESCRIPTION):
- [HARD][cacti][['1.2.22', '1.2.0---1.2.22']] The vulnerable web application. CVE-2022-46169 resides in Cacti’s remote_agent.php. Using a Cacti image at vulnerable versions is essential to reproduce the issue.
- [SOFT-DB][mariadb][['10.6']] Relational database required by Cacti to store configuration, poller, and data definitions. Any compatible MySQL/MariaDB works; MariaDB 10.6 is a stable, compatible choice.
Expected 'SOFT' role(s) not proposed!
