{
    "desc": "CVE-2022-46169 is a critical vulnerability in Cacti that allows an unauthenticated remote attacker to execute arbitrary system commands on the server running the Cacti web application. The issue resides in the remote_agent.php endpoint, which is intended to serve data to Cacti pollers. The exploitation flows in two stages: (1) an authentication/authorization bypass based on spoofed client IP headers and (2) a command injection leading to arbitrary command execution as the web server user. In the first stage, remote_agent.php relies on a function (get_client_addr in lib/functions.php) that derives the client address by trusting attacker-supplied HTTP headers such as X-Forwarded-For or similar, when no filtering proxy is configured. The resolved client hostname is then matched against entries in the poller table. Because default Cacti installations typically include a poller entry that corresponds to the Cacti server itself, an attacker can spoof a header to pretend to be the local trusted poller (for example, by setting X-Forwarded-For to the server\u2019s own IP or to 127.0.0.1), thereby passing the authorization check without credentials. In the second stage, once the attacker is treated as an authorized poller, the action=polldata path in remote_agent.php triggers poll_for_data, which loads a poller item identified by host_id and local_data_id. If that poller item\u2019s action is POLLER_ACTION_SCRIPT_PHP (commonly present in default templates such as uptime or polling_time), the code constructs a command line for proc_open that includes a user-controlled parameter, poller_id, obtained through get_nfilter_request_var without strict type validation. This allows command concatenation/injection into the proc_open call and results in arbitrary command execution under the privileges of the web server process. Successful exploitation does not require prior authentication, only network access to the Cacti web interface and knowledge or brute-forcing of valid host_id and local_data_id that map to a SCRIPT_PHP poller item. Official fixes change the default client IP resolution to rely on REMOTE_ADDR unless trusted proxy headers are explicitly configured by an administrator, and they validate poller_id as an integer and escape it with cacti_escapeshellarg. The vulnerability affects Cacti up to and including 1.2.22 and is fixed in 1.2.23 (and later lines).",
    "attack_type": "Unauthenticated remote code execution via authentication bypass and command injection",
    "services": [
        {
            "name": "cacti/cacti",
            "version": [
                "1.2.0---1.2.22",
                "1.2.22"
            ],
            "dependency_type": "HARD",
            "description": "The vulnerable Cacti web application providing the remote_agent.php endpoint where the authentication bypass and command injection occur. Versions up to and including 1.2.22 are affected (fixed in 1.2.23)."
        },
        {
            "name": "mariadb",
            "version": [
                "10.6"
            ],
            "dependency_type": "SOFT-DB",
            "description": "Relational database required by Cacti to operate (store configuration, poller data, and templates). Any compatible MySQL/MariaDB works; MariaDB 10.6 is a stable choice that interoperates with Cacti 1.2.x."
        }
    ],
    "input_tokens": 17117,
    "output_tokens": 2591,
    "query": "CVE-2022-46169 Cacti unauthenticated command injection remote code execution remote_agent.php polldata details exploit fixed version"
}