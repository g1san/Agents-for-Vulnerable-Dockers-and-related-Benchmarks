{
    "desc": "CVE-2023-23752 is a critical improper access control flaw in the Joomla! 4 content management system that results in an authentication bypass on Joomla\u2019s web services (API) endpoints. The vulnerability affects Joomla versions 4.0.0 through 4.2.7 and is fixed in 4.2.8 and later. The core issue lies in how Joomla\u2019s web service router processes certain query parameters during route parsing. By injecting specific parameters (notably making the endpoint treat the request as public), an unauthenticated remote client can cause the system to skip or bypass the usual authorization checks, turning endpoints that normally require authentication into publicly accessible ones. This design mistake effectively grants read access to sensitive API routes over ordinary Hypertext Transfer Protocol without any credentials.\n\nBecause of this, unauthenticated attackers can directly query Joomla\u2019s API endpoints (for example, /api/index.php/v1/config/application?public=true and /api/index.php/v1/users?public=true) to retrieve confidential configuration and user information. Publicly reachable XML endpoints within the application have also been observed leaking metadata that includes configuration details. The most damaging disclosures regularly include plaintext database connection details (such as MySQL or MariaDB hostname, username, and password), site settings, and user account information (usernames, email addresses, and group memberships). With these secrets in hand, adversaries can pivot to further compromise: connect to the site\u2019s database, change a Joomla Super User password, log into the administrative interface, modify templates, or install extensions\u2014steps that can ultimately lead to remote code execution. Even when direct database access is not exposed to the internet, the leaked user data enables credential stuffing or targeted phishing against site administrators. The flaw has been actively exploited and is cataloged in authoritative advisories (NIST/NVD, vendor advisories, and multiple security vendors). The recommended mitigation is to upgrade Joomla to version 4.2.8 or later and to restrict access to web service endpoints where possible.\n\nIn a minimal Dockerized environment that is intentionally vulnerable to CVE-2023-23752 for testing purposes, the essential element is a Joomla 4 instance within the affected version range, reachable over Hypertext Transfer Protocol. Joomla requires a relational database backend to operate; therefore, a database service is needed for the application to boot and expose the vulnerable API. No additional services (such as separate web servers, message queues, caches, or administration frontends) are required to make the vulnerability triggerable; the official Joomla container already includes the PHP runtime and Apache HTTP Server to serve the application and its API endpoints. The minimal, working, and testable setup thus consists of the Joomla application and a supported database (for example, MariaDB or MySQL), with the Joomla container configured to connect to the database so the site installs and the API becomes accessible for testing the flaw.",
    "attack_type": "Authentication bypass enabling unauthenticated information disclosure over Hypertext Transfer Protocol",
    "services": [
        {
            "name": "joomla",
            "version": [
                "4.0.0---4.2.7",
                "4.2.7-apache",
                "4.2.7-php8.1-apache"
            ],
            "dependency_type": "HARD",
            "description": "Joomla! CMS is the vulnerable application exposing the web services (API) endpoints affected by CVE-2023-23752. Versions 4.0.0 through 4.2.7 contain the improper access check that allows unauthenticated access to sensitive API routes. The official Docker image includes Apache and PHP, so no separate web server or PHP service is required."
        },
        {
            "name": "mariadb",
            "version": [
                "10.6"
            ],
            "dependency_type": "SOFT-DB",
            "description": "Relational database required by Joomla to install and run, ensuring the web application (and its vulnerable API endpoints) are operational. MariaDB 10.6 is compatible with Joomla 4 and suffices to make the Joomla instance functional for testing the vulnerability."
        }
    ],
    "input_tokens": 15802,
    "output_tokens": 2266,
    "query": "CVE-2023-23752 Joomla unauthorized information disclosure webservice endpoint database credentials 4.2.7"
}