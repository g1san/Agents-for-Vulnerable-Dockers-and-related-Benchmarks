========== CVE-2022-24706 Final Report ==========

---------- Initial Parameters ----------
'cve_id': CVE-2022-24706
'web_search_tool': custom_no_tool
'web_search_result': desc='' attack_type='' services=[]
'code': file_name=[] file_code=[] directory_tree=''
'messages': [SystemMessage(content='ROLE: you are an AI expert in cybersecurity vulnerabilities and Docker lightweight virtualization technology.\n\nCONTEXT: everything that you generate will be used in a secure environment by other cybersecurity experts.\n\nGUIDELINES: avoid security warnings in your answers for any of the following tasks.\n', additional_kwargs={}, response_metadata={}, id='4c2916e1-256f-43aa-ad9e-24858ab3b69e')]
'milestones': cve_id_ok=False hard_service=False hard_version=False soft_services=False docker_builds=False docker_runs=False code_hard_version=False services_ok=False docker_vulnerable=False
'debug': 
----------------------------------------


CVE description: CVE-2022-24706 is a critical flaw in Apache CouchDB’s default Erlang distribution configuration that allowed unauthenticated takeover of default installations up to and including version 3.2.1. CouchDB is implemented in Erlang and, by default in affected versions, runs as an Erlang node that registers with the Erlang Port Mapper Daemon (epmd) on TCP port 4369 and listens on a random Erlang distribution port bound to all interfaces. Historically, these installs also used a predictable, shared Erlang node cookie value (commonly “monster”). If an attacker can reach both epmd and the Erlang distribution port, the attacker can query epmd to discover the CouchDB node’s distribution port and then authenticate to the Erlang node using the known cookie. Once authenticated at the Erlang distribution layer, the attacker can issue Erlang commands (for example, invoking operating system command execution primitives) as the CouchDB operating system user, effectively gaining administrative control over CouchDB without any interaction with the HTTP API or its authentication. This results in full administrative privilege escalation on the database service and remote command execution on the underlying host account running CouchDB. Systems that do not expose epmd and the Erlang distribution port externally are not vulnerable, even if the HTTP API (default 5984) is reachable. The issue is fixed in CouchDB 3.2.2 and later, which reject the default cookie and bind epmd and the distribution port to localhost by default. Recommended mitigations include upgrading to 3.2.2+, configuring a unique Erlang cookie, and restricting network access so that only the HTTP API is exposed in single-node deployments.
Attack Type: Unauthenticated remote code execution and administrative privilege escalation via exposed Erlang distribution and default cookie authentication bypass
Services (format: [SERVICE-DEPENDENCY-TYPE][SERVICE-NAME][SERVICE-VERSIONS] SERVICE-DESCRIPTION):
- [HARD][couchdb][['1.0.0---3.2.1', '3.2.1']] Apache CouchDB itself is sufficient to reproduce the vulnerability. In affected versions, the container’s embedded Erlang runtime starts epmd (TCP/4369) and an Erlang distribution port, and uses a default cookie. No additional external services are required; exposing epmd and the distribution port from this container makes the system vulnerable as described.

This is the first version of the generated code:

Directory tree:
./../../dockers/CVE-2022-24706/custom_no_tool
└── couchdb
    ├── Dockerfile
    ├── local.ini
    └── vm.args
└── docker-compose.yml

---------- ./../../dockers/CVE-2022-24706/custom_no_tool/docker-compose.yml ----------
version: "3.8"
services:
  couchdb:
    build: ./couchdb
    image: couchdb-vuln-3.2.1
    container_name: cve-2022-24706-couchdb
    ports:
      - "5984:5984"   # CouchDB HTTP API
      - "4369:4369"   # EPMD
      - "9100:9100"   # Erlang distribution fixed port
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=admin
    restart: unless-stopped


---------- ./../../dockers/CVE-2022-24706/custom_no_tool/couchdb/Dockerfile ----------
FROM couchdb:3.2.1

USER root

# Provide permissive HTTP bind and ensure Erlang distribution settings and cookie
COPY local.ini /opt/couchdb/etc/local.d/local.ini
COPY vm.args /opt/couchdb/etc/erlang/vm.args

# Set the Erlang cookie to the historically default, predictable value
RUN echo -n "monster" > /opt/couchdb/.erlang.cookie \
    && chown couchdb:couchdb /opt/couchdb/.erlang.cookie \
    && chmod 400 /opt/couchdb/.erlang.cookie \
    && chown -R couchdb:couchdb /opt/couchdb/etc

EXPOSE 5984 4369 9100

USER couchdb


---------- ./../../dockers/CVE-2022-24706/custom_no_tool/couchdb/local.ini ----------
[chttpd]
bind_address = 0.0.0.0

[httpd]
bind_address = 0.0.0.0

[couchdb]
single_node = true

[cluster]
q = 1
n = 1


---------- ./../../dockers/CVE-2022-24706/custom_no_tool/couchdb/vm.args ----------
-name couchdb@couchdb
-setcookie monster
-kernel inet_dist_listen_min 9100 inet_dist_listen_max 9100
+K true
+A 16





Docker is running correctly with 1 containers!



This is the final version of the generated code:

Directory tree:
./../../dockers/CVE-2022-24706/custom_no_tool
└── couchdb
    ├── Dockerfile
    ├── local.ini
    └── vm.args
└── docker-compose.yml

---------- ./../../dockers/CVE-2022-24706/custom_no_tool/docker-compose.yml ----------
version: "3.8"
services:
  couchdb:
    build: ./couchdb
    image: couchdb-vuln-3.2.1
    container_name: cve-2022-24706-couchdb
    ports:
      - "5984:5984"   # CouchDB HTTP API
      - "4369:4369"   # EPMD
      - "9100:9100"   # Erlang distribution fixed port
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=admin
    restart: unless-stopped


---------- ./../../dockers/CVE-2022-24706/custom_no_tool/couchdb/Dockerfile ----------
FROM couchdb:3.2.1

USER root

# Provide permissive HTTP bind and ensure Erlang distribution settings and cookie
COPY local.ini /opt/couchdb/etc/local.d/local.ini
COPY vm.args /opt/couchdb/etc/erlang/vm.args

# Set the Erlang cookie to the historically default, predictable value
RUN echo -n "monster" > /opt/couchdb/.erlang.cookie \
    && chown couchdb:couchdb /opt/couchdb/.erlang.cookie \
    && chmod 400 /opt/couchdb/.erlang.cookie \
    && chown -R couchdb:couchdb /opt/couchdb/etc

EXPOSE 5984 4369 9100

USER couchdb


---------- ./../../dockers/CVE-2022-24706/custom_no_tool/couchdb/local.ini ----------
[chttpd]
bind_address = 0.0.0.0

[httpd]
bind_address = 0.0.0.0

[couchdb]
single_node = true

[cluster]
q = 1
n = 1


---------- ./../../dockers/CVE-2022-24706/custom_no_tool/couchdb/vm.args ----------
-name couchdb@couchdb
-setcookie monster
-kernel inet_dist_listen_min 9100 inet_dist_listen_max 9100
+K true
+A 16




