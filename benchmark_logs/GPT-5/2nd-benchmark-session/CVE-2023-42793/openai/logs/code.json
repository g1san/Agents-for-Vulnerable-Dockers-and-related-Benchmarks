{
    "file_name": [
        "./../../dockers/CVE-2024-23897/openai/docker-compose.yml",
        "./../../dockers/CVE-2024-23897/openai/Dockerfile",
        "./../../dockers/CVE-2024-23897/openai/init.groovy.d/basic-security.groovy"
    ],
    "file_code": [
        "version: \"3.8\"\nservices:\n  jenkins:\n    build: .\n    image: cve-2024-23897-jenkins:2.441\n    container_name: cve-2024-23897-jenkins\n    ports:\n      - \"8080:8080\"\n    environment:\n      - JENKINS_OPTS=--httpPort=8080\n    volumes:\n      - jenkins_home:/var/jenkins_home\n    restart: unless-stopped\nvolumes:\n  jenkins_home:\n",
        "FROM jenkins/jenkins:2.441\n\nUSER root\n# No extra packages required for minimal vulnerable setup\nUSER jenkins\n\n# Ensure setup wizard is skipped and CLI is enabled via HTTP/WebSocket\nENV JAVA_OPTS=\"-Djenkins.install.runSetupWizard=false -Djenkins.CLI.disabled=false\"\n\n# Preconfigure security (admin user, anonymous read) to ease interaction\nCOPY init.groovy.d /usr/share/jenkins/ref/init.groovy.d/\n",
        "import jenkins.model.Jenkins\nimport hudson.security.*\n\ndef instance = Jenkins.getInstance()\n\n// Create local admin user\ndef hudsonRealm = new HudsonPrivateSecurityRealm(false)\nhudsonRealm.createAccount(\"admin\", \"admin\")\ninstance.setSecurityRealm(hudsonRealm)\n\n// Grant anonymous Overall/Read and admin full rights\ndef strategy = new GlobalMatrixAuthorizationStrategy()\nstrategy.add(Jenkins.READ, \"anonymous\")\nstrategy.add(Jenkins.ADMINISTER, \"admin\")\ninstance.setAuthorizationStrategy(strategy)\n\ninstance.save()\n"
    ],
    "directory_tree": "./../../dockers/CVE-2024-23897/openai\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 Dockerfile\n\u2514\u2500\u2500 init.groovy.d\n    \u2514\u2500\u2500 basic-security.groovy"
}