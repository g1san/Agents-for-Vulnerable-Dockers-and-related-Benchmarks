{
    "file_name": [
        "./../../dockers/CVE-2024-23897/custom_no_tool/docker-compose.yml",
        "./../../dockers/CVE-2024-23897/custom_no_tool/jenkins_home/init.groovy.d/basic-security.groovy"
    ],
    "file_code": [
        "services:\n  jenkins:\n    image: jenkins/jenkins:2.426.2-lts-jdk17\n    container_name: cve-2024-23897-jenkins\n    restart: unless-stopped\n    ports:\n      - \"8080:8080\"\n    environment:\n      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false\n    volumes:\n      - ./jenkins_home:/var/jenkins_home\n\nname: cve-2024-23897",
        "import jenkins.model.Jenkins\nimport hudson.security.HudsonPrivateSecurityRealm\nimport hudson.security.FullControlOnceLoggedInAuthorizationStrategy\n\nJenkins j = Jenkins.get()\n\n// Create local admin user\nHudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false)\nif (realm.getUser(\"admin\") == null) {\n  realm.createAccount(\"admin\", \"admin\")\n}\nj.setSecurityRealm(realm)\n\n// Require login for any access; admin has full control\nFullControlOnceLoggedInAuthorizationStrategy strategy = new FullControlOnceLoggedInAuthorizationStrategy()\nstrategy.setAllowAnonymousRead(false)\nj.setAuthorizationStrategy(strategy)\n\nj.save()\n"
    ],
    "directory_tree": "./../../dockers/CVE-2024-23897/custom_no_tool\n\u2514\u2500\u2500 docker-compose.yml\n\u2514\u2500\u2500 jenkins_home\n    \u2514\u2500\u2500 init.groovy.d\n        \u2514\u2500\u2500 basic-security.groovy"
}