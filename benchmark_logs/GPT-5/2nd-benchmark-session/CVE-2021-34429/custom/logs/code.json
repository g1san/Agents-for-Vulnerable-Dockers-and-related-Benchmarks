{
    "file_name": [
        "./../../dockers/CVE-2021-34429/custom/docker-compose.yml",
        "./../../dockers/CVE-2021-34429/custom/jetty/Dockerfile",
        "./../../dockers/CVE-2021-34429/custom/jetty/webapps/root/index.html",
        "./../../dockers/CVE-2021-34429/custom/jetty/webapps/root/private/secret.html",
        "./../../dockers/CVE-2021-34429/custom/jetty/webapps/root/WEB-INF/web.xml",
        "./../../dockers/CVE-2021-34429/custom/jetty/webapps/root/WEB-INF/secret/notes.txt",
        "./../../dockers/CVE-2021-34429/custom/jetty/etc/loginservice.xml",
        "./../../dockers/CVE-2021-34429/custom/jetty/etc/realm.properties",
        "./../../dockers/CVE-2021-34429/custom/jetty/start.d/loginservice.ini"
    ],
    "file_code": [
        "version: '3.8'\nservices:\n  jetty:\n    build:\n      context: ./jetty\n    image: cve-2021-34429-jetty:9.4.42\n    container_name: cve-2021-34429-jetty\n    ports:\n      - \"8080:8080\"\n    restart: unless-stopped\n",
        "FROM jetty:9.4.42-jre11\n\n# Copy an exploded vulnerable webapp as the root context\nCOPY webapps/root /var/lib/jetty/webapps/root\n\n# Provide a realm for BASIC auth via a custom LoginService XML (no module dependency)\nCOPY etc/realm.properties /var/lib/jetty/etc/realm.properties\nCOPY etc/loginservice.xml /var/lib/jetty/etc/loginservice.xml\n\n# Load the login service XML via start.d without referencing non-existent modules\nCOPY start.d/loginservice.ini /var/lib/jetty/start.d/loginservice.ini\n",
        "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Jetty CVE-2021-34429 Demo</title>\n  </head>\n  <body>\n    <h1>Jetty CVE-2021-34429 Demo</h1>\n    <p>This is the public index page at /. Try accessing protected paths like /private/secret.html or internal files under /WEB-INF/.</p>\n  </body>\n</html>\n",
        "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Protected Secret</title>\n  </head>\n  <body>\n    <h2>Protected Secret</h2>\n    <p>If you can read this via a crafted path, the access control has been bypassed.</p>\n  </body>\n</html>\n",
        "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"\n         version=\"3.1\">\n\n  <display-name>cve-2021-34429-demo</display-name>\n\n  <!-- Declarative security constraint protecting /private/* -->\n  <security-constraint>\n    <web-resource-collection>\n      <web-resource-name>Protected Area</web-resource-name>\n      <url-pattern>/private/*</url-pattern>\n    </web-resource-collection>\n    <auth-constraint>\n      <role-name>user</role-name>\n    </auth-constraint>\n  </security-constraint>\n\n  <!-- BASIC auth declared; requires a matching LoginService named ExampleRealm -->\n  <login-config>\n    <auth-method>BASIC</auth-method>\n    <realm-name>ExampleRealm</realm-name>\n  </login-config>\n\n  <!-- A simple default servlet for static content is provided by Jetty; no extra servlet needed -->\n\n  <!-- Note: By Servlet spec, /WEB-INF/* is not directly readable; the vulnerability concerns\n       improper normalization that can expose these files or bypass the constraint above. -->\n</web-app>\n",
        "Top secret notes stored under WEB-INF.\nIf these are retrievable through a crafted request path, the constraint/WEB-INF protections were bypassed.\n",
        "<?xml version=\"1.0\"?>\n<!DOCTYPE Configure PUBLIC \"-//Mort Bay Consulting//DTD Configure//EN\" \"http://www.eclipse.org/jetty/configure_9_3.dtd\">\n\n<!-- Registers a HashLoginService named 'ExampleRealm' so BASIC auth can initialize -->\n<Configure id=\"Server\" class=\"org.eclipse.jetty.server.Server\">\n  <Call name=\"addBean\">\n    <Arg>\n      <New class=\"org.eclipse.jetty.security.HashLoginService\">\n        <Set name=\"name\">ExampleRealm</Set>\n        <Set name=\"config\"><Property name=\"jetty.base\" default=\".\"/>/etc/realm.properties</Set>\n      </New>\n    </Arg>\n  </Call>\n</Configure>\n",
        "## Simple realm for BASIC auth testing\n## format: username: password,role1,role2\nuser: password,user\n",
        "# Register custom LoginService without relying on a Jetty module name\n# Lines referencing .xml files are treated as configurations by start.jar\netc/loginservice.xml\n"
    ],
    "directory_tree": "./../../dockers/CVE-2021-34429/custom\n\u251c\u2500\u2500 docker-compose.yml\n\u2514\u2500\u2500 jetty\n    \u251c\u2500\u2500 Dockerfile\n    \u251c\u2500\u2500 etc\n    \u2502   \u251c\u2500\u2500 loginservice.xml\n    \u2502   \u2514\u2500\u2500 realm.properties\n    \u251c\u2500\u2500 start.d\n    \u2502   \u2514\u2500\u2500 loginservice.ini\n    \u2514\u2500\u2500 webapps\n        \u2514\u2500\u2500 root\n            \u251c\u2500\u2500 WEB-INF\n            \u2502   \u251c\u2500\u2500 secret\n            \u2502   \u2502   \u2514\u2500\u2500 notes.txt\n            \u2502   \u2514\u2500\u2500 web.xml\n            \u251c\u2500\u2500 index.html\n            \u2514\u2500\u2500 private\n                \u2514\u2500\u2500 secret.html\n"
}