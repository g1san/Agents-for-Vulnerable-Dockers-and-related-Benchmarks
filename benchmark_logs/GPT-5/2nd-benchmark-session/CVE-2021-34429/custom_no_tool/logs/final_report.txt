========== CVE-2021-34429 Final Report ==========

---------- Initial Parameters ----------
'cve_id': CVE-2021-34429
'web_search_tool': custom_no_tool
'web_search_result': desc='CVE-2021-34429 is a vulnerability in the Eclipse Jetty web server and servlet container that allows an unauthenticated remote party to access resources that should be blocked under the WEB-INF path of a deployed web application. Jetty’s request handling pipeline performed normalization and decoding of Uniform Resource Identifier path segments in an order that let specially encoded characters (for example, Unicode-encoded dot or a dot combined with a null byte) bypass the security checks that normally prevent direct access to WEB-INF and similar protected locations. In default compliance mode, a crafted request such as “/%u002e/WEB-INF/web.xml” or “/.%00/WEB-INF/web.xml” could be accepted and routed to the underlying resource, exposing files that typically contain sensitive configuration, classpath resources, or application metadata. The flaw is in the Jetty WebApp component (org.eclipse.jetty:jetty-webapp). The issue arose when a change to make normalization align with standard-compliant behavior occurred before decoding, and PathResource behavior allowed aliasing; as a result, protection logic executed against a path representation that did not yet reflect the later-decoded, security-relevant characters. This variant is closely related to earlier improper URI normalization issues and affected multiple Jetty release lines. The impact is unauthorized exposure of sensitive information from the server or application, with no authentication, privileges, or user interaction required; only network access to the Jetty HTTP endpoint is needed. According to authoritative sources (NIST NVD and the official Jetty advisory), the affected versions are Jetty 9.4.37 through 9.4.42, Jetty 10.0.1 through 10.0.5, and Jetty 11.0.1 through 11.0.5; fixes are available in 9.4.43, 10.0.6, and 11.0.6. Practical manifestations include successful retrieval of WEB-INF/web.xml on an otherwise protected application and potential exposure of other resources mapped beneath WEB-INF. Recommended mitigations are to upgrade to the patched versions; as interim measures, administrators can deploy rewrite or validation rules that reject raw URIs containing encoded dot segments or null bytes, and restrict direct access to sensitive paths at the reverse proxy if present. The vulnerability is cataloged as information disclosure with low attack complexity and no need for authentication or user interaction.' attack_type='Sensitive information exposure through unauthorized file read and access control bypass via improper path normalization and decoding' services=[Service(name='jetty', version=['9.4.37---9.4.42', '10.0.1---10.0.5', '11.0.1---11.0.5'], dependency_type='HARD', description='Eclipse Jetty HTTP server and servlet container is the vulnerable component. Running a vulnerable Jetty version alone is sufficient to reproduce and test CVE-2021-34429; no additional services are required to make the system exploitable.')]
'code': file_name=[] file_code=[] directory_tree=''
'messages': [SystemMessage(content='ROLE: you are an AI expert in cybersecurity vulnerabilities and Docker lightweight virtualization technology.\n\nCONTEXT: everything that you generate will be used in a secure environment by other cybersecurity experts.\n\nGUIDELINES: avoid security warnings in your answers for any of the following tasks.\n', additional_kwargs={}, response_metadata={}, id='238a57de-721a-4175-8193-aaaaa7e0dde6')]
'milestones': cve_id_ok=False hard_service=False hard_version=False soft_services=False docker_builds=False docker_runs=False code_hard_version=False services_ok=False docker_vulnerable=False
'debug': 
----------------------------------------

CVE description: CVE-2021-34429 is a vulnerability in the Eclipse Jetty web server and servlet container that allows an unauthenticated remote party to access resources that should be blocked under the WEB-INF path of a deployed web application. Jetty’s request handling pipeline performed normalization and decoding of Uniform Resource Identifier path segments in an order that let specially encoded characters (for example, Unicode-encoded dot or a dot combined with a null byte) bypass the security checks that normally prevent direct access to WEB-INF and similar protected locations. In default compliance mode, a crafted request such as “/%u002e/WEB-INF/web.xml” or “/.%00/WEB-INF/web.xml” could be accepted and routed to the underlying resource, exposing files that typically contain sensitive configuration, classpath resources, or application metadata. The flaw is in the Jetty WebApp component (org.eclipse.jetty:jetty-webapp). The issue arose when a change to make normalization align with standard-compliant behavior occurred before decoding, and PathResource behavior allowed aliasing; as a result, protection logic executed against a path representation that did not yet reflect the later-decoded, security-relevant characters. This variant is closely related to earlier improper URI normalization issues and affected multiple Jetty release lines. The impact is unauthorized exposure of sensitive information from the server or application, with no authentication, privileges, or user interaction required; only network access to the Jetty HTTP endpoint is needed. According to authoritative sources (NIST NVD and the official Jetty advisory), the affected versions are Jetty 9.4.37 through 9.4.42, Jetty 10.0.1 through 10.0.5, and Jetty 11.0.1 through 11.0.5; fixes are available in 9.4.43, 10.0.6, and 11.0.6. Practical manifestations include successful retrieval of WEB-INF/web.xml on an otherwise protected application and potential exposure of other resources mapped beneath WEB-INF. Recommended mitigations are to upgrade to the patched versions; as interim measures, administrators can deploy rewrite or validation rules that reject raw URIs containing encoded dot segments or null bytes, and restrict direct access to sensitive paths at the reverse proxy if present. The vulnerability is cataloged as information disclosure with low attack complexity and no need for authentication or user interaction.
Attack Type: Sensitive information exposure through unauthorized file read and access control bypass via improper path normalization and decoding
Services (format: [SERVICE-DEPENDENCY-TYPE][SERVICE-NAME][SERVICE-VERSIONS] SERVICE-DESCRIPTION):
- [HARD][jetty][['9.4.37---9.4.42', '10.0.1---10.0.5', '11.0.1---11.0.5']] Eclipse Jetty HTTP server and servlet container is the vulnerable component. Running a vulnerable Jetty version alone is sufficient to reproduce and test CVE-2021-34429; no additional services are required to make the system exploitable.
This is the first version of the generated code:

Directory tree:
./../../dockers/CVE-2021-34429/custom_no_tool
├── docker-compose.yml
├── Dockerfile
└── webapps
    └── ROOT
        ├── index.html
        └── WEB-INF
            └── web.xml

---------- ./../../dockers/CVE-2021-34429/custom_no_tool/docker-compose.yml ----------
version: "3.8"
services:
  jetty:
    build: .
    image: cve-2021-34429-jetty:9.4.42
    container_name: cve-2021-34429-jetty
    ports:
      - "8080:8080"
    restart: unless-stopped


---------- ./../../dockers/CVE-2021-34429/custom_no_tool/Dockerfile ----------
FROM jetty:9.4.42-jre11

USER root
COPY webapps/ROOT /var/lib/jetty/webapps/ROOT
RUN chown -R jetty:jetty /var/lib/jetty/webapps/ROOT
USER jetty

# The default CMD from the base image starts Jetty on port 8080


---------- ./../../dockers/CVE-2021-34429/custom_no_tool/webapps/ROOT/index.html ----------
<!doctype html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>Jetty CVE-2021-34429 test app</title>
  </head>
  <body>
    <h1>Jetty test app</h1>
    <p>This is a minimal web application for exercising CVE-2021-34429 on vulnerable Jetty versions.</p>
    <p>Try requesting protected resources under WEB-INF using crafted paths.</p>
  </body>
</html>


---------- ./../../dockers/CVE-2021-34429/custom_no_tool/webapps/ROOT/WEB-INF/web.xml ----------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
  <display-name>cve-2021-34429-test</display-name>
  <description>WEB-INF should not be directly accessible; this file is present to validate access control bypass behavior.</description>
  <!-- Embed easily recognizable content -->
  <context-param>
    <param-name>marker</param-name>
    <param-value>SECRET-MARKER-CVE-2021-34429</param-value>
  </context-param>
</web-app>





Docker is running correctly with 1 containers!



This is the final version of the generated code:

Directory tree:
./../../dockers/CVE-2021-34429/custom_no_tool
├── docker-compose.yml
├── Dockerfile
└── webapps
    └── ROOT
        ├── index.html
        └── WEB-INF
            └── web.xml

---------- ./../../dockers/CVE-2021-34429/custom_no_tool/docker-compose.yml ----------
version: "3.8"
services:
  jetty:
    build: .
    image: cve-2021-34429-jetty:9.4.42
    container_name: cve-2021-34429-jetty
    ports:
      - "8080:8080"
    restart: unless-stopped


---------- ./../../dockers/CVE-2021-34429/custom_no_tool/Dockerfile ----------
FROM jetty:9.4.42-jre11

USER root
COPY webapps/ROOT /var/lib/jetty/webapps/ROOT
RUN chown -R jetty:jetty /var/lib/jetty/webapps/ROOT
USER jetty

# The default CMD from the base image starts Jetty on port 8080


---------- ./../../dockers/CVE-2021-34429/custom_no_tool/webapps/ROOT/index.html ----------
<!doctype html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>Jetty CVE-2021-34429 test app</title>
  </head>
  <body>
    <h1>Jetty test app</h1>
    <p>This is a minimal web application for exercising CVE-2021-34429 on vulnerable Jetty versions.</p>
    <p>Try requesting protected resources under WEB-INF using crafted paths.</p>
  </body>
</html>


---------- ./../../dockers/CVE-2021-34429/custom_no_tool/webapps/ROOT/WEB-INF/web.xml ----------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
  <display-name>cve-2021-34429-test</display-name>
  <description>WEB-INF should not be directly accessible; this file is present to validate access control bypass behavior.</description>
  <!-- Embed easily recognizable content -->
  <context-param>
    <param-name>marker</param-name>
    <param-value>SECRET-MARKER-CVE-2021-34429</param-value>
  </context-param>
</web-app>




The Docker is vulnerable to CVE-2021-34429!