{
    "desc": "CVE-2021-28164 is an information disclosure flaw in the Eclipse Jetty web server and servlet container that stems from improper Uniform Resource Identifier processing order and insufficient validation of percent-encoded dot segments. In the affected releases, Jetty normalized the incoming request path before performing percent-decoding. This allowed ambiguous or disguised path components such as %2e (percent-encoded \".\"), %2e%2e (percent-encoded \"..\"), and related encodings to evade Jetty\u2019s normalization rules that ordinarily prevent traversal into protected areas. As a result, a remote party could send carefully crafted HTTP requests whose request targets include encoded dot segments (for example, /%2e/WEB-INF/web.xml or /context/%2e%2e/WEB-INF/), causing Jetty to resolve and return resources that are meant to be inaccessible, particularly files under the WEB-INF directory of a deployed web application. The WEB-INF directory commonly contains configuration files such as web.xml and other sensitive artifacts that should never be served directly to clients. Successful exploitation requires only network reachability to the Jetty HTTP(S) service; no authentication, special privileges, or user interaction is required, and the attack complexity is low. Vendor analysis (GHSA-vjv5-gp2w-65vm) explains the core issue as normalization occurring before decoding, which permitted encoded dot and null segments (for example, %u002e, %00) to slip through normalization checks and defeat security constraints and alias protections. The vulnerability affects Jetty 9.4.37 through 9.4.42, 10.0.1 through 10.0.5, and 11.0.1 through 11.0.5. The National Vulnerability Database highlights impact in default compliance mode for Jetty 9.4.37.v20210219 through 9.4.38.v20210224 when handling %2e and %2e%2e segments. Real-world manifestations include direct retrieval of WEB-INF/web.xml over HTTP with a crafted path, potentially revealing application structure, servlet mappings, security constraints, and other details that can facilitate further attacks. The issue was corrected in Jetty 9.4.43, 10.0.6, and 11.0.6 by decoding prior to normalization, rejecting ambiguous path segments, preventing double-decode scenarios, and tightening alias checks. Workarounds include reverse proxy or server rewrite rules that explicitly block encoded dot or null patterns in request paths, but the recommended remediation is upgrading to the fixed versions.",
    "attack_type": "Information disclosure via unauthorized read of protected web application resources by sending crafted HTTP requests with encoded path segments",
    "services": [
        {
            "name": "eclipse/jetty",
            "version": [
                "9.4.37---9.4.42",
                "10.0.1---10.0.5",
                "11.0.1---11.0.5"
            ],
            "dependency_type": "HARD",
            "description": "Jetty is the affected HTTP server/Servlet container. Running a vulnerable Jetty version with any deployed web application that has a WEB-INF directory is sufficient to reproduce the flaw where encoded dot segments can expose protected resources."
        }
    ],
    "input_tokens": 43603,
    "output_tokens": 3719
}