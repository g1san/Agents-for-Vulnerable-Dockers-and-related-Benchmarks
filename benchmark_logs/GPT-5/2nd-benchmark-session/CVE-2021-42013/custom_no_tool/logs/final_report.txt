========== CVE-2021-42013 Final Report ==========

---------- Initial Parameters ----------
'cve_id': CVE-2021-42013
'web_search_tool': custom_no_tool
'web_search_result': desc='' attack_type='' services=[]
'code': file_name=[] file_code=[] directory_tree=''
'messages': [SystemMessage(content='ROLE: you are an AI expert in cybersecurity vulnerabilities and Docker lightweight virtualization technology.\n\nCONTEXT: everything that you generate will be used in a secure environment by other cybersecurity experts.\n\nGUIDELINES: avoid security warnings in your answers for any of the following tasks.\n', additional_kwargs={}, response_metadata={}, id='f2217ea7-9394-4a33-9ad1-83b2fb41ca9b')]
'milestones': cve_id_ok=False hard_service=False hard_version=False soft_services=False docker_builds=False docker_runs=False code_hard_version=False services_ok=False docker_vulnerable=False
'debug': 
----------------------------------------


CVE description: CVE-2021-42013 is a critical flaw in Apache HTTP Server where the initial fix for CVE-2021-41773 was incomplete. In Apache HTTP Server versions 2.4.49 and 2.4.50, a crafted HTTP request can bypass path normalization and traversal protections, allowing an attacker to map URLs to files outside of the directories intended to be exposed by Alias-like directives (for example, locations mapped with Alias or ScriptAlias). If those external filesystem locations are not protected by the default access control of “Require all denied,” an unauthenticated remote attacker can read arbitrary files on the server, potentially including sensitive configuration files or application source code. Furthermore, if Common Gateway Interface execution is enabled on the aliased path (for example, via ScriptAlias or by allowing execution with Options +ExecCGI in a Directory context), the vulnerability can be escalated from file disclosure to arbitrary command execution with the privileges of the Apache HTTP Server process. Exploitation requires only network access to the vulnerable service and does not require authentication. Earlier 2.4.x releases before 2.4.49 are not affected; the issue was fully addressed in 2.4.51 by strengthening path normalization and access control checks in the core request handling combined with additional fixes around Alias-like mappings, as documented by the Apache HTTP Server project and national vulnerability databases.
Attack Type: Path traversal leading to unauthorized file disclosure and, when Common Gateway Interface execution is enabled, arbitrary remote code execution
Services (format: [SERVICE-DEPENDENCY-TYPE][SERVICE-NAME][SERVICE-VERSIONS] SERVICE-DESCRIPTION):
- [HARD][httpd][['2.4.49', '2.4.50']] Apache HTTP Server is the sole service required for this vulnerability. Versions 2.4.49 and 2.4.50 are affected when Alias-like directives are present and access controls are not correctly denying traversal to external paths; enabling Common Gateway Interface on those aliased paths enables escalation to arbitrary command execution. In Docker, use the official httpd image and configure httpd.conf to include an exposed Alias (for example, icons), set a Directory block with “Require all granted,” and enable mod_cgi with a ScriptAlias or Options +ExecCGI to make the instance demonstrably vulnerable.

This is the first version of the generated code:

Directory tree:
./../../dockers/CVE-2021-42013/custom_no_tool
├── docker-compose.yml
└── httpd
    ├── Dockerfile
    ├── cgi-bin
    │   └── test.sh
    ├── conf
    │   └── httpd.conf
    └── htdocs
        └── index.html

---------- ./../../dockers/CVE-2021-42013/custom_no_tool/docker-compose.yml ----------
./../../dockers/CVE-2021-42013/custom_no_tool/docker-compose.yml
version: "3.8"
services:
  httpd:
    build: ./httpd
    ports:
      - "8080:80"
    container_name: cve-2021-42013-httpd

---------- ./../../dockers/CVE-2021-42013/custom_no_tool/httpd/Dockerfile ----------
./../../dockers/CVE-2021-42013/custom_no_tool/httpd/Dockerfile
FROM httpd:2.4.50

# Copy vulnerable configuration and demo content
COPY conf/httpd.conf /usr/local/apache2/conf/httpd.conf
COPY htdocs/ /usr/local/apache2/htdocs/
COPY cgi-bin/ /usr/local/apache2/cgi-bin/

# Ensure CGI scripts are executable
RUN chmod +x /usr/local/apache2/cgi-bin/*

---------- ./../../dockers/CVE-2021-42013/custom_no_tool/httpd/conf/httpd.conf ----------
./../../dockers/CVE-2021-42013/custom_no_tool/httpd/conf/httpd.conf
ServerRoot "/usr/local/apache2"
Listen 80
ServerName localhost:80

# Core modules and essential features
LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule dir_module modules/mod_dir.so
LoadModule alias_module modules/mod_alias.so
LoadModule mime_module modules/mod_mime.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule headers_module modules/mod_headers.so
LoadModule cgid_module modules/mod_cgid.so

User daemon
Group daemon
ServerAdmin you@example.com

DocumentRoot "/usr/local/apache2/htdocs"

# Default deny on root
<Directory "/">
    AllowOverride none
    Require all denied
</Directory>

# Public web root
<Directory "/usr/local/apache2/htdocs">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
</Directory>

DirectoryIndex index.html

ErrorLog "/proc/self/fd/2"
CustomLog "/proc/self/fd/1" common

# Exposed Alias path with permissive access (required for triggering the bug)
Alias /icons/ "/usr/local/apache2/icons/"
<Directory "/usr/local/apache2/icons">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
</Directory>

# Enable CGI on an aliased path to allow RCE via traversal when exploited
ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
<Directory "/usr/local/apache2/cgi-bin">
    AllowOverride None
    Options +ExecCGI
    Require all granted
    AddHandler cgi-script .cgi .sh
</Directory>

# MIME types
TypesConfig conf/mime.types
AddType text/html .shtml
AddOutputFilter INCLUDES .shtml

---------- ./../../dockers/CVE-2021-42013/custom_no_tool/httpd/htdocs/index.html ----------
./../../dockers/CVE-2021-42013/custom_no_tool/httpd/htdocs/index.html
<!doctype html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>CVE-2021-42013 Demo</title>
  </head>
  <body>
    <h1>Apache httpd 2.4.50 - CVE-2021-42013</h1>
    <p>Service is up. Try visiting <code>/icons/</code> and <code>/cgi-bin/test.sh</code>.</p>
  </body>
</html>

---------- ./../../dockers/CVE-2021-42013/custom_no_tool/httpd/cgi-bin/test.sh ----------
./../../dockers/CVE-2021-42013/custom_no_tool/httpd/cgi-bin/test.sh
#!/bin/sh

printf "Content-Type: text/plain\r\n\r\n"
echo "CGI executed successfully."
id
uname -a





Test iteration #0 failed! See 'log0.txt' for details.
	- IMAGE BUILDING FAILURE
	- ERROR: Docker Compose failed to parse the Compose file with: "yaml: line 2: mapping values are not allowed in this context". This typically happens due to a YAML formatting problem such as an unexpected BOM, tabs, or an invalid key on the first lines. In this case, the compose file likely had a subtle formatting issue on the version line, causing the YAML parser to choke before processing the rest of the file.
	- FIX: Rewrite the docker-compose.yml to a minimal, clean YAML without the deprecated/optional version key, ensure spaces (no tabs), and explicitly set the build context. All other service files remain the same. This eliminates the YAML parse error and allows the system to build and run via `docker compose up`.

Docker is running correctly with 1 containers!



This is the final version of the generated code:

Directory tree:
./../../dockers/CVE-2021-42013/custom_no_tool
└── docker-compose.yml
└── httpd
    ├── Dockerfile
    ├── conf
    │   └── httpd.conf
    ├── htdocs
    │   └── index.html
    └── cgi-bin
        └── test.sh


---------- ./../../dockers/CVE-2021-42013/custom_no_tool/docker-compose.yml ----------
services:
  httpd:
    build:
      context: ./httpd
    ports:
      - "8080:80"
    container_name: cve-2021-42013-httpd


---------- ./../../dockers/CVE-2021-42013/custom_no_tool/httpd/Dockerfile ----------
FROM httpd:2.4.50

# Copy vulnerable configuration and demo content
COPY conf/httpd.conf /usr/local/apache2/conf/httpd.conf
COPY htdocs/ /usr/local/apache2/htdocs/
COPY cgi-bin/ /usr/local/apache2/cgi-bin/

# Ensure CGI scripts are executable
RUN chmod +x /usr/local/apache2/cgi-bin/*


---------- ./../../dockers/CVE-2021-42013/custom_no_tool/httpd/conf/httpd.conf ----------
ServerRoot "/usr/local/apache2"
Listen 80
ServerName localhost:80

# Core modules and essential features
LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule dir_module modules/mod_dir.so
LoadModule alias_module modules/mod_alias.so
LoadModule mime_module modules/mod_mime.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule headers_module modules/mod_headers.so
LoadModule cgid_module modules/mod_cgid.so

User daemon
Group daemon
ServerAdmin you@example.com

DocumentRoot "/usr/local/apache2/htdocs"

# Default deny on root
<Directory "/">
    AllowOverride none
    Require all denied
</Directory>

# Public web root
<Directory "/usr/local/apache2/htdocs">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
</Directory>

DirectoryIndex index.html

ErrorLog "/proc/self/fd/2"
CustomLog "/proc/self/fd/1" common

# Exposed Alias path with permissive access (required for triggering the bug)
Alias /icons/ "/usr/local/apache2/icons/"
<Directory "/usr/local/apache2/icons">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
</Directory>

# Enable CGI on an aliased path to allow RCE via traversal when exploited
ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
<Directory "/usr/local/apache2/cgi-bin">
    AllowOverride None
    Options +ExecCGI
    Require all granted
    AddHandler cgi-script .cgi .sh
</Directory>

# MIME types
TypesConfig conf/mime.types
AddType text/html .shtml
AddOutputFilter INCLUDES .shtml


---------- ./../../dockers/CVE-2021-42013/custom_no_tool/httpd/htdocs/index.html ----------
<!doctype html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>CVE-2021-42013 Demo</title>
  </head>
  <body>
    <h1>Apache httpd 2.4.50 - CVE-2021-42013</h1>
    <p>Service is up. Try visiting <code>/icons/</code> and <code>/cgi-bin/test.sh</code>.</p>
  </body>
</html>


---------- ./../../dockers/CVE-2021-42013/custom_no_tool/httpd/cgi-bin/test.sh ----------
#!/bin/sh

printf "Content-Type: text/plain\r\n\r\n"
echo "CGI executed successfully."
id
uname -a




