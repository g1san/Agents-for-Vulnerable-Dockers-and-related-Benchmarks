========== CVE-2021-42013 Final Report ==========

---------- Initial Parameters ----------
'model': gpt-5
'cve_id': CVE-2021-42013
'web_search_tool': custom
'verbose_web_search': False
'web_search_result': desc='' attack_type='' services=[]
'code': file_name=[] file_code=[] directory_tree=''
'messages': [SystemMessage(content='ROLE: you are an AI expert in cybersecurity vulnerabilities and Docker lightweight virtualization technology.\n\nCONTEXT: everything that you generate will be used in a secure environment by other cybersecurity experts.\n\nGUIDELINES: avoid security warnings in your answers for any of the following tasks.\n', additional_kwargs={}, response_metadata={}, id='b7db1826-30d9-4ad9-9bd5-1f3a4c1564ff')]
'milestones': cve_id_ok=False hard_service=False hard_version=False soft_services=False docker_builds=False docker_runs=False code_hard_version=False services_ok=False docker_vulnerable=False
'debug': 
----------------------------------------


CVE description: CVE-2021-42013 is a vulnerability in Apache HTTP Server arising from an incomplete fix for CVE-2021-41773. In Apache HTTP Server versions 2.4.49 and 2.4.50, the path normalization routine (ap_normalize_path) does not fully decode percent-encoded sequences before performing normalization and traversal checks. As a result, crafted URL paths that contain encoded traversal sequences (for example, variations of .%2e/ or similar encodings) can bypass the checks meant to prevent access outside the intended web directories. Practically, this allows an attacker with simple HTTP access to request files that lie outside the configured DocumentRoot or outside directories defined by Alias-like directives. The impact is strongly influenced by server configuration. When directories outside the document root or aliased targets are not protected by the default access control of “Require all denied,” an attacker can read arbitrary files that the web server process can access. Furthermore, when Common Gateway Interface (CGI) execution is enabled (for example via mod_cgi or mod_cgid) on aliased paths such as cgi-bin, the vulnerability can escalate to remote code execution by invoking or uploading/invoking CGI or shell scripts reachable through the traversal. Only Apache HTTP Server 2.4.49 and 2.4.50 are affected; earlier 2.4 releases are not impacted, and the issue is fixed in 2.4.51 and later. Successful exploitation requires only network access to the vulnerable server and a misconfiguration that either grants overly broad access (such as Require all granted at an unsafe scope) or enables CGI execution on paths reachable via traversal. Mitigations include upgrading to Apache HTTP Server 2.4.51 or newer, restoring the default-deny posture on non-public paths (Require all denied), avoiding broad access grants at the root, and restricting or disabling CGI execution (mod_cgi/mod_cgid) unless strictly necessary.
Attack Type: directory traversal and remote code execution
Services (format: [SERVICE-DEPENDENCY-TYPE][SERVICE-NAME][SERVICE-VERSIONS] SERVICE-DESCRIPTION):
- [HARD][httpd][['2.4.49', '2.4.50']] Apache HTTP Server is the vulnerable component. Versions 2.4.49 and 2.4.50 contain the incomplete path normalization fix that permits directory traversal and can enable remote code execution when CGI is enabled. No additional services are strictly required to create a working and testable vulnerable Docker setup; a single container running one of these versions with an appropriate (mis)configuration (e.g., Alias/ScriptAlias with CGI enabled and non-default access controls) is sufficient.

This is the first version of the generated code:

Directory tree:
./../../dockers/CVE-2021-42013/custom
└── docker-compose.yml
└── httpd
    ├── Dockerfile
    ├── conf
    │   └── httpd.conf
    ├── htdocs
    │   └── index.html
    └── cgi-bin
        └── test.cgi


---------- ./../../dockers/CVE-2021-42013/custom/docker-compose.yml ----------
services:
  httpd:
    build: ./httpd
    container_name: cve-2021-42013-httpd
    ports:
      - "8080:80"
    restart: unless-stopped

name: cve-2021-42013


---------- ./../../dockers/CVE-2021-42013/custom/httpd/Dockerfile ----------
FROM httpd:2.4.50

# Copy vulnerable configuration and demo content
COPY conf/httpd.conf /usr/local/apache2/conf/httpd.conf
COPY htdocs/ /usr/local/apache2/htdocs/
COPY cgi-bin/ /usr/local/apache2/cgi-bin/

# Ensure CGI scripts are executable
RUN chmod -R 755 /usr/local/apache2/cgi-bin

# Default command
CMD ["httpd-foreground"]


---------- ./../../dockers/CVE-2021-42013/custom/httpd/conf/httpd.conf ----------
ServerRoot "/usr/local/apache2"
Listen 80
ServerName localhost

# Load required modules
LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule dir_module modules/mod_dir.so
LoadModule mime_module modules/mod_mime.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule alias_module modules/mod_alias.so
LoadModule cgid_module modules/mod_cgid.so
LoadModule autoindex_module modules/mod_autoindex.so
LoadModule setenvif_module modules/mod_setenvif.so
LoadModule env_module modules/mod_env.so

User daemon
Group daemon

# Logging
ErrorLog /proc/self/fd/2
LogLevel warn
CustomLog /proc/self/fd/1 common

# Default MIME types
TypesConfig conf/mime.types
AddType text/html .shtml
AddOutputFilter INCLUDES .shtml

# Intentionally permissive root to ease traversal exposure
<Directory />
    AllowOverride None
    Require all granted
</Directory>

# Document root
DocumentRoot "/usr/local/apache2/htdocs"
<Directory "/usr/local/apache2/htdocs">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
</Directory>

# Directory index
DirectoryIndex index.html

# CGI configuration (enabled and world-accessible)
ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
<Directory "/usr/local/apache2/cgi-bin">
    AllowOverride None
    Options +ExecCGI
    Require all granted
</Directory>

# KeepAlive and basic settings
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 5


---------- ./../../dockers/CVE-2021-42013/custom/httpd/htdocs/index.html ----------
<html>
  <head>
    <title>CVE-2021-42013 Test Server</title>
  </head>
  <body>
    <h1>Apache HTTP Server 2.4.50 - CVE-2021-42013 lab</h1>
    <p>CGI is enabled at <code>/cgi-bin/</code>. This setup mirrors the misconfiguration needed to exercise traversal and CGI execution behaviors.</p>
  </body>
</html>


---------- ./../../dockers/CVE-2021-42013/custom/httpd/cgi-bin/test.cgi ----------
#!/bin/sh
# Simple CGI script for demonstration
printf "Content-Type: text/plain\r\n\r\n"
echo "CGI works. Date:" $(date)
echo "User:" $(id)
echo "Pwd:" $(pwd)





Docker is running correctly with 1 containers!



This is the final version of the generated code:

Directory tree:
./../../dockers/CVE-2021-42013/custom
└── docker-compose.yml
└── httpd
    ├── Dockerfile
    ├── conf
    │   └── httpd.conf
    ├── htdocs
    │   └── index.html
    └── cgi-bin
        └── test.cgi


---------- ./../../dockers/CVE-2021-42013/custom/docker-compose.yml ----------
services:
  httpd:
    build: ./httpd
    container_name: cve-2021-42013-httpd
    ports:
      - "8080:80"
    restart: unless-stopped

name: cve-2021-42013


---------- ./../../dockers/CVE-2021-42013/custom/httpd/Dockerfile ----------
FROM httpd:2.4.50

# Copy vulnerable configuration and demo content
COPY conf/httpd.conf /usr/local/apache2/conf/httpd.conf
COPY htdocs/ /usr/local/apache2/htdocs/
COPY cgi-bin/ /usr/local/apache2/cgi-bin/

# Ensure CGI scripts are executable
RUN chmod -R 755 /usr/local/apache2/cgi-bin

# Default command
CMD ["httpd-foreground"]


---------- ./../../dockers/CVE-2021-42013/custom/httpd/conf/httpd.conf ----------
ServerRoot "/usr/local/apache2"
Listen 80
ServerName localhost

# Load required modules
LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule dir_module modules/mod_dir.so
LoadModule mime_module modules/mod_mime.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule alias_module modules/mod_alias.so
LoadModule cgid_module modules/mod_cgid.so
LoadModule autoindex_module modules/mod_autoindex.so
LoadModule setenvif_module modules/mod_setenvif.so
LoadModule env_module modules/mod_env.so

User daemon
Group daemon

# Logging
ErrorLog /proc/self/fd/2
LogLevel warn
CustomLog /proc/self/fd/1 common

# Default MIME types
TypesConfig conf/mime.types
AddType text/html .shtml
AddOutputFilter INCLUDES .shtml

# Intentionally permissive root to ease traversal exposure
<Directory />
    AllowOverride None
    Require all granted
</Directory>

# Document root
DocumentRoot "/usr/local/apache2/htdocs"
<Directory "/usr/local/apache2/htdocs">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
</Directory>

# Directory index
DirectoryIndex index.html

# CGI configuration (enabled and world-accessible)
ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
<Directory "/usr/local/apache2/cgi-bin">
    AllowOverride None
    Options +ExecCGI
    Require all granted
</Directory>

# KeepAlive and basic settings
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 5


---------- ./../../dockers/CVE-2021-42013/custom/httpd/htdocs/index.html ----------
<html>
  <head>
    <title>CVE-2021-42013 Test Server</title>
  </head>
  <body>
    <h1>Apache HTTP Server 2.4.50 - CVE-2021-42013 lab</h1>
    <p>CGI is enabled at <code>/cgi-bin/</code>. This setup mirrors the misconfiguration needed to exercise traversal and CGI execution behaviors.</p>
  </body>
</html>


---------- ./../../dockers/CVE-2021-42013/custom/httpd/cgi-bin/test.cgi ----------
#!/bin/sh
# Simple CGI script for demonstration
printf "Content-Type: text/plain\r\n\r\n"
echo "CGI works. Date:" $(date)
echo "User:" $(id)
echo "Pwd:" $(pwd)




