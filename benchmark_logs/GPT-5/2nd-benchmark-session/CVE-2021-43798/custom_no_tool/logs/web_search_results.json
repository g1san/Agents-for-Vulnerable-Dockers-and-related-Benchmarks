{
    "desc": "CVE-2021-43798 is a high\u2011severity flaw in Grafana\u2019s public plugin asset handler that results in unauthenticated arbitrary file read through directory traversal. In affected 8.x self\u2011hosted releases (community and enterprise), the HTTP endpoint that serves static files for plugins (/public/plugins/:pluginId/<path>) fails to adequately sanitize user\u2011supplied paths. When a request includes traversal sequences such as ../ (or their URL\u2011encoded equivalents) after a valid plugin identifier, Grafana\u2019s handler escapes the intended plugin asset directory (<grafana>/public/app/plugins/<type>/<pluginId>) and reads files from elsewhere on the filesystem. Because this endpoint is publicly accessible and requires no prior authentication, any network\u2011reachable attacker can exploit it with a single crafted GET request.\n\nKey characteristics:\n- Vulnerable surface: GET /public/plugins/:pluginId/<path> on the Grafana web service (default TCP port 3000).\n- Trigger requirements: at least one plugin id present on the instance (built\u2011in plugins such as alertlist, annolist, barchart, table, grafana-azure-monitor-datasource, and many others suffice). Clients must preserve traversal sequences (for example, curl with --path-as-is) because browsers tend to normalize ../.\n- Practical exploit pattern: /public/plugins/<pluginId>/../../../../../../../../<target_file> allows reading arbitrary files, e.g., /etc/passwd, /etc/shadow (where permissions allow), /etc/grafana/grafana.ini or conf/defaults.ini (to recover secrets such as secret_key), and /var/lib/grafana/grafana.db (the default SQLite database). Reading grafana.db discloses user table password hashes (PBKDF2\u2011HMAC\u2011SHA256) and salts; combined with configuration secrets from grafana.ini/defaults.ini, attackers can decrypt stored data source credentials. With recovered administrative access, an attacker may escalate impact inside Grafana (for example, by installing specific data source or plugin components that enable constrained file write within plugin directories), turning information disclosure into broader compromise of the Grafana deployment.\n- Affected versions: Grafana 8.0.0\u2011beta1 through 8.3.0. Fixes were released in 8.0.7, 8.1.8, 8.2.7, and 8.3.1 (and later). Grafana Cloud was not affected.\n- Impact: disclosure of sensitive operating system files and Grafana application data, including configuration, database contents, and credentials, enabling follow\u2011on attacks such as credential cracking and lateral movement.\n- Mitigation: upgrade to a fixed version (\u2265 8.0.7, 8.1.8, 8.2.7, or \u2265 8.3.1), restrict network access to the Grafana service, and rotate Grafana and data source credentials and secrets after patching. Detection can focus on access logs for /public/plugins/ requests containing traversal patterns (../ or %2e%2e).\n\nFor a minimal, reproducible vulnerable environment in Docker, only Grafana itself is required. Grafana ships with an internal SQLite database by default and exposes the web interface on port 3000, so no external database, cache, web server, or message queue is needed. Adding extra services solely for proof\u2011of\u2011concept or exploitation is unnecessary and should be avoided.",
    "attack_type": "Unauthenticated arbitrary file read through directory traversal",
    "services": [
        {
            "name": "grafana/grafana",
            "version": [
                "8.0.0-beta1---8.0.6",
                "8.1.0---8.1.7",
                "8.2.0---8.2.6",
                "8.3.0"
            ],
            "dependency_type": "HARD",
            "description": "Grafana is the vulnerable web application. Its public plugin asset endpoint (/public/plugins/:pluginId) contains the path traversal flaw that enables unauthenticated local file reads. Running Grafana alone (default port 3000) is sufficient to expose the vulnerability; it includes a built-in SQLite database and does not require any other supporting services for a working instance."
        }
    ],
    "input_tokens": 9369,
    "output_tokens": 2578
}