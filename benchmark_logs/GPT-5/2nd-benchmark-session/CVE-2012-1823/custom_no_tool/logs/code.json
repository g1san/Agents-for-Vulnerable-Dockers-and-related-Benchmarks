{
    "file_name": [
        "./../../dockers/CVE-2012-1823/custom_no_tool/docker-compose.yml",
        "./../../dockers/CVE-2012-1823/custom_no_tool/httpd/Dockerfile",
        "./../../dockers/CVE-2012-1823/custom_no_tool/httpd/httpd.conf",
        "./../../dockers/CVE-2012-1823/custom_no_tool/php/Dockerfile",
        "./../../dockers/CVE-2012-1823/custom_no_tool/php/entrypoint.sh",
        "./../../dockers/CVE-2012-1823/custom_no_tool/php/php.ini",
        "./../../dockers/CVE-2012-1823/custom_no_tool/www/index.php"
    ],
    "file_code": [
        "services:\n  php:\n    build: ./php\n    container_name: cve2012_1823_php\n    volumes:\n      - ./www:/var/www/html:rw\n    expose:\n      - \"9000\"\n\n  httpd:\n    build: ./httpd\n    container_name: cve2012_1823_httpd\n    depends_on:\n      - php\n    ports:\n      - \"8080:80\"\n    volumes:\n      - ./www:/var/www/html:ro\n\nnetworks:\n  default:\n    name: cve2012_1823_net\n",
        "FROM httpd:2.4.58\n\n# Use a custom httpd.conf that enables required modules and proxies .php to php-cgi FastCGI backend\nCOPY httpd.conf /usr/local/apache2/conf/httpd.conf\n\n# Prepare docroot (bind-mounted by compose)\nRUN mkdir -p /var/www/html && \\\n    chown -R daemon:daemon /var/www/html\n\nEXPOSE 80\n",
        "ServerTokens Prod\nServerSignature Off\nServerRoot \"/usr/local/apache2\"\nListen 80\n\nLoadModule mpm_event_module modules/mod_mpm_event.so\nLoadModule authn_core_module modules/mod_authn_core.so\nLoadModule authz_core_module modules/mod_authz_core.so\nLoadModule authz_host_module modules/mod_authz_host.so\nLoadModule headers_module modules/mod_headers.so\nLoadModule dir_module modules/mod_dir.so\nLoadModule mime_module modules/mod_mime.so\nLoadModule log_config_module modules/mod_log_config.so\nLoadModule unixd_module modules/mod_unixd.so\nLoadModule alias_module modules/mod_alias.so\nLoadModule setenvif_module modules/mod_setenvif.so\nLoadModule proxy_module modules/mod_proxy.so\nLoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so\nLoadModule rewrite_module modules/mod_rewrite.so\n\nUser daemon\nGroup daemon\n\n# Logging\nErrorLog \"/proc/self/fd/2\"\nCustomLog \"/proc/self/fd/1\" common\n\n# Docroot shared with PHP container via bind mount\nDocumentRoot \"/var/www/html\"\n<Directory \"/var/www/html\">\n    Options Indexes FollowSymLinks\n    AllowOverride None\n    Require all granted\n</Directory>\nDirectoryIndex index.php index.html\n\n# MIME types\nTypesConfig conf/mime.types\nAddType application/x-httpd-php .php\n\n# Proxy .php requests to the php-cgi FastCGI backend in the php container\n# The backend resolves SCRIPT_FILENAME on its own FS; we pass path under /var/www/html\nProxyPassMatch ^/(.*\\.php)(/.*)?$ fcgi://php:9000/var/www/html/$1\n\n# Basic security/compat tweaks suitable for lab\n<IfModule mod_headers.c>\n    Header unset X-Powered-By\n</IfModule>\n",
        "FROM debian:bullseye-slim\n\n# Build dependencies for compiling PHP 5.3.11 with CGI/FastCGI SAPI\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    ca-certificates wget build-essential autoconf pkg-config \\\n    libxml2-dev zlib1g-dev \\\n    libreadline-dev libsqlite3-dev libbz2-dev \\\n    libjpeg-dev libpng-dev \\\n    libonig-dev libxslt1.1 libxslt1-dev \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Fetch and unpack PHP 5.3.11 (vulnerable range)\nWORKDIR /usr/src\nRUN wget -q https://museum.php.net/php5/php-5.3.11.tar.gz && \\\n    echo \"Downloaded php-5.3.11.tar.gz\" && \\\n    tar xzf php-5.3.11.tar.gz\nWORKDIR /usr/src/php-5.3.11\n\n# Configure minimal, enabling CGI/FastCGI, and disable XML-family extensions that\n# are incompatible with modern libxml2 on this distro (not needed for the lab)\nRUN ./configure \\\n    --prefix=/usr/local \\\n    --enable-cgi \\\n    --enable-fastcgi \\\n    --disable-dom \\\n    --disable-simplexml \\\n    --disable-xml \\\n    --disable-xmlreader \\\n    --disable-xmlwriter \\\n    --with-zlib \\\n    --with-readline \\\n    --with-config-file-path=/usr/local/etc \\\n    --without-pear \\\n  && make -j\"$(nproc)\" \\\n  && make install\n\n# Runtime preparation\nRUN mkdir -p /usr/local/etc /var/www/html && \\\n    useradd -r -s /usr/sbin/nologin php && \\\n    chown -R php:php /var/www/html\n\nCOPY php.ini /usr/local/etc/php.ini\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n\nUSER php\nWORKDIR /var/www/html\nEXPOSE 9000\nVOLUME [\"/var/www/html\"]\n\nENTRYPOINT [\"/entrypoint.sh\"]\n",
        "#!/bin/sh\nset -e\n# Start php-cgi in FastCGI mode, listening on all interfaces:9000\nexec /usr/local/bin/php-cgi -b 0.0.0.0:9000 -c /usr/local/etc/php.ini\n",
        "; Minimal php.ini for lab\nengine = On\nshort_open_tag = On\nexpose_php = On\nhtml_errors = On\nimplicit_flush = Off\noutput_buffering = 0\n\n; Keep defaults that make the target behavior clear\nallow_url_fopen = On\nallow_url_include = Off\n\n; Error reporting to stdout\nerror_reporting = E_ALL\ndisplay_errors = On\nlog_errors = Off\n\n; Timezone\ndate.timezone = UTC\n",
        "<?php\n// Simple target script for CVE-2012-1823 lab\n// Normal request shows this page; crafted query strings can trigger php-cgi option handling\n\necho \"<h1>PHP-CGI Lab (CVE-2012-1823)</h1>\";\nphpinfo();\n"
    ],
    "directory_tree": "./../../dockers/CVE-2012-1823/custom_no_tool\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 httpd\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u2514\u2500\u2500 httpd.conf\n\u251c\u2500\u2500 php\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u251c\u2500\u2500 entrypoint.sh\n\u2502   \u2514\u2500\u2500 php.ini\n\u2514\u2500\u2500 www\n    \u2514\u2500\u2500 index.php\n"
}