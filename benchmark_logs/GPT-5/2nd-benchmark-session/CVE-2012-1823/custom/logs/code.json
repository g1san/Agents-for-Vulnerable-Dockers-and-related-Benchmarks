{
    "file_name": [
        "./../../dockers/CVE-2012-1823/custom/docker-compose.yml",
        "./../../dockers/CVE-2012-1823/custom/php-cgi/Dockerfile",
        "./../../dockers/CVE-2012-1823/custom/php-cgi/docker-entrypoint.sh",
        "./../../dockers/CVE-2012-1823/custom/apache/Dockerfile",
        "./../../dockers/CVE-2012-1823/custom/apache/httpd.conf",
        "./../../dockers/CVE-2012-1823/custom/apache/cgi-bin/php-cgi",
        "./../../dockers/CVE-2012-1823/custom/web/index.php"
    ],
    "file_code": [
        "version: \"3.8\"\n\nservices:\n  php:\n    build:\n      context: ./php-cgi\n    image: cve-2012-1823-php-cgi:5.4.1\n    container_name: cve2012_php\n    volumes:\n      - php_cgi_bin:/opt/php-cgi\n    command: [\"/docker-entrypoint.sh\"]\n\n  httpd:\n    build:\n      context: ./apache\n    image: cve-2012-1823-httpd:2.4.59\n    container_name: cve2012_httpd\n    depends_on:\n      - php\n    ports:\n      - \"8080:80\"\n    volumes:\n      - php_cgi_bin:/opt/php-cgi:ro\n      - ./web:/usr/local/apache2/htdocs:ro\n\nvolumes:\n  php_cgi_bin:\n",
        "FROM debian:bullseye-slim\n\nENV DEBIAN_FRONTEND=noninteractive \\\n    PHP_VERSION=5.4.1 \\\n    PHP_PREFIX=/usr/local/php-5.4.1\n\n# Minimal, reliable build deps for PHP 5.4.1 CGI SAPI on modern Debian\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    ca-certificates curl build-essential autoconf make pkg-config \\\n    libxml2-dev zlib1g-dev bison re2c \\\n && rm -rf /var/lib/apt/lists/*\n\n# Fetch and build PHP CGI with a minimal feature set to avoid legacy deps\nRUN mkdir -p /src && cd /src \\\n && curl -fsSL https://museum.php.net/php5/php-${PHP_VERSION}.tar.gz -o php-${PHP_VERSION}.tar.gz \\\n && tar -xzf php-${PHP_VERSION}.tar.gz \\\n && cd php-${PHP_VERSION} \\\n && ./buildconf --force || true \\\n && ./configure \\\n      --prefix=${PHP_PREFIX} \\\n      --enable-cgi \\\n      --disable-all \\\n      --with-libxml-dir=/usr \\\n      --with-zlib \\\n      --without-pear \\\n && make -j\"$(nproc)\" \\\n && make install \\\n # Ensure the CGI SAPI is installed to ${PHP_PREFIX}/bin/php-cgi\n && { [ -x \"${PHP_PREFIX}/bin/php-cgi\" ] || make -C sapi/cgi install; } \\\n && { [ -x \"${PHP_PREFIX}/bin/php-cgi\" ] || { echo \"php-cgi not found after build\" >&2; exit 1; }; } \\\n && mkdir -p ${PHP_PREFIX}/lib \\\n && cp -v php.ini-production ${PHP_PREFIX}/lib/php.ini \\\n && ln -sf ${PHP_PREFIX}/bin/php-cgi /usr/local/bin/php-cgi \\\n && rm -rf /src\n\n# Shared volume target where the php-cgi binary will be exported\nRUN mkdir -p /opt/php-cgi\n\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod +x /docker-entrypoint.sh\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n",
        "#!/bin/sh\nset -e\n\n# Export the php-cgi binary into the shared volume for Apache to invoke.\nmkdir -p /opt/php-cgi\n\n# Try a few common locations to find the built php-cgi\nPHP_CGI_PATH=\"\"\nfor p in \\\n  \"/usr/local/bin/php-cgi\" \\\n  \"/usr/local/php-5.4.1/bin/php-cgi\" \\\n  \"$(command -v php-cgi 2>/dev/null || true)\" \\\n; do\n  if [ -n \"$p\" ] && [ -x \"$p\" ]; then\n    PHP_CGI_PATH=\"$p\"\n    break\n  fi\ndone\n\nif [ -z \"$PHP_CGI_PATH\" ]; then\n  echo \"php-cgi binary not found\" >&2\n  exit 1\nfi\n\ncp -f \"$PHP_CGI_PATH\" /opt/php-cgi/php-cgi\nchmod +x /opt/php-cgi/php-cgi\n\n# Keep the container running to keep the shared volume available\nexec tail -f /dev/null\n",
        "FROM httpd:2.4.59\n\n# Enable CGI via mod_cgid and enable mod_actions for the Action directive\nRUN sed -ri 's/^#?LoadModule cgid_module/LoadModule cgid_module/' /usr/local/apache2/conf/httpd.conf || true \\\n && sed -ri 's/^#?LoadModule actions_module/LoadModule actions_module/' /usr/local/apache2/conf/httpd.conf || echo \"LoadModule actions_module modules/mod_actions.so\" >> /usr/local/apache2/conf/httpd.conf\n\n# Provide our custom config (maps .php to CGI wrapper)\nCOPY httpd.conf /usr/local/apache2/conf/extra/cve-2012-1823.conf\nRUN echo \"\\n# Include CVE-2012-1823 vulnerable CGI-based PHP handler\\nInclude conf/extra/cve-2012-1823.conf\" >> /usr/local/apache2/conf/httpd.conf\n\n# Provide CGI wrapper script path\nRUN mkdir -p /usr/local/apache2/cgi-bin\nCOPY cgi-bin/php-cgi /usr/local/apache2/cgi-bin/php-cgi\nRUN chmod +x /usr/local/apache2/cgi-bin/php-cgi\n",
        "# Map PHP files to the CGI handler via Action. We rely on the base httpd ScriptAlias for /cgi-bin/\nAddHandler application/x-httpd-php .php\nAction application/x-httpd-php \"/cgi-bin/php-cgi\"\n\n# Document root defaults\nDirectoryIndex index.php index.html\n<Directory \"/usr/local/apache2/htdocs/\">\n    AllowOverride None\n    Require all granted\n</Directory>\n",
        "#!/bin/sh\n# Wrapper script executed by Apache's CGI to invoke the vulnerable php-cgi binary\nexec /opt/php-cgi/php-cgi \"$@\"\n",
        "<?php\n// Simple test page for CGI execution\nif (isset($_GET['info'])) {\n    phpinfo();\n    exit;\n}\n\necho \"OK: PHP CGI reachable. Try query-based option injection on this endpoint.\";\n"
    ],
    "directory_tree": "./../../dockers/CVE-2012-1823/custom\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 php-cgi\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u2514\u2500\u2500 docker-entrypoint.sh\n\u251c\u2500\u2500 apache\n\u2502   \u251c\u2500\u2500 Dockerfile\n\u2502   \u251c\u2500\u2500 httpd.conf\n\u2502   \u2514\u2500\u2500 cgi-bin\n\u2502       \u2514\u2500\u2500 php-cgi\n\u2514\u2500\u2500 web\n    \u2514\u2500\u2500 index.php\n"
}