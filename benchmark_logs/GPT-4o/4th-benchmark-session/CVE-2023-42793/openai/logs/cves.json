{
  "version": "15.0.6",
  "vulnerabilities": [
    {
      "id": "c6c51e19e7fc3038e25b7946a644a261aa52702fcced26fbb002c85e60d68451",
      "category": "container_scanning",
      "message": "CVE-2024-11053 on ubuntu/curl@7.68.0-1ubuntu2.19",
      "description": "When asked to both use a `.netrc` file for credentials and to follow HTTP redirects, curl could leak the password used for the first host to the followed-to host under certain circumstances.  This flaw only manifests itself if the netrc file has an entry that matches the redirect target hostname but the entry either omits just the password or omits both login and password.",
      "cve": "CVE-2024-11053",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/curl@7.68.0-1ubuntu2.19 to 7.68.0-1ubuntu2.25",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/curl@7.68.0-1ubuntu2.19?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "7.68.0-1ubuntu2.19"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-11053",
          "value": "CVE-2024-11053",
          "url": "https://scout.docker.com/v/CVE-2024-11053?s=ubuntu&n=curl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C7.68.0-1ubuntu2.25"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-11053?s=ubuntu&n=curl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C7.68.0-1ubuntu2.25"
        }
      ]
    },
    {
      "id": "ffcfa5aba46de6be21fc848d3a6158e34dfd14437317a42bf05d177ab50ac749",
      "category": "container_scanning",
      "message": "CVE-2024-13176 on ubuntu/openssl@1.1.1f-1ubuntu2.19",
      "description": "Issue summary: A timing side-channel which could potentially allow recovering the private key exists in the ECDSA signature computation.  Impact summary: A timing side-channel in ECDSA signature computations could allow recovering the private key by an attacker. However, measuring the timing would require either local access to the signing application or a very fast network connection with low latency.  There is a timing signal of around 300 nanoseconds when the top word of the inverted ECDSA nonce value is zero. This can happen with significant probability only for some of the supported elliptic curves. In particular the NIST P-521 curve is affected. To be able to measure this leak, the attacker process must either be located in the same physical computer or must have a very fast network connection with low latency. For that reason the severity of this vulnerability is Low.  The FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
      "cve": "CVE-2024-13176",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/openssl@1.1.1f-1ubuntu2.19 to 1.1.1f-1ubuntu2.24",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/openssl@1.1.1f-1ubuntu2.19?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.1.1f-1ubuntu2.19"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-13176",
          "value": "CVE-2024-13176",
          "url": "https://scout.docker.com/v/CVE-2024-13176?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.1.1f-1ubuntu2.24"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-13176?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.1.1f-1ubuntu2.24"
        }
      ]
    },
    {
      "id": "d87d2356838d5bf20a3e1ae931725b21ea34bb2ba0c9ff555c9162a0ade88bde",
      "category": "container_scanning",
      "message": "CVE-2024-2511 on ubuntu/openssl@1.1.1f-1ubuntu2.19",
      "description": "Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when processing TLSv1.3 sessions  Impact summary: An attacker may exploit certain server configurations to trigger unbounded memory growth that would lead to a Denial of Service  This problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is being used (but not if early_data support is also configured and the default anti-replay protection is in use). In this case, under certain conditions, the session cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario for this failure to force a Denial of Service. It may also happen by accident in normal operation.  This issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients.  The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 1.0.2 is also not affected by this issue.",
      "cve": "CVE-2024-2511",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/openssl@1.1.1f-1ubuntu2.19 to 1.1.1f-1ubuntu2.23",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/openssl@1.1.1f-1ubuntu2.19?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.1.1f-1ubuntu2.19"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-2511",
          "value": "CVE-2024-2511",
          "url": "https://scout.docker.com/v/CVE-2024-2511?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.1.1f-1ubuntu2.23"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-2511?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.1.1f-1ubuntu2.23"
        }
      ]
    },
    {
      "id": "5296d9434b051c6ff8fa2fbbfc531f3c46f263c3139892ccad82fcd5d24ec42e",
      "category": "container_scanning",
      "message": "CVE-2024-26458 on ubuntu/krb5@1.17-6ubuntu4.3",
      "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
      "cve": "CVE-2024-26458",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/krb5@1.17-6ubuntu4.3 to 1.17-6ubuntu4.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/krb5@1.17-6ubuntu4.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.17-6ubuntu4.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-26458",
          "value": "CVE-2024-26458",
          "url": "https://scout.docker.com/v/CVE-2024-26458?s=ubuntu&n=krb5&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.17-6ubuntu4.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-26458?s=ubuntu&n=krb5&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.17-6ubuntu4.9"
        }
      ]
    },
    {
      "id": "c76528a0b0fa061534d4fd8b8156245378465cc3fd5d6785b0181f13911447f5",
      "category": "container_scanning",
      "message": "CVE-2024-26461 on ubuntu/krb5@1.17-6ubuntu4.3",
      "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
      "cve": "CVE-2024-26461",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/krb5@1.17-6ubuntu4.3 to 1.17-6ubuntu4.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/krb5@1.17-6ubuntu4.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.17-6ubuntu4.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-26461",
          "value": "CVE-2024-26461",
          "url": "https://scout.docker.com/v/CVE-2024-26461?s=ubuntu&n=krb5&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.17-6ubuntu4.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-26461?s=ubuntu&n=krb5&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.17-6ubuntu4.9"
        }
      ]
    },
    {
      "id": "b9da78676230ae7687d8a21088df7bf71079cfb166fe72a764021132e797ffab",
      "category": "container_scanning",
      "message": "CVE-2024-34459 on ubuntu/libxml2@2.9.10+dfsg-5ubuntu0.20.04.6",
      "description": "An issue was discovered in xmllint (from libxml2) before 2.11.8 and 2.12.x before 2.12.7. Formatting error messages with xmllint --htmlout can result in a buffer over-read in xmlHTMLPrintFileContext in xmllint.c.",
      "cve": "CVE-2024-34459",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libxml2@2.9.10+dfsg-5ubuntu0.20.04.6 to 2.9.10+dfsg-5ubuntu0.20.04.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libxml2@2.9.10%2Bdfsg-5ubuntu0.20.04.6?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.9.10+dfsg-5ubuntu0.20.04.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34459",
          "value": "CVE-2024-34459",
          "url": "https://scout.docker.com/v/CVE-2024-34459?s=ubuntu&n=libxml2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.9.10%2Bdfsg-5ubuntu0.20.04.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34459?s=ubuntu&n=libxml2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.9.10%2Bdfsg-5ubuntu0.20.04.8"
        }
      ]
    },
    {
      "id": "f25444380d310998a10c33d72352e1ad36cf322b6092f2dcde25d4436c1a8882",
      "category": "container_scanning",
      "message": "CVE-2024-37891 on ubuntu/python-pip@20.0.2-5ubuntu1.9",
      "description": "urllib3 is a user-friendly HTTP client library for Python. When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected. However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects. Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident. Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach. We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited: 1. Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. 2. Not disabling HTTP redirects. 3. Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin. Users are advised to update to either version 1.26.19 or version 2.2.2. Users unable to upgrade may use the `Proxy-Authorization` header with urllib3's `ProxyManager`, disable HTTP redirects using `redirects=False` when sending requests, or not user the `Proxy-Authorization` header as mitigations.",
      "cve": "CVE-2024-37891",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python-pip@20.0.2-5ubuntu1.9 to 20.0.2-5ubuntu1.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python-pip@20.0.2-5ubuntu1.9?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "20.0.2-5ubuntu1.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-37891",
          "value": "CVE-2024-37891",
          "url": "https://scout.docker.com/v/CVE-2024-37891?s=ubuntu&n=python-pip&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C20.0.2-5ubuntu1.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-37891?s=ubuntu&n=python-pip&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C20.0.2-5ubuntu1.11"
        }
      ]
    },
    {
      "id": "947eff3ca6b60ca8d363cea8218eee657044f20c5e2538b15425c4c951c15420",
      "category": "container_scanning",
      "message": "CVE-2024-37891 on ubuntu/python-urllib3@1.25.8-2ubuntu0.2",
      "description": "urllib3 is a user-friendly HTTP client library for Python. When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected. However, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects. Because this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident. Users should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach. We believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited: 1. Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support. 2. Not disabling HTTP redirects. 3. Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin. Users are advised to update to either version 1.26.19 or version 2.2.2. Users unable to upgrade may use the `Proxy-Authorization` header with urllib3's `ProxyManager`, disable HTTP redirects using `redirects=False` when sending requests, or not user the `Proxy-Authorization` header as mitigations.",
      "cve": "CVE-2024-37891",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python-urllib3@1.25.8-2ubuntu0.2 to 1.25.8-2ubuntu0.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python-urllib3@1.25.8-2ubuntu0.2?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.25.8-2ubuntu0.2"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-37891",
          "value": "CVE-2024-37891",
          "url": "https://scout.docker.com/v/CVE-2024-37891?s=ubuntu&n=python-urllib3&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.25.8-2ubuntu0.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-37891?s=ubuntu&n=python-urllib3&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.25.8-2ubuntu0.4"
        }
      ]
    },
    {
      "id": "b30ac2b0d87ec0e108fa27de91327d846e8c52717506ce16785847c7ab8a7110",
      "category": "container_scanning",
      "message": "CVE-2024-4032 on ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8",
      "description": "The “ipaddress” module contained incorrect information about whether certain IPv4 and IPv6 addresses were designated as “globally reachable” or “private”. This affected the is_private and is_global properties of the ipaddress.IPv4Address, ipaddress.IPv4Network, ipaddress.IPv6Address, and ipaddress.IPv6Network classes, where values wouldn’t be returned in accordance with the latest information from the IANA Special-Purpose Address Registries.  CPython 3.12.4 and 3.13.0a6 contain updated information from these registries and thus have the intended behavior.",
      "cve": "CVE-2024-4032",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8 to 3.8.10-0ubuntu1~20.04.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "3.8.10-0ubuntu1~20.04.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-4032",
          "value": "CVE-2024-4032",
          "url": "https://scout.docker.com/v/CVE-2024-4032?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-4032?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.11"
        }
      ]
    },
    {
      "id": "eef47f5a4ef4122c3e8b74774195828074fa150ea336dd002fdeca8764115e9b",
      "category": "container_scanning",
      "message": "CVE-2024-4741 on ubuntu/openssl@1.1.1f-1ubuntu2.19",
      "description": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause memory to be accessed that was previously freed in some situations  Impact summary: A use after free can have a range of potential consequences such as the corruption of valid data, crashes or execution of arbitrary code. However, only applications that directly call the SSL_free_buffers function are affected by this issue. Applications that do not call this function are not vulnerable. Our investigations indicate that this function is rarely used by applications.  The SSL_free_buffers function is used to free the internal OpenSSL buffer used when processing an incoming record from the network. The call is only expected to succeed if the buffer is not currently in use. However, two scenarios have been identified where the buffer is freed even when still in use.  The first scenario occurs where a record header has been received from the network and processed by OpenSSL, but the full record body has not yet arrived. In this case calling SSL_free_buffers will succeed even though a record has only been partially processed and the buffer is still in use.  The second scenario occurs where a full record containing application data has been received and processed by OpenSSL but the application has only read part of this data. Again a call to SSL_free_buffers will succeed even though the buffer is still in use.  While these scenarios could occur accidentally during normal operation a malicious attacker could attempt to engineer a stituation where this occurs. We are not aware of this issue being actively exploited.  The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
      "cve": "CVE-2024-4741",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/openssl@1.1.1f-1ubuntu2.19 to 1.1.1f-1ubuntu2.23",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/openssl@1.1.1f-1ubuntu2.19?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.1.1f-1ubuntu2.19"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-4741",
          "value": "CVE-2024-4741",
          "url": "https://scout.docker.com/v/CVE-2024-4741?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.1.1f-1ubuntu2.23"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-4741?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.1.1f-1ubuntu2.23"
        }
      ]
    },
    {
      "id": "0108616fef87efc9019e58486dc330813f0682a025fb6cb76db8c3f20230e2dd",
      "category": "container_scanning",
      "message": "CVE-2024-5535 on ubuntu/openssl@1.1.1f-1ubuntu2.19",
      "description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an empty supported client protocols buffer may cause a crash or memory contents to be sent to the peer.  Impact summary: A buffer overread can have a range of potential consequences such as unexpected application beahviour or a crash. In particular this issue could result in up to 255 bytes of arbitrary private data from memory being sent to the peer leading to a loss of confidentiality. However, only applications that directly call the SSL_select_next_proto function with a 0 length list of supported client protocols are affected by this issue. This would normally never be a valid scenario and is typically not under attacker control but may occur by accident in the case of a configuration or programming error in the calling application.  The OpenSSL API function SSL_select_next_proto is typically used by TLS applications that support ALPN (Application Layer Protocol Negotiation) or NPN (Next Protocol Negotiation). NPN is older, was never standardised and is deprecated in favour of ALPN. We believe that ALPN is significantly more widely deployed than NPN. The SSL_select_next_proto function accepts a list of protocols from the server and a list of protocols from the client and returns the first protocol that appears in the server list that also appears in the client list. In the case of no overlap between the two lists it returns the first item in the client list. In either case it will signal whether an overlap between the two lists was found. In the case where SSL_select_next_proto is called with a zero length client list it fails to notice this condition and returns the memory immediately following the client list pointer (and reports that there was no overlap in the lists).  This function is typically called from a server side application callback for ALPN or a client side application callback for NPN. In the case of ALPN the list of protocols supplied by the client is guaranteed by libssl to never be zero in length. The list of server protocols comes from the application and should never normally be expected to be of zero length. In this case if the SSL_select_next_proto function has been called as expected (with the list supplied by the client passed in the client/client_len parameters), then the application will not be vulnerable to this issue. If the application has accidentally been configured with a zero length server list, and has accidentally passed that zero length server list in the client/client_len parameters, and has additionally failed to correctly handle a \"no overlap\" response (which would normally result in a handshake failure in ALPN) then it will be vulnerable to this problem.  In the case of NPN, the protocol permits the client to opportunistically select a protocol when there is no overlap. OpenSSL returns the first client protocol in the no overlap case in support of this. The list of client protocols comes from the application and should never normally be expected to be of zero length. However if the SSL_select_next_proto function is accidentally called with a client_len of 0 then an invalid memory pointer will be returned instead. If the application uses this output as the opportunistic protocol then the loss of confidentiality will occur.  This issue has been assessed as Low severity because applications are most likely to be vulnerable if they are using NPN instead of ALPN - but NPN is not widely used. It also requires an application configuration or programming error. Finally, this issue would not typically be under attacker control making active exploitation unlikely.  The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.  Due to the low severity of this issue we are not issuing new releases of OpenSSL at this time. The fix will be included in the next releases when they become available.",
      "cve": "CVE-2024-5535",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/openssl@1.1.1f-1ubuntu2.19 to 1.1.1f-1ubuntu2.23",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/openssl@1.1.1f-1ubuntu2.19?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.1.1f-1ubuntu2.19"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-5535",
          "value": "CVE-2024-5535",
          "url": "https://scout.docker.com/v/CVE-2024-5535?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.1.1f-1ubuntu2.23"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-5535?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.1.1f-1ubuntu2.23"
        }
      ]
    },
    {
      "id": "e142fd52a7225e3ac0ee9682b55109645cfcc9e730a718df7b4a3e76a554c82d",
      "category": "container_scanning",
      "message": "CVE-2024-9143 on ubuntu/openssl@1.1.1f-1ubuntu2.19",
      "description": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted explicit values for the field polynomial can lead to out-of-bounds memory reads or writes.  Impact summary: Out of bound memory writes can lead to an application crash or even a possibility of a remote code execution, however, in all the protocols involving Elliptic Curve Cryptography that we're aware of, either only \"named curves\" are supported, or, if explicit curve parameters are supported, they specify an X9.62 encoding of binary (GF(2^m)) curves that can't represent problematic input values. Thus the likelihood of existence of a vulnerable application is low.  In particular, the X9.62 encoding is used for ECC keys in X.509 certificates, so problematic inputs cannot occur in the context of processing X.509 certificates.  Any problematic use-cases would have to be using an \"exotic\" curve encoding.  The affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(), and various supporting BN_GF2m_*() functions.  Applications working with \"exotic\" explicit binary (GF(2^m)) curve parameters, that make it possible to represent invalid field polynomials with a zero constant term, via the above or similar APIs, may terminate abruptly as a result of reading or writing outside of array bounds.  Remote code execution cannot easily be ruled out.  The FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
      "cve": "CVE-2024-9143",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/openssl@1.1.1f-1ubuntu2.19 to 1.1.1f-1ubuntu2.24",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/openssl@1.1.1f-1ubuntu2.19?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.1.1f-1ubuntu2.19"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-9143",
          "value": "CVE-2024-9143",
          "url": "https://scout.docker.com/v/CVE-2024-9143?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.1.1f-1ubuntu2.24"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-9143?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.1.1f-1ubuntu2.24"
        }
      ]
    },
    {
      "id": "b470b03d47606df677ebf713297b6c6901a8861ce5d63148292b0bead1010cdc",
      "category": "container_scanning",
      "message": "CVE-2025-58056 on io.netty/netty-codec-http@4.1.73.Final",
      "description": "## Summary\nA flaw in netty's parsing of chunk extensions in HTTP/1.1 messages with chunked encoding can lead to request smuggling issues with some reverse proxies.\n\n## Details\nWhen encountering a newline character (LF) while parsing a chunk extension, netty interprets the newline as the end of the chunk-size line regardless of whether a preceding carriage return (CR) was found. This is in violation of the HTTP 1.1 standard which specifies that the chunk extension is terminated by a CRLF sequence (see the [RFC](https://datatracker.ietf.org/doc/html/rfc9112#name-chunked-transfer-coding)).\n\nThis is by itself harmless, but consider an intermediary with a similar parsing flaw: while parsing a chunk extension, the intermediary interprets an LF without a preceding CR as simply part of the chunk extension (this is also in violation of the RFC, because whitespace characters are not allowed in chunk extensions). We can use this discrepancy to construct an HTTP request that the intermediary will interpret as one request but netty will interpret as two (all lines ending with CRLF, notice the LFs in the chunk extension):\n\n```\nPOST /one HTTP/1.1\nHost: localhost:8080\nTransfer-Encoding: chunked\n\n48;\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\n0\n\nPOST /two HTTP/1.1\nHost: localhost:8080\nTransfer-Encoding: chunked\n\n0\n\n```\n\nThe intermediary will interpret this as a single request. Once forwarded to netty, netty will interpret it as two separate requests. This is a problem, because attackers can then the intermediary, as well as perform standard request smuggling attacks against other live users (see [this Portswigger article](https://portswigger.net/web-security/request-smuggling/exploiting)).\n\n## Impact\nThis is a request smuggling issue which can be exploited for bypassing front-end access control rules as well as corrupting the responses served to other live clients.\n\nThe impact is high, but it only affects setups that use a front-end which:\n1. Interprets LF characters (without preceding CR) in chunk extensions as part of the chunk extension.\n2. Forwards chunk extensions without normalization.\n\n## Disclosure\n\n - This vulnerability was disclosed on June 18th, 2025 here: https://w4ke.info/2025/06/18/funky-chunks.html\n\n## Discussion\nDiscussion for this vulnerability can be found here:\n - https://github.com/netty/netty/issues/15522\n - https://github.com/JLLeitschuh/unCVEed/issues/1\n\n## Credit\n\n - Credit to @JeppW for uncovering this vulnerability.\n - Credit to @JLLeitschuh at [Socket](https://socket.dev/) for coordinating the vulnerability disclosure.",
      "cve": "CVE-2025-58056",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-codec-http@4.1.73.Final to 4.1.125.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-codec-http@4.1.73.Final"
          },
          "version": "4.1.73.Final"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58056",
          "value": "CVE-2025-58056",
          "url": "https://scout.docker.com/v/CVE-2025-58056?s=github&n=netty-codec-http&ns=io.netty&t=maven&vr=%3C4.1.125.Final"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58056?s=github&n=netty-codec-http&ns=io.netty&t=maven&vr=%3C4.1.125.Final"
        }
      ]
    },
    {
      "id": "9b7c8000879f2c36113338138f9a54f34f0f0fdbe2be31db59305affd689b0bc",
      "category": "container_scanning",
      "message": "GHSA-c9cp-9c75-9v8c on github.com/containerd/containerd@1.5.5",
      "description": "### Impact\n\nA bug was found in containerd where containers were incorrectly started with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during `execve(2)`.  Normally, when executable programs have specified permitted file capabilities, otherwise unprivileged users and processes can execute those programs and gain the specified file capabilities up to the bounding set.  Due to this bug, containers which included executable programs with inheritable file capabilities allowed otherwise unprivileged users and processes to additionally gain these inheritable file capabilities up to the container's bounding set.  Containers which use Linux users and groups to perform privilege separation inside the container are most directly impacted.\n\nThis bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set.\n\n\n### Patches\n\nThis bug has been fixed in containerd 1.5.11 and 1.6.2.  Users should update to these versions as soon as possible.  Running containers should be stopped, deleted, and recreated for the inheritable capabilities to be reset.\n\nThis fix changes containerd behavior such that containers are started with a more typical Linux environment.  Refer to `capabilities(7)` for a description of how capabilities work.  Note that permitted file capabilities continue to allow for privileges to be raised up to the container's bounding set and that processes may add capabilities to their own inheritable set up to the container's bounding set per the rules described in the manual page.  In all cases the container's bounding set provides an upper bound on the capabilities that can be assumed and provides for the container security sandbox.\n\n### Workarounds\n\nThe entrypoint of a container can be modified to use a utility like `capsh(1)` to drop inheritable capabilities prior to the primary process starting.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/containerd/containerd/issues/new)\n* Email us at [security@containerd.io](mailto:security@containerd.io) if you think you’ve found a security bug",
      "cve": "GHSA-c9cp-9c75-9v8c",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.5.5 to 1.5.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.5.5"
          },
          "version": "1.5.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-c9cp-9c75-9v8c",
          "value": "GHSA-c9cp-9c75-9v8c",
          "url": "https://scout.docker.com/v/GHSA-c9cp-9c75-9v8c?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.5.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-c9cp-9c75-9v8c?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.5.11"
        }
      ]
    },
    {
      "id": "0e825c27266b3f165cf5eb071fa514a8b5814dc5620f05757781d23687237f95",
      "category": "container_scanning",
      "message": "GHSA-vp35-85q5-9f25 on github.com/docker/docker@20.10.17+incompatible",
      "description": "### Description\n\nMoby is the open source Linux container runtime and set of components used to build a variety of downstream container runtimes, including Docker CE, Mirantis Container Runtime (formerly Docker EE), and Docker Desktop. Moby allows for building container images using a set of build instructions (usually named and referred to as a \"Dockerfile\"), and a build context, which is not unlike the CWD in which the Dockerfile instructions are executed.\n\nContainers may be built using a variety of tools and build backends available in the Moby ecosystem; in all cases, builds may not include files outside of the build context (such as using absolute or relative-parent paths). This is enforced through both checks in the build backends, and the containerization of the build process itself.\n\nVersions of Git where CVE-2022-39253 is present and exploited by a malicious repository, when used in combination with Moby, are subject to an unexpected inclusion of arbitrary filesystem paths in the build context, without any visible warning to the user.\n\nThis issue was originally reported by Wenxiang Qian of Tencent Blade Team, and the root-cause analysis was performed by Cory Snider of Mirantis, with assistance from Bjorn Neergaard of the same. The issue was then reported to the Git project, and Taylor Blau led the process resolving the root issue in Git.\n\n### Impact\n\nThis vulnerability originates in Git, but can be used to violate assumptions that may have security implications for users of Moby and related components. Users may rely on the fact that a build context ensures that outside files cannot be referenced or incorporated using multiple enforcement mechanisms, or expect a warning if this does not hold true. A maliciously crafted Git repository exploiting CVE-2022-39253 can violate this assumption, and potentially include sensitive files that are subsequently uploaded to a container image repository, or disclosed by code inside the resulting container image.\n\nAs this issue cannot be triggered remotely, except by users who already have full control over the daemon through the API, and it requires exploiting a vulnerability in Git by convincing a user to build a maliciously crafted repository, the impact in Moby is considered low.\n\n### Patches\n\nMoby 20.10.20, and Mirantis Container Runtime (formerly Docker Enterprise Edition) 20.10.14 will contain mitigations for CVE-2022-39253 when a Git clone is performed by Moby components (on either the daemon or API client side). However, as these mitigations only apply to certain scenarios (build of `git+<protocol>://...` URL contexts) and cannot protect against a malicious repository already on disk, users should update to a version of Git containing patches for CVE-2022-39253 on all their systems running both API clients and daemons.\n\nSpecifically, patches in Moby (including patches incorporated from BuildKit) protect against the following:\n\n* `docker build` with the legacy builder (e.g. `DOCKER_BUILDKIT` unset or set to 0) of a Git URL context. Note that depending on available API versions and the CLI version, the Git clone operation can take place on either the client or the daemon side. Both must be updated (or have Git updated) to fully protect this build method.\n* `docker build` with the BuildKit builder (e.g. `DOCKER_BUILDKIT=1`) of a Git URL context.\n* `docker buildx build` with `BUILDKIT_CONTEXT_KEEP_GIT_DIR=1` of a Git URL context.\n\nPatches in BuildKit incorporated into Docker Compose protect against CVE-2022-39253 during Compose-driven builds of Git URL contexts.\n\nPatches in Moby and related projects such as BuildKit, the Docker CLI, and Docker Compose **cannot** fully protect against CVE-2022-39253, as it may be triggered by a malicious repository already on disk that a unpatched Git client has interacted with (specifically, commands that check out submodules such as `git clone --recursive`, `git submodule update`, etc.  may have already triggered the Git vulnerability).\n\n### Workarounds\n\nWhile this behavior is unexpected and undesirable, and has resulted in this security advisory, users should keep in mind that building a container entails arbitrary code execution. Users should not build a repository/build context they do not trust, as containerization cannot protect against all possible attacks.\n\nWhen building with BuildKit (e.g. `docker buildx build` or `docker build` with `DOCKER_BUILDKIT=1`), this issue cannot be exploited unless `--build-arg BUILDKIT_CONTEXT_KEEP_GIT_DIR=1` was also passed, as by default BuildKit will discard the `.git` directory of a Git URL context immediately after cloning and checking out the repository.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/moby/moby/issues/new)\n* Email us at [security@docker.com](mailto:security@docker.com)",
      "cve": "GHSA-vp35-85q5-9f25",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/docker/docker@20.10.17+incompatible to 20.10.20",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/docker@20.10.17%2Bincompatible"
          },
          "version": "20.10.17+incompatible"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-vp35-85q5-9f25",
          "value": "GHSA-vp35-85q5-9f25",
          "url": "https://scout.docker.com/v/GHSA-vp35-85q5-9f25?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C%3D20.10.19"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-vp35-85q5-9f25?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C%3D20.10.19"
        }
      ]
    },
    {
      "id": "a8a9d499a9f104063cf0d1c523d09224e9b9a3849cfbf368cbb85fe1c8f555b2",
      "category": "container_scanning",
      "message": "CVE-2023-25809 on github.com/opencontainers/runc@1.1.3",
      "description": "### Impact\nIt was found that rootless runc makes `/sys/fs/cgroup` writable in following conditons:\n1. when runc is executed inside the user namespace, and the `config.json` does not specify the cgroup namespace to be unshared (e.g.., `(docker|podman|nerdctl) run --cgroupns=host`, with Rootless Docker/Podman/nerdctl)\n2. or, when runc is executed outside the user namespace, and `/sys` is mounted with `rbind, ro` (e.g., `runc spec --rootless`; this condition is very rare)\n\nA container may gain the write access to user-owned cgroup hierarchy `/sys/fs/cgroup/user.slice/...` on the host .\nOther users's cgroup hierarchies are not affected.\n\n### Patches\nv1.1.5 (planned)\n\n### Workarounds\n- Condition 1: Unshare the cgroup namespace (`(docker|podman|nerdctl) run --cgroupns=private)`. This is the default behavior of Docker/Podman/nerdctl on cgroup v2 hosts.\n- Condition 2 (very rare): add `/sys/fs/cgroup` to `maskedPaths`\n",
      "cve": "CVE-2023-25809",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/opencontainers/runc@1.1.3 to 1.1.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/opencontainers/runc@1.1.3"
          },
          "version": "1.1.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-25809",
          "value": "CVE-2023-25809",
          "url": "https://scout.docker.com/v/CVE-2023-25809?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.1.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-25809?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.1.5"
        }
      ]
    },
    {
      "id": "02ffc8294d1c9bcf3b8d834b1a56a1281650160a5f1d71fb389d01b87f5c39e7",
      "category": "container_scanning",
      "message": "CVE-2023-25809 on github.com/opencontainers/runc@1.0.1",
      "description": "### Impact\nIt was found that rootless runc makes `/sys/fs/cgroup` writable in following conditons:\n1. when runc is executed inside the user namespace, and the `config.json` does not specify the cgroup namespace to be unshared (e.g.., `(docker|podman|nerdctl) run --cgroupns=host`, with Rootless Docker/Podman/nerdctl)\n2. or, when runc is executed outside the user namespace, and `/sys` is mounted with `rbind, ro` (e.g., `runc spec --rootless`; this condition is very rare)\n\nA container may gain the write access to user-owned cgroup hierarchy `/sys/fs/cgroup/user.slice/...` on the host .\nOther users's cgroup hierarchies are not affected.\n\n### Patches\nv1.1.5 (planned)\n\n### Workarounds\n- Condition 1: Unshare the cgroup namespace (`(docker|podman|nerdctl) run --cgroupns=private)`. This is the default behavior of Docker/Podman/nerdctl on cgroup v2 hosts.\n- Condition 2 (very rare): add `/sys/fs/cgroup` to `maskedPaths`\n",
      "cve": "CVE-2023-25809",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/opencontainers/runc@1.0.1 to 1.1.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/opencontainers/runc@1.0.1"
          },
          "version": "1.0.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-25809",
          "value": "CVE-2023-25809",
          "url": "https://scout.docker.com/v/CVE-2023-25809?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.1.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-25809?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.1.5"
        }
      ]
    },
    {
      "id": "c5236c683b5f9a508c14816c29457b5bf731826d533d08bda06d11e22480dad5",
      "category": "container_scanning",
      "message": "GHSA-5j5w-g665-5m35 on github.com/containerd/containerd@1.5.5",
      "description": "### Impact\n\nIn the OCI Distribution Specification version 1.0.0 and prior and in the OCI Image Specification version 1.0.1 and prior, manifest and index documents are ambiguous without an accompanying Content-Type HTTP header.  Versions of containerd prior to 1.4.12 and 1.5.8 treat the Content-Type header as trusted and deserialize the document according to that header.  If the Content-Type header changed between pulls of the same ambiguous document (with the same digest), the document may be interpreted differently, meaning that the digest alone is insufficient to unambiguously identify the content of the image.\n\n### Patches\n\nThis issue has been fixed in containerd 1.4.12 and 1.5.8.  Image pulls for manifests that contain a “manifests” field or indices which contain a “layers” field are rejected.\n\n### Workarounds\n\nEnsure you only pull images from trusted sources.\n\n### References\n\nhttps://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m\nhttps://github.com/opencontainers/image-spec/security/advisories/GHSA-77vh-xpmg-72qh\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)",
      "cve": "GHSA-5j5w-g665-5m35",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.5.5 to 1.5.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.5.5"
          },
          "version": "1.5.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-5j5w-g665-5m35",
          "value": "GHSA-5j5w-g665-5m35",
          "url": "https://scout.docker.com/v/GHSA-5j5w-g665-5m35?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.5.0%2C%3C1.5.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-5j5w-g665-5m35?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.5.0%2C%3C1.5.8"
        }
      ]
    },
    {
      "id": "50619727cd2e1892cabcb4b784a01e7319d5d5577462989d1d46993eabeb6591",
      "category": "container_scanning",
      "message": "GHSA-77vh-xpmg-72qh on github.com/opencontainers/image-spec@1.0.2-0.20210819154149-5ad6f50d6283",
      "description": "### Impact\nIn the OCI Image Specification version 1.0.1 and prior, manifest and index documents are not self-describing and documents with a single digest could be interpreted as either a manifest or an index.\n\n### Patches\nThe Image Specification will be updated to recommend that both manifest and index documents contain a `mediaType` field to identify the type of document.\nRelease [v1.0.2](https://github.com/opencontainers/image-spec/releases/tag/v1.0.2) includes these updates.\n\n### Workarounds\nSoftware attempting to deserialize an ambiguous document may reject the document if it contains both “manifests” and “layers” fields or “manifests” and “config” fields.\n\n### References\nhttps://github.com/opencontainers/distribution-spec/security/advisories/GHSA-mc8v-mgrf-8f4m\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in https://github.com/opencontainers/image-spec\n* Email us at [security@opencontainers.org](mailto:security@opencontainers.org)\n* https://github.com/opencontainers/image-spec/commits/v1.0.2\n",
      "cve": "GHSA-77vh-xpmg-72qh",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/opencontainers/image-spec@1.0.2-0.20210819154149-5ad6f50d6283 to 1.0.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/opencontainers/image-spec@1.0.2-0.20210819154149-5ad6f50d6283"
          },
          "version": "1.0.2-0.20210819154149-5ad6f50d6283"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-77vh-xpmg-72qh",
          "value": "GHSA-77vh-xpmg-72qh",
          "url": "https://scout.docker.com/v/GHSA-77vh-xpmg-72qh?s=github&n=image-spec&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.0.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-77vh-xpmg-72qh?s=github&n=image-spec&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.0.2"
        }
      ]
    },
    {
      "id": "612621a5ff9b409d7d37480f134e7aa0d7dddabd0ce599680aab5db16d4efa01",
      "category": "container_scanning",
      "message": "GHSA-qq97-vm5h-rrhg on github.com/docker/distribution@2.7.1+incompatible",
      "description": "### Impact\n\nSystems that rely on digest equivalence for image attestations may be vulnerable to type confusion.\n\n### Patches\n\nUpgrade to at least `v2.8.0-beta.1`  if you are running `v2.x` release. If you use the code from the `main` branch, update at least to the commit after [b59a6f827947f9e0e67df0cfb571046de4733586](https://github.com/distribution/distribution/commit/b59a6f827947f9e0e67df0cfb571046de4733586).\n\n### Workarounds\n\nThere is no way to work around this issue without patching.\n\n### References\n\nDue to [an oversight in the OCI Image Specification](https://github.com/opencontainers/image-spec/pull/411) that removed the embedded `mediaType` field from manifests, a maliciously crafted OCI Container Image can cause registry clients to parse the same image in two different ways without modifying the image’s digest by modifying the `Content-Type` header returned by a registry. This can invalidate a common pattern of relying on container image digests for equivalence.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [distribution](https://github.com/distribution/distribution) \n* Open an issue in [distribution-spec](https://github.com/opencontainers/distribution-spec) \n* Email us at [cncf-distribution-security@lists.cncf.io](mailto:cncf-distribution-security@lists.cncf.io)\n",
      "cve": "GHSA-qq97-vm5h-rrhg",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/docker/distribution@2.7.1+incompatible to 2.8.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/distribution@2.7.1%2Bincompatible"
          },
          "version": "2.7.1+incompatible"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-qq97-vm5h-rrhg",
          "value": "GHSA-qq97-vm5h-rrhg",
          "url": "https://scout.docker.com/v/GHSA-qq97-vm5h-rrhg?s=github&n=distribution&ns=github.com%2Fdocker&t=golang&vr=%3C2.8.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-qq97-vm5h-rrhg?s=github&n=distribution&ns=github.com%2Fdocker&t=golang&vr=%3C2.8.0"
        }
      ]
    },
    {
      "id": "f763a1628610e248ea194b845f4af92d2ac9870845f3714ddd6a952b1dabccbb",
      "category": "container_scanning",
      "message": "CVE-2022-30629 on stdlib@1.16.10",
      "description": "An attacker can correlate a resumed TLS session with a previous connection.\n\nSession tickets generated by crypto/tls do not contain a randomly generated ticket_age_add, which allows an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
      "cve": "CVE-2022-30629",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.17.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30629",
          "value": "CVE-2022-30629",
          "url": "https://scout.docker.com/v/CVE-2022-30629?s=golang&n=stdlib&t=golang&vr=%3C1.17.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30629?s=golang&n=stdlib&t=golang&vr=%3C1.17.11"
        }
      ]
    },
    {
      "id": "f912080b50f6273dbec3bae1d493abc361ea8ad349dd0c755d6c52e6c0f433b2",
      "category": "container_scanning",
      "message": "CVE-2022-30629 on stdlib@1.16.12",
      "description": "An attacker can correlate a resumed TLS session with a previous connection.\n\nSession tickets generated by crypto/tls do not contain a randomly generated ticket_age_add, which allows an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
      "cve": "CVE-2022-30629",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.17.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30629",
          "value": "CVE-2022-30629",
          "url": "https://scout.docker.com/v/CVE-2022-30629?s=golang&n=stdlib&t=golang&vr=%3C1.17.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30629?s=golang&n=stdlib&t=golang&vr=%3C1.17.11"
        }
      ]
    },
    {
      "id": "06352e052f67bd38b741d1b4b3efac4ca86620430455019e4f3a61f0480e44df",
      "category": "container_scanning",
      "message": "CVE-2020-8908 on com.google.guava/guava@31.0.1-jre",
      "description": "A temp directory creation vulnerability exists in Guava prior to version 32.0.0 allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava `com.google.common.io.Files.createTempDir()`. The permissions granted to the directory created default to the standard unix-like /tmp ones, leaving the files open. Maintainers recommend explicitly changing the permissions after the creation of the directory, or removing uses of the vulnerable method.\n",
      "cve": "CVE-2020-8908",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade com.google.guava/guava@31.0.1-jre to 32.0.0-android",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.google.guava/guava@31.0.1-jre"
          },
          "version": "31.0.1-jre"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-8908",
          "value": "CVE-2020-8908",
          "url": "https://scout.docker.com/v/CVE-2020-8908?s=github&n=guava&ns=com.google.guava&t=maven&vr=%3C32.0.0-android"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-8908?s=github&n=guava&ns=com.google.guava&t=maven&vr=%3C32.0.0-android"
        }
      ]
    },
    {
      "id": "5461a4d2de8dc21604f444199eae8fdb53418268966c092853cebb125a8e74c7",
      "category": "container_scanning",
      "message": "CVE-2020-8908 on com.google.guava/guava@30.1-jre",
      "description": "A temp directory creation vulnerability exists in Guava prior to version 32.0.0 allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava `com.google.common.io.Files.createTempDir()`. The permissions granted to the directory created default to the standard unix-like /tmp ones, leaving the files open. Maintainers recommend explicitly changing the permissions after the creation of the directory, or removing uses of the vulnerable method.\n",
      "cve": "CVE-2020-8908",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade com.google.guava/guava@30.1-jre to 32.0.0-android",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.google.guava/guava@30.1-jre"
          },
          "version": "30.1-jre"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-8908",
          "value": "CVE-2020-8908",
          "url": "https://scout.docker.com/v/CVE-2020-8908?s=github&n=guava&ns=com.google.guava&t=maven&vr=%3C32.0.0-android"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-8908?s=github&n=guava&ns=com.google.guava&t=maven&vr=%3C32.0.0-android"
        }
      ]
    },
    {
      "id": "84ffe78d28f6df1510757c0850d50ba5cca70ccae48392b34290a3005974d664",
      "category": "container_scanning",
      "message": "CVE-2020-8908 on com.google.guava/guava@25.1-android",
      "description": "A temp directory creation vulnerability exists in Guava prior to version 32.0.0 allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava `com.google.common.io.Files.createTempDir()`. The permissions granted to the directory created default to the standard unix-like /tmp ones, leaving the files open. Maintainers recommend explicitly changing the permissions after the creation of the directory, or removing uses of the vulnerable method.\n",
      "cve": "CVE-2020-8908",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade com.google.guava/guava@25.1-android to 32.0.0-android",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.google.guava/guava@25.1-android"
          },
          "version": "25.1-android"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-8908",
          "value": "CVE-2020-8908",
          "url": "https://scout.docker.com/v/CVE-2020-8908?s=github&n=guava&ns=com.google.guava&t=maven&vr=%3C32.0.0-android"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-8908?s=github&n=guava&ns=com.google.guava&t=maven&vr=%3C32.0.0-android"
        }
      ]
    },
    {
      "id": "349f8d2457731838109bf9acf5b1563cc8c55e845842b9410c908a0ec205592c",
      "category": "container_scanning",
      "message": "CVE-2023-4016 on ubuntu/procps@2:3.3.16-1ubuntu2.3",
      "description": "Under some circumstances, this weakness allows a user who has access to run the “ps” utility on a machine, the ability to write almost unlimited amounts of unfiltered data into the process heap.",
      "cve": "CVE-2023-4016",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/procps@2:3.3.16-1ubuntu2.3 to 2:3.3.16-1ubuntu2.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/procps@2%3A3.3.16-1ubuntu2.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2:3.3.16-1ubuntu2.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-4016",
          "value": "CVE-2023-4016",
          "url": "https://scout.docker.com/v/CVE-2023-4016?s=ubuntu&n=procps&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2%3A3.3.16-1ubuntu2.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-4016?s=ubuntu&n=procps&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2%3A3.3.16-1ubuntu2.4"
        }
      ]
    },
    {
      "id": "6fb2bf3014f5807506cdacf0a62bbab58003a8d9eb43400185e2b266af767344",
      "category": "container_scanning",
      "message": "CVE-2025-54410 on github.com/docker/docker@20.10.17+incompatible",
      "description": "Moby is an open source container framework developed by Docker Inc. that is distributed as Docker Engine, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (dockerd), which is developed as [moby/moby](https://github.com/moby/moby) is commonly referred to as Docker, or Docker Engine.\n\nFirewalld is a daemon used by some Linux distributions to provide a dynamically managed firewall. When Firewalld is running, Docker uses its iptables backend to create rules, including rules to isolate containers in one bridge network from containers in other bridge networks.\n\n### Impact\n\nThe iptables rules created by Docker are removed when firewalld is reloaded using, for example \"firewall-cmd --reload\", \"killall -HUP firewalld\", or \"systemctl reload firewalld\".\n\nWhen that happens, Docker must re-create the rules. However, in affected versions of Docker, the iptables rules that isolate containers in different bridge networks from each other are not re-created.\n\nOnce these rules have been removed, containers have access to any port, on any container, in any non-internal bridge network, running on the Docker host.\n\nContainers running in networks created with `--internal` or equivalent have no access to other networks. Containers that are only connected to these networks remain isolated after a firewalld reload.\n\nWhere Docker Engine is not running in the host's network namespace, it is unaffected. Including, for example, Rootless Mode, and Docker Desktop.\n\n### Patches\n\nMoby releases 28.0.0 and newer are not affected. A fix is available in moby release 25.0.13.\n\n### Workarounds\nAfter reloading firewalld, either:\n- Restart the docker daemon,\n- Re-create bridge networks, or\n- Use rootless mode.\n\n### References\nhttps://firewalld.org/\nhttps://firewalld.org/documentation/howto/reload-firewalld.html",
      "cve": "CVE-2025-54410",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/docker@20.10.17%2Bincompatible"
          },
          "version": "20.10.17+incompatible"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-54410",
          "value": "CVE-2025-54410",
          "url": "https://scout.docker.com/v/CVE-2025-54410?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C%3D25.0.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-54410?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C%3D25.0.12"
        }
      ]
    },
    {
      "id": "bf6d563aaf01051abc7eb6a862cde3e75a4be8d4b3bc26285051fd677314ee67",
      "category": "container_scanning",
      "message": "CVE-2023-38546 on ubuntu/curl@7.68.0-1ubuntu2.19",
      "description": "This flaw allows an attacker to insert cookies at will into a running program using libcurl, if the specific series of conditions are met.  libcurl performs transfers. In its API, an application creates \"easy handles\" that are the individual handles for single transfers.  libcurl provides a function call that duplicates en easy handle called [curl_easy_duphandle](https://curl.se/libcurl/c/curl_easy_duphandle.html).  If a transfer has cookies enabled when the handle is duplicated, the cookie-enable state is also cloned - but without cloning the actual cookies. If the source handle did not read any cookies from a specific file on disk, the cloned version of the handle would instead store the file name as `none` (using the four ASCII letters, no quotes).  Subsequent use of the cloned handle that does not explicitly set a source to load cookies from would then inadvertently load cookies from a file named `none` - if such a file exists and is readable in the current directory of the program using libcurl. And if using the correct file format of course.",
      "cve": "CVE-2023-38546",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/curl@7.68.0-1ubuntu2.19 to 7.68.0-1ubuntu2.20",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/curl@7.68.0-1ubuntu2.19?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "7.68.0-1ubuntu2.19"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-38546",
          "value": "CVE-2023-38546",
          "url": "https://scout.docker.com/v/CVE-2023-38546?s=ubuntu&n=curl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C7.68.0-1ubuntu2.20"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-38546?s=ubuntu&n=curl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C7.68.0-1ubuntu2.20"
        }
      ]
    },
    {
      "id": "651829b018972a2f4ddc8657ddc1b84d364182b9a7fa843bd5b7383bdde97d66",
      "category": "container_scanning",
      "message": "CVE-2023-3446 on ubuntu/openssl@1.1.1f-1ubuntu2.19",
      "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_check(), DH_check_ex() or EVP_PKEY_param_check() to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  The function DH_check() performs various checks on DH parameters. One of those checks confirms that the modulus ('p' parameter) is not too large. Trying to use a very large modulus is slow and OpenSSL will not normally use a modulus which is over 10,000 bits in length.  However the DH_check() function checks numerous aspects of the key or parameters that have been supplied. Some of those checks use the supplied modulus value even if it has already been found to be too large.  An application that calls DH_check() and supplies a key or parameters obtained from an untrusted source could be vulernable to a Denial of Service attack.  The function DH_check() is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_ex() and EVP_PKEY_param_check().  Also vulnerable are the OpenSSL dhparam and pkeyparam command line applications when using the '-check' option.  The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
      "cve": "CVE-2023-3446",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/openssl@1.1.1f-1ubuntu2.19 to 1.1.1f-1ubuntu2.20",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/openssl@1.1.1f-1ubuntu2.19?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.1.1f-1ubuntu2.19"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-3446",
          "value": "CVE-2023-3446",
          "url": "https://scout.docker.com/v/CVE-2023-3446?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.1.1f-1ubuntu2.20"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-3446?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.1.1f-1ubuntu2.20"
        }
      ]
    },
    {
      "id": "61cd36c7ce4172e04138f483626930f23c50b69e659263778cb4dec52c894a45",
      "category": "container_scanning",
      "message": "CVE-2023-3817 on ubuntu/openssl@1.1.1f-1ubuntu2.19",
      "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_check(), DH_check_ex() or EVP_PKEY_param_check() to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  The function DH_check() performs various checks on DH parameters. After fixing CVE-2023-3446 it was discovered that a large q parameter value can also trigger an overly long computation during some of these checks. A correct q value, if present, cannot be larger than the modulus p parameter, thus it is unnecessary to perform these checks if q is larger than p.  An application that calls DH_check() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack.  The function DH_check() is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_ex() and EVP_PKEY_param_check().  Also vulnerable are the OpenSSL dhparam and pkeyparam command line applications when using the \"-check\" option.  The OpenSSL SSL/TLS implementation is not affected by this issue.  The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
      "cve": "CVE-2023-3817",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/openssl@1.1.1f-1ubuntu2.19 to 1.1.1f-1ubuntu2.20",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/openssl@1.1.1f-1ubuntu2.19?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.1.1f-1ubuntu2.19"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-3817",
          "value": "CVE-2023-3817",
          "url": "https://scout.docker.com/v/CVE-2023-3817?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.1.1f-1ubuntu2.20"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-3817?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.1.1f-1ubuntu2.20"
        }
      ]
    },
    {
      "id": "24a01e453e3859e7eef2c6b5248d80dfe253e79ae4504123d96d9ff4f278ea37",
      "category": "container_scanning",
      "message": "CVE-2023-5678 on ubuntu/openssl@1.1.1f-1ubuntu2.19",
      "description": "Issue summary: Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_generate_key() to generate an X9.42 DH key may experience long delays.  Likewise, applications that use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check() to check an X9.42 DH key or X9.42 DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  While DH_check() performs all the necessary checks (as of CVE-2023-3817), DH_check_pub_key() doesn't make any of these checks, and is therefore vulnerable for excessively large P and Q parameters.  Likewise, while DH_generate_key() performs a check for an excessively large P, it doesn't check for an excessively large Q.  An application that calls DH_generate_key() or DH_check_pub_key() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack.  DH_generate_key() and DH_check_pub_key() are also called by a number of other OpenSSL functions.  An application calling any of those other functions may similarly be affected.  The other functions affected by this are DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().  Also vulnerable are the OpenSSL pkey command line application when using the \"-pubcheck\" option, as well as the OpenSSL genpkey command line application.  The OpenSSL SSL/TLS implementation is not affected by this issue.  The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
      "cve": "CVE-2023-5678",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/openssl@1.1.1f-1ubuntu2.19 to 1.1.1f-1ubuntu2.21",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/openssl@1.1.1f-1ubuntu2.19?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.1.1f-1ubuntu2.19"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-5678",
          "value": "CVE-2023-5678",
          "url": "https://scout.docker.com/v/CVE-2023-5678?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.1.1f-1ubuntu2.21"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-5678?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.1.1f-1ubuntu2.21"
        }
      ]
    },
    {
      "id": "a120466d189e9cf8d9439101e5ad7dda8fc93408a2b60ae42b92dbd53d5c0731",
      "category": "container_scanning",
      "message": "CVE-2021-33294 on ubuntu/elfutils@0.176-1.1build1",
      "description": "In elfutils 0.183, an infinite loop was found in the function handle_symtab in readelf.c .Which allows attackers to cause a denial of service (infinite loop) via crafted file.",
      "cve": "CVE-2021-33294",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/elfutils@0.176-1.1build1 to 0.176-1.1ubuntu0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/elfutils@0.176-1.1build1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "0.176-1.1build1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-33294",
          "value": "CVE-2021-33294",
          "url": "https://scout.docker.com/v/CVE-2021-33294?s=ubuntu&n=elfutils&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C0.176-1.1ubuntu0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-33294?s=ubuntu&n=elfutils&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C0.176-1.1ubuntu0.1"
        }
      ]
    },
    {
      "id": "44bc8dbdd726654a32fc486c540fd4ea764a2bb10b44ebe15b5e816dbdffc67e",
      "category": "container_scanning",
      "message": "CVE-2023-4641 on ubuntu/shadow@1:4.8.1-1ubuntu5.20.04.4",
      "description": "A flaw was found in shadow-utils. When asking for a new password, shadow-utils asks the password twice. If the password fails on the second attempt, shadow-utils fails in cleaning the buffer used to store the first entry. This may allow an attacker with enough access to retrieve the password from the memory.",
      "cve": "CVE-2023-4641",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/shadow@1:4.8.1-1ubuntu5.20.04.4 to 1:4.8.1-1ubuntu5.20.04.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/shadow@1%3A4.8.1-1ubuntu5.20.04.4?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1:4.8.1-1ubuntu5.20.04.4"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-4641",
          "value": "CVE-2023-4641",
          "url": "https://scout.docker.com/v/CVE-2023-4641?s=ubuntu&n=shadow&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1%3A4.8.1-1ubuntu5.20.04.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-4641?s=ubuntu&n=shadow&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1%3A4.8.1-1ubuntu5.20.04.5"
        }
      ]
    },
    {
      "id": "9b7f469f7f9ff5aa80689bb9ae6b9d05d798b430b439cb2c1af6dd81e9b5915c",
      "category": "container_scanning",
      "message": "CVE-2024-0727 on ubuntu/openssl@1.1.1f-1ubuntu2.19",
      "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL to crash leading to a potential Denial of Service attack  Impact summary: Applications loading files in the PKCS12 format from untrusted sources might terminate abruptly.  A file in PKCS12 format can contain certificates and keys and may come from an untrusted source. The PKCS12 specification allows certain fields to be NULL, but OpenSSL does not correctly check for this case. This can lead to a NULL pointer dereference that results in OpenSSL crashing. If an application processes PKCS12 files from an untrusted source using the OpenSSL APIs then that application will be vulnerable to this issue.  OpenSSL APIs that are vulnerable to this are: PKCS12_parse(), PKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes() and PKCS12_newpass().  We have also fixed a similar issue in SMIME_write_PKCS7(). However since this function is related to writing data we do not consider it security significant.  The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
      "cve": "CVE-2024-0727",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/openssl@1.1.1f-1ubuntu2.19 to 1.1.1f-1ubuntu2.21",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/openssl@1.1.1f-1ubuntu2.19?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.1.1f-1ubuntu2.19"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-0727",
          "value": "CVE-2024-0727",
          "url": "https://scout.docker.com/v/CVE-2024-0727?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.1.1f-1ubuntu2.21"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-0727?s=ubuntu&n=openssl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.1.1f-1ubuntu2.21"
        }
      ]
    },
    {
      "id": "ff607a1fb11cbb92bcfe319a3b0d86d44c2da9081a2a23b83c30abb847ab8235",
      "category": "container_scanning",
      "message": "CVE-2023-4806 on ubuntu/glibc@2.31-0ubuntu9.9",
      "description": "A flaw was found in glibc. In an extremely rare situation, the getaddrinfo function may access memory that has been freed, resulting in an application crash. This issue is only exploitable when a NSS module implements only the _nss_*_gethostbyname2_r and _nss_*_getcanonname_r hooks without implementing the _nss_*_gethostbyname3_r hook. The resolved name should return a large number of IPv6 and IPv4, and the call to the getaddrinfo function should have the AF_INET6 address family with AI_CANONNAME, AI_ALL and AI_V4MAPPED as flags.",
      "cve": "CVE-2023-4806",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/glibc@2.31-0ubuntu9.9 to 2.31-0ubuntu9.14",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/glibc@2.31-0ubuntu9.9?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.31-0ubuntu9.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-4806",
          "value": "CVE-2023-4806",
          "url": "https://scout.docker.com/v/CVE-2023-4806?s=ubuntu&n=glibc&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.31-0ubuntu9.14"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-4806?s=ubuntu&n=glibc&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.31-0ubuntu9.14"
        }
      ]
    },
    {
      "id": "f0b67a2148896f793495a87600e2729c666bfd871432f347d2cef4586adc7213",
      "category": "container_scanning",
      "message": "CVE-2023-4813 on ubuntu/glibc@2.31-0ubuntu9.9",
      "description": "A flaw was found in glibc. In an uncommon situation, the gaih_inet function may use memory that has been freed, resulting in an application crash. This issue is only exploitable when the getaddrinfo function is called and the hosts database in /etc/nsswitch.conf is configured with SUCCESS=continue or SUCCESS=merge.",
      "cve": "CVE-2023-4813",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/glibc@2.31-0ubuntu9.9 to 2.31-0ubuntu9.14",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/glibc@2.31-0ubuntu9.9?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.31-0ubuntu9.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-4813",
          "value": "CVE-2023-4813",
          "url": "https://scout.docker.com/v/CVE-2023-4813?s=ubuntu&n=glibc&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.31-0ubuntu9.14"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-4813?s=ubuntu&n=glibc&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.31-0ubuntu9.14"
        }
      ]
    },
    {
      "id": "6c8c987fbc217c28e5ef081a085f6c90427dafe3e563d7540c575e142a37c57d",
      "category": "container_scanning",
      "message": "CVE-2021-41617 on ubuntu/openssh@1:8.2p1-4ubuntu0.9",
      "description": "sshd in OpenSSH 6.2 through 8.x before 8.8, when certain non-default configurations are used, allows privilege escalation because supplemental groups are not initialized as expected. Helper programs for AuthorizedKeysCommand and AuthorizedPrincipalsCommand may run with privileges associated with group memberships of the sshd process, if the configuration specifies running the command as a different user.",
      "cve": "CVE-2021-41617",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/openssh@1:8.2p1-4ubuntu0.9 to 1:8.2p1-4ubuntu0.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/openssh@1%3A8.2p1-4ubuntu0.9?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1:8.2p1-4ubuntu0.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-41617",
          "value": "CVE-2021-41617",
          "url": "https://scout.docker.com/v/CVE-2021-41617?s=ubuntu&n=openssh&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1%3A8.2p1-4ubuntu0.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-41617?s=ubuntu&n=openssh&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1%3A8.2p1-4ubuntu0.11"
        }
      ]
    },
    {
      "id": "b6890a6cf434c053030679e3ddfc535de400fea5cf382e38994bf63bbbfc727f",
      "category": "container_scanning",
      "message": "CVE-2023-2953 on ubuntu/openldap@2.4.49+dfsg-2ubuntu1.9",
      "description": "A vulnerability was found in openldap. This security flaw causes a null pointer dereference in ber_memalloc_x() function.",
      "cve": "CVE-2023-2953",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/openldap@2.4.49+dfsg-2ubuntu1.9 to 2.4.49+dfsg-2ubuntu1.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/openldap@2.4.49%2Bdfsg-2ubuntu1.9?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.4.49+dfsg-2ubuntu1.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-2953",
          "value": "CVE-2023-2953",
          "url": "https://scout.docker.com/v/CVE-2023-2953?s=ubuntu&n=openldap&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.4.49%2Bdfsg-2ubuntu1.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-2953?s=ubuntu&n=openldap&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.4.49%2Bdfsg-2ubuntu1.10"
        }
      ]
    },
    {
      "id": "6384cf370e01127876b2aabf4d9d4ce93b8c7baf84aeda41dfb704d9f05a7dd3",
      "category": "container_scanning",
      "message": "CVE-2024-7592 on ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8",
      "description": "There is a LOW severity vulnerability affecting CPython, specifically the 'http.cookies' standard library module.   When parsing cookies that contained backslashes for quoted characters in the cookie value, the parser would use an algorithm with quadratic complexity, resulting in excess CPU resources being used while parsing the value.",
      "cve": "CVE-2024-7592",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8 to 3.8.10-0ubuntu1~20.04.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "3.8.10-0ubuntu1~20.04.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-7592",
          "value": "CVE-2024-7592",
          "url": "https://scout.docker.com/v/CVE-2024-7592?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-7592?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.12"
        }
      ]
    },
    {
      "id": "01a35bf4594a8ab67a85746d7c723085d0470edf9951e280450d07f9c4730eac",
      "category": "container_scanning",
      "message": "CVE-2022-49043 on ubuntu/libxml2@2.9.10+dfsg-5ubuntu0.20.04.6",
      "description": "xmlXIncludeAddNode in xinclude.c in libxml2 before 2.11.0 has a use-after-free.",
      "cve": "CVE-2022-49043",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libxml2@2.9.10+dfsg-5ubuntu0.20.04.6 to 2.9.10+dfsg-5ubuntu0.20.04.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libxml2@2.9.10%2Bdfsg-5ubuntu0.20.04.6?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.9.10+dfsg-5ubuntu0.20.04.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-49043",
          "value": "CVE-2022-49043",
          "url": "https://scout.docker.com/v/CVE-2022-49043?s=ubuntu&n=libxml2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.9.10%2Bdfsg-5ubuntu0.20.04.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-49043?s=ubuntu&n=libxml2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.9.10%2Bdfsg-5ubuntu0.20.04.8"
        }
      ]
    },
    {
      "id": "19c037c8a8135c5c9b8f3576a0e8cd5f9053e540b41b2224c363280b80e59dc0",
      "category": "container_scanning",
      "message": "CVE-2023-39804 on ubuntu/tar@1.30+dfsg-7ubuntu0.20.04.3",
      "description": "In GNU tar before 1.35, mishandled extension attributes in a PAX archive can lead to an application crash in xheader.c.",
      "cve": "CVE-2023-39804",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/tar@1.30+dfsg-7ubuntu0.20.04.3 to 1.30+dfsg-7ubuntu0.20.04.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/tar@1.30%2Bdfsg-7ubuntu0.20.04.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.30+dfsg-7ubuntu0.20.04.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39804",
          "value": "CVE-2023-39804",
          "url": "https://scout.docker.com/v/CVE-2023-39804?s=ubuntu&n=tar&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.30%2Bdfsg-7ubuntu0.20.04.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39804?s=ubuntu&n=tar&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.30%2Bdfsg-7ubuntu0.20.04.4"
        }
      ]
    },
    {
      "id": "c9472bb5ebf5b0251f28a6dcd361863788c408ee556775fffeedcf22c423af6c",
      "category": "container_scanning",
      "message": "CVE-2023-6597 on ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8",
      "description": "An issue was found in the CPython `tempfile.TemporaryDirectory` class affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.  The tempfile.TemporaryDirectory class would dereference symlinks during cleanup of permissions-related errors. This means users which can run privileged programs are potentially able to modify permissions of files referenced by symlinks in some circumstances.",
      "cve": "CVE-2023-6597",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8 to 3.8.10-0ubuntu1~20.04.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "3.8.10-0ubuntu1~20.04.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-6597",
          "value": "CVE-2023-6597",
          "url": "https://scout.docker.com/v/CVE-2023-6597?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-6597?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.10"
        }
      ]
    },
    {
      "id": "39d3ce38c4c0e3200a89abe078173968e718187db57799908642e304b92c6190",
      "category": "container_scanning",
      "message": "CVE-2024-0397 on ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8",
      "description": "A defect was discovered in the Python “ssl” module where there is a memory race condition with the ssl.SSLContext methods “cert_store_stats()” and “get_ca_certs()”. The race condition can be triggered if the methods are called at the same time as certificates are loaded into the SSLContext, such as during the TLS handshake with a certificate directory configured. This issue is fixed in CPython 3.10.14, 3.11.9, 3.12.3, and 3.13.0a5.",
      "cve": "CVE-2024-0397",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8 to 3.8.10-0ubuntu1~20.04.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "3.8.10-0ubuntu1~20.04.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-0397",
          "value": "CVE-2024-0397",
          "url": "https://scout.docker.com/v/CVE-2024-0397?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-0397?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.11"
        }
      ]
    },
    {
      "id": "fcce4cd3df9d46f90ce48ba4b93d8c28c81ecfc17fbcfd6a43fc605e193eae14",
      "category": "container_scanning",
      "message": "CVE-2024-0450 on ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8",
      "description": "An issue was found in the CPython `zipfile` module affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.  The zipfile module is vulnerable to “quoted-overlap” zip-bombs which exploit the zip format to create a zip-bomb with a high compression ratio. The fixed versions of CPython makes the zipfile module reject zip archives which overlap entries in the archive.",
      "cve": "CVE-2024-0450",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8 to 3.8.10-0ubuntu1~20.04.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "3.8.10-0ubuntu1~20.04.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-0450",
          "value": "CVE-2024-0450",
          "url": "https://scout.docker.com/v/CVE-2024-0450?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-0450?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.10"
        }
      ]
    },
    {
      "id": "4bd353f0960c979bd0fa500d23bd68a96f2945476da9e342c1b6982a981b8a5b",
      "category": "container_scanning",
      "message": "CVE-2024-11168 on ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8",
      "description": "The urllib.parse.urlsplit() and urlparse() functions improperly validated bracketed hosts (`[]`), allowing hosts that weren't IPv6 or IPvFuture. This behavior was not conformant to RFC 3986 and potentially enabled SSRF if a URL is processed by more than one URL parser.",
      "cve": "CVE-2024-11168",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8 to 3.8.10-0ubuntu1~20.04.14",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "3.8.10-0ubuntu1~20.04.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-11168",
          "value": "CVE-2024-11168",
          "url": "https://scout.docker.com/v/CVE-2024-11168?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.14"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-11168?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.14"
        }
      ]
    },
    {
      "id": "546e95889323b69a99b8fcb087aa4b174ecbddddd2e7d1b0ff1b7e31ff86d0a6",
      "category": "container_scanning",
      "message": "CVE-2024-12133 on ubuntu/libtasn1-6@4.16.0-2",
      "description": "A flaw in libtasn1 causes inefficient handling of specific certificate data. When processing a large number of elements in a certificate, libtasn1 takes much longer than expected, which can slow down or even crash the system. This flaw allows an attacker to send a specially crafted certificate, causing a denial of service attack.",
      "cve": "CVE-2024-12133",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libtasn1-6@4.16.0-2 to 4.16.0-2ubuntu0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libtasn1-6@4.16.0-2?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "4.16.0-2"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-12133",
          "value": "CVE-2024-12133",
          "url": "https://scout.docker.com/v/CVE-2024-12133?s=ubuntu&n=libtasn1-6&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C4.16.0-2ubuntu0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-12133?s=ubuntu&n=libtasn1-6&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C4.16.0-2ubuntu0.1"
        }
      ]
    },
    {
      "id": "60a04663bdee0dcd7d5eac5e7f076377b625d6e1482e14e4ad5f12cc927a4f94",
      "category": "container_scanning",
      "message": "CVE-2024-12243 on ubuntu/gnutls28@3.6.13-2ubuntu1.8",
      "description": "A flaw was found in GnuTLS, which relies on libtasn1 for ASN.1 data processing. Due to an inefficient algorithm in libtasn1, decoding certain DER-encoded certificate data can take excessive time, leading to increased resource consumption. This flaw allows a remote attacker to send a specially crafted certificate, causing GnuTLS to become unresponsive or slow, resulting in a denial-of-service condition.",
      "cve": "CVE-2024-12243",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/gnutls28@3.6.13-2ubuntu1.8 to 3.6.13-2ubuntu1.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/gnutls28@3.6.13-2ubuntu1.8?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "3.6.13-2ubuntu1.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-12243",
          "value": "CVE-2024-12243",
          "url": "https://scout.docker.com/v/CVE-2024-12243?s=ubuntu&n=gnutls28&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.6.13-2ubuntu1.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-12243?s=ubuntu&n=gnutls28&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.6.13-2ubuntu1.12"
        }
      ]
    },
    {
      "id": "ec248b5e71fa8dc76c831318e5a77122ead005c47ebf7a339d1bffae86b8bf77",
      "category": "container_scanning",
      "message": "CVE-2024-2398 on ubuntu/curl@7.68.0-1ubuntu2.19",
      "description": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
      "cve": "CVE-2024-2398",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/curl@7.68.0-1ubuntu2.19 to 7.68.0-1ubuntu2.22",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/curl@7.68.0-1ubuntu2.19?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "7.68.0-1ubuntu2.19"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-2398",
          "value": "CVE-2024-2398",
          "url": "https://scout.docker.com/v/CVE-2024-2398?s=ubuntu&n=curl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C7.68.0-1ubuntu2.22"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-2398?s=ubuntu&n=curl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C7.68.0-1ubuntu2.22"
        }
      ]
    },
    {
      "id": "f8ecd4da8c029d245fb986f036d1a749d37f18efe1dd3cdc80dece9635c808cf",
      "category": "container_scanning",
      "message": "CVE-2024-28085 on ubuntu/util-linux@2.34-0.1ubuntu9.4",
      "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
      "cve": "CVE-2024-28085",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/util-linux@2.34-0.1ubuntu9.4 to 2.34-0.1ubuntu9.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/util-linux@2.34-0.1ubuntu9.4?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.34-0.1ubuntu9.4"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-28085",
          "value": "CVE-2024-28085",
          "url": "https://scout.docker.com/v/CVE-2024-28085?s=ubuntu&n=util-linux&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.34-0.1ubuntu9.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-28085?s=ubuntu&n=util-linux&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.34-0.1ubuntu9.5"
        }
      ]
    },
    {
      "id": "c244771eb3723f9b03ba6930111075c190b16b0a2726c2fc5a6b59ba77ca2c0b",
      "category": "container_scanning",
      "message": "CVE-2024-28182 on ubuntu/nghttp2@1.40.0-1ubuntu0.1",
      "description": "nghttp2 is an implementation of the Hypertext Transfer Protocol version 2 in C. The nghttp2 library prior to version 1.61.0 keeps reading the unbounded number of HTTP/2 CONTINUATION frames even after a stream is reset to keep HPACK context in sync.  This causes excessive CPU usage to decode HPACK stream. nghttp2 v1.61.0 mitigates this vulnerability by limiting the number of CONTINUATION frames it accepts per stream. There is no workaround for this vulnerability.",
      "cve": "CVE-2024-28182",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/nghttp2@1.40.0-1ubuntu0.1 to 1.40.0-1ubuntu0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/nghttp2@1.40.0-1ubuntu0.1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.40.0-1ubuntu0.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-28182",
          "value": "CVE-2024-28182",
          "url": "https://scout.docker.com/v/CVE-2024-28182?s=ubuntu&n=nghttp2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.40.0-1ubuntu0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-28182?s=ubuntu&n=nghttp2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.40.0-1ubuntu0.3"
        }
      ]
    },
    {
      "id": "e67578b4fc11cf9121cb009d50e474c66976195083a5e1a14bc11c483e4eac4c",
      "category": "container_scanning",
      "message": "CVE-2024-28834 on ubuntu/gnutls28@3.6.13-2ubuntu1.8",
      "description": "A flaw was found in GnuTLS. The Minerva attack is a cryptographic vulnerability that exploits deterministic behavior in systems like GnuTLS, leading to side-channel leaks. In specific scenarios, such as when using the GNUTLS_PRIVKEY_FLAG_REPRODUCIBLE flag, it can result in a noticeable step in nonce size from 513 to 512 bits, exposing a potential timing side-channel.",
      "cve": "CVE-2024-28834",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/gnutls28@3.6.13-2ubuntu1.8 to 3.6.13-2ubuntu1.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/gnutls28@3.6.13-2ubuntu1.8?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "3.6.13-2ubuntu1.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-28834",
          "value": "CVE-2024-28834",
          "url": "https://scout.docker.com/v/CVE-2024-28834?s=ubuntu&n=gnutls28&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.6.13-2ubuntu1.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-28834?s=ubuntu&n=gnutls28&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.6.13-2ubuntu1.11"
        }
      ]
    },
    {
      "id": "2710e76f8bbb7897b96b7e1a04f2ccc6e6a98e7ff8f135a214ac3e94e37eafee",
      "category": "container_scanning",
      "message": "CVE-2024-2961 on ubuntu/glibc@2.31-0ubuntu9.9",
      "description": "The iconv() function in the GNU C Library versions 2.39 and older may overflow the output buffer passed to it by up to 4 bytes when converting strings to the ISO-2022-CN-EXT character set, which may be used to crash an application or overwrite a neighbouring variable.",
      "cve": "CVE-2024-2961",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/glibc@2.31-0ubuntu9.9 to 2.31-0ubuntu9.15",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/glibc@2.31-0ubuntu9.9?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.31-0ubuntu9.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-2961",
          "value": "CVE-2024-2961",
          "url": "https://scout.docker.com/v/CVE-2024-2961?s=ubuntu&n=glibc&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.31-0ubuntu9.15"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-2961?s=ubuntu&n=glibc&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.31-0ubuntu9.15"
        }
      ]
    },
    {
      "id": "4e56a7255a4552ad64d5d8406ff78ec6d04a3de1772e27e5c2143225f3a43692",
      "category": "container_scanning",
      "message": "CVE-2024-32487 on ubuntu/less@551-1ubuntu0.1",
      "description": "less through 653 allows OS command execution via a newline character in the name of a file, because quoting is mishandled in filename.c. Exploitation typically requires use with attacker-controlled file names, such as the files extracted from an untrusted archive. Exploitation also requires the LESSOPEN environment variable, but this is set by default in many common cases.",
      "cve": "CVE-2024-32487",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/less@551-1ubuntu0.1 to 551-1ubuntu0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/less@551-1ubuntu0.1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "551-1ubuntu0.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-32487",
          "value": "CVE-2024-32487",
          "url": "https://scout.docker.com/v/CVE-2024-32487?s=ubuntu&n=less&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C551-1ubuntu0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-32487?s=ubuntu&n=less&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C551-1ubuntu0.3"
        }
      ]
    },
    {
      "id": "3ecb7785e4c8cac65d572b5084818747f27c51bb76040991a1bedc377c62298d",
      "category": "container_scanning",
      "message": "CVE-2024-33599 on ubuntu/glibc@2.31-0ubuntu9.9",
      "description": "nscd: Stack-based buffer overflow in netgroup cache  If the Name Service Cache Daemon's (nscd) fixed size cache is exhausted by client requests then a subsequent client request for netgroup data may result in a stack-based buffer overflow.  This flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
      "cve": "CVE-2024-33599",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/glibc@2.31-0ubuntu9.9 to 2.31-0ubuntu9.16",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/glibc@2.31-0ubuntu9.9?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.31-0ubuntu9.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-33599",
          "value": "CVE-2024-33599",
          "url": "https://scout.docker.com/v/CVE-2024-33599?s=ubuntu&n=glibc&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.31-0ubuntu9.16"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-33599?s=ubuntu&n=glibc&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.31-0ubuntu9.16"
        }
      ]
    },
    {
      "id": "e8470d006ffb634b8b8662d9cc832d4a6576b6a9243fb2e9df640104d4826151",
      "category": "container_scanning",
      "message": "CVE-2024-33600 on ubuntu/glibc@2.31-0ubuntu9.9",
      "description": "nscd: Null pointer crashes after notfound response  If the Name Service Cache Daemon's (nscd) cache fails to add a not-found netgroup response to the cache, the client request can result in a null pointer dereference.  This flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
      "cve": "CVE-2024-33600",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/glibc@2.31-0ubuntu9.9 to 2.31-0ubuntu9.16",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/glibc@2.31-0ubuntu9.9?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.31-0ubuntu9.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-33600",
          "value": "CVE-2024-33600",
          "url": "https://scout.docker.com/v/CVE-2024-33600?s=ubuntu&n=glibc&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.31-0ubuntu9.16"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-33600?s=ubuntu&n=glibc&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.31-0ubuntu9.16"
        }
      ]
    },
    {
      "id": "5b4726c1b0db4e3d248da53f82c7faae16d2813e6e7db32234210c1a1589bc41",
      "category": "container_scanning",
      "message": "CVE-2024-33601 on ubuntu/glibc@2.31-0ubuntu9.9",
      "description": "nscd: netgroup cache may terminate daemon on memory allocation failure  The Name Service Cache Daemon's (nscd) netgroup cache uses xmalloc or xrealloc and these functions may terminate the process due to a memory allocation failure resulting in a denial of service to the clients.  The flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
      "cve": "CVE-2024-33601",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/glibc@2.31-0ubuntu9.9 to 2.31-0ubuntu9.16",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/glibc@2.31-0ubuntu9.9?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.31-0ubuntu9.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-33601",
          "value": "CVE-2024-33601",
          "url": "https://scout.docker.com/v/CVE-2024-33601?s=ubuntu&n=glibc&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.31-0ubuntu9.16"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-33601?s=ubuntu&n=glibc&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.31-0ubuntu9.16"
        }
      ]
    },
    {
      "id": "426b65ebd6e86fd7094cf0f87f843bb834c824748f42458ce941e02b02cec98e",
      "category": "container_scanning",
      "message": "CVE-2024-33602 on ubuntu/glibc@2.31-0ubuntu9.9",
      "description": "nscd: netgroup cache assumes NSS callback uses in-buffer strings  The Name Service Cache Daemon's (nscd) netgroup cache can corrupt memory when the NSS callback does not store all strings in the provided buffer. The flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
      "cve": "CVE-2024-33602",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/glibc@2.31-0ubuntu9.9 to 2.31-0ubuntu9.16",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/glibc@2.31-0ubuntu9.9?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.31-0ubuntu9.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-33602",
          "value": "CVE-2024-33602",
          "url": "https://scout.docker.com/v/CVE-2024-33602?s=ubuntu&n=glibc&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.31-0ubuntu9.16"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-33602?s=ubuntu&n=glibc&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.31-0ubuntu9.16"
        }
      ]
    },
    {
      "id": "c10abdd486adab05c8df685b311e335904e96018024a5f431440ad1cbf3c2ed8",
      "category": "container_scanning",
      "message": "CVE-2024-34397 on ubuntu/glib2.0@2.64.6-1~ubuntu20.04.6",
      "description": "An issue was discovered in GNOME GLib before 2.78.5, and 2.79.x and 2.80.x before 2.80.1. When a GDBus-based client subscribes to signals from a trusted system service such as NetworkManager on a shared computer, other users of the same computer can send spoofed D-Bus signals that the GDBus-based client will wrongly interpret as having been sent by the trusted system service. This could lead to the GDBus-based client behaving incorrectly, with an application-dependent impact.",
      "cve": "CVE-2024-34397",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/glib2.0@2.64.6-1~ubuntu20.04.6 to 2.64.6-1~ubuntu20.04.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/glib2.0@2.64.6-1~ubuntu20.04.6?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.64.6-1~ubuntu20.04.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34397",
          "value": "CVE-2024-34397",
          "url": "https://scout.docker.com/v/CVE-2024-34397?s=ubuntu&n=glib2.0&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.64.6-1%7Eubuntu20.04.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34397?s=ubuntu&n=glib2.0&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.64.6-1%7Eubuntu20.04.7"
        }
      ]
    },
    {
      "id": "415a45e685278479dc91d6a630e97ff222a6fd5fe0364628c19edb1cc97eb490",
      "category": "container_scanning",
      "message": "CVE-2024-50602 on ubuntu/expat@2.2.9-1ubuntu0.6",
      "description": "An issue was discovered in libexpat before 2.6.4. There is a crash within the XML_ResumeParser function because XML_StopParser can stop/suspend an unstarted parser.",
      "cve": "CVE-2024-50602",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/expat@2.2.9-1ubuntu0.6 to 2.2.9-1ubuntu0.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/expat@2.2.9-1ubuntu0.6?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.2.9-1ubuntu0.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-50602",
          "value": "CVE-2024-50602",
          "url": "https://scout.docker.com/v/CVE-2024-50602?s=ubuntu&n=expat&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.2.9-1ubuntu0.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-50602?s=ubuntu&n=expat&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.2.9-1ubuntu0.8"
        }
      ]
    },
    {
      "id": "0854044fda91000250c3a116bb198b265d7f6db830aea2b4332e7e8cdd3f56c2",
      "category": "container_scanning",
      "message": "CVE-2024-52530 on ubuntu/libsoup2.4@2.70.0-1",
      "description": "GNOME libsoup before 3.6.0 allows HTTP request smuggling in some configurations because '\\0' characters at the end of header names are ignored, i.e., a \"Transfer-Encoding\\0: chunked\" header is treated the same as a \"Transfer-Encoding: chunked\" header.",
      "cve": "CVE-2024-52530",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libsoup2.4@2.70.0-1 to 2.70.0-1ubuntu0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libsoup2.4@2.70.0-1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.70.0-1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-52530",
          "value": "CVE-2024-52530",
          "url": "https://scout.docker.com/v/CVE-2024-52530?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-52530?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.1"
        }
      ]
    },
    {
      "id": "57f643154b76691d222bed847182880b0d9413a09c0056a573a78d7e5d9c7124",
      "category": "container_scanning",
      "message": "CVE-2024-52531 on ubuntu/libsoup2.4@2.70.0-1",
      "description": "GNOME libsoup before 3.6.1 allows a buffer overflow in applications that perform conversion to UTF-8 in soup_header_parse_param_list_strict. There is a plausible way to reach this remotely via soup_message_headers_get_content_type (e.g., an application may want to retrieve the content type of a request or response).",
      "cve": "CVE-2024-52531",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libsoup2.4@2.70.0-1 to 2.70.0-1ubuntu0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libsoup2.4@2.70.0-1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.70.0-1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-52531",
          "value": "CVE-2024-52531",
          "url": "https://scout.docker.com/v/CVE-2024-52531?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-52531?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.1"
        }
      ]
    },
    {
      "id": "bf2db51f1430322c6d1f3121cb8f542b9f7a2386cd0fad20bfc0857abb6edddd",
      "category": "container_scanning",
      "message": "CVE-2024-52532 on ubuntu/libsoup2.4@2.70.0-1",
      "description": "GNOME libsoup before 3.6.1 has an infinite loop, and memory consumption. during the reading of certain patterns of WebSocket data from clients.",
      "cve": "CVE-2024-52532",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libsoup2.4@2.70.0-1 to 2.70.0-1ubuntu0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libsoup2.4@2.70.0-1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.70.0-1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-52532",
          "value": "CVE-2024-52532",
          "url": "https://scout.docker.com/v/CVE-2024-52532?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-52532?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.1"
        }
      ]
    },
    {
      "id": "d1ca343a35ac8dc4ac4b4d93dab69c6e746755593d802435204319dcd500100b",
      "category": "container_scanning",
      "message": "CVE-2024-52533 on ubuntu/glib2.0@2.64.6-1~ubuntu20.04.6",
      "description": "gio/gsocks4aproxy.c in GNOME GLib before 2.82.1 has an off-by-one error and resultant buffer overflow because SOCKS4_CONN_MSG_LEN is not sufficient for a trailing '\\0' character.",
      "cve": "CVE-2024-52533",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/glib2.0@2.64.6-1~ubuntu20.04.6 to 2.64.6-1~ubuntu20.04.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/glib2.0@2.64.6-1~ubuntu20.04.6?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.64.6-1~ubuntu20.04.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-52533",
          "value": "CVE-2024-52533",
          "url": "https://scout.docker.com/v/CVE-2024-52533?s=ubuntu&n=glib2.0&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.64.6-1%7Eubuntu20.04.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-52533?s=ubuntu&n=glib2.0&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.64.6-1%7Eubuntu20.04.8"
        }
      ]
    },
    {
      "id": "917b9d127177abe828a3a9a53858e1435a62b2a478dded0fb6ded12cc6afb04b",
      "category": "container_scanning",
      "message": "CVE-2024-56171 on ubuntu/libxml2@2.9.10+dfsg-5ubuntu0.20.04.6",
      "description": "libxml2 before 2.12.10 and 2.13.x before 2.13.6 has a use-after-free in xmlSchemaIDCFillNodeTables and xmlSchemaBubbleIDCNodeTables in xmlschemas.c. To exploit this, a crafted XML document must be validated against an XML schema with certain identity constraints, or a crafted XML schema must be used.",
      "cve": "CVE-2024-56171",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libxml2@2.9.10+dfsg-5ubuntu0.20.04.6 to 2.9.10+dfsg-5ubuntu0.20.04.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libxml2@2.9.10%2Bdfsg-5ubuntu0.20.04.6?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.9.10+dfsg-5ubuntu0.20.04.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-56171",
          "value": "CVE-2024-56171",
          "url": "https://scout.docker.com/v/CVE-2024-56171?s=ubuntu&n=libxml2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.9.10%2Bdfsg-5ubuntu0.20.04.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-56171?s=ubuntu&n=libxml2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.9.10%2Bdfsg-5ubuntu0.20.04.9"
        }
      ]
    },
    {
      "id": "dea837d55cff64f546db1a44f9931108a8d8aa6671cf689daaad68401414fb1e",
      "category": "container_scanning",
      "message": "CVE-2024-6345 on ubuntu/setuptools@45.2.0-1ubuntu0.1",
      "description": "A vulnerability in the package_index module of pypa/setuptools versions up to 69.1.1 allows for remote code execution via its download functions. These functions, which are used to download packages from URLs provided by users or retrieved from package index servers, are susceptible to code injection. If these functions are exposed to user-controlled inputs, such as package URLs, they can execute arbitrary commands on the system. The issue is fixed in version 70.0.",
      "cve": "CVE-2024-6345",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/setuptools@45.2.0-1ubuntu0.1 to 45.2.0-1ubuntu0.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/setuptools@45.2.0-1ubuntu0.1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "45.2.0-1ubuntu0.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-6345",
          "value": "CVE-2024-6345",
          "url": "https://scout.docker.com/v/CVE-2024-6345?s=ubuntu&n=setuptools&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C45.2.0-1ubuntu0.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-6345?s=ubuntu&n=setuptools&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C45.2.0-1ubuntu0.2"
        }
      ]
    },
    {
      "id": "3824943a10bc6f5acf013f07fe42c4d387364c8b82a3522735695bb56c7e982f",
      "category": "container_scanning",
      "message": "CVE-2024-6923 on ubuntu/python2.7@2.7.18-1~20.04.3",
      "description": "There is a MEDIUM severity vulnerability affecting CPython.  The email module didn’t properly quote newlines for email headers when serializing an email message allowing for header injection when an email is serialized.",
      "cve": "CVE-2024-6923",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python2.7@2.7.18-1~20.04.3 to 2.7.18-1~20.04.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python2.7@2.7.18-1~20.04.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.7.18-1~20.04.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-6923",
          "value": "CVE-2024-6923",
          "url": "https://scout.docker.com/v/CVE-2024-6923?s=ubuntu&n=python2.7&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.7.18-1%7E20.04.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-6923?s=ubuntu&n=python2.7&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.7.18-1%7E20.04.5"
        }
      ]
    },
    {
      "id": "85bd71573b2b6dca71d66e8f087c61632e0940883438d0191bf53509ec76cae5",
      "category": "container_scanning",
      "message": "CVE-2024-6923 on ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8",
      "description": "There is a MEDIUM severity vulnerability affecting CPython.  The email module didn’t properly quote newlines for email headers when serializing an email message allowing for header injection when an email is serialized.",
      "cve": "CVE-2024-6923",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8 to 3.8.10-0ubuntu1~20.04.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "3.8.10-0ubuntu1~20.04.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-6923",
          "value": "CVE-2024-6923",
          "url": "https://scout.docker.com/v/CVE-2024-6923?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-6923?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.12"
        }
      ]
    },
    {
      "id": "72a943a3f4ad5590946cbd6914bfc663a87ffb1eb41b31a0a447a0362e0e6534",
      "category": "container_scanning",
      "message": "CVE-2024-8088 on ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8",
      "description": "There is a HIGH severity vulnerability affecting the CPython \"zipfile\" module affecting \"zipfile.Path\". Note that the more common API \"zipfile.ZipFile\" class is unaffected.      When iterating over names of entries in a zip archive (for example, methods of \"zipfile.Path\" like \"namelist()\", \"iterdir()\", etc) the process can be put into an infinite loop with a maliciously crafted zip archive. This defect applies when reading only metadata or extracting the contents of the zip archive. Programs that are not handling user-controlled zip archives are not affected.",
      "cve": "CVE-2024-8088",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8 to 3.8.10-0ubuntu1~20.04.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "3.8.10-0ubuntu1~20.04.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-8088",
          "value": "CVE-2024-8088",
          "url": "https://scout.docker.com/v/CVE-2024-8088?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-8088?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.12"
        }
      ]
    },
    {
      "id": "aff8e7d1b77c0aa17872cc98fb9fe18653449f6de6216870b13ac138a127f7a3",
      "category": "container_scanning",
      "message": "CVE-2024-8096 on ubuntu/curl@7.68.0-1ubuntu2.19",
      "description": "When curl is told to use the Certificate Status Request TLS extension, often referred to as OCSP stapling, to verify that the server certificate is valid, it might fail to detect some OCSP problems and instead wrongly consider the response as fine.  If the returned status reports another error than 'revoked' (like for example 'unauthorized') it is not treated as a bad certficate.",
      "cve": "CVE-2024-8096",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/curl@7.68.0-1ubuntu2.19 to 7.68.0-1ubuntu2.24",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/curl@7.68.0-1ubuntu2.19?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "7.68.0-1ubuntu2.19"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-8096",
          "value": "CVE-2024-8096",
          "url": "https://scout.docker.com/v/CVE-2024-8096?s=ubuntu&n=curl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C7.68.0-1ubuntu2.24"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-8096?s=ubuntu&n=curl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C7.68.0-1ubuntu2.24"
        }
      ]
    },
    {
      "id": "e813165c3de193a434758ec0d6d3c936080d477c0ac999940041c2b149f8950c",
      "category": "container_scanning",
      "message": "CVE-2025-0395 on ubuntu/glibc@2.31-0ubuntu9.9",
      "description": "When the assert() function in the GNU C Library versions 2.13 to 2.40 fails, it does not allocate enough space for the assertion failure message string and size information, which may lead to a buffer overflow if the message string size aligns to page size.",
      "cve": "CVE-2025-0395",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/glibc@2.31-0ubuntu9.9 to 2.31-0ubuntu9.17",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/glibc@2.31-0ubuntu9.9?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.31-0ubuntu9.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-0395",
          "value": "CVE-2025-0395",
          "url": "https://scout.docker.com/v/CVE-2025-0395?s=ubuntu&n=glibc&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.31-0ubuntu9.17"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-0395?s=ubuntu&n=glibc&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.31-0ubuntu9.17"
        }
      ]
    },
    {
      "id": "9fb8b7cfd213bdd62d0076ebb815f7513b12c612f93f281e3f6a1e8b00d3eeaa",
      "category": "container_scanning",
      "message": "CVE-2025-0938 on ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8",
      "description": "The Python standard library functions `urllib.parse.urlsplit` and `urlparse` accepted domain names that included square brackets which isn't valid according to RFC 3986. Square brackets are only meant to be used as delimiters for specifying IPv6 and IPvFuture hosts in URLs. This could result in differential parsing across the Python URL parser and other specification-compliant URL parsers.",
      "cve": "CVE-2025-0938",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8 to 3.8.10-0ubuntu1~20.04.16",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "3.8.10-0ubuntu1~20.04.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-0938",
          "value": "CVE-2025-0938",
          "url": "https://scout.docker.com/v/CVE-2025-0938?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.16"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-0938?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.16"
        }
      ]
    },
    {
      "id": "2626d1ce9a61de27882bf3e18d25e1efd2b9e1de4528e49983a9c6015408e92f",
      "category": "container_scanning",
      "message": "CVE-2025-1390 on ubuntu/libcap2@1:2.32-1ubuntu0.1",
      "description": "The PAM module pam_cap.so of libcap configuration supports group names starting with “@”, during actual parsing, configurations not starting with “@” are incorrectly recognized as group names. This may result in nonintended users being granted an inherited capability set, potentially leading to security risks. Attackers can exploit this vulnerability to achieve local privilege escalation on systems where /etc/security/capability.conf is used to configure user inherited privileges by constructing specific usernames.",
      "cve": "CVE-2025-1390",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libcap2@1:2.32-1ubuntu0.1 to 1:2.32-1ubuntu0.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libcap2@1%3A2.32-1ubuntu0.1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1:2.32-1ubuntu0.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-1390",
          "value": "CVE-2025-1390",
          "url": "https://scout.docker.com/v/CVE-2025-1390?s=ubuntu&n=libcap2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1%3A2.32-1ubuntu0.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-1390?s=ubuntu&n=libcap2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1%3A2.32-1ubuntu0.2"
        }
      ]
    },
    {
      "id": "912f879dc8cdef49c8508098c04c34b1adac31f6166c48183e703f59d7987f5e",
      "category": "container_scanning",
      "message": "CVE-2025-24528 on ubuntu/krb5@1.17-6ubuntu4.3",
      "description": "In MIT krb5 release 1.7 and later with incremental propagation enabled, an authenticated attacker can cause kadmind to write beyond the end of the mapped region for the iprop log file, likely causing a process crash.",
      "cve": "CVE-2025-24528",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/krb5@1.17-6ubuntu4.3 to 1.17-6ubuntu4.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/krb5@1.17-6ubuntu4.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.17-6ubuntu4.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-24528",
          "value": "CVE-2025-24528",
          "url": "https://scout.docker.com/v/CVE-2025-24528?s=ubuntu&n=krb5&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.17-6ubuntu4.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-24528?s=ubuntu&n=krb5&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.17-6ubuntu4.9"
        }
      ]
    },
    {
      "id": "c408df483a52e174703a94a1feabb5f6263dfc67f9853c2124109f21c721c640",
      "category": "container_scanning",
      "message": "CVE-2025-24928 on ubuntu/libxml2@2.9.10+dfsg-5ubuntu0.20.04.6",
      "description": "libxml2 before 2.12.10 and 2.13.x before 2.13.6 has a stack-based buffer overflow in xmlSnprintfElements in valid.c. To exploit this, DTD validation must occur for an untrusted document or untrusted DTD. NOTE: this is similar to CVE-2017-9047.",
      "cve": "CVE-2025-24928",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libxml2@2.9.10+dfsg-5ubuntu0.20.04.6 to 2.9.10+dfsg-5ubuntu0.20.04.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libxml2@2.9.10%2Bdfsg-5ubuntu0.20.04.6?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.9.10+dfsg-5ubuntu0.20.04.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-24928",
          "value": "CVE-2025-24928",
          "url": "https://scout.docker.com/v/CVE-2025-24928?s=ubuntu&n=libxml2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.9.10%2Bdfsg-5ubuntu0.20.04.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-24928?s=ubuntu&n=libxml2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.9.10%2Bdfsg-5ubuntu0.20.04.9"
        }
      ]
    },
    {
      "id": "5c660a67a27cfb196b47c4923fdb51ca135769a5feba59f5b8e0193bcd47c0c3",
      "category": "container_scanning",
      "message": "CVE-2025-29088 on ubuntu/sqlite3@3.31.1-4ubuntu0.5",
      "description": "In SQLite 3.49.0 before 3.49.1, certain argument values to sqlite3_db_config (in the C-language API) can cause a denial of service (application crash). An sz*nBig multiplication is not cast to a 64-bit integer, and consequently some memory allocations may be incorrect.",
      "cve": "CVE-2025-29088",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/sqlite3@3.31.1-4ubuntu0.5 to 3.31.1-4ubuntu0.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/sqlite3@3.31.1-4ubuntu0.5?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "3.31.1-4ubuntu0.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-29088",
          "value": "CVE-2025-29088",
          "url": "https://scout.docker.com/v/CVE-2025-29088?s=ubuntu&n=sqlite3&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.31.1-4ubuntu0.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-29088?s=ubuntu&n=sqlite3&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.31.1-4ubuntu0.7"
        }
      ]
    },
    {
      "id": "c1e58f39d6e156b6a2acad48eea86a5bdedb0aa49e5d3803e9dddc8ca2fff07b",
      "category": "container_scanning",
      "message": "CVE-2025-30258 on ubuntu/gnupg2@2.2.19-3ubuntu2.2",
      "description": "In GnuPG before 2.5.5, if a user chooses to import a certificate with certain crafted subkey data that lacks a valid backsig or that has incorrect usage flags, the user loses the ability to verify signatures made from certain other signing keys, aka a \"verification DoS.\"",
      "cve": "CVE-2025-30258",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/gnupg2@2.2.19-3ubuntu2.2 to 2.2.19-3ubuntu2.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/gnupg2@2.2.19-3ubuntu2.2?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.2.19-3ubuntu2.2"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-30258",
          "value": "CVE-2025-30258",
          "url": "https://scout.docker.com/v/CVE-2025-30258?s=ubuntu&n=gnupg2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.2.19-3ubuntu2.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-30258?s=ubuntu&n=gnupg2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.2.19-3ubuntu2.4"
        }
      ]
    },
    {
      "id": "27706380233becb5eaf7d2ba1ead0a43088f086aeeef6087823d05100c5b9e74",
      "category": "container_scanning",
      "message": "CVE-2025-32050 on ubuntu/libsoup2.4@2.70.0-1",
      "description": "A flaw was found in libsoup. The libsoup append_param_quoted() function may contain an overflow bug resulting in a buffer under-read.",
      "cve": "CVE-2025-32050",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libsoup2.4@2.70.0-1 to 2.70.0-1ubuntu0.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libsoup2.4@2.70.0-1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.70.0-1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-32050",
          "value": "CVE-2025-32050",
          "url": "https://scout.docker.com/v/CVE-2025-32050?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-32050?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.2"
        }
      ]
    },
    {
      "id": "07612f117af09e84386fabf1b8c385fb62acd985093f46e6bb8fb39c64f43936",
      "category": "container_scanning",
      "message": "CVE-2025-32052 on ubuntu/libsoup2.4@2.70.0-1",
      "description": "A flaw was found in libsoup. A vulnerability in the sniff_unknown() function may lead to heap buffer over-read.",
      "cve": "CVE-2025-32052",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libsoup2.4@2.70.0-1 to 2.70.0-1ubuntu0.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libsoup2.4@2.70.0-1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.70.0-1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-32052",
          "value": "CVE-2025-32052",
          "url": "https://scout.docker.com/v/CVE-2025-32052?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-32052?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.2"
        }
      ]
    },
    {
      "id": "a9524b28a85330a54fe5e43bf5e94262084726157d2c432aa8060a1c623f3952",
      "category": "container_scanning",
      "message": "CVE-2025-32053 on ubuntu/libsoup2.4@2.70.0-1",
      "description": "A flaw was found in libsoup. A vulnerability in sniff_feed_or_html() and skip_insignificant_space() functions may lead to a heap buffer over-read.",
      "cve": "CVE-2025-32053",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libsoup2.4@2.70.0-1 to 2.70.0-1ubuntu0.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libsoup2.4@2.70.0-1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.70.0-1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-32053",
          "value": "CVE-2025-32053",
          "url": "https://scout.docker.com/v/CVE-2025-32053?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-32053?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.2"
        }
      ]
    },
    {
      "id": "afbc393535aedf8c904e54a179517c62e92a99e1ced030afe22204745c95ee07",
      "category": "container_scanning",
      "message": "CVE-2025-32906 on ubuntu/libsoup2.4@2.70.0-1",
      "description": "A flaw was found in libsoup, where the soup_headers_parse_request() function may be vulnerable to an out-of-bound read. This flaw allows a malicious user to use a specially crafted HTTP request to crash the HTTP server.",
      "cve": "CVE-2025-32906",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libsoup2.4@2.70.0-1 to 2.70.0-1ubuntu0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libsoup2.4@2.70.0-1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.70.0-1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-32906",
          "value": "CVE-2025-32906",
          "url": "https://scout.docker.com/v/CVE-2025-32906?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-32906?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.3"
        }
      ]
    },
    {
      "id": "4b701577a87e1aa53250529261871c066342a42976dd215483fd9cb5d06d301d",
      "category": "container_scanning",
      "message": "CVE-2025-32909 on ubuntu/libsoup2.4@2.70.0-1",
      "description": "A flaw was found in libsoup. SoupContentSniffer may be vulnerable to a NULL pointer dereference in the sniff_mp4 function. The HTTP server may cause the libsoup client to crash.",
      "cve": "CVE-2025-32909",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libsoup2.4@2.70.0-1 to 2.70.0-1ubuntu0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libsoup2.4@2.70.0-1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.70.0-1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-32909",
          "value": "CVE-2025-32909",
          "url": "https://scout.docker.com/v/CVE-2025-32909?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-32909?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.3"
        }
      ]
    },
    {
      "id": "0b4c3a32c0eb605e0003c104012b63faed958dba269c29abdf4844b8434cb665",
      "category": "container_scanning",
      "message": "CVE-2025-32910 on ubuntu/libsoup2.4@2.70.0-1",
      "description": "A flaw was found in libsoup, where soup_auth_digest_authenticate() is vulnerable to a NULL pointer dereference. This issue may cause the libsoup client to crash.",
      "cve": "CVE-2025-32910",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libsoup2.4@2.70.0-1 to 2.70.0-1ubuntu0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libsoup2.4@2.70.0-1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.70.0-1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-32910",
          "value": "CVE-2025-32910",
          "url": "https://scout.docker.com/v/CVE-2025-32910?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-32910?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.3"
        }
      ]
    },
    {
      "id": "97a4f650431611902f598f46aed45a280ce470351abe21dd5754b8feb15cb03d",
      "category": "container_scanning",
      "message": "CVE-2025-32911 on ubuntu/libsoup2.4@2.70.0-1",
      "description": "A use-after-free type vulnerability was found in libsoup, in the soup_message_headers_get_content_disposition() function. This flaw allows a malicious HTTP client to cause memory corruption in the libsoup server.",
      "cve": "CVE-2025-32911",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libsoup2.4@2.70.0-1 to 2.70.0-1ubuntu0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libsoup2.4@2.70.0-1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.70.0-1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-32911",
          "value": "CVE-2025-32911",
          "url": "https://scout.docker.com/v/CVE-2025-32911?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-32911?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.3"
        }
      ]
    },
    {
      "id": "03979a874b523a9210d3cb578ecb8118ccc7147a86b1741801dbce18fb523831",
      "category": "container_scanning",
      "message": "CVE-2025-32912 on ubuntu/libsoup2.4@2.70.0-1",
      "description": "A flaw was found in libsoup, where SoupAuthDigest is vulnerable to a NULL pointer dereference. The HTTP server may cause the libsoup client to crash.",
      "cve": "CVE-2025-32912",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libsoup2.4@2.70.0-1 to 2.70.0-1ubuntu0.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libsoup2.4@2.70.0-1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.70.0-1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-32912",
          "value": "CVE-2025-32912",
          "url": "https://scout.docker.com/v/CVE-2025-32912?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-32912?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.4"
        }
      ]
    },
    {
      "id": "64a4e1502045a4289c45e93d98ff7c325ac7a39ef8c243d1f2ae217433b564cf",
      "category": "container_scanning",
      "message": "CVE-2025-32913 on ubuntu/libsoup2.4@2.70.0-1",
      "description": "A flaw was found in libsoup, where the soup_message_headers_get_content_disposition() function is vulnerable to a NULL pointer dereference. This flaw allows a malicious HTTP peer to crash a libsoup client or server that uses this function.",
      "cve": "CVE-2025-32913",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libsoup2.4@2.70.0-1 to 2.70.0-1ubuntu0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libsoup2.4@2.70.0-1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.70.0-1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-32913",
          "value": "CVE-2025-32913",
          "url": "https://scout.docker.com/v/CVE-2025-32913?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-32913?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.3"
        }
      ]
    },
    {
      "id": "783a3f8826202ddbe17270616e64c76c024bd7472f9223b04d63b0ab81864827",
      "category": "container_scanning",
      "message": "CVE-2025-32914 on ubuntu/libsoup2.4@2.70.0-1",
      "description": "A flaw was found in libsoup, where the soup_multipart_new_from_message() function is vulnerable to an out-of-bounds read. This flaw allows a malicious HTTP client to induce the libsoup server to read out of bounds.",
      "cve": "CVE-2025-32914",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libsoup2.4@2.70.0-1 to 2.70.0-1ubuntu0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libsoup2.4@2.70.0-1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.70.0-1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-32914",
          "value": "CVE-2025-32914",
          "url": "https://scout.docker.com/v/CVE-2025-32914?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-32914?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.3"
        }
      ]
    },
    {
      "id": "1fd7b8fa59a8b61f5abde35cafb092f8be9301aa3b9c80e04b198c8a6da907fb",
      "category": "container_scanning",
      "message": "CVE-2025-3576 on ubuntu/krb5@1.17-6ubuntu4.3",
      "description": "A vulnerability in the MIT Kerberos implementation allows GSSAPI-protected messages using RC4-HMAC-MD5 to be spoofed due to weaknesses in the MD5 checksum design. If RC4 is preferred over stronger encryption types, an attacker could exploit MD5 collisions to forge message integrity codes. This may lead to unauthorized message tampering.",
      "cve": "CVE-2025-3576",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/krb5@1.17-6ubuntu4.3 to 1.17-6ubuntu4.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/krb5@1.17-6ubuntu4.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.17-6ubuntu4.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-3576",
          "value": "CVE-2025-3576",
          "url": "https://scout.docker.com/v/CVE-2025-3576?s=ubuntu&n=krb5&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.17-6ubuntu4.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-3576?s=ubuntu&n=krb5&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.17-6ubuntu4.11"
        }
      ]
    },
    {
      "id": "c4517359a9e473bc827aceebd9fafa9fb4132cf6067da484ac93ba35db6ecab5",
      "category": "container_scanning",
      "message": "CVE-2025-4373 on ubuntu/glib2.0@2.64.6-1~ubuntu20.04.6",
      "description": "A flaw was found in GLib, which is vulnerable to an integer overflow in the g_string_insert_unichar() function. When the position at which to insert the character is large, the position will overflow, leading to a buffer underwrite.",
      "cve": "CVE-2025-4373",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/glib2.0@2.64.6-1~ubuntu20.04.6 to 2.64.6-1~ubuntu20.04.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/glib2.0@2.64.6-1~ubuntu20.04.6?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.64.6-1~ubuntu20.04.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-4373",
          "value": "CVE-2025-4373",
          "url": "https://scout.docker.com/v/CVE-2025-4373?s=ubuntu&n=glib2.0&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.64.6-1%7Eubuntu20.04.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-4373?s=ubuntu&n=glib2.0&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.64.6-1%7Eubuntu20.04.9"
        }
      ]
    },
    {
      "id": "c0afa79925e2d713c0cf3fcc59ac248e3516ddbf67a32f541a0dd30be4749408",
      "category": "container_scanning",
      "message": "CVE-2025-4476 on ubuntu/libsoup2.4@2.70.0-1",
      "description": "A denial-of-service vulnerability has been identified in the libsoup HTTP client library. This flaw can be triggered when a libsoup client receives a 401 (Unauthorized) HTTP response containing a specifically crafted domain parameter within the WWW-Authenticate header. Processing this malformed header can lead to a crash of the client application using libsoup. An attacker could exploit this by setting up a malicious HTTP server. If a user's application using the vulnerable libsoup library connects to this malicious server, it could result in a denial-of-service. Successful exploitation requires tricking a user's client application into connecting to the attacker's malicious server.",
      "cve": "CVE-2025-4476",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libsoup2.4@2.70.0-1 to 2.70.0-1ubuntu0.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libsoup2.4@2.70.0-1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.70.0-1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-4476",
          "value": "CVE-2025-4476",
          "url": "https://scout.docker.com/v/CVE-2025-4476?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-4476?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.5"
        }
      ]
    },
    {
      "id": "bb5a518774292d0866f213abdcaa8ffc19116114487d3c9832ccc4371255c777",
      "category": "container_scanning",
      "message": "CVE-2025-46420 on ubuntu/libsoup2.4@2.70.0-1",
      "description": "A flaw was found in libsoup. It is vulnerable to memory leaks in the soup_header_parse_quality_list() function when parsing a quality list that contains elements with all zeroes.",
      "cve": "CVE-2025-46420",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libsoup2.4@2.70.0-1 to 2.70.0-1ubuntu0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libsoup2.4@2.70.0-1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.70.0-1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-46420",
          "value": "CVE-2025-46420",
          "url": "https://scout.docker.com/v/CVE-2025-46420?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-46420?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.3"
        }
      ]
    },
    {
      "id": "5b5f71b27531ce5e5acb36ccf7c3af6b16324b3a8ebd1701f3357ee866b1e313",
      "category": "container_scanning",
      "message": "CVE-2025-46421 on ubuntu/libsoup2.4@2.70.0-1",
      "description": "A flaw was found in libsoup. When libsoup clients encounter an HTTP redirect, they mistakenly send the HTTP Authorization header to the new host that the redirection points to. This allows the new host to impersonate the user to the original host that issued the redirect.",
      "cve": "CVE-2025-46421",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libsoup2.4@2.70.0-1 to 2.70.0-1ubuntu0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libsoup2.4@2.70.0-1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.70.0-1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-46421",
          "value": "CVE-2025-46421",
          "url": "https://scout.docker.com/v/CVE-2025-46421?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-46421?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.3"
        }
      ]
    },
    {
      "id": "7185898c6fb66d2eee9cd8e622d88ce5ed25ee1c465ed8c7cac504fa8d7f7e2f",
      "category": "container_scanning",
      "message": "CVE-2025-4802 on ubuntu/glibc@2.31-0ubuntu9.9",
      "description": "Untrusted LD_LIBRARY_PATH environment variable vulnerability in the GNU C Library version 2.27 to 2.38 allows attacker controlled loading of dynamically shared library in statically compiled setuid binaries that call dlopen (including internal dlopen calls after setlocale or calls to NSS functions such as getaddrinfo).",
      "cve": "CVE-2025-4802",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/glibc@2.31-0ubuntu9.9 to 2.31-0ubuntu9.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/glibc@2.31-0ubuntu9.9?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.31-0ubuntu9.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-4802",
          "value": "CVE-2025-4802",
          "url": "https://scout.docker.com/v/CVE-2025-4802?s=ubuntu&n=glibc&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.31-0ubuntu9.18"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-4802?s=ubuntu&n=glibc&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.31-0ubuntu9.18"
        }
      ]
    },
    {
      "id": "7a88aaadb6cab7b954e56da8a797c24435383f2478e554279d5e6c2c16814c88",
      "category": "container_scanning",
      "message": "GHSA-6xv5-86q9-7xr8 on github.com/cyphar/filepath-securejoin@0.2.2",
      "description": "### Impact\nFor Windows users of `github.com/cyphar/filepath-securejoin`, until v0.2.4 it was possible for certain rootfs and path combinations (in particular, where a malicious Unix-style `/`-separated unsafe path was used with a Windows-style rootfs path) to result in generated paths that were outside of the provided rootfs.\n\nIt is unclear to what extent this has a practical impact on real users, but given the possible severity of the issue we have released an emergency patch release that resolves this issue.\n\nThanks to  @pjbgf for discovering, debugging, and fixing this issue (as well as writing some tests for it).\n\n### Patches\nc121231e1276e11049547bee5ce68d5a2cfe2d9b is the patch fixing this issue. v0.2.4 contains the fix.\n\n### Workarounds\nUsers could use `filepath.FromSlash()` on all unsafe paths before passing them to `filepath-securejoin`.\n\n### References\nSee #9.",
      "cve": "GHSA-6xv5-86q9-7xr8",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/cyphar/filepath-securejoin@0.2.2 to 0.2.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/cyphar/filepath-securejoin@0.2.2"
          },
          "version": "0.2.2"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-6xv5-86q9-7xr8",
          "value": "GHSA-6xv5-86q9-7xr8",
          "url": "https://scout.docker.com/v/GHSA-6xv5-86q9-7xr8?s=github&n=filepath-securejoin&ns=github.com%2Fcyphar&t=golang&vr=%3C0.2.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-6xv5-86q9-7xr8?s=github&n=filepath-securejoin&ns=github.com%2Fcyphar&t=golang&vr=%3C0.2.4"
        }
      ]
    },
    {
      "id": "66f67d4c61e7a8e939eb2a0945fa4e58d9df756e14a5220264f33d499981d72c",
      "category": "container_scanning",
      "message": "GHSA-7ww5-4wqc-m92c on github.com/containerd/containerd@1.5.5",
      "description": "# /sys/devices/virtual/powercap accessible by default to containers\n\nIntel's RAPL (Running Average Power Limit) feature, introduced by the Sandy Bridge microarchitecture, provides software insights into hardware energy consumption. To facilitate this, Intel introduced the powercap framework in Linux kernel 3.13, which reads values via relevant MSRs (model specific registers) and provides unprivileged userspace access via `sysfs`. As RAPL is an interface to access a hardware feature, it is only available when running on bare metal with the module compiled into the kernel.\n\nBy 2019, it was realized that in some cases unprivileged access to RAPL readings could be exploited as a power-based side-channel against security features including AES-NI (potentially inside a SGX enclave) and KASLR (kernel address space layout randomization). Also known as the [PLATYPUS attack](https://platypusattack.com/), Intel assigned [CVE-2020-8694](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694) and [CVE-2020-8695](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695), and AMD assigned [CVE-2020-12912](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912).\n\nSeveral mitigations were applied; Intel reduced the sampling resolution via a microcode update, and the Linux kernel [prevents access by non-root users](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71) since 5.10. However, this kernel-based mitigation does not apply to many container-based scenarios:\n* Unless using user namespaces, root inside a container has the same level of privilege as root outside the container, but with a slightly more narrow view of the system\n* `sysfs` is mounted inside containers read-only; however only read access is needed to carry out this attack on an unpatched CPU\n\nWhile this is not a direct vulnerability in container runtimes, defense in depth and safe defaults are valuable and preferred, especially as this poses a risk to multi-tenant container environments. This is provided by masking `/sys/devices/virtual/powercap` in the default mount configuration, and adding an additional set of rules to deny it in the default AppArmor profile.\n\nWhile `sysfs` is not the only way to read from the RAPL subsystem, other ways of accessing it require additional capabilities such as `CAP_SYS_RAWIO` which is not available to containers by default, or `perf` paranoia level less than 1, which is a non-default kernel tunable.\n\n## References\n\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912\n* https://platypusattack.com/\n* https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71\n* https://web.eece.maine.edu/~vweaver/projects/rapl/",
      "cve": "GHSA-7ww5-4wqc-m92c",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.5.5 to 1.6.26",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.5.5"
          },
          "version": "1.5.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-7ww5-4wqc-m92c",
          "value": "GHSA-7ww5-4wqc-m92c",
          "url": "https://scout.docker.com/v/GHSA-7ww5-4wqc-m92c?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C%3D1.6.25"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-7ww5-4wqc-m92c?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C%3D1.6.25"
        }
      ]
    },
    {
      "id": "d2d384c32b0e21954d6f2bf077490d050b401057a495317ef1753e4073e564e3",
      "category": "container_scanning",
      "message": "GHSA-7ww5-4wqc-m92c on github.com/containerd/containerd@1.6.6",
      "description": "# /sys/devices/virtual/powercap accessible by default to containers\n\nIntel's RAPL (Running Average Power Limit) feature, introduced by the Sandy Bridge microarchitecture, provides software insights into hardware energy consumption. To facilitate this, Intel introduced the powercap framework in Linux kernel 3.13, which reads values via relevant MSRs (model specific registers) and provides unprivileged userspace access via `sysfs`. As RAPL is an interface to access a hardware feature, it is only available when running on bare metal with the module compiled into the kernel.\n\nBy 2019, it was realized that in some cases unprivileged access to RAPL readings could be exploited as a power-based side-channel against security features including AES-NI (potentially inside a SGX enclave) and KASLR (kernel address space layout randomization). Also known as the [PLATYPUS attack](https://platypusattack.com/), Intel assigned [CVE-2020-8694](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694) and [CVE-2020-8695](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695), and AMD assigned [CVE-2020-12912](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912).\n\nSeveral mitigations were applied; Intel reduced the sampling resolution via a microcode update, and the Linux kernel [prevents access by non-root users](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71) since 5.10. However, this kernel-based mitigation does not apply to many container-based scenarios:\n* Unless using user namespaces, root inside a container has the same level of privilege as root outside the container, but with a slightly more narrow view of the system\n* `sysfs` is mounted inside containers read-only; however only read access is needed to carry out this attack on an unpatched CPU\n\nWhile this is not a direct vulnerability in container runtimes, defense in depth and safe defaults are valuable and preferred, especially as this poses a risk to multi-tenant container environments. This is provided by masking `/sys/devices/virtual/powercap` in the default mount configuration, and adding an additional set of rules to deny it in the default AppArmor profile.\n\nWhile `sysfs` is not the only way to read from the RAPL subsystem, other ways of accessing it require additional capabilities such as `CAP_SYS_RAWIO` which is not available to containers by default, or `perf` paranoia level less than 1, which is a non-default kernel tunable.\n\n## References\n\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912\n* https://platypusattack.com/\n* https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71\n* https://web.eece.maine.edu/~vweaver/projects/rapl/",
      "cve": "GHSA-7ww5-4wqc-m92c",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.6.6 to 1.6.26",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.6.6"
          },
          "version": "1.6.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-7ww5-4wqc-m92c",
          "value": "GHSA-7ww5-4wqc-m92c",
          "url": "https://scout.docker.com/v/GHSA-7ww5-4wqc-m92c?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C%3D1.6.25"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-7ww5-4wqc-m92c?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C%3D1.6.25"
        }
      ]
    },
    {
      "id": "c2c87aeefb4c2e617859e59213f294ab451b117ca7d7994a572ecf7a1c9665b2",
      "category": "container_scanning",
      "message": "GHSA-jq35-85cj-fj4p on github.com/docker/docker@20.10.17+incompatible",
      "description": "Intel's RAPL (Running Average Power Limit) feature, introduced by the Sandy Bridge microarchitecture, provides software insights into hardware energy consumption. To facilitate this, Intel introduced the powercap framework in Linux kernel 3.13, which reads values via relevant MSRs (model specific registers) and provides unprivileged userspace access via `sysfs`. As RAPL is an interface to access a hardware feature, it is only available when running on bare metal with the module compiled into the kernel.\n\nBy 2019, it was realized that in some cases unprivileged access to RAPL readings could be exploited as a power-based side-channel against security features including AES-NI (potentially inside a SGX enclave) and KASLR (kernel address space layout randomization). Also known as the [PLATYPUS attack](https://platypusattack.com/), Intel assigned [CVE-2020-8694](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694) and [CVE-2020-8695](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695), and AMD assigned [CVE-2020-12912](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912).\n\nSeveral mitigations were applied; Intel reduced the sampling resolution via a microcode update, and the Linux kernel [prevents access by non-root users](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71) since 5.10. However, this kernel-based mitigation does not apply to many container-based scenarios:\n* Unless using user namespaces, root inside a container has the same level of privilege as root outside the container, but with a slightly more narrow view of the system\n* `sysfs` is mounted inside containers read-only; however only read access is needed to carry out this attack on an unpatched CPU\n\nWhile this is not a direct vulnerability in container runtimes, defense in depth and safe defaults are valuable and preferred, especially as this poses a risk to multi-tenant container environments running directly on affected hardware. This is provided by masking `/sys/devices/virtual/powercap` in the default mount configuration, and adding an additional set of rules to deny it in the default AppArmor profile.\n\nWhile `sysfs` is not the only way to read from the RAPL subsystem, other ways of accessing it require additional capabilities such as `CAP_SYS_RAWIO` which is not available to containers by default, or `perf` paranoia level less than 1, which is a non-default kernel tunable.\n\n## References\n\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912\n* https://platypusattack.com/\n* https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71\n* https://web.eece.maine.edu/~vweaver/projects/rapl/",
      "cve": "GHSA-jq35-85cj-fj4p",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/docker/docker@20.10.17+incompatible to 20.10.27",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/docker@20.10.17%2Bincompatible"
          },
          "version": "20.10.17+incompatible"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-jq35-85cj-fj4p",
          "value": "GHSA-jq35-85cj-fj4p",
          "url": "https://scout.docker.com/v/GHSA-jq35-85cj-fj4p?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C20.10.27"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-jq35-85cj-fj4p?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C20.10.27"
        }
      ]
    },
    {
      "id": "10a41b3a8e0274b8a76e95d2ba2d40463e6d0fc2abbd56ae33920a1dbbb56b89",
      "category": "container_scanning",
      "message": "CVE-2025-32728 on ubuntu/openssh@1:8.2p1-4ubuntu0.9",
      "description": "In sshd in OpenSSH before 10.0, the DisableForwarding directive does not adhere to the documentation stating that it disables X11 and agent forwarding.",
      "cve": "CVE-2025-32728",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/openssh@1:8.2p1-4ubuntu0.9 to 1:8.2p1-4ubuntu0.13",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/openssh@1%3A8.2p1-4ubuntu0.9?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1:8.2p1-4ubuntu0.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-32728",
          "value": "CVE-2025-32728",
          "url": "https://scout.docker.com/v/CVE-2025-32728?s=ubuntu&n=openssh&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1%3A8.2p1-4ubuntu0.13"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-32728?s=ubuntu&n=openssh&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1%3A8.2p1-4ubuntu0.13"
        }
      ]
    },
    {
      "id": "959a2cd911093ae3707ceb0bd92121ded8c7931e98850052e52b5d73e0e7d234",
      "category": "container_scanning",
      "message": "CVE-2025-22866 on stdlib@1.16.12",
      "description": "Due to the usage of a variable time instruction in the assembly implementation of an internal function, a small number of bits of secret scalars are leaked on the ppc64le architecture. Due to the way this function is used, we do not believe this leakage is enough to allow recovery of the private key when P-256 is used in any well known protocols.",
      "cve": "CVE-2025-22866",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.22.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22866",
          "value": "CVE-2025-22866",
          "url": "https://scout.docker.com/v/CVE-2025-22866?s=golang&n=stdlib&t=golang&vr=%3C1.22.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22866?s=golang&n=stdlib&t=golang&vr=%3C1.22.12"
        }
      ]
    },
    {
      "id": "a0b97abc1f7721c8c623beed331e36e04234c8492602ca67fb9b8ff16f5f8f1b",
      "category": "container_scanning",
      "message": "CVE-2025-22866 on stdlib@1.18.9",
      "description": "Due to the usage of a variable time instruction in the assembly implementation of an internal function, a small number of bits of secret scalars are leaked on the ppc64le architecture. Due to the way this function is used, we do not believe this leakage is enough to allow recovery of the private key when P-256 is used in any well known protocols.",
      "cve": "CVE-2025-22866",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.22.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22866",
          "value": "CVE-2025-22866",
          "url": "https://scout.docker.com/v/CVE-2025-22866?s=golang&n=stdlib&t=golang&vr=%3C1.22.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22866?s=golang&n=stdlib&t=golang&vr=%3C1.22.12"
        }
      ]
    },
    {
      "id": "efb17aeb8b5b1287dcc8151d475afc7d2b0825ec8984ffb24f2b96c046485070",
      "category": "container_scanning",
      "message": "CVE-2025-22866 on stdlib@1.20.6",
      "description": "Due to the usage of a variable time instruction in the assembly implementation of an internal function, a small number of bits of secret scalars are leaked on the ppc64le architecture. Due to the way this function is used, we do not believe this leakage is enough to allow recovery of the private key when P-256 is used in any well known protocols.",
      "cve": "CVE-2025-22866",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.22.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22866",
          "value": "CVE-2025-22866",
          "url": "https://scout.docker.com/v/CVE-2025-22866?s=golang&n=stdlib&t=golang&vr=%3C1.22.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22866?s=golang&n=stdlib&t=golang&vr=%3C1.22.12"
        }
      ]
    },
    {
      "id": "51e77c6bb891f2881a47233826735107b121ae7cf3c0fc3802d83c01ea8f1f48",
      "category": "container_scanning",
      "message": "CVE-2025-22866 on stdlib@1.16.10",
      "description": "Due to the usage of a variable time instruction in the assembly implementation of an internal function, a small number of bits of secret scalars are leaked on the ppc64le architecture. Due to the way this function is used, we do not believe this leakage is enough to allow recovery of the private key when P-256 is used in any well known protocols.",
      "cve": "CVE-2025-22866",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.22.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22866",
          "value": "CVE-2025-22866",
          "url": "https://scout.docker.com/v/CVE-2025-22866?s=golang&n=stdlib&t=golang&vr=%3C1.22.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22866?s=golang&n=stdlib&t=golang&vr=%3C1.22.12"
        }
      ]
    },
    {
      "id": "67a7807dc79df7e31cdd54911dc377dc29e638e4aec76ae76883b9b563abd19b",
      "category": "container_scanning",
      "message": "CVE-2025-49128 on com.fasterxml.jackson.core/jackson-core@2.10.5",
      "description": "### Overview\n\nA flaw in Jackson-core's `JsonLocation._appendSourceDesc` method allows up to 500 bytes of unintended memory content to be included in exception messages. When parsing JSON from a byte array with an offset and length, the exception message incorrectly reads from the beginning of the array instead of the logical payload start. This results in possible **information disclosure** in systems using **pooled or reused buffers**, like Netty or Vert.x.\n\n### Details\n\nThe vulnerability affects the creation of exception messages like:\n\n```\nJsonParseException: Unexpected character ... at [Source: (byte[])...]\n```\n\nWhen `JsonFactory.createParser(byte[] data, int offset, int len)` is used, and an error occurs while parsing, the exception message should include a snippet from the specified logical payload. However, the method `_appendSourceDesc` ignores the `offset`, and always starts reading from index `0`.\n\nIf the buffer contains residual sensitive data from a previous request, such as credentials or document contents, that data may be exposed if the exception is propagated to the client.\n\nThe issue particularly impacts server applications using:\n\n* Pooled byte buffers (e.g., Netty)\n* Frameworks that surface parse errors in HTTP responses\n* Default Jackson settings (i.e., `INCLUDE_SOURCE_IN_LOCATION` is enabled)\n\nA documented real-world example is [CVE-2021-22145](https://nvd.nist.gov/vuln/detail/CVE-2021-22145) in Elasticsearch, which stemmed from the same root cause.\n\n### Attack Scenario\n\nAn attacker sends malformed JSON to a service using Jackson and pooled byte buffers (e.g., Netty-based HTTP servers). If the server reuses a buffer and includes the parser’s exception in its HTTP 400 response, the attacker may receive residual data from previous requests.\n\n### Proof of Concept\n\n```java\nbyte[] buffer = new byte[1000];\nSystem.arraycopy(\"SECRET\".getBytes(), 0, buffer, 0, 6);\nSystem.arraycopy(\"{ \\\"bad\\\": }\".getBytes(), 0, buffer, 700, 10);\n\nJsonFactory factory = new JsonFactory();\nJsonParser parser = factory.createParser(buffer, 700, 20);\nparser.nextToken(); // throws exception\n\n// Exception message will include \"SECRET\"\n```\n\n### Patches\nThis issue was silently fixed in jackson-core version 2.13.0, released on September 30, 2021, via [PR #652](https://github.com/FasterXML/jackson-core/pull/652).\n\nAll users should upgrade to version 2.13.0 or later.\n\n### Workarounds\nIf upgrading is not immediately possible, applications can mitigate the issue by:\n\n1. **Disabling exception message exposure to clients** — avoid returning parsing exception messages in HTTP responses.\n2. **Disabling source inclusion in exceptions** by setting:\n\n   ```java\n   jsonFactory.disable(JsonFactory.Feature.INCLUDE_SOURCE_IN_LOCATION);\n   ```\n\n    This prevents Jackson from embedding any source content in exception messages, avoiding leakage.\n\n\n### References\n* [Pull Request #652 (Fix implementation)](https://github.com/FasterXML/jackson-core/pull/652)\n* [CVE-2021-22145 (Elasticsearch exposure of this flaw)](https://nvd.nist.gov/vuln/detail/CVE-2021-22145)",
      "cve": "CVE-2025-49128",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade com.fasterxml.jackson.core/jackson-core@2.10.5 to 2.13.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.fasterxml.jackson.core/jackson-core@2.10.5"
          },
          "version": "2.10.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-49128",
          "value": "CVE-2025-49128",
          "url": "https://scout.docker.com/v/CVE-2025-49128?s=github&n=jackson-core&ns=com.fasterxml.jackson.core&t=maven&vr=%3E%3D2.0.0%2C%3C2.13.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-49128?s=github&n=jackson-core&ns=com.fasterxml.jackson.core&t=maven&vr=%3E%3D2.0.0%2C%3C2.13.0"
        }
      ]
    },
    {
      "id": "56a1f86e487c82c2384a7aa1657eb6bc0c21508b897f292e43fea0295696467a",
      "category": "container_scanning",
      "message": "CVE-2025-49128 on com.fasterxml.jackson.core/jackson-core@2.12.6",
      "description": "### Overview\n\nA flaw in Jackson-core's `JsonLocation._appendSourceDesc` method allows up to 500 bytes of unintended memory content to be included in exception messages. When parsing JSON from a byte array with an offset and length, the exception message incorrectly reads from the beginning of the array instead of the logical payload start. This results in possible **information disclosure** in systems using **pooled or reused buffers**, like Netty or Vert.x.\n\n### Details\n\nThe vulnerability affects the creation of exception messages like:\n\n```\nJsonParseException: Unexpected character ... at [Source: (byte[])...]\n```\n\nWhen `JsonFactory.createParser(byte[] data, int offset, int len)` is used, and an error occurs while parsing, the exception message should include a snippet from the specified logical payload. However, the method `_appendSourceDesc` ignores the `offset`, and always starts reading from index `0`.\n\nIf the buffer contains residual sensitive data from a previous request, such as credentials or document contents, that data may be exposed if the exception is propagated to the client.\n\nThe issue particularly impacts server applications using:\n\n* Pooled byte buffers (e.g., Netty)\n* Frameworks that surface parse errors in HTTP responses\n* Default Jackson settings (i.e., `INCLUDE_SOURCE_IN_LOCATION` is enabled)\n\nA documented real-world example is [CVE-2021-22145](https://nvd.nist.gov/vuln/detail/CVE-2021-22145) in Elasticsearch, which stemmed from the same root cause.\n\n### Attack Scenario\n\nAn attacker sends malformed JSON to a service using Jackson and pooled byte buffers (e.g., Netty-based HTTP servers). If the server reuses a buffer and includes the parser’s exception in its HTTP 400 response, the attacker may receive residual data from previous requests.\n\n### Proof of Concept\n\n```java\nbyte[] buffer = new byte[1000];\nSystem.arraycopy(\"SECRET\".getBytes(), 0, buffer, 0, 6);\nSystem.arraycopy(\"{ \\\"bad\\\": }\".getBytes(), 0, buffer, 700, 10);\n\nJsonFactory factory = new JsonFactory();\nJsonParser parser = factory.createParser(buffer, 700, 20);\nparser.nextToken(); // throws exception\n\n// Exception message will include \"SECRET\"\n```\n\n### Patches\nThis issue was silently fixed in jackson-core version 2.13.0, released on September 30, 2021, via [PR #652](https://github.com/FasterXML/jackson-core/pull/652).\n\nAll users should upgrade to version 2.13.0 or later.\n\n### Workarounds\nIf upgrading is not immediately possible, applications can mitigate the issue by:\n\n1. **Disabling exception message exposure to clients** — avoid returning parsing exception messages in HTTP responses.\n2. **Disabling source inclusion in exceptions** by setting:\n\n   ```java\n   jsonFactory.disable(JsonFactory.Feature.INCLUDE_SOURCE_IN_LOCATION);\n   ```\n\n    This prevents Jackson from embedding any source content in exception messages, avoiding leakage.\n\n\n### References\n* [Pull Request #652 (Fix implementation)](https://github.com/FasterXML/jackson-core/pull/652)\n* [CVE-2021-22145 (Elasticsearch exposure of this flaw)](https://nvd.nist.gov/vuln/detail/CVE-2021-22145)",
      "cve": "CVE-2025-49128",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade com.fasterxml.jackson.core/jackson-core@2.12.6 to 2.13.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.fasterxml.jackson.core/jackson-core@2.12.6"
          },
          "version": "2.12.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-49128",
          "value": "CVE-2025-49128",
          "url": "https://scout.docker.com/v/CVE-2025-49128?s=github&n=jackson-core&ns=com.fasterxml.jackson.core&t=maven&vr=%3E%3D2.0.0%2C%3C2.13.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-49128?s=github&n=jackson-core&ns=com.fasterxml.jackson.core&t=maven&vr=%3E%3D2.0.0%2C%3C2.13.0"
        }
      ]
    },
    {
      "id": "b1df7087b73d8a7b7fff0daae46ad2636646767a9a7cee18db9b9d604911e8aa",
      "category": "container_scanning",
      "message": "CVE-2023-45803 on ubuntu/python-pip@20.0.2-5ubuntu1.9",
      "description": "urllib3 is a user-friendly HTTP client library for Python. urllib3 previously wouldn't remove the HTTP request body when an HTTP redirect response using status 301, 302, or 303 after the request had its method changed from one that could accept a request body (like `POST`) to `GET` as is required by HTTP RFCs. Although this behavior is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers. Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren't putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn't exploitable. Both of the following conditions must be true to be affected by this vulnerability: 1. Using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON) and 2. The origin service is compromised and starts redirecting using 301, 302, or 303 to a malicious peer or the redirected-to service becomes compromised. This issue has been addressed in versions 1.26.18 and 2.0.7 and users are advised to update to resolve this issue. Users unable to update should disable redirects for services that aren't expecting to respond with redirects with `redirects=False` and disable automatic redirects with `redirects=False` and handle 301, 302, and 303 redirects manually by stripping the HTTP request body. ",
      "cve": "CVE-2023-45803",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python-pip@20.0.2-5ubuntu1.9 to 20.0.2-5ubuntu1.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python-pip@20.0.2-5ubuntu1.9?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "20.0.2-5ubuntu1.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45803",
          "value": "CVE-2023-45803",
          "url": "https://scout.docker.com/v/CVE-2023-45803?s=ubuntu&n=python-pip&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C20.0.2-5ubuntu1.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45803?s=ubuntu&n=python-pip&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C20.0.2-5ubuntu1.10"
        }
      ]
    },
    {
      "id": "7283fcb8c75f0c7639779c8f63955ed4fc73604f8016b7afa89ea01d043a746c",
      "category": "container_scanning",
      "message": "CVE-2023-45803 on ubuntu/python-urllib3@1.25.8-2ubuntu0.2",
      "description": "urllib3 is a user-friendly HTTP client library for Python. urllib3 previously wouldn't remove the HTTP request body when an HTTP redirect response using status 301, 302, or 303 after the request had its method changed from one that could accept a request body (like `POST`) to `GET` as is required by HTTP RFCs. Although this behavior is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers. Because the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren't putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn't exploitable. Both of the following conditions must be true to be affected by this vulnerability: 1. Using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON) and 2. The origin service is compromised and starts redirecting using 301, 302, or 303 to a malicious peer or the redirected-to service becomes compromised. This issue has been addressed in versions 1.26.18 and 2.0.7 and users are advised to update to resolve this issue. Users unable to update should disable redirects for services that aren't expecting to respond with redirects with `redirects=False` and disable automatic redirects with `redirects=False` and handle 301, 302, and 303 redirects manually by stripping the HTTP request body. ",
      "cve": "CVE-2023-45803",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python-urllib3@1.25.8-2ubuntu0.2 to 1.25.8-2ubuntu0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python-urllib3@1.25.8-2ubuntu0.2?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.25.8-2ubuntu0.2"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45803",
          "value": "CVE-2023-45803",
          "url": "https://scout.docker.com/v/CVE-2023-45803?s=ubuntu&n=python-urllib3&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.25.8-2ubuntu0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45803?s=ubuntu&n=python-urllib3&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.25.8-2ubuntu0.3"
        }
      ]
    },
    {
      "id": "530390c5265d5c2fa10dad4e039e2043b7908123e2561990808eef16ddedc82a",
      "category": "container_scanning",
      "message": "CVE-2020-36843 on net.i2p.crypto/eddsa@0.3.0",
      "description": "The implementation of EdDSA in EdDSA-Java (aka ed25519-java) through 0.3.0 exhibits signature malleability and does not satisfy the SUF-CMA (Strong Existential Unforgeability under Chosen Message Attacks) property. This allows attackers to create new valid signatures different from previous signatures for a known message.",
      "cve": "CVE-2020-36843",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/net.i2p.crypto/eddsa@0.3.0"
          },
          "version": "0.3.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-36843",
          "value": "CVE-2020-36843",
          "url": "https://scout.docker.com/v/CVE-2020-36843?s=github&n=eddsa&ns=net.i2p.crypto&t=maven&vr=%3C%3D0.3.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-36843?s=github&n=eddsa&ns=net.i2p.crypto&t=maven&vr=%3C%3D0.3.0"
        }
      ]
    },
    {
      "id": "03a25c7488fce7f7764a0e57e67b8d501b0242520b79289313f0316bffc2d799",
      "category": "container_scanning",
      "message": "CVE-2022-4245 on org.codehaus.plexus/plexus-utils@1.5.15",
      "description": "A flaw was found in codehaus-plexus. The `org.codehaus.plexus.util.xml.XmlWriterUtil#writeComment` fails to sanitize comments for a `-->` sequence. This issue means that text contained in the command string could be interpreted as XML and allow for XML injection. ",
      "cve": "CVE-2022-4245",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.codehaus.plexus/plexus-utils@1.5.15 to 3.0.24",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.codehaus.plexus/plexus-utils@1.5.15"
          },
          "version": "1.5.15"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-4245",
          "value": "CVE-2022-4245",
          "url": "https://scout.docker.com/v/CVE-2022-4245?s=github&n=plexus-utils&ns=org.codehaus.plexus&t=maven&vr=%3C3.0.24"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-4245?s=github&n=plexus-utils&ns=org.codehaus.plexus&t=maven&vr=%3C3.0.24"
        }
      ]
    },
    {
      "id": "8d31a981a8e240988c28e9925cbfab46d7542cab06842d1a6dd1ad68e7177de6",
      "category": "container_scanning",
      "message": "CVE-2023-45289 on stdlib@1.16.12",
      "description": "When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not.\n\nA maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded.",
      "cve": "CVE-2023-45289",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45289",
          "value": "CVE-2023-45289",
          "url": "https://scout.docker.com/v/CVE-2023-45289?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45289?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "9f2b6d5b08274938d4241c9c7c5b935571986bf3c683058f1f88f1a5beab8dab",
      "category": "container_scanning",
      "message": "CVE-2023-45289 on stdlib@1.16.10",
      "description": "When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not.\n\nA maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded.",
      "cve": "CVE-2023-45289",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45289",
          "value": "CVE-2023-45289",
          "url": "https://scout.docker.com/v/CVE-2023-45289?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45289?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "0df92eb2ca2bf250a1dc80e75746263f6715e9b93c41e24e0a8a38daf87dbc7d",
      "category": "container_scanning",
      "message": "CVE-2023-45289 on stdlib@1.20.6",
      "description": "When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not.\n\nA maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded.",
      "cve": "CVE-2023-45289",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45289",
          "value": "CVE-2023-45289",
          "url": "https://scout.docker.com/v/CVE-2023-45289?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45289?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "619a5f9ffd4670b0dd1492ac3c27b51456438a8395523f3af14916d1d3ba1c48",
      "category": "container_scanning",
      "message": "CVE-2023-45289 on stdlib@1.18.9",
      "description": "When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not.\n\nA maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded.",
      "cve": "CVE-2023-45289",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45289",
          "value": "CVE-2023-45289",
          "url": "https://scout.docker.com/v/CVE-2023-45289?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45289?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "bdab4e3fc12c81061cf8bd8300ae67a379818c21aae4c8911e083d073a41c5ba",
      "category": "container_scanning",
      "message": "CVE-2024-28180 on gopkg.in/square/go-jose.v2@2.6.0",
      "description": "### Impact\nAn attacker could send a JWE containing compressed data that used large amounts of memory and CPU when decompressed by Decrypt or DecryptMulti. Those functions now return an error if the decompressed data would exceed 250kB or 10x the compressed size (whichever is larger). Thanks to Enze Wang@Alioth and Jianjun Chen@Zhongguancun Lab (@zer0yu and @chenjj) for reporting.\n\n### Patches\nThe problem is fixed in the following packages and versions:\n- github.com/go-jose/go-jose/v4 version 4.0.1\n- github.com/go-jose/go-jose/v3 version 3.0.3\n- gopkg.in/go-jose/go-jose.v2 version 2.6.3\n\nThe problem will not be fixed in the following package because the package is archived:\n- gopkg.in/square/go-jose.v2",
      "cve": "CVE-2024-28180",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/gopkg.in/square/go-jose.v2@2.6.0"
          },
          "version": "2.6.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-28180",
          "value": "CVE-2024-28180",
          "url": "https://scout.docker.com/v/CVE-2024-28180?s=github&n=go-jose.v2&ns=gopkg.in%2Fsquare&t=golang&vr=%3C%3D2.6.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-28180?s=github&n=go-jose.v2&ns=gopkg.in%2Fsquare&t=golang&vr=%3C%3D2.6.0"
        }
      ]
    },
    {
      "id": "b6ff64993d631f1ac2adbc9f7be4e41a301a9f547799284ca9aa50bb426045e3",
      "category": "container_scanning",
      "message": "CVE-2024-34155 on stdlib@1.18.9",
      "description": "Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion.",
      "cve": "CVE-2024-34155",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34155",
          "value": "CVE-2024-34155",
          "url": "https://scout.docker.com/v/CVE-2024-34155?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34155?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "fa50b2948861b33649ff851eb887c1698bb5355b05ce2b1780686f361971212e",
      "category": "container_scanning",
      "message": "CVE-2024-34155 on stdlib@1.16.10",
      "description": "Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion.",
      "cve": "CVE-2024-34155",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34155",
          "value": "CVE-2024-34155",
          "url": "https://scout.docker.com/v/CVE-2024-34155?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34155?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "8026160cc5c8d3e11a2934362de6d671d135c063fb8aea337347bfcd191be7a7",
      "category": "container_scanning",
      "message": "CVE-2024-34155 on stdlib@1.20.6",
      "description": "Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion.",
      "cve": "CVE-2024-34155",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34155",
          "value": "CVE-2024-34155",
          "url": "https://scout.docker.com/v/CVE-2024-34155?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34155?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "c2530c72aefa366570859d40ec87c9f6cb312c68746a28e43af238c67eebf9f9",
      "category": "container_scanning",
      "message": "CVE-2024-34155 on stdlib@1.16.12",
      "description": "Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion.",
      "cve": "CVE-2024-34155",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34155",
          "value": "CVE-2024-34155",
          "url": "https://scout.docker.com/v/CVE-2024-34155?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34155?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "948f01a417862ea0bf21b19221dafc08c070527b509e86f218a20ba37e89b86d",
      "category": "container_scanning",
      "message": "CVE-2024-37891 on urllib3@1.25.8",
      "description": "When using urllib3's proxy support with `ProxyManager`, the `Proxy-Authorization` header is only sent to the configured proxy, as expected.\n\nHowever, when sending HTTP requests *without* using urllib3's proxy support, it's possible to accidentally configure the `Proxy-Authorization` header even though it won't have any effect as the request is not using a forwarding proxy or a tunneling proxy. In those cases, urllib3 doesn't treat the `Proxy-Authorization` HTTP header as one carrying authentication material and thus doesn't strip the header on cross-origin redirects.\n\nBecause this is a highly unlikely scenario, we believe the severity of this vulnerability is low for almost all users. Out of an abundance of caution urllib3 will automatically strip the `Proxy-Authorization` header during cross-origin redirects to avoid the small chance that users are doing this on accident.\n\nUsers should use urllib3's proxy support or disable automatic redirects to achieve safe processing of the `Proxy-Authorization` header, but we still decided to strip the header by default in order to further protect users who aren't using the correct approach.\n\n## Affected usages\n\nWe believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited:\n\n* Setting the `Proxy-Authorization` header without using urllib3's built-in proxy support.\n* Not disabling HTTP redirects.\n* Either not using an HTTPS origin server or for the proxy or target origin to redirect to a malicious origin.\n\n## Remediation\n\n* Using the `Proxy-Authorization` header with urllib3's `ProxyManager`.\n* Disabling HTTP redirects using `redirects=False` when sending requests.\n* Not using the `Proxy-Authorization` header.",
      "cve": "CVE-2024-37891",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade urllib3@1.25.8 to 1.26.19",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/urllib3@1.25.8"
          },
          "version": "1.25.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-37891",
          "value": "CVE-2024-37891",
          "url": "https://scout.docker.com/v/CVE-2024-37891?s=github&n=urllib3&t=pypi&vr=%3C1.26.19"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-37891?s=github&n=urllib3&t=pypi&vr=%3C1.26.19"
        }
      ]
    },
    {
      "id": "7b44d849db2d6dcc03472334d7b56a625c68f5ebac8704003d2364e920358976",
      "category": "container_scanning",
      "message": "CVE-2025-22870 on golang.org/x/net@0.10.0",
      "description": "Matching of hosts against proxy patterns can improperly treat an IPv6 zone ID as a hostname component. For example, when the NO_PROXY environment variable is set to \"*.example.com\", a request to \"[::1%25.example.com]:80` will incorrectly match and not be proxied.",
      "cve": "CVE-2025-22870",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.10.0 to 0.36.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.10.0"
          },
          "version": "0.10.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22870",
          "value": "CVE-2025-22870",
          "url": "https://scout.docker.com/v/CVE-2025-22870?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.36.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22870?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.36.0"
        }
      ]
    },
    {
      "id": "ee63be30d92c0e8eee8e4d68b456c226dd93d780450a78a42bc9ef0d2d64e4b7",
      "category": "container_scanning",
      "message": "CVE-2024-40635 on github.com/containerd/containerd@1.5.5",
      "description": "### Impact\nA bug was found in containerd where containers launched with a User set as a `UID:GID` larger than the maximum 32-bit signed integer can cause an overflow condition where the container ultimately runs as root (UID 0). This could cause unexpected behavior for environments that require containers to run as a non-root user.\n\n### Patches\nThis bug has been fixed in the following containerd versions: \n\n* 2.0.4 (Fixed in https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20)\n* 1.7.27 (Fixed in https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da)\n* 1.6.38 (Fixed in https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a)\n\nUsers should update to these versions to resolve the issue.\n\n### Workarounds\nEnsure that only trusted images are used and that only trusted users have permissions to import images.\n\n### Credits\nThe containerd project would like to thank [Benjamin Koltermann](https://github.com/p4ck3t0) and [emxll](https://github.com/emxll) for responsibly disclosing this issue in accordance with the [containerd security policy](https://github.com/containerd/project/blob/main/SECURITY.md).\n\n### References\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-40635\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)\n\nTo report a security issue in containerd:\n* [Report a new vulnerability](https://github.com/containerd/containerd/security/advisories/new)\n* Email us at [security@containerd.io](mailto:security@containerd.io)",
      "cve": "CVE-2024-40635",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.5.5 to 1.6.38",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.5.5"
          },
          "version": "1.5.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-40635",
          "value": "CVE-2024-40635",
          "url": "https://scout.docker.com/v/CVE-2024-40635?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.6.38"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-40635?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.6.38"
        }
      ]
    },
    {
      "id": "f28ed3f877e223e3a51e0dfd02683d26bc0d0422c9660b1008bb11bb568097e6",
      "category": "container_scanning",
      "message": "CVE-2024-40635 on github.com/containerd/containerd@1.6.6",
      "description": "### Impact\nA bug was found in containerd where containers launched with a User set as a `UID:GID` larger than the maximum 32-bit signed integer can cause an overflow condition where the container ultimately runs as root (UID 0). This could cause unexpected behavior for environments that require containers to run as a non-root user.\n\n### Patches\nThis bug has been fixed in the following containerd versions: \n\n* 2.0.4 (Fixed in https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20)\n* 1.7.27 (Fixed in https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da)\n* 1.6.38 (Fixed in https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a)\n\nUsers should update to these versions to resolve the issue.\n\n### Workarounds\nEnsure that only trusted images are used and that only trusted users have permissions to import images.\n\n### Credits\nThe containerd project would like to thank [Benjamin Koltermann](https://github.com/p4ck3t0) and [emxll](https://github.com/emxll) for responsibly disclosing this issue in accordance with the [containerd security policy](https://github.com/containerd/project/blob/main/SECURITY.md).\n\n### References\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-40635\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)\n\nTo report a security issue in containerd:\n* [Report a new vulnerability](https://github.com/containerd/containerd/security/advisories/new)\n* Email us at [security@containerd.io](mailto:security@containerd.io)",
      "cve": "CVE-2024-40635",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.6.6 to 1.6.38",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.6.6"
          },
          "version": "1.6.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-40635",
          "value": "CVE-2024-40635",
          "url": "https://scout.docker.com/v/CVE-2024-40635?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.6.38"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-40635?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.6.38"
        }
      ]
    },
    {
      "id": "ab2212f5ddab1d8c043d69f6af5ebad35d85c968d6cf043724926620c3e5f82c",
      "category": "container_scanning",
      "message": "CVE-2021-29425 on commons-io/commons-io@1.3.2",
      "description": "In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like \"//../foo\", or \"\\\\..\\foo\", the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus \"limited\" path traversal), if the calling code would use the result to construct a path value.",
      "cve": "CVE-2021-29425",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade commons-io/commons-io@1.3.2 to 2.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/commons-io/commons-io@1.3.2"
          },
          "version": "1.3.2"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-29425",
          "value": "CVE-2021-29425",
          "url": "https://scout.docker.com/v/CVE-2021-29425?s=github&n=commons-io&ns=commons-io&t=maven&vr=%3C2.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-29425?s=github&n=commons-io&ns=commons-io&t=maven&vr=%3C2.7"
        }
      ]
    },
    {
      "id": "b8164caf73586afef29ba3e684197aac3b914697c52d056c54c543f0049bd527",
      "category": "container_scanning",
      "message": "CVE-2021-29425 on commons-io/commons-io@2.6",
      "description": "In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like \"//../foo\", or \"\\\\..\\foo\", the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus \"limited\" path traversal), if the calling code would use the result to construct a path value.",
      "cve": "CVE-2021-29425",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade commons-io/commons-io@2.6 to 2.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/commons-io/commons-io@2.6"
          },
          "version": "2.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-29425",
          "value": "CVE-2021-29425",
          "url": "https://scout.docker.com/v/CVE-2021-29425?s=github&n=commons-io&ns=commons-io&t=maven&vr=%3C2.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-29425?s=github&n=commons-io&ns=commons-io&t=maven&vr=%3C2.7"
        }
      ]
    },
    {
      "id": "5072b3f6492759ee1a6478a3d6cba48fd26360abc397878aff76c38590efc64e",
      "category": "container_scanning",
      "message": "CVE-2021-44717 on stdlib@1.16.10",
      "description": "When a Go program running on a Unix system is out of file descriptors and calls syscall.ForkExec (including indirectly by using the os/exec package), syscall.ForkExec can close file descriptor 0 as it fails. If this happens (or can be provoked) repeatedly, it can result in misdirected I/O such as writing network traffic intended for one connection to a different connection, or content intended for one file to a different one.\n\nFor users who cannot immediately update to the new release, the bug can be mitigated by raising the per-process file descriptor limit.",
      "cve": "CVE-2021-44717",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.16.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-44717",
          "value": "CVE-2021-44717",
          "url": "https://scout.docker.com/v/CVE-2021-44717?s=golang&n=stdlib&t=golang&vr=%3C1.16.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-44717?s=golang&n=stdlib&t=golang&vr=%3C1.16.12"
        }
      ]
    },
    {
      "id": "86dc647b37c87812e2a812224b7f49c05dc2ee80a5f40cf65807a56d62c4b8f1",
      "category": "container_scanning",
      "message": "CVE-2023-6004 on ubuntu/libssh@0.9.3-2ubuntu2.3",
      "description": "A flaw was found in libssh. By utilizing the ProxyCommand or ProxyJump feature, users can exploit unchecked hostname syntax on the client. This issue may allow an attacker to inject malicious code into the command of the features mentioned through the hostname parameter.",
      "cve": "CVE-2023-6004",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libssh@0.9.3-2ubuntu2.3 to 0.9.3-2ubuntu2.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libssh@0.9.3-2ubuntu2.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "0.9.3-2ubuntu2.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-6004",
          "value": "CVE-2023-6004",
          "url": "https://scout.docker.com/v/CVE-2023-6004?s=ubuntu&n=libssh&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C0.9.3-2ubuntu2.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-6004?s=ubuntu&n=libssh&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C0.9.3-2ubuntu2.5"
        }
      ]
    },
    {
      "id": "a33ae317ff7da11e65d98e81630c8098a358ec576ac8efd4180ed2e1e0a969b7",
      "category": "container_scanning",
      "message": "CVE-2024-45310 on github.com/opencontainers/runc@1.0.1",
      "description": "### Impact\nrunc 1.1.13 and earlier as well as 1.2.0-rc2 and earlier can be tricked into\ncreating empty files or directories in arbitrary locations in the host\nfilesystem by sharing a volume between two containers and exploiting a race\nwith os.MkdirAll. While this can be used to create empty files, existing\nfiles **will not** be truncated.\n\nAn attacker must have the ability to start containers using some kind of custom\nvolume configuration. Containers using user namespaces are still affected, but\nthe scope of places an attacker can create inodes can be significantly reduced.\nSufficiently strict LSM policies (SELinux/Apparmor) can also in principle block\nthis attack -- we suspect the industry standard SELinux policy may restrict\nthis attack's scope but the exact scope of protection hasn't been analysed.\n\nThis is exploitable using runc directly as well as through Docker and\nKubernetes.\n\nThe CVSS score for this vulnerability is\nCVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:N/I:L/A:N (Low severity, 3.6).\n\n### Workarounds\nUsing user namespaces restricts this attack fairly significantly such that the\nattacker can only create inodes in directories that the remapped root\nuser/group has write access to. Unless the root user is remapped to an actual\nuser on the host (such as with rootless containers that don't use\n/etc/sub[ug]id), this in practice means that an attacker would only be able to\ncreate inodes in world-writable directories.\n\nA strict enough SELinux or AppArmor policy could in principle also restrict the\nscope if a specific label is applied to the runc runtime, though we haven't\nthoroughly tested to what extent the standard existing policies block this\nattack nor what exact policies are needed to sufficiently restrict this attack.\n\n### Patches\nFixed in runc v1.1.14 and v1.2.0-rc3.\n\n* `main` patches:\n  * https://github.com/opencontainers/runc/pull/4359\n  *  https://github.com/opencontainers/runc/commit/63c2908164f3a1daea455bf5bcd8d363d70328c7\n* `release-1.1` patches:\n  * https://github.com/opencontainers/runc/commit/8781993968fd964ac723ff5f360b6f259e809a3e\n  * https://github.com/opencontainers/runc/commit/f0b652ea61ff6750a8fcc69865d45a7abf37accf\n\n### Credits\nThanks to Rodrigo Campos Catelin (@rata) and Alban Crequy (@alban) from\nMicrosoft for discovering and reporting this vulnerability.",
      "cve": "CVE-2024-45310",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/opencontainers/runc@1.0.1 to 1.1.14",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/opencontainers/runc@1.0.1"
          },
          "version": "1.0.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45310",
          "value": "CVE-2024-45310",
          "url": "https://scout.docker.com/v/CVE-2024-45310?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.1.14"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45310?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.1.14"
        }
      ]
    },
    {
      "id": "35e48d25f14fc8bb9d2fdd35ca94aff7ee0eab44a56622b4dad0ac722ae1c34f",
      "category": "container_scanning",
      "message": "CVE-2024-45310 on github.com/opencontainers/runc@1.1.3",
      "description": "### Impact\nrunc 1.1.13 and earlier as well as 1.2.0-rc2 and earlier can be tricked into\ncreating empty files or directories in arbitrary locations in the host\nfilesystem by sharing a volume between two containers and exploiting a race\nwith os.MkdirAll. While this can be used to create empty files, existing\nfiles **will not** be truncated.\n\nAn attacker must have the ability to start containers using some kind of custom\nvolume configuration. Containers using user namespaces are still affected, but\nthe scope of places an attacker can create inodes can be significantly reduced.\nSufficiently strict LSM policies (SELinux/Apparmor) can also in principle block\nthis attack -- we suspect the industry standard SELinux policy may restrict\nthis attack's scope but the exact scope of protection hasn't been analysed.\n\nThis is exploitable using runc directly as well as through Docker and\nKubernetes.\n\nThe CVSS score for this vulnerability is\nCVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:N/I:L/A:N (Low severity, 3.6).\n\n### Workarounds\nUsing user namespaces restricts this attack fairly significantly such that the\nattacker can only create inodes in directories that the remapped root\nuser/group has write access to. Unless the root user is remapped to an actual\nuser on the host (such as with rootless containers that don't use\n/etc/sub[ug]id), this in practice means that an attacker would only be able to\ncreate inodes in world-writable directories.\n\nA strict enough SELinux or AppArmor policy could in principle also restrict the\nscope if a specific label is applied to the runc runtime, though we haven't\nthoroughly tested to what extent the standard existing policies block this\nattack nor what exact policies are needed to sufficiently restrict this attack.\n\n### Patches\nFixed in runc v1.1.14 and v1.2.0-rc3.\n\n* `main` patches:\n  * https://github.com/opencontainers/runc/pull/4359\n  *  https://github.com/opencontainers/runc/commit/63c2908164f3a1daea455bf5bcd8d363d70328c7\n* `release-1.1` patches:\n  * https://github.com/opencontainers/runc/commit/8781993968fd964ac723ff5f360b6f259e809a3e\n  * https://github.com/opencontainers/runc/commit/f0b652ea61ff6750a8fcc69865d45a7abf37accf\n\n### Credits\nThanks to Rodrigo Campos Catelin (@rata) and Alban Crequy (@alban) from\nMicrosoft for discovering and reporting this vulnerability.",
      "cve": "CVE-2024-45310",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/opencontainers/runc@1.1.3 to 1.1.14",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/opencontainers/runc@1.1.3"
          },
          "version": "1.1.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45310",
          "value": "CVE-2024-45310",
          "url": "https://scout.docker.com/v/CVE-2024-45310?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.1.14"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45310?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.1.14"
        }
      ]
    },
    {
      "id": "7ce9a2270ba291d11db34fd9b58668f07fc49697561993d0c078b8cded0e0a50",
      "category": "container_scanning",
      "message": "CVE-2023-35887 on org.apache.sshd/sshd-common@2.8.0",
      "description": "Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Apache Software Foundation Apache MINA.\n\nIn SFTP servers implemented using Apache MINA SSHD that use a RootedFileSystem, logged users may be able to discover \"exists/does not exist\" information about items outside the rooted tree via paths including parent navigation (\"..\") beyond the root, or involving symlinks.\n\nThis issue affects Apache MINA: from 1.0 before 2.9.3 Users are recommended to upgrade to 2.9.3\n\nUntil version 2.1.0, some of the code affected by this vulnerability appeared in org.apache.sshd:sshd-core. Version 2.1.0 contains a [commit](https://github.com/apache/mina-sshd/commit/10de190e7d3f9189deb76b8d08c72334a1fe2df0) where the code was moved to the package org.apache.sshd:sshd-common, which did not exist until version 2.1.0.\n",
      "cve": "CVE-2023-35887",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.sshd/sshd-common@2.8.0 to 2.9.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.sshd/sshd-common@2.8.0"
          },
          "version": "2.8.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-35887",
          "value": "CVE-2023-35887",
          "url": "https://scout.docker.com/v/CVE-2023-35887?s=github&n=sshd-common&ns=org.apache.sshd&t=maven&vr=%3E%3D2.1.0%2C%3C2.9.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-35887?s=github&n=sshd-common&ns=org.apache.sshd&t=maven&vr=%3E%3D2.1.0%2C%3C2.9.3"
        }
      ]
    },
    {
      "id": "e57ee962cdf924b66ed7d686505dd5de765a1173f9cf53a227cb53e80a40da72",
      "category": "container_scanning",
      "message": "CVE-2020-13956 on org.apache.httpcomponents/httpclient@4.5.6",
      "description": "Apache HttpClient versions prior to version 4.5.13 and 5.0.3 can misinterpret malformed authority component in request URIs passed to the library as java.net.URI object and pick the wrong target host for request execution.",
      "cve": "CVE-2020-13956",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.httpcomponents/httpclient@4.5.6 to 4.5.13",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.httpcomponents/httpclient@4.5.6"
          },
          "version": "4.5.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-13956",
          "value": "CVE-2020-13956",
          "url": "https://scout.docker.com/v/CVE-2020-13956?s=github&n=httpclient&ns=org.apache.httpcomponents&t=maven&vr=%3C4.5.13"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-13956?s=github&n=httpclient&ns=org.apache.httpcomponents&t=maven&vr=%3C4.5.13"
        }
      ]
    },
    {
      "id": "cb0e0eaacbc5c19efbb646e6ba9dec5933211cf70fb08ccf5bf745557f8cce91",
      "category": "container_scanning",
      "message": "CVE-2022-29526 on stdlib@1.16.10",
      "description": "When called with a non-zero flags parameter, the Faccessat function can incorrectly report that a file is accessible.",
      "cve": "CVE-2022-29526",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.17.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-29526",
          "value": "CVE-2022-29526",
          "url": "https://scout.docker.com/v/CVE-2022-29526?s=golang&n=stdlib&t=golang&vr=%3C1.17.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-29526?s=golang&n=stdlib&t=golang&vr=%3C1.17.10"
        }
      ]
    },
    {
      "id": "33ab262e1470b6be76d4d75a305d75352bb133cd571e2f93fad7ad05a3253fe0",
      "category": "container_scanning",
      "message": "CVE-2022-29526 on golang.org/x/sys@0.0.0-20210630005230-0f9fa26af87c",
      "description": "Go before 1.17.10 and 1.18.x before 1.18.2 has Incorrect Privilege Reporting in syscall. When called with a non-zero flags parameter, the Faccessat function could incorrectly report that a file is accessible.\n\n### Specific Go Packages Affected\ngolang.org/x/sys/unix",
      "cve": "CVE-2022-29526",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/sys@0.0.0-20210630005230-0f9fa26af87c to 0.0.0-20220412211240-33da011f77ad",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/sys@0.0.0-20210630005230-0f9fa26af87c"
          },
          "version": "0.0.0-20210630005230-0f9fa26af87c"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-29526",
          "value": "CVE-2022-29526",
          "url": "https://scout.docker.com/v/CVE-2022-29526?s=github&n=sys&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20220412211240-33da011f77ad"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-29526?s=github&n=sys&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20220412211240-33da011f77ad"
        }
      ]
    },
    {
      "id": "baf3576eb485fc6707de09145f900c5f6163d6ddf325983d7d13115050c31980",
      "category": "container_scanning",
      "message": "CVE-2022-29526 on golang.org/x/sys@0.0.0-20210426230700-d19ff857e887",
      "description": "Go before 1.17.10 and 1.18.x before 1.18.2 has Incorrect Privilege Reporting in syscall. When called with a non-zero flags parameter, the Faccessat function could incorrectly report that a file is accessible.\n\n### Specific Go Packages Affected\ngolang.org/x/sys/unix",
      "cve": "CVE-2022-29526",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/sys@0.0.0-20210426230700-d19ff857e887 to 0.0.0-20220412211240-33da011f77ad",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/sys@0.0.0-20210426230700-d19ff857e887"
          },
          "version": "0.0.0-20210426230700-d19ff857e887"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-29526",
          "value": "CVE-2022-29526",
          "url": "https://scout.docker.com/v/CVE-2022-29526?s=github&n=sys&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20220412211240-33da011f77ad"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-29526?s=github&n=sys&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20220412211240-33da011f77ad"
        }
      ]
    },
    {
      "id": "9df74f24cb75a1b10b1da7cf0661ce21555b5a66d41f9438956d629911d3cc91",
      "category": "container_scanning",
      "message": "CVE-2022-29526 on stdlib@1.16.12",
      "description": "When called with a non-zero flags parameter, the Faccessat function can incorrectly report that a file is accessible.",
      "cve": "CVE-2022-29526",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.17.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-29526",
          "value": "CVE-2022-29526",
          "url": "https://scout.docker.com/v/CVE-2022-29526?s=golang&n=stdlib&t=golang&vr=%3C1.17.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-29526?s=golang&n=stdlib&t=golang&vr=%3C1.17.10"
        }
      ]
    },
    {
      "id": "40122c8e72ccf8cd2f071a8e004f8f2d0f77a5c702b9dc5fe96ff9f55e60afa4",
      "category": "container_scanning",
      "message": "CVE-2022-36109 on github.com/docker/docker@20.10.17+incompatible",
      "description": "Moby is an open-source project created by Docker to enable software containerization. A bug was found in Moby (Docker Engine) where supplementary groups are not set up properly. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container.  This bug is fixed in Moby (Docker Engine) 20.10.18. Users should update to this version when it is available. Running containers should be stopped and restarted for the permissions to be fixed. For users unable to upgrade, this problem can be worked around by not using the `\"USER $USERNAME\"` Dockerfile instruction. Instead by calling `ENTRYPOINT [\"su\", \"-\", \"user\"]` the supplementary groups will be set up properly.\n\nThanks to Steven Murdoch for reporting this issue.\n\n----\n\n### Impact\n\nIf an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container. \n\n### Patches\n\n This bug is fixed in Moby (Docker Engine) 20.10.18. Users should update to this version when it is available.\n\n### Workarounds\n\nThis problem can be worked around by not using the `\"USER $USERNAME\"` Dockerfile instruction. Instead by calling `ENTRYPOINT [\"su\", \"-\", \"user\"]` the supplementary groups will be set up properly.\n\n### References\n\nhttps://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/moby/moby/issues/new)\n* Email us at [security@docker.com](mailto:security@docker.com)\n",
      "cve": "CVE-2022-36109",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/docker/docker@20.10.17+incompatible to 20.10.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/docker@20.10.17%2Bincompatible"
          },
          "version": "20.10.17+incompatible"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-36109",
          "value": "CVE-2022-36109",
          "url": "https://scout.docker.com/v/CVE-2022-36109?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C20.10.18"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-36109?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C20.10.18"
        }
      ]
    },
    {
      "id": "3f01665457948aedacc41b0146516b33f18a6e13098f97d6092ecc5af1d8594d",
      "category": "container_scanning",
      "message": "CVE-2022-36109 on github.com/containerd/containerd@1.6.6",
      "description": "Supplementary groups are not set up properly inside a container. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases and potentially escalate privileges in the container. Uses of the containerd client library may also have improperly setup supplementary groups.",
      "cve": "CVE-2022-36109",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.6.6 to 1.6.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.6.6"
          },
          "version": "1.6.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-36109",
          "value": "CVE-2022-36109",
          "url": "https://scout.docker.com/v/CVE-2022-36109?s=golang&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.6.0%2C%3C1.6.18"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-36109?s=golang&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.6.0%2C%3C1.6.18"
        }
      ]
    },
    {
      "id": "ca28190137996994d0293e21906651cb621eda31a65ae22ef44b81f9151947d8",
      "category": "container_scanning",
      "message": "CVE-2022-36109 on github.com/containerd/containerd@1.5.5",
      "description": "Supplementary groups are not set up properly inside a container. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases and potentially escalate privileges in the container. Uses of the containerd client library may also have improperly setup supplementary groups.",
      "cve": "CVE-2022-36109",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.5.5 to 1.5.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.5.5"
          },
          "version": "1.5.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-36109",
          "value": "CVE-2022-36109",
          "url": "https://scout.docker.com/v/CVE-2022-36109?s=golang&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.5.18"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-36109?s=golang&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.5.18"
        }
      ]
    },
    {
      "id": "4b5ab0dc4f5e78c6b24648e67531aca03a132f34ec989c7a412a11ba94dee5e6",
      "category": "container_scanning",
      "message": "CVE-2022-41717 on stdlib@1.16.12",
      "description": "An attacker can cause excessive memory growth in a Go server accepting HTTP/2 requests.\n\nHTTP/2 server connections contain a cache of HTTP header keys sent by the client. While the total number of entries in this cache is capped, an attacker sending very large keys can cause the server to allocate approximately 64 MiB per open connection.",
      "cve": "CVE-2022-41717",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.18.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41717",
          "value": "CVE-2022-41717",
          "url": "https://scout.docker.com/v/CVE-2022-41717?s=golang&n=stdlib&t=golang&vr=%3C1.18.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41717?s=golang&n=stdlib&t=golang&vr=%3C1.18.9"
        }
      ]
    },
    {
      "id": "53a314bc62922640489d082816e19578791650704bd6da3d991c0cfb1ab4fbac",
      "category": "container_scanning",
      "message": "CVE-2022-41717 on stdlib@1.16.10",
      "description": "An attacker can cause excessive memory growth in a Go server accepting HTTP/2 requests.\n\nHTTP/2 server connections contain a cache of HTTP header keys sent by the client. While the total number of entries in this cache is capped, an attacker sending very large keys can cause the server to allocate approximately 64 MiB per open connection.",
      "cve": "CVE-2022-41717",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.18.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41717",
          "value": "CVE-2022-41717",
          "url": "https://scout.docker.com/v/CVE-2022-41717?s=golang&n=stdlib&t=golang&vr=%3C1.18.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41717?s=golang&n=stdlib&t=golang&vr=%3C1.18.9"
        }
      ]
    },
    {
      "id": "24c687962349df0d28f1abb5f4e24f302b471d09c32f70b4e180ef74010f619c",
      "category": "container_scanning",
      "message": "CVE-2023-24532 on stdlib@1.16.10",
      "description": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve).\n\nThis does not impact usages of crypto/ecdsa or crypto/ecdh.",
      "cve": "CVE-2023-24532",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.19.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24532",
          "value": "CVE-2023-24532",
          "url": "https://scout.docker.com/v/CVE-2023-24532?s=golang&n=stdlib&t=golang&vr=%3C1.19.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24532?s=golang&n=stdlib&t=golang&vr=%3C1.19.7"
        }
      ]
    },
    {
      "id": "6f06a3dcb6987dfeb315e8a168df1ca9aea907d9484ea4e984dcaeb285d7a6f0",
      "category": "container_scanning",
      "message": "CVE-2023-24532 on stdlib@1.16.12",
      "description": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve).\n\nThis does not impact usages of crypto/ecdsa or crypto/ecdh.",
      "cve": "CVE-2023-24532",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.19.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24532",
          "value": "CVE-2023-24532",
          "url": "https://scout.docker.com/v/CVE-2023-24532?s=golang&n=stdlib&t=golang&vr=%3C1.19.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24532?s=golang&n=stdlib&t=golang&vr=%3C1.19.7"
        }
      ]
    },
    {
      "id": "4a8c2ba2845061820ec736dbb33501c282dd9446cb52dfba3158ba06cd94e639",
      "category": "container_scanning",
      "message": "CVE-2023-24532 on stdlib@1.18.9",
      "description": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve).\n\nThis does not impact usages of crypto/ecdsa or crypto/ecdh.",
      "cve": "CVE-2023-24532",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.19.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24532",
          "value": "CVE-2023-24532",
          "url": "https://scout.docker.com/v/CVE-2023-24532?s=golang&n=stdlib&t=golang&vr=%3C1.19.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24532?s=golang&n=stdlib&t=golang&vr=%3C1.19.7"
        }
      ]
    },
    {
      "id": "121b4d76cb2d91feab98b3850b2364175b02a3a2bd24dd663be96235c984f23a",
      "category": "container_scanning",
      "message": "CVE-2023-25173 on github.com/containerd/containerd@1.5.5",
      "description": "### Impact\n\nA bug was found in containerd where supplementary groups are not set up properly inside a container.  If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container.\n\nDownstream applications that use the containerd client library may be affected as well.\n\n### Patches\nThis bug has been fixed in containerd v1.6.18 and v.1.5.18.  Users should update to these versions and recreate containers to resolve this issue.  Users who rely on a downstream application that uses containerd's client library should check that application for a separate advisory and instructions.\n\n### Workarounds\n\nEnsure that the `\"USER $USERNAME\"` Dockerfile instruction is not used.  Instead, set the container entrypoint to a value similar to `ENTRYPOINT [\"su\", \"-\", \"user\"]` to allow `su` to properly set up supplementary groups.\n\n### References\n\n- https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\n- Docker/Moby: CVE-2022-36109, fixed in Docker 20.10.18\n- CRI-O: CVE-2022-2995, fixed in CRI-O 1.25.0\n- Podman: CVE-2022-2989, fixed in Podman 3.0.1 and 4.2.0\n- Buildah: CVE-2022-2990, fixed in Buildah 1.27.1\n\nNote that CVE IDs apply to a particular implementation, even if an issue is common.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)\n\nTo report a security issue in containerd:\n* [Report a new vulnerability](https://github.com/containerd/containerd/security/advisories/new)\n* Email us at [security@containerd.io](mailto:security@containerd.io)",
      "cve": "CVE-2023-25173",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.5.5 to 1.5.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.5.5"
          },
          "version": "1.5.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-25173",
          "value": "CVE-2023-25173",
          "url": "https://scout.docker.com/v/CVE-2023-25173?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.5.18"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-25173?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.5.18"
        }
      ]
    },
    {
      "id": "a46dac57f0b25a1beb2cce51f6fa849f13c4177db14a21e80275a55da02c550d",
      "category": "container_scanning",
      "message": "CVE-2023-25173 on github.com/containerd/containerd@1.6.6",
      "description": "### Impact\n\nA bug was found in containerd where supplementary groups are not set up properly inside a container.  If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container.\n\nDownstream applications that use the containerd client library may be affected as well.\n\n### Patches\nThis bug has been fixed in containerd v1.6.18 and v.1.5.18.  Users should update to these versions and recreate containers to resolve this issue.  Users who rely on a downstream application that uses containerd's client library should check that application for a separate advisory and instructions.\n\n### Workarounds\n\nEnsure that the `\"USER $USERNAME\"` Dockerfile instruction is not used.  Instead, set the container entrypoint to a value similar to `ENTRYPOINT [\"su\", \"-\", \"user\"]` to allow `su` to properly set up supplementary groups.\n\n### References\n\n- https://www.benthamsgaze.org/2022/08/22/vulnerability-in-linux-containers-investigation-and-mitigation/\n- Docker/Moby: CVE-2022-36109, fixed in Docker 20.10.18\n- CRI-O: CVE-2022-2995, fixed in CRI-O 1.25.0\n- Podman: CVE-2022-2989, fixed in Podman 3.0.1 and 4.2.0\n- Buildah: CVE-2022-2990, fixed in Buildah 1.27.1\n\nNote that CVE IDs apply to a particular implementation, even if an issue is common.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)\n\nTo report a security issue in containerd:\n* [Report a new vulnerability](https://github.com/containerd/containerd/security/advisories/new)\n* Email us at [security@containerd.io](mailto:security@containerd.io)",
      "cve": "CVE-2023-25173",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.6.6 to 1.6.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.6.6"
          },
          "version": "1.6.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-25173",
          "value": "CVE-2023-25173",
          "url": "https://scout.docker.com/v/CVE-2023-25173?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.6.0%2C%3C1.6.18"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-25173?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.6.0%2C%3C1.6.18"
        }
      ]
    },
    {
      "id": "185a73b9b4f187ea9f20d72a5406ad6faa0012772619fc881bacff1cb5c0934d",
      "category": "container_scanning",
      "message": "CVE-2023-27043 on ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8",
      "description": "The email module of Python through 3.11.3 incorrectly parses e-mail addresses that contain a special character. The wrong portion of an RFC2822 header is identified as the value of the addr-spec. In some applications, an attacker can bypass a protection mechanism in which application access is granted only after verifying receipt of e-mail to a specific domain (e.g., only @company.example.com addresses may be used for signup). This occurs in email/_parseaddr.py in recent versions of Python.",
      "cve": "CVE-2023-27043",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8 to 3.8.10-0ubuntu1~20.04.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "3.8.10-0ubuntu1~20.04.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-27043",
          "value": "CVE-2023-27043",
          "url": "https://scout.docker.com/v/CVE-2023-27043?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-27043?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.12"
        }
      ]
    },
    {
      "id": "dbe6672b634302eca521b823ee14d38289368835bcbdaf51b9604480f8b7ea60",
      "category": "container_scanning",
      "message": "CVE-2023-29409 on stdlib@1.18.9",
      "description": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures.\n\nWith fix, the size of RSA keys transmitted during handshakes is restricted to <= 8192 bits.\n\nBased on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
      "cve": "CVE-2023-29409",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.19.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29409",
          "value": "CVE-2023-29409",
          "url": "https://scout.docker.com/v/CVE-2023-29409?s=golang&n=stdlib&t=golang&vr=%3C1.19.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29409?s=golang&n=stdlib&t=golang&vr=%3C1.19.12"
        }
      ]
    },
    {
      "id": "b9cb8a65e34ad647ba7b7a7ce959c60b3f2bfd35db8af9a501fb5e5552da9d08",
      "category": "container_scanning",
      "message": "CVE-2023-29409 on stdlib@1.16.12",
      "description": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures.\n\nWith fix, the size of RSA keys transmitted during handshakes is restricted to <= 8192 bits.\n\nBased on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
      "cve": "CVE-2023-29409",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.19.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29409",
          "value": "CVE-2023-29409",
          "url": "https://scout.docker.com/v/CVE-2023-29409?s=golang&n=stdlib&t=golang&vr=%3C1.19.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29409?s=golang&n=stdlib&t=golang&vr=%3C1.19.12"
        }
      ]
    },
    {
      "id": "aa7d2a9a3cca3a17fd3e6f2022452f09571fc0a021ffc350e4c20546f8c1f9ad",
      "category": "container_scanning",
      "message": "CVE-2023-29409 on stdlib@1.16.10",
      "description": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures.\n\nWith fix, the size of RSA keys transmitted during handshakes is restricted to <= 8192 bits.\n\nBased on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
      "cve": "CVE-2023-29409",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.19.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29409",
          "value": "CVE-2023-29409",
          "url": "https://scout.docker.com/v/CVE-2023-29409?s=golang&n=stdlib&t=golang&vr=%3C1.19.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29409?s=golang&n=stdlib&t=golang&vr=%3C1.19.12"
        }
      ]
    },
    {
      "id": "951bd1d058b636d2852cf41cd539a0439d8b4e91bd0d302113bd9928212f420b",
      "category": "container_scanning",
      "message": "CVE-2023-29409 on stdlib@1.20.6",
      "description": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures.\n\nWith fix, the size of RSA keys transmitted during handshakes is restricted to <= 8192 bits.\n\nBased on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
      "cve": "CVE-2023-29409",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.20.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29409",
          "value": "CVE-2023-29409",
          "url": "https://scout.docker.com/v/CVE-2023-29409?s=golang&n=stdlib&t=golang&vr=%3E%3D1.20.0-0%2C%3C1.20.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29409?s=golang&n=stdlib&t=golang&vr=%3E%3D1.20.0-0%2C%3C1.20.7"
        }
      ]
    },
    {
      "id": "68eafd64a0007b5863ff4c0a1e2d148687c294ea3cbca15f0307ed58fa2ef75e",
      "category": "container_scanning",
      "message": "CVE-2023-33201 on org.bouncycastle/bcprov-jdk15on@1.69",
      "description": "Bouncy Castle provides the `X509LDAPCertStoreSpi.java` class which can be used in conjunction with the CertPath API for validating certificate paths. Pre-1.73 the implementation did not check the X.500 name of any certificate, subject, or issuer being passed in for LDAP wild cards, meaning the presence of a wild car may lead to Information Disclosure.\n\nA potential attack would be to generate a self-signed certificate with a subject name that contains special characters, e.g: `CN=Subject*)(objectclass=`. This will be included into the filter and provides the attacker ability to specify additional attributes in the search query. This can be exploited as a blind LDAP injection: an attacker can enumerate valid attribute values using the boolean blind injection technique. The exploitation depends on the structure of the target LDAP directory, as well as what kind of errors are exposed to the user.\n\nChanges to the `X509LDAPCertStoreSpi.java` class add the additional checking of any X.500 name used to correctly escape wild card characters.",
      "cve": "CVE-2023-33201",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.bouncycastle/bcprov-jdk15on@1.69"
          },
          "version": "1.69"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-33201",
          "value": "CVE-2023-33201",
          "url": "https://scout.docker.com/v/CVE-2023-33201?s=github&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3E%3D1.49%2C%3C%3D1.70"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-33201?s=github&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3E%3D1.49%2C%3C%3D1.70"
        }
      ]
    },
    {
      "id": "c9357ab5ad60a99c8ed1cce57a71590044a56fea96e115dd9e8da5674df2c686",
      "category": "container_scanning",
      "message": "CVE-2023-39326 on stdlib@1.16.10",
      "description": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body.\n\nA malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request.\n\nChunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
      "cve": "CVE-2023-39326",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.20.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39326",
          "value": "CVE-2023-39326",
          "url": "https://scout.docker.com/v/CVE-2023-39326?s=golang&n=stdlib&t=golang&vr=%3C1.20.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39326?s=golang&n=stdlib&t=golang&vr=%3C1.20.12"
        }
      ]
    },
    {
      "id": "5b52dfe9dff71708839473631a32927f909830596975ce865f92cfad8f954bc5",
      "category": "container_scanning",
      "message": "CVE-2023-39326 on stdlib@1.18.9",
      "description": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body.\n\nA malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request.\n\nChunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
      "cve": "CVE-2023-39326",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.20.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39326",
          "value": "CVE-2023-39326",
          "url": "https://scout.docker.com/v/CVE-2023-39326?s=golang&n=stdlib&t=golang&vr=%3C1.20.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39326?s=golang&n=stdlib&t=golang&vr=%3C1.20.12"
        }
      ]
    },
    {
      "id": "5977ff6d894c55eee876d25991a30eb2d4ea801c6082dfd784293cdcffd2f756",
      "category": "container_scanning",
      "message": "CVE-2023-39326 on stdlib@1.20.6",
      "description": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body.\n\nA malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request.\n\nChunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
      "cve": "CVE-2023-39326",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.20.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39326",
          "value": "CVE-2023-39326",
          "url": "https://scout.docker.com/v/CVE-2023-39326?s=golang&n=stdlib&t=golang&vr=%3C1.20.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39326?s=golang&n=stdlib&t=golang&vr=%3C1.20.12"
        }
      ]
    },
    {
      "id": "b73abfc70af2fc6f1dc0a7e2ceae3a600f748c292abcabc05d5e42e737d5b200",
      "category": "container_scanning",
      "message": "CVE-2023-39326 on stdlib@1.16.12",
      "description": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body.\n\nA malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request.\n\nChunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
      "cve": "CVE-2023-39326",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.20.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39326",
          "value": "CVE-2023-39326",
          "url": "https://scout.docker.com/v/CVE-2023-39326?s=golang&n=stdlib&t=golang&vr=%3C1.20.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39326?s=golang&n=stdlib&t=golang&vr=%3C1.20.12"
        }
      ]
    },
    {
      "id": "0fa4eeb80d37d8522449f920ea850e4113bfde96b03d05c6fb7d0f4c070711a9",
      "category": "container_scanning",
      "message": "CVE-2023-40217 on ubuntu/python2.7@2.7.18-1~20.04.3",
      "description": "An issue was discovered in Python before 3.8.18, 3.9.x before 3.9.18, 3.10.x before 3.10.13, and 3.11.x before 3.11.5. It primarily affects servers (such as HTTP servers) that use TLS client authentication. If a TLS server-side socket is created, receives data into the socket buffer, and then is closed quickly, there is a brief window where the SSLSocket instance will detect the socket as \"not connected\" and won't initiate a handshake, but buffered data will still be readable from the socket buffer. This data will not be authenticated if the server-side TLS peer is expecting client certificate authentication, and is indistinguishable from valid TLS stream data. Data is limited in size to the amount that will fit in the buffer. (The TLS connection cannot directly be used for data exfiltration because the vulnerable code path requires that the connection be closed on initialization of the SSLSocket.)",
      "cve": "CVE-2023-40217",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python2.7@2.7.18-1~20.04.3 to 2.7.18-1~20.04.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python2.7@2.7.18-1~20.04.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.7.18-1~20.04.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-40217",
          "value": "CVE-2023-40217",
          "url": "https://scout.docker.com/v/CVE-2023-40217?s=ubuntu&n=python2.7&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.7.18-1%7E20.04.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-40217?s=ubuntu&n=python2.7&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.7.18-1%7E20.04.7"
        }
      ]
    },
    {
      "id": "67c133151510d19c169d71c48739e153220fc9c76ca903626f0709bd0385ef8f",
      "category": "container_scanning",
      "message": "CVE-2023-40217 on ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8",
      "description": "An issue was discovered in Python before 3.8.18, 3.9.x before 3.9.18, 3.10.x before 3.10.13, and 3.11.x before 3.11.5. It primarily affects servers (such as HTTP servers) that use TLS client authentication. If a TLS server-side socket is created, receives data into the socket buffer, and then is closed quickly, there is a brief window where the SSLSocket instance will detect the socket as \"not connected\" and won't initiate a handshake, but buffered data will still be readable from the socket buffer. This data will not be authenticated if the server-side TLS peer is expecting client certificate authentication, and is indistinguishable from valid TLS stream data. Data is limited in size to the amount that will fit in the buffer. (The TLS connection cannot directly be used for data exfiltration because the vulnerable code path requires that the connection be closed on initialization of the SSLSocket.)",
      "cve": "CVE-2023-40217",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8 to 3.8.10-0ubuntu1~20.04.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "3.8.10-0ubuntu1~20.04.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-40217",
          "value": "CVE-2023-40217",
          "url": "https://scout.docker.com/v/CVE-2023-40217?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-40217?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.9"
        }
      ]
    },
    {
      "id": "fa0ba222ad0c1fa411c5205b052132d1805ae42225d8309f910fa2e517f9ba90",
      "category": "container_scanning",
      "message": "CVE-2023-45284 on stdlib@1.18.9",
      "description": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases.\n\nReserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local.\n\nWith fix, IsLocal now correctly reports these names as non-local.",
      "cve": "CVE-2023-45284",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.20.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45284",
          "value": "CVE-2023-45284",
          "url": "https://scout.docker.com/v/CVE-2023-45284?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45284?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ]
    },
    {
      "id": "bf6bd8dd51cf5534df37591c5244b7b697b2f7f54c72c4787c089bf9b4ff68dd",
      "category": "container_scanning",
      "message": "CVE-2023-45284 on stdlib@1.16.10",
      "description": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases.\n\nReserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local.\n\nWith fix, IsLocal now correctly reports these names as non-local.",
      "cve": "CVE-2023-45284",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.20.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45284",
          "value": "CVE-2023-45284",
          "url": "https://scout.docker.com/v/CVE-2023-45284?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45284?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ]
    },
    {
      "id": "e96a080a7fec04fedcb1bc1450ead25efde2a112648b7355ae14599da38d05e6",
      "category": "container_scanning",
      "message": "CVE-2023-45284 on stdlib@1.20.6",
      "description": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases.\n\nReserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local.\n\nWith fix, IsLocal now correctly reports these names as non-local.",
      "cve": "CVE-2023-45284",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.20.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45284",
          "value": "CVE-2023-45284",
          "url": "https://scout.docker.com/v/CVE-2023-45284?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45284?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ]
    },
    {
      "id": "5873a9c65f9d43f377e6dfc47134211938d0213b2b19bbfcdff352105965f5df",
      "category": "container_scanning",
      "message": "CVE-2023-45284 on stdlib@1.16.12",
      "description": "On Windows, The IsLocal function does not correctly detect reserved device names in some cases.\n\nReserved names followed by spaces, such as \"COM1 \", and reserved names \"COM\" and \"LPT\" followed by superscript 1, 2, or 3, are incorrectly reported as local.\n\nWith fix, IsLocal now correctly reports these names as non-local.",
      "cve": "CVE-2023-45284",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.20.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45284",
          "value": "CVE-2023-45284",
          "url": "https://scout.docker.com/v/CVE-2023-45284?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45284?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ]
    },
    {
      "id": "85c53029a52592aab0a57493639e876d52fac73fc12891911e74e0b9247865ef",
      "category": "container_scanning",
      "message": "CVE-2023-45288 on golang.org/x/net@0.10.0",
      "description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
      "cve": "CVE-2023-45288",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.10.0 to 0.23.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.10.0"
          },
          "version": "0.10.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45288",
          "value": "CVE-2023-45288",
          "url": "https://scout.docker.com/v/CVE-2023-45288?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.23.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45288?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.23.0"
        }
      ]
    },
    {
      "id": "f54dd1a0034d2c14e5d317bef3f00614f786672b183f6b4dad027d95d2aaa847",
      "category": "container_scanning",
      "message": "CVE-2023-6918 on ubuntu/libssh@0.9.3-2ubuntu2.3",
      "description": "A flaw was found in the libssh implements abstract layer for message digest (MD) operations implemented by different supported crypto backends. The return values from these were not properly checked, which could cause low-memory situations failures, NULL dereferences, crashes, or usage of the uninitialized memory as an input for the KDF. In this case, non-matching keys will result in decryption/integrity failures, terminating the connection.",
      "cve": "CVE-2023-6918",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libssh@0.9.3-2ubuntu2.3 to 0.9.3-2ubuntu2.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libssh@0.9.3-2ubuntu2.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "0.9.3-2ubuntu2.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-6918",
          "value": "CVE-2023-6918",
          "url": "https://scout.docker.com/v/CVE-2023-6918?s=ubuntu&n=libssh&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C0.9.3-2ubuntu2.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-6918?s=ubuntu&n=libssh&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C0.9.3-2ubuntu2.5"
        }
      ]
    },
    {
      "id": "01a82bebb1bd607cd4c181a4f044f4997b8f7b91a90c6caf3174fb9050726b96",
      "category": "container_scanning",
      "message": "CVE-2024-23650 on github.com/moby/buildkit@0.9.1-0.20211019185819-8778943ac3da",
      "description": "### Impact\nA malicious BuildKit client or frontend could craft a request that could lead to BuildKit daemon crashing with a panic.\n\n### Patches\nThe issue has been fixed in v0.12.5\n\n### Workarounds\nAvoid using BuildKit frontends from untrusted sources. A frontend image is usually specified as the `#syntax` line on your Dockerfile, or with `--frontend` flag when using `buildctl build` command. \n\n### References\n\n",
      "cve": "CVE-2024-23650",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/moby/buildkit@0.9.1-0.20211019185819-8778943ac3da to 0.12.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/moby/buildkit@0.9.1-0.20211019185819-8778943ac3da"
          },
          "version": "0.9.1-0.20211019185819-8778943ac3da"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-23650",
          "value": "CVE-2024-23650",
          "url": "https://scout.docker.com/v/CVE-2024-23650?s=github&n=buildkit&ns=github.com%2Fmoby&t=golang&vr=%3C0.12.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-23650?s=github&n=buildkit&ns=github.com%2Fmoby&t=golang&vr=%3C0.12.5"
        }
      ]
    },
    {
      "id": "a7357f7e5153d35850c9c767cc96fc23670f5fdd152cb5198f065f4c355932fc",
      "category": "container_scanning",
      "message": "CVE-2024-29025 on io.netty/netty-codec-http@4.1.73.Final",
      "description": "### Summary\nThe `HttpPostRequestDecoder` can be tricked to accumulate data. I have spotted currently two attack vectors \n\n### Details\n1. While the decoder can store items on the disk if configured so, there are no limits to the number of fields the form can have, an attacher can send a chunked post consisting of many small fields that will be accumulated in the `bodyListHttpData` list.\n2. The decoder cumulates bytes in the `undecodedChunk` buffer until it can decode a field, this field can cumulate data without limits\n\n### PoC\n\nHere is a Netty branch that provides a fix + tests : https://github.com/vietj/netty/tree/post-request-decoder\n\n\nHere is a reproducer with Vert.x (which uses this decoder) https://gist.github.com/vietj/f558b8ea81ec6505f1e9a6ca283c9ae3\n\n### Impact\nAny Netty based HTTP server that uses the `HttpPostRequestDecoder` to decode a form.",
      "cve": "CVE-2024-29025",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-codec-http@4.1.73.Final to 4.1.108.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-codec-http@4.1.73.Final"
          },
          "version": "4.1.73.Final"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-29025",
          "value": "CVE-2024-29025",
          "url": "https://scout.docker.com/v/CVE-2024-29025?s=github&n=netty-codec-http&ns=io.netty&t=maven&vr=%3C4.1.108.Final"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-29025?s=github&n=netty-codec-http&ns=io.netty&t=maven&vr=%3C4.1.108.Final"
        }
      ]
    },
    {
      "id": "80746e6620289d38a9a1f8a75bdbd99bfec0cad62f0f0af1e8700d64a6be3947",
      "category": "container_scanning",
      "message": "CVE-2024-29857 on org.bouncycastle/bcprov-jdk15on@1.69",
      "description": "An issue was discovered in ECCurve.java and ECCurve.cs in Bouncy Castle Java (BC Java) before 1.78, BC Java LTS before 2.73.6, BC-FJA before 1.0.2.5, and BC C# .Net before 2.3.1. Importing an EC certificate with crafted F2m parameters can lead to excessive CPU consumption during the evaluation of the curve parameters.",
      "cve": "CVE-2024-29857",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.bouncycastle/bcprov-jdk15on@1.69 to 1.78",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.bouncycastle/bcprov-jdk15on@1.69"
          },
          "version": "1.69"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-29857",
          "value": "CVE-2024-29857",
          "url": "https://scout.docker.com/v/CVE-2024-29857?s=github&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3C1.78"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-29857?s=github&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3C1.78"
        }
      ]
    },
    {
      "id": "83f196f33f9fdb1eb7007b79b9445e200f0adf95fad89962f03e34917f5f2e6d",
      "category": "container_scanning",
      "message": "CVE-2024-30172 on org.bouncycastle/bcprov-jdk15on@1.69",
      "description": "An issue was discovered in Bouncy Castle Java Cryptography APIs before 1.78. An Ed25519 verification code infinite loop can occur via a crafted signature and public key.",
      "cve": "CVE-2024-30172",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.bouncycastle/bcprov-jdk15on@1.69 to 1.78",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.bouncycastle/bcprov-jdk15on@1.69"
          },
          "version": "1.69"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-30172",
          "value": "CVE-2024-30172",
          "url": "https://scout.docker.com/v/CVE-2024-30172?s=gitlab&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3C1.78"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-30172?s=gitlab&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3C1.78"
        }
      ]
    },
    {
      "id": "9bfc8d7d0c8cde100786d67e0c006fd0124fe3da28577d33efa6c4195f35134e",
      "category": "container_scanning",
      "message": "CVE-2024-45338 on golang.org/x/net@0.10.0",
      "description": "An attacker can craft an input to the Parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This could cause a denial of service.",
      "cve": "CVE-2024-45338",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.10.0 to 0.33.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.10.0"
          },
          "version": "0.10.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45338",
          "value": "CVE-2024-45338",
          "url": "https://scout.docker.com/v/CVE-2024-45338?s=golang&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.33.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45338?s=golang&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.33.0"
        }
      ]
    },
    {
      "id": "261b287e5f37e91e94e954c94738293790c6e715af61a17bc8b701e57f56839b",
      "category": "container_scanning",
      "message": "CVE-2024-47081 on requests@2.22.0",
      "description": "### Impact\n\nDue to a URL parsing issue, Requests releases prior to 2.32.4 may leak .netrc credentials to third parties for specific maliciously-crafted URLs.\n\n### Workarounds\nFor older versions of Requests, use of the .netrc file can be disabled with `trust_env=False` on your Requests Session ([docs](https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env)).\n\n### References\nhttps://github.com/psf/requests/pull/6965\nhttps://seclists.org/fulldisclosure/2025/Jun/2",
      "cve": "CVE-2024-47081",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade requests@2.22.0 to 2.32.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/requests@2.22.0"
          },
          "version": "2.22.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47081",
          "value": "CVE-2024-47081",
          "url": "https://scout.docker.com/v/CVE-2024-47081?s=github&n=requests&t=pypi&vr=%3C2.32.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47081?s=github&n=requests&t=pypi&vr=%3C2.32.4"
        }
      ]
    },
    {
      "id": "45c34d3426bb5cc1033de388df3c17b7f55063b091e1101568221ff634f531fc",
      "category": "container_scanning",
      "message": "CVE-2025-22872 on golang.org/x/net@0.10.0",
      "description": "The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. <math>, <svg>, etc contexts).",
      "cve": "CVE-2025-22872",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.10.0 to 0.38.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.10.0"
          },
          "version": "0.10.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22872",
          "value": "CVE-2025-22872",
          "url": "https://scout.docker.com/v/CVE-2025-22872?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.38.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22872?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.38.0"
        }
      ]
    },
    {
      "id": "efe844797b2f6354efeb7f43123742ae0d57d15a499a04ac9b5bd3abb8f1bd0b",
      "category": "container_scanning",
      "message": "CVE-2025-50181 on urllib3@1.25.8",
      "description": "urllib3 handles redirects and retries using the same mechanism, which is controlled by the `Retry` object. The most common way to disable redirects is at the request level, as follows:\n\n```python\nresp = urllib3.request(\"GET\", \"https://httpbin.org/redirect/1\", redirect=False)\nprint(resp.status)\n# 302\n```\n\nHowever, it is also possible to disable redirects, for all requests, by instantiating a `PoolManager` and specifying `retries` in a way that disable redirects:\n\n```python\nimport urllib3\n\nhttp = urllib3.PoolManager(retries=0)  # should raise MaxRetryError on redirect\nhttp = urllib3.PoolManager(retries=urllib3.Retry(redirect=0))  # equivalent to the above\nhttp = urllib3.PoolManager(retries=False)  # should return the first response\n\nresp = http.request(\"GET\", \"https://httpbin.org/redirect/1\")\n```\n\nHowever, the `retries` parameter is currently ignored, which means all the above examples don't disable redirects.\n\n## Affected usages\n\nPassing `retries` on `PoolManager` instantiation to disable redirects or restrict their number.\n\nBy default, requests and botocore users are not affected.\n\n## Impact\n\nRedirects are often used to exploit SSRF vulnerabilities. An application attempting to mitigate SSRF or open redirect vulnerabilities by disabling redirects at the PoolManager level will remain vulnerable.\n\n## Remediation\n\nYou can remediate this vulnerability with the following steps:\n\n * Upgrade to a patched version of urllib3. If your organization would benefit from the continued support of urllib3 1.x, please contact [sethmichaellarson@gmail.com](mailto:sethmichaellarson@gmail.com) to discuss sponsorship or contribution opportunities.\n * Disable redirects at the `request()` level instead of the `PoolManager()` level.",
      "cve": "CVE-2025-50181",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade urllib3@1.25.8 to 2.5.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/urllib3@1.25.8"
          },
          "version": "1.25.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-50181",
          "value": "CVE-2025-50181",
          "url": "https://scout.docker.com/v/CVE-2025-50181?s=github&n=urllib3&t=pypi&vr=%3C2.5.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-50181?s=github&n=urllib3&t=pypi&vr=%3C2.5.0"
        }
      ]
    },
    {
      "id": "17ad6b03296a2c80f50d8bafb40309553481bc3cb33f12575560b0d29bd586db",
      "category": "container_scanning",
      "message": "CVE-2021-41092 on github.com/docker/cli@20.10.3-0.20210702143511-f782d1355eff+incompatible",
      "description": "## Impact\n\nA bug was found in the Docker CLI where running `docker login my-private-registry.example.com` with a misconfigured configuration file (typically `~/.docker/config.json`) listing a `credsStore` or `credHelpers` that could not be executed would result in any provided credentials being sent to `registry-1.docker.io` rather than the intended private registry.\n\n## Patches\n\nThis bug has been fixed in Docker CLI 20.10.9.  Users should update to this version as soon as possible.\n\n## Workarounds\n\nEnsure that any configured `credsStore` or `credHelpers` entries in the configuration file reference an installed credential helper that is executable and on the `PATH`.\n\n## For more information\n\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/docker/cli/issues/new/choose)\n* Email us at security@docker.com if you think you’ve found a security bug",
      "cve": "CVE-2021-41092",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/docker/cli@20.10.3-0.20210702143511-f782d1355eff+incompatible to 20.10.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/cli@20.10.3-0.20210702143511-f782d1355eff%2Bincompatible"
          },
          "version": "20.10.3-0.20210702143511-f782d1355eff+incompatible"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-41092",
          "value": "CVE-2021-41092",
          "url": "https://scout.docker.com/v/CVE-2021-41092?s=github&n=cli&ns=github.com%2Fdocker&t=golang&vr=%3C20.10.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-41092?s=github&n=cli&ns=github.com%2Fdocker&t=golang&vr=%3C20.10.9"
        }
      ]
    },
    {
      "id": "efbe0368ea6ffac3c1cd2943beec4eac7bffec52e43ec8261a0bc2a8eaf03464",
      "category": "container_scanning",
      "message": "CVE-2024-24785 on stdlib@1.16.10",
      "description": "If errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates.",
      "cve": "CVE-2024-24785",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24785",
          "value": "CVE-2024-24785",
          "url": "https://scout.docker.com/v/CVE-2024-24785?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24785?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "567a9e465bb87628d6ead4ed4cf265ecc39777200a2960a6310367e078a73918",
      "category": "container_scanning",
      "message": "CVE-2024-24785 on stdlib@1.16.12",
      "description": "If errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates.",
      "cve": "CVE-2024-24785",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24785",
          "value": "CVE-2024-24785",
          "url": "https://scout.docker.com/v/CVE-2024-24785?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24785?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "f3c76eb6726a340757cce43e8fc858fefb5bb726183c99f302dcbbdbcbc4fdd5",
      "category": "container_scanning",
      "message": "CVE-2024-24785 on stdlib@1.18.9",
      "description": "If errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates.",
      "cve": "CVE-2024-24785",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24785",
          "value": "CVE-2024-24785",
          "url": "https://scout.docker.com/v/CVE-2024-24785?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24785?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "3651b30de07c6d5c75e9db58c32929eb4d8c9e6f4dc6e1f5c185be86498b3abc",
      "category": "container_scanning",
      "message": "CVE-2024-24785 on stdlib@1.20.6",
      "description": "If errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates.",
      "cve": "CVE-2024-24785",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24785",
          "value": "CVE-2024-24785",
          "url": "https://scout.docker.com/v/CVE-2024-24785?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24785?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "6a5d0abb393f8abd1c5bcc1a559761df2f3e69cbf6d351ee88d36ee5f9d85898",
      "category": "container_scanning",
      "message": "CVE-2024-47535 on io.netty/netty-common@4.1.73.Final",
      "description": "### Summary\n\nAn unsafe reading of environment file could potentially cause a denial of service in Netty.\nWhen loaded on an Windows application, Netty attemps to load a file that does not exist. If an attacker creates such a large file, the Netty application crash.\n\n\n### Details\n\nWhen the library netty is loaded in a java windows application, the library tries to identify the system environnement in which it is executed.\n\nAt this stage, Netty tries to load both `/etc/os-release` and `/usr/lib/os-release` even though it is in a Windows environment. \n\n<img width=\"364\" alt=\"1\" src=\"https://github.com/user-attachments/assets/9466b181-9394-45a3-b0e3-1dcf105def59\">\n\nIf netty finds this files, it reads them and loads them into memory.\n\nBy default :\n\n- The JVM maximum memory size is set to 1 GB,\n- A non-privileged user can create a directory at `C:\\` and create files within it.\n\n<img width=\"340\" alt=\"2\" src=\"https://github.com/user-attachments/assets/43b359a2-5871-4592-ae2b-ffc40ac76831\">\n\n<img width=\"523\" alt=\"3\" src=\"https://github.com/user-attachments/assets/ad5c6eed-451c-4513-92d5-ba0eee7715c1\">\n\nthe source code identified :\nhttps://github.com/netty/netty/blob/4.1/common/src/main/java/io/netty/util/internal/PlatformDependent.java\n\nDespite the implementation of the function `normalizeOs()` the source code not verify the OS before reading `C:\\etc\\os-release` and `C:\\usr\\lib\\os-release`.\n\n### PoC\n\nCreate a file larger than 1 GB of data in `C:\\etc\\os-release` or `C:\\usr\\lib\\os-release` on a Windows environnement and start your Netty application.\n\nTo observe what the application does with the file, the security analyst used \"Process Monitor\" from the \"Windows SysInternals\" suite. (https://learn.microsoft.com/en-us/sysinternals/)\n\n```\ncd C:\\etc\nfsutil file createnew os-release 3000000000\n```\n\n<img width=\"519\" alt=\"4\" src=\"https://github.com/user-attachments/assets/39df22a3-462b-4fd0-af9a-aa30077ec08f\">\n\n<img width=\"517\" alt=\"5\" src=\"https://github.com/user-attachments/assets/129dbd50-fc36-4da5-8eb1-582123fb528f\">\n\nThe source code used is the Netty website code example : [Echo ‐ the very basic client and server](https://netty.io/4.1/xref/io/netty/example/echo/package-summary.html).\n\nThe vulnerability was tested on the 4.1.112.Final version.\n\nThe security analyst tried the same technique for `C:\\proc\\sys\\net\\core\\somaxconn` with a lot of values to impact Netty but the only things that works is the \"larger than 1 GB file\" technique. https://github.com/netty/netty/blob/c0fdb8e9f8f256990e902fcfffbbe10754d0f3dd/common/src/main/java/io/netty/util/NetUtil.java#L186\n\n### Impact\n\nBy loading the \"file larger than 1 GB\" into the memory, the Netty library exceeds the JVM memory limit and causes a crash in the java Windows application.\n\nThis behaviour occurs 100% of the time in both Server mode and Client mode if the large file exists.\n\nClient mode :\n\n<img width=\"449\" alt=\"6\" src=\"https://github.com/user-attachments/assets/f8fe1ed0-1a42-4490-b9ed-dbc9af7804be\">\n\nServer mode :\n\n<img width=\"464\" alt=\"7\" src=\"https://github.com/user-attachments/assets/b34b42bd-4fbd-4170-b93a-d29ba87b88eb\">\n\nsomaxconn :\n\n<img width=\"532\" alt=\"8\" src=\"https://github.com/user-attachments/assets/0656b3bb-32c6-4ae2-bff7-d93babba08a3\">\n\n### Severity\n\n- Attack vector : \"Local\" because the attacker needs to be on the system where the Netty application is running.\n- Attack complexity : \"Low\" because the attacker only need to create a massive file (regardless of its contents).\n- Privileges required : \"Low\" because the attacker requires a user account to exploit the vulnerability.\n- User intercation : \"None\" because the administrator don't need to accidentally click anywhere to trigger the vulnerability. Furthermore, the exploitation works with defaults windows/AD settings.\n- Scope : \"Unchanged\" because only Netty is affected by the vulnerability.\n- Confidentiality : \"None\" because no data is exposed through exploiting the vulnerability.\n- Integrity : \"None\" because the explotation of the vulnerability does not allow editing, deleting or adding data elsewhere.\n- Availability : \"High\" because the exploitation of this vulnerability crashes the entire java application.",
      "cve": "CVE-2024-47535",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-common@4.1.73.Final to 4.1.115.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-common@4.1.73.Final"
          },
          "version": "4.1.73.Final"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47535",
          "value": "CVE-2024-47535",
          "url": "https://scout.docker.com/v/CVE-2024-47535?s=github&n=netty-common&ns=io.netty&t=maven&vr=%3C%3D4.1.114.Final"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47535?s=github&n=netty-common&ns=io.netty&t=maven&vr=%3C%3D4.1.114.Final"
        }
      ]
    },
    {
      "id": "d8cdce59a8e042476ec975d1bdf5daab6bafa3b938d0ccb39ea0f72a022769e1",
      "category": "container_scanning",
      "message": "CVE-2020-21047 on ubuntu/elfutils@0.176-1.1build1",
      "description": "The libcpu component which is used by libasm of elfutils version 0.177 (git 47780c9e), suffers from denial-of-service vulnerability caused by application crashes due to out-of-bounds write (CWE-787), off-by-one error (CWE-193) and reachable assertion (CWE-617); to exploit the vulnerability, the attackers need to craft certain ELF files which bypass the missing bound checks.",
      "cve": "CVE-2020-21047",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/elfutils@0.176-1.1build1 to 0.176-1.1ubuntu0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/elfutils@0.176-1.1build1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "0.176-1.1build1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-21047",
          "value": "CVE-2020-21047",
          "url": "https://scout.docker.com/v/CVE-2020-21047?s=ubuntu&n=elfutils&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C0.176-1.1ubuntu0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-21047?s=ubuntu&n=elfutils&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C0.176-1.1ubuntu0.1"
        }
      ]
    },
    {
      "id": "6a495561695d8b4809475fb03a68fbe498c64b568e4da21cd68ea1548afda48e",
      "category": "container_scanning",
      "message": "CVE-2021-22570 on com.google.protobuf/protobuf-java@3.5.1",
      "description": "Nullptr dereference when a null char is present in a proto symbol. The symbol is parsed incorrectly, leading to an unchecked call into the proto file's name during generation of the resulting error message. Since the symbol is incorrectly parsed, the file is nullptr.",
      "cve": "CVE-2021-22570",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade com.google.protobuf/protobuf-java@3.5.1 to 3.15.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.google.protobuf/protobuf-java@3.5.1"
          },
          "version": "3.5.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-22570",
          "value": "CVE-2021-22570",
          "url": "https://scout.docker.com/v/CVE-2021-22570?s=gitlab&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3C3.15.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-22570?s=gitlab&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3C3.15.0"
        }
      ]
    },
    {
      "id": "0095f56ad0093b7f9906998b56c1ba920bef005c35333fb9194645ec31451f0d",
      "category": "container_scanning",
      "message": "CVE-2021-36373 on org.apache.ant/ant@1.7.1",
      "description": "When reading a specially crafted TAR archive an Apache Ant build can be made to allocate large amounts of memory that finally leads to an out of memory error, even for small inputs. This can be used to disrupt builds using Apache Ant. Apache Ant prior to 1.9.16 and 1.10.11 were affected.",
      "cve": "CVE-2021-36373",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.ant/ant@1.7.1 to 1.9.16",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.ant/ant@1.7.1"
          },
          "version": "1.7.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-36373",
          "value": "CVE-2021-36373",
          "url": "https://scout.docker.com/v/CVE-2021-36373?s=github&n=ant&ns=org.apache.ant&t=maven&vr=%3C1.9.16"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-36373?s=github&n=ant&ns=org.apache.ant&t=maven&vr=%3C1.9.16"
        }
      ]
    },
    {
      "id": "bbe86ae3cfbd7bec1095286513aa94d81b8e50b197fbbb7d49ab78ba82bdaacd",
      "category": "container_scanning",
      "message": "CVE-2021-36373 on org.apache.ant/ant@1.9.9",
      "description": "When reading a specially crafted TAR archive an Apache Ant build can be made to allocate large amounts of memory that finally leads to an out of memory error, even for small inputs. This can be used to disrupt builds using Apache Ant. Apache Ant prior to 1.9.16 and 1.10.11 were affected.",
      "cve": "CVE-2021-36373",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.ant/ant@1.9.9 to 1.9.16",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.ant/ant@1.9.9"
          },
          "version": "1.9.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-36373",
          "value": "CVE-2021-36373",
          "url": "https://scout.docker.com/v/CVE-2021-36373?s=github&n=ant&ns=org.apache.ant&t=maven&vr=%3C1.9.16"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-36373?s=github&n=ant&ns=org.apache.ant&t=maven&vr=%3C1.9.16"
        }
      ]
    },
    {
      "id": "d5bce958b41bd8a93baa3a649548f8a200a4311daa78408ba8bf0d0ece4f8404",
      "category": "container_scanning",
      "message": "CVE-2021-36374 on org.apache.ant/ant@1.9.9",
      "description": "When reading a specially crafted ZIP archive, or a derived formats, an Apache Ant build can be made to allocate large amounts of memory that leads to an out of memory error, even for small inputs. This can be used to disrupt builds using Apache Ant. Commonly used derived formats from ZIP archives are for instance JAR files and many office files. Apache Ant prior to 1.9.16 and 1.10.11 were affected.",
      "cve": "CVE-2021-36374",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.ant/ant@1.9.9 to 1.9.16",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.ant/ant@1.9.9"
          },
          "version": "1.9.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-36374",
          "value": "CVE-2021-36374",
          "url": "https://scout.docker.com/v/CVE-2021-36374?s=github&n=ant&ns=org.apache.ant&t=maven&vr=%3E%3D1.9.0%2C%3C1.9.16"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-36374?s=github&n=ant&ns=org.apache.ant&t=maven&vr=%3E%3D1.9.0%2C%3C1.9.16"
        }
      ]
    },
    {
      "id": "c3397b4f52d5a5e1450097c478c17cdfbeb970582ecbda159183b2f28ea33cab",
      "category": "container_scanning",
      "message": "CVE-2022-1962 on stdlib@1.16.10",
      "description": "Calling any of the Parse functions on Go source code which contains deeply nested types or declarations can cause a panic due to stack exhaustion.",
      "cve": "CVE-2022-1962",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.17.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-1962",
          "value": "CVE-2022-1962",
          "url": "https://scout.docker.com/v/CVE-2022-1962?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-1962?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ]
    },
    {
      "id": "6b20e7e11baa44fce756119427c152397294804d66509951fb595caa2d3abd59",
      "category": "container_scanning",
      "message": "CVE-2022-1962 on stdlib@1.16.12",
      "description": "Calling any of the Parse functions on Go source code which contains deeply nested types or declarations can cause a panic due to stack exhaustion.",
      "cve": "CVE-2022-1962",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.17.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-1962",
          "value": "CVE-2022-1962",
          "url": "https://scout.docker.com/v/CVE-2022-1962?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-1962?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ]
    },
    {
      "id": "e2a8d7de42bf4b93168e3e95d5336d1d4f544b741c12fa80161d84658fd111a1",
      "category": "container_scanning",
      "message": "CVE-2022-24823 on io.netty/netty-codec-http@4.1.73.Final",
      "description": "### Description ###\n[GHSA-5mcr-gq6c-3hq2](https://github.com/netty/netty/security/advisories/GHSA-5mcr-gq6c-3hq2) (CVE-2021-21290) contains an insufficient fix for the vulnerability identified.\n\n### Impact ###\n\nWhen netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled.\n\nThis only impacts applications running on Java version 6 and lower. Additionally, this vulnerability impacts code running on Unix-like systems, and very old versions of Mac OSX and Windows as they all share the system temporary directory between all users.\n\n### Vulnerability Details ###\n\nTo fix the vulnerability the code was changed to the following:\n\n```java\n    @SuppressJava6Requirement(reason = \"Guarded by version check\")\n    public static File createTempFile(String prefix, String suffix, File directory) throws IOException {\n        if (javaVersion() >= 7) {\n            if (directory == null) {\n                return Files.createTempFile(prefix, suffix).toFile();\n            }\n            return Files.createTempFile(directory.toPath(), prefix, suffix).toFile();\n        }\n        if (directory == null) {\n            return File.createTempFile(prefix, suffix);\n        }\n        File file = File.createTempFile(prefix, suffix, directory);\n        // Try to adjust the perms, if this fails there is not much else we can do...\n        file.setReadable(false, false);\n        file.setReadable(true, true);\n        return file;\n    }\n```\n\nUnfortunately, this logic path was left vulnerable:\n\n```java\n        if (directory == null) {\n            return File.createTempFile(prefix, suffix);\n        }\n```\n\nThis file is still readable by all local users.\n\n### Patches ###\n\nUpdate to 4.1.77.Final\n\n### Workarounds ###\n\nSpecify your own `java.io.tmpdir` when you start the JVM or use `DefaultHttpDataFactory.setBaseDir(...)` to set the directory to something that is only readable by the current user or update to Java 7 or above.\n\n### References ###\n\n - [CWE-378: Creation of Temporary File With Insecure Permissions](https://cwe.mitre.org/data/definitions/378.html)\n - [CWE-379: Creation of Temporary File in Directory with Insecure Permissions](https://cwe.mitre.org/data/definitions/379.html)\n\n\n### For more information ###\n\nIf you have any questions or comments about this advisory:\n\nOpen an issue in [netty](https://github.com/netty/netty)\n",
      "cve": "CVE-2022-24823",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-codec-http@4.1.73.Final to 4.1.77.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-codec-http@4.1.73.Final"
          },
          "version": "4.1.73.Final"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-24823",
          "value": "CVE-2022-24823",
          "url": "https://scout.docker.com/v/CVE-2022-24823?s=github&n=netty-codec-http&ns=io.netty&t=maven&vr=%3C%3D4.1.76.Final"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-24823?s=github&n=netty-codec-http&ns=io.netty&t=maven&vr=%3C%3D4.1.76.Final"
        }
      ]
    },
    {
      "id": "8e4504f055ef67224da5e50e582ec7007380c8d11e9c44b3c4cf7a46c003a2d2",
      "category": "container_scanning",
      "message": "CVE-2022-24823 on io.netty/netty-common@4.1.73.Final",
      "description": "This advisory has been marked as False Positive and moved to `netty-common`.",
      "cve": "CVE-2022-24823",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-common@4.1.73.Final to 4.1.77.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-common@4.1.73.Final"
          },
          "version": "4.1.73.Final"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-24823",
          "value": "CVE-2022-24823",
          "url": "https://scout.docker.com/v/CVE-2022-24823?s=gitlab&n=netty-common&ns=io.netty&t=maven&vr=%3C4.1.77.Final"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-24823?s=gitlab&n=netty-common&ns=io.netty&t=maven&vr=%3C4.1.77.Final"
        }
      ]
    },
    {
      "id": "0b9832da663f159ec415f73bc649697843b37f8c355d7272ab039c241dcc9016",
      "category": "container_scanning",
      "message": "CVE-2022-30184 on NuGet.Commands@6.0.0",
      "description": "### Description \n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0 and .NET Core 3.1, NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 6.0, .NET Core 3.1, and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0) where a nuget.org api key could leak due to an incorrect comparison with a server url.\n\n### Affected software \n\n#### NuGet & NuGet Packages\n\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.2.0 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.0.1 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.11.1 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.9.1 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.7.1 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 4.9.4 version or earlier.\n\n#### .NET SDK(s)\n\n- Any .NET 6.0 application running on .NET 6.0.5 or earlier.\n- Any .NET 3.1 application running on .NET Core 3.1.25 or earlier.\n\n### Patches \n\n- If you're using NuGet.exe 6.2.0 or lower, you should download and install 6.2.1 from https://dist.nuget.org/win-x86-commandline/v6.2.1/nuget.exe. \n\n- If you're using NuGet.exe 6.0.1 or lower, you should download and install 6.0.2 from https://dist.nuget.org/win-x86-commandline/v6.0.2/nuget.exe. \n\n- If you're using NuGet.exe 5.11.1 or lower, you should download and install 5.11.2 from https://dist.nuget.org/win-x86-commandline/v5.11.2/nuget.exe. \n\n- If you're using NuGet.exe 5.9.1 or lower, you should download and install 5.9.2 from https://dist.nuget.org/win-x86-commandline/v5.9.2/nuget.exe. \n\n- If you're using NuGet.exe 5.7.1 or lower, you should download and install 5.7.2 from https://dist.nuget.org/win-x86-commandline/v4.7.2/nuget.exe. \n\n- If you're using NuGet.exe 4.9.4 or lower, you should download and install 4.9.5 from https://dist.nuget.org/win-x86-commandline/v4.9.5/nuget.exe. \n\n- If you're using .NET Core 6.0, you should download and install Runtime 6.0.6 or SDK 6.0.106 (for Visual Studio 2022 v17.0) or SDK 6.0.301 (for Visual Studio 2022 v17.2)  from https://dotnet.microsoft.com/download/dotnet-core/6.0. \n\n- If you're using .NET Core 3.1, you should download and install Runtime 3.1.26 or SDK 3.1.420 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1 ) from https://dotnet.microsoft.com/download/dotnet-core/3.1 \n\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates. \n\n### Other Details \n\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/62\n \nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2022-30184",
      "cve": "CVE-2022-30184",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Commands@6.0.0 to 6.0.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Commands@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30184",
          "value": "CVE-2022-30184",
          "url": "https://scout.docker.com/v/CVE-2022-30184?s=github&n=NuGet.Commands&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30184?s=github&n=NuGet.Commands&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.2"
        }
      ]
    },
    {
      "id": "a639c383135c020527fe31d9338095c5285dcecef9b46ea77d443cc77d26de00",
      "category": "container_scanning",
      "message": "CVE-2022-30184 on NuGet.CommandLine.XPlat@6.0.0",
      "description": "### Description \n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0 and .NET Core 3.1, NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 6.0, .NET Core 3.1, and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat version range from 3.5.0 to 6.2.0) where a nuget.org api key could leak due to an incorrect comparison with a server url.\n\n### Affected software \n\n#### NuGet & NuGet Packages\n\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.2.0 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 6.0.1 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.11.1 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.9.1 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 5.7.1 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.CommandLine.XPlat 4.9.4 version or earlier.\n\n#### .NET SDK(s)\n\n- Any .NET 6.0 application running on .NET 6.0.5 or earlier.\n- Any .NET 3.1 application running on .NET Core 3.1.25 or earlier.\n\n### Patches \n\n- If you're using NuGet.exe 6.2.0 or lower, you should download and install 6.2.1 from https://dist.nuget.org/win-x86-commandline/v6.2.1/nuget.exe. \n\n- If you're using NuGet.exe 6.0.1 or lower, you should download and install 6.0.2 from https://dist.nuget.org/win-x86-commandline/v6.0.2/nuget.exe. \n\n- If you're using NuGet.exe 5.11.1 or lower, you should download and install 5.11.2 from https://dist.nuget.org/win-x86-commandline/v5.11.2/nuget.exe. \n\n- If you're using NuGet.exe 5.9.1 or lower, you should download and install 5.9.2 from https://dist.nuget.org/win-x86-commandline/v5.9.2/nuget.exe. \n\n- If you're using NuGet.exe 5.7.1 or lower, you should download and install 5.7.2 from https://dist.nuget.org/win-x86-commandline/v4.7.2/nuget.exe. \n\n- If you're using NuGet.exe 4.9.4 or lower, you should download and install 4.9.5 from https://dist.nuget.org/win-x86-commandline/v4.9.5/nuget.exe. \n\n- If you're using .NET Core 6.0, you should download and install Runtime 6.0.6 or SDK 6.0.106 (for Visual Studio 2022 v17.0) or SDK 6.0.301 (for Visual Studio 2022 v17.2)  from https://dotnet.microsoft.com/download/dotnet-core/6.0. \n\n- If you're using .NET Core 3.1, you should download and install Runtime 3.1.26 or SDK 3.1.420 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1 ) from https://dotnet.microsoft.com/download/dotnet-core/3.1 \n\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates. \n\n### Other Details \n\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/62\n \nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2022-30184",
      "cve": "CVE-2022-30184",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.CommandLine.XPlat@6.0.0 to 6.0.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.CommandLine.XPlat@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30184",
          "value": "CVE-2022-30184",
          "url": "https://scout.docker.com/v/CVE-2022-30184?s=github&n=NuGet.CommandLine.XPlat&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30184?s=github&n=NuGet.CommandLine.XPlat&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.2"
        }
      ]
    },
    {
      "id": "a65c189624619cdc52f1642b841e204f913c677c25a33bd68b91c246f869d584",
      "category": "container_scanning",
      "message": "CVE-2022-31030 on github.com/containerd/containerd@1.5.5",
      "description": "### Impact\n\nA bug was found in containerd's CRI implementation where programs inside a container can cause the containerd daemon to consume memory without bound during invocation of the `ExecSync` API.  This can cause containerd to consume all available memory on the computer, denying service to other legitimate workloads.  Kubernetes and crictl can both be configured to use containerd's CRI implementation; `ExecSync` may be used when running probes or when executing processes via an \"exec\" facility.\n\n### Patches\n\nThis bug has been fixed in containerd 1.6.6 and 1.5.13.  Users should update to these versions to resolve the issue.\n\n### Workarounds\n\nEnsure that only trusted images and commands are used. \n\n### References\n\n* Similar fix in cri-o's CRI implementation https://github.com/cri-o/cri-o/security/advisories/GHSA-fcm2-6c3h-pg6j\n\n### Credits\n\nThe containerd project would like to thank David Korczynski and Adam Korczynski of ADA Logics for responsibly disclosing this issue in accordance with the [containerd security policy](https://github.com/containerd/project/blob/main/SECURITY.md) during a security audit sponsored by CNCF and facilitated by OSTIF.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)",
      "cve": "CVE-2022-31030",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.5.5 to 1.5.13",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.5.5"
          },
          "version": "1.5.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-31030",
          "value": "CVE-2022-31030",
          "url": "https://scout.docker.com/v/CVE-2022-31030?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.5.13"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-31030?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.5.13"
        }
      ]
    },
    {
      "id": "d9cac316372b3d6ec0577e203c54fa8fadd26f5448419327c21e5900a92282ca",
      "category": "container_scanning",
      "message": "CVE-2022-38750 on org.yaml/snakeyaml@1.26",
      "description": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
      "cve": "CVE-2022-38750",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.yaml/snakeyaml@1.26 to 1.31",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.yaml/snakeyaml@1.26"
          },
          "version": "1.26"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-38750",
          "value": "CVE-2022-38750",
          "url": "https://scout.docker.com/v/CVE-2022-38750?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.31"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-38750?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.31"
        }
      ]
    },
    {
      "id": "12498c94ca0e23408b337c96405c1f5bd90f2bf6688d7d797b0327732e2e997f",
      "category": "container_scanning",
      "message": "CVE-2023-25153 on github.com/containerd/containerd@1.6.6",
      "description": "### Impact\nWhen importing an OCI image, there was no limit on the number of bytes read for certain files. A maliciously crafted image with a large file where a limit was not applied could cause a denial of service.\n\n### Patches\n\nThis bug has been fixed in containerd 1.6.18 and 1.5.18.  Users should update to these versions to resolve the issue.\n\n### Workarounds\n\nEnsure that only trusted images are used and that only trusted users have permissions to import images. \n\n### Credits\n\nThe containerd project would like to thank [David Korczynski](https://github.com/DavidKorczynski) and [Adam Korczynski](https://github.com/AdamKorcz) of ADA Logics for responsibly disclosing this issue in accordance with the [containerd security policy](https://github.com/containerd/project/blob/main/SECURITY.md) during a security fuzzing audit sponsored by CNCF.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)\n\nTo report a security issue in containerd:\n* [Report a new vulnerability](https://github.com/containerd/containerd/security/advisories/new)\n* Email us at [security@containerd.io](mailto:security@containerd.io)",
      "cve": "CVE-2023-25153",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.6.6 to 1.6.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.6.6"
          },
          "version": "1.6.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-25153",
          "value": "CVE-2023-25153",
          "url": "https://scout.docker.com/v/CVE-2023-25153?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.6.0%2C%3C1.6.18"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-25153?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.6.0%2C%3C1.6.18"
        }
      ]
    },
    {
      "id": "9a9f5be8c7c0daa3ba8273ca92918698bc6cf6afccfc48ec27f3aee7265d0370",
      "category": "container_scanning",
      "message": "CVE-2023-25153 on github.com/containerd/containerd@1.5.5",
      "description": "### Impact\nWhen importing an OCI image, there was no limit on the number of bytes read for certain files. A maliciously crafted image with a large file where a limit was not applied could cause a denial of service.\n\n### Patches\n\nThis bug has been fixed in containerd 1.6.18 and 1.5.18.  Users should update to these versions to resolve the issue.\n\n### Workarounds\n\nEnsure that only trusted images are used and that only trusted users have permissions to import images. \n\n### Credits\n\nThe containerd project would like to thank [David Korczynski](https://github.com/DavidKorczynski) and [Adam Korczynski](https://github.com/AdamKorcz) of ADA Logics for responsibly disclosing this issue in accordance with the [containerd security policy](https://github.com/containerd/project/blob/main/SECURITY.md) during a security fuzzing audit sponsored by CNCF.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)\n\nTo report a security issue in containerd:\n* [Report a new vulnerability](https://github.com/containerd/containerd/security/advisories/new)\n* Email us at [security@containerd.io](mailto:security@containerd.io)",
      "cve": "CVE-2023-25153",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.5.5 to 1.5.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.5.5"
          },
          "version": "1.5.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-25153",
          "value": "CVE-2023-25153",
          "url": "https://scout.docker.com/v/CVE-2023-25153?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.5.18"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-25153?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.5.18"
        }
      ]
    },
    {
      "id": "866a3ece5bed0d7b421fde9c164bda453525f1c9c17cc53462950aa7bcd9e2d9",
      "category": "container_scanning",
      "message": "CVE-2023-2976 on com.google.guava/guava@31.0.1-jre",
      "description": "Use of Java's default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class.\n\nEven though the security vulnerability is fixed in version 32.0.0, maintainers recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.",
      "cve": "CVE-2023-2976",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade com.google.guava/guava@31.0.1-jre to 32.0.0-android",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.google.guava/guava@31.0.1-jre"
          },
          "version": "31.0.1-jre"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-2976",
          "value": "CVE-2023-2976",
          "url": "https://scout.docker.com/v/CVE-2023-2976?s=github&n=guava&ns=com.google.guava&t=maven&vr=%3E%3D1.0%2C%3C32.0.0-android"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-2976?s=github&n=guava&ns=com.google.guava&t=maven&vr=%3E%3D1.0%2C%3C32.0.0-android"
        }
      ]
    },
    {
      "id": "1847b67d63a31e741863724cc7e0daae73c1e5914aa829c1c1da9f60cd3ac4cc",
      "category": "container_scanning",
      "message": "CVE-2023-2976 on com.google.guava/guava@30.1-jre",
      "description": "Use of Java's default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class.\n\nEven though the security vulnerability is fixed in version 32.0.0, maintainers recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.",
      "cve": "CVE-2023-2976",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade com.google.guava/guava@30.1-jre to 32.0.0-android",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.google.guava/guava@30.1-jre"
          },
          "version": "30.1-jre"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-2976",
          "value": "CVE-2023-2976",
          "url": "https://scout.docker.com/v/CVE-2023-2976?s=github&n=guava&ns=com.google.guava&t=maven&vr=%3E%3D1.0%2C%3C32.0.0-android"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-2976?s=github&n=guava&ns=com.google.guava&t=maven&vr=%3E%3D1.0%2C%3C32.0.0-android"
        }
      ]
    },
    {
      "id": "c54835ac581e80bdf99348549b2d964a23690fd35564e32e8faebfe9ee4d8cae",
      "category": "container_scanning",
      "message": "CVE-2023-2976 on com.google.guava/guava@25.1-android",
      "description": "Use of Java's default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class.\n\nEven though the security vulnerability is fixed in version 32.0.0, maintainers recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.",
      "cve": "CVE-2023-2976",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade com.google.guava/guava@25.1-android to 32.0.0-android",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.google.guava/guava@25.1-android"
          },
          "version": "25.1-android"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-2976",
          "value": "CVE-2023-2976",
          "url": "https://scout.docker.com/v/CVE-2023-2976?s=github&n=guava&ns=com.google.guava&t=maven&vr=%3E%3D1.0%2C%3C32.0.0-android"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-2976?s=github&n=guava&ns=com.google.guava&t=maven&vr=%3E%3D1.0%2C%3C32.0.0-android"
        }
      ]
    },
    {
      "id": "81d27531f203fc16e25b14be782ded243f0491ccb2d2eb86bed77a996d4f2e23",
      "category": "container_scanning",
      "message": "CVE-2023-33202 on org.bouncycastle/bcprov-jdk15on@1.69",
      "description": "Bouncy Castle for Java before 1.73 contains a potential Denial of Service (DoS) issue within the Bouncy Castle org.bouncycastle.openssl.PEMParser class. This class parses OpenSSL PEM encoded streams containing X.509 certificates, PKCS8 encoded keys, and PKCS7 objects. Parsing a file that has crafted ASN.1 data through the PEMParser causes an OutOfMemoryError, which can enable a denial of service attack.",
      "cve": "CVE-2023-33202",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.bouncycastle/bcprov-jdk15on@1.69"
          },
          "version": "1.69"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-33202",
          "value": "CVE-2023-33202",
          "url": "https://scout.docker.com/v/CVE-2023-33202?s=github&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3C1.70"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-33202?s=github&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3C1.70"
        }
      ]
    },
    {
      "id": "11f608651bb861695171f6bce3d9344dd7230fe23c02b65ac90bab8e4338099e",
      "category": "container_scanning",
      "message": "CVE-2023-43785 on ubuntu/libx11@2:1.6.9-2ubuntu1.5",
      "description": "A vulnerability was found in libX11 due to a boundary condition within the _XkbReadKeySyms() function. This flaw allows a local user to trigger an out-of-bounds read error and read the contents of memory on the system.",
      "cve": "CVE-2023-43785",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libx11@2:1.6.9-2ubuntu1.5 to 2:1.6.9-2ubuntu1.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libx11@2%3A1.6.9-2ubuntu1.5?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2:1.6.9-2ubuntu1.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-43785",
          "value": "CVE-2023-43785",
          "url": "https://scout.docker.com/v/CVE-2023-43785?s=ubuntu&n=libx11&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2%3A1.6.9-2ubuntu1.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-43785?s=ubuntu&n=libx11&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2%3A1.6.9-2ubuntu1.6"
        }
      ]
    },
    {
      "id": "6d8a7089eaa4647b8bc4762a1c8861921c40020c65071551b05149101b7f2140",
      "category": "container_scanning",
      "message": "CVE-2023-43786 on ubuntu/libx11@2:1.6.9-2ubuntu1.5",
      "description": "A vulnerability was found in libX11 due to an infinite loop within the PutSubImage() function. This flaw allows a local user to consume all available system resources and cause a denial of service condition.",
      "cve": "CVE-2023-43786",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libx11@2:1.6.9-2ubuntu1.5 to 2:1.6.9-2ubuntu1.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libx11@2%3A1.6.9-2ubuntu1.5?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2:1.6.9-2ubuntu1.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-43786",
          "value": "CVE-2023-43786",
          "url": "https://scout.docker.com/v/CVE-2023-43786?s=ubuntu&n=libx11&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2%3A1.6.9-2ubuntu1.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-43786?s=ubuntu&n=libx11&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2%3A1.6.9-2ubuntu1.6"
        }
      ]
    },
    {
      "id": "49839b06a82db19b5f60936bc59e2b3cd5f9c709df98218e5fbb0170ad55fae9",
      "category": "container_scanning",
      "message": "CVE-2024-22365 on ubuntu/pam@1.3.1-5ubuntu4.6",
      "description": "linux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY.",
      "cve": "CVE-2024-22365",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/pam@1.3.1-5ubuntu4.6 to 1.3.1-5ubuntu4.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/pam@1.3.1-5ubuntu4.6?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.3.1-5ubuntu4.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-22365",
          "value": "CVE-2024-22365",
          "url": "https://scout.docker.com/v/CVE-2024-22365?s=ubuntu&n=pam&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.3.1-5ubuntu4.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-22365?s=ubuntu&n=pam&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.3.1-5ubuntu4.7"
        }
      ]
    },
    {
      "id": "4e25e463800baf0570b974af1162f43abd5eef575ce190e6fd50655cac6588c1",
      "category": "container_scanning",
      "message": "CVE-2024-24789 on stdlib@1.20.6",
      "description": "The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.",
      "cve": "CVE-2024-24789",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.21.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24789",
          "value": "CVE-2024-24789",
          "url": "https://scout.docker.com/v/CVE-2024-24789?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24789?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ]
    },
    {
      "id": "146278541b62bedd36541b92585f41e8ae1adf3f758324dfa13c3d17190472c0",
      "category": "container_scanning",
      "message": "CVE-2024-24789 on stdlib@1.16.10",
      "description": "The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.",
      "cve": "CVE-2024-24789",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.21.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24789",
          "value": "CVE-2024-24789",
          "url": "https://scout.docker.com/v/CVE-2024-24789?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24789?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ]
    },
    {
      "id": "2952cc5df73761becfa5d9bbee9239da0c82d0bdceae3823d2d3d9811bd7aaaf",
      "category": "container_scanning",
      "message": "CVE-2024-24789 on stdlib@1.18.9",
      "description": "The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.",
      "cve": "CVE-2024-24789",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.21.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24789",
          "value": "CVE-2024-24789",
          "url": "https://scout.docker.com/v/CVE-2024-24789?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24789?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ]
    },
    {
      "id": "ae88c29192a2fae49961b829ee4ac2427fcf74ec7cf1856d4db961a0731c32db",
      "category": "container_scanning",
      "message": "CVE-2024-24789 on stdlib@1.16.12",
      "description": "The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.",
      "cve": "CVE-2024-24789",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.21.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24789",
          "value": "CVE-2024-24789",
          "url": "https://scout.docker.com/v/CVE-2024-24789?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24789?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ]
    },
    {
      "id": "e1a41e4dda16a25f086df9d3613e31d8f045701915fbee376fe3d4932e2dbf1d",
      "category": "container_scanning",
      "message": "CVE-2025-0913 on stdlib@1.18.9",
      "description": "os.OpenFile(path, os.O_CREATE|O_EXCL) behaved differently on Unix and Windows systems when the target path was a dangling symlink. On Unix systems, OpenFile with O_CREATE and O_EXCL flags never follows symlinks. On Windows, when the target path was a symlink to a nonexistent location, OpenFile would create a file in that location. OpenFile now always returns an error when the O_CREATE and O_EXCL flags are both set and the target path is a symlink.",
      "cve": "CVE-2025-0913",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.23.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-0913",
          "value": "CVE-2025-0913",
          "url": "https://scout.docker.com/v/CVE-2025-0913?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-0913?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ]
    },
    {
      "id": "fca1b3419a09efe66ef39ac01c0405f0503d169cd327f5072f0adf622dbe93e8",
      "category": "container_scanning",
      "message": "CVE-2025-0913 on stdlib@1.16.10",
      "description": "os.OpenFile(path, os.O_CREATE|O_EXCL) behaved differently on Unix and Windows systems when the target path was a dangling symlink. On Unix systems, OpenFile with O_CREATE and O_EXCL flags never follows symlinks. On Windows, when the target path was a symlink to a nonexistent location, OpenFile would create a file in that location. OpenFile now always returns an error when the O_CREATE and O_EXCL flags are both set and the target path is a symlink.",
      "cve": "CVE-2025-0913",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.23.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-0913",
          "value": "CVE-2025-0913",
          "url": "https://scout.docker.com/v/CVE-2025-0913?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-0913?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ]
    },
    {
      "id": "59c898954e0637d6df657991469a8a9f117c833f20a91387513151ab507fd66e",
      "category": "container_scanning",
      "message": "CVE-2025-0913 on stdlib@1.20.6",
      "description": "os.OpenFile(path, os.O_CREATE|O_EXCL) behaved differently on Unix and Windows systems when the target path was a dangling symlink. On Unix systems, OpenFile with O_CREATE and O_EXCL flags never follows symlinks. On Windows, when the target path was a symlink to a nonexistent location, OpenFile would create a file in that location. OpenFile now always returns an error when the O_CREATE and O_EXCL flags are both set and the target path is a symlink.",
      "cve": "CVE-2025-0913",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.23.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-0913",
          "value": "CVE-2025-0913",
          "url": "https://scout.docker.com/v/CVE-2025-0913?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-0913?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ]
    },
    {
      "id": "b7108148cdd03b863d74d95f738a6034a5f417b47446871c8b35abde9840395a",
      "category": "container_scanning",
      "message": "CVE-2025-0913 on stdlib@1.16.12",
      "description": "os.OpenFile(path, os.O_CREATE|O_EXCL) behaved differently on Unix and Windows systems when the target path was a dangling symlink. On Unix systems, OpenFile with O_CREATE and O_EXCL flags never follows symlinks. On Windows, when the target path was a symlink to a nonexistent location, OpenFile would create a file in that location. OpenFile now always returns an error when the O_CREATE and O_EXCL flags are both set and the target path is a symlink.",
      "cve": "CVE-2025-0913",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.23.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-0913",
          "value": "CVE-2025-0913",
          "url": "https://scout.docker.com/v/CVE-2025-0913?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-0913?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ]
    },
    {
      "id": "5bc91186382c7ae15fe4d4cf018ef265fe00c112bc2718e9d68c2976071838db",
      "category": "container_scanning",
      "message": "CVE-2025-25193 on io.netty/netty-common@4.1.73.Final",
      "description": "### Summary\nAn unsafe reading of environment file could potentially cause a denial of service in Netty.\nWhen loaded on an Windows application, Netty attemps to load a file that does not exist. If an attacker creates such a large file, the Netty application crash.\n\n### Details\nA similar issue was previously reported in https://github.com/netty/netty/security/advisories/GHSA-xq3w-v528-46rv\nThis issue was fixed, but the fix was incomplete in that null-bytes were not counted against the input limit.\n\n\n### PoC\nThe PoC is the same as for https://github.com/netty/netty/security/advisories/GHSA-xq3w-v528-46rv with the detail that the file should only contain null-bytes; 0x00.\nWhen the null-bytes are encountered by the `InputStreamReader`, it will issue replacement characters in its charset decoding, which will fill up the line-buffer in the `BufferedReader.readLine()`, because the replacement character is not a line-break character.\n\n### Impact\nImpact is the same as https://github.com/netty/netty/security/advisories/GHSA-xq3w-v528-46rv",
      "cve": "CVE-2025-25193",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-common@4.1.73.Final to 4.1.118.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-common@4.1.73.Final"
          },
          "version": "4.1.73.Final"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-25193",
          "value": "CVE-2025-25193",
          "url": "https://scout.docker.com/v/CVE-2025-25193?s=github&n=netty-common&ns=io.netty&t=maven&vr=%3C4.1.118.Final"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-25193?s=github&n=netty-common&ns=io.netty&t=maven&vr=%3C4.1.118.Final"
        }
      ]
    },
    {
      "id": "1c72dd9ba97c9c24b3fc4854bdf9d32dc53260b7e63abe36fd605a217265578e",
      "category": "container_scanning",
      "message": "CVE-2024-35195 on requests@2.22.0",
      "description": "When making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same origin will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool.\n\n### Remediation\nAny of these options can be used to remediate the current issue, we highly recommend upgrading as the preferred mitigation.\n\n* Upgrade to `requests>=2.32.0`.\n* For `requests<2.32.0`, avoid setting `verify=False` for the first request to a host while using a Requests Session.\n* For `requests<2.32.0`, call `close()` on `Session` objects to clear existing connections if `verify=False` is used.\n\n### Related Links\n* https://github.com/psf/requests/pull/6655",
      "cve": "CVE-2024-35195",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade requests@2.22.0 to 2.32.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/requests@2.22.0"
          },
          "version": "2.22.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-35195",
          "value": "CVE-2024-35195",
          "url": "https://scout.docker.com/v/CVE-2024-35195?s=github&n=requests&t=pypi&vr=%3C2.32.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-35195?s=github&n=requests&t=pypi&vr=%3C2.32.0"
        }
      ]
    },
    {
      "id": "9f7e4b2f44e961057167569753fcbc9e3a040ff71f75141b14e58dc5a327d1c7",
      "category": "container_scanning",
      "message": "CVE-2022-23471 on github.com/containerd/containerd@1.6.6",
      "description": "### Impact\n\nA bug was found in containerd's CRI implementation where a user can exhaust memory on the host. In the CRI stream server, a goroutine is launched to handle terminal resize events if a TTY is requested. If the user's process fails to launch due to, for example, a faulty command, the goroutine will be stuck waiting to send without a receiver, resulting in a memory leak. Kubernetes and crictl can both be configured to use containerd's CRI implementation and the stream server is used for handling container IO.\n\n### Patches\n\nThis bug has been fixed in containerd 1.6.12 and 1.5.16.  Users should update to these versions to resolve the issue.\n\n### Workarounds\n\nEnsure that only trusted images and commands are used and that only trusted users have permissions to execute commands in running containers. \n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)\n\nTo report a security issue in containerd:\n* [Report a new vulnerability](https://github.com/containerd/containerd/security/advisories/new)\n* Email us at [security@containerd.io](mailto:security@containerd.io)",
      "cve": "CVE-2022-23471",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.6.6 to 1.6.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.6.6"
          },
          "version": "1.6.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-23471",
          "value": "CVE-2022-23471",
          "url": "https://scout.docker.com/v/CVE-2022-23471?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.6.0%2C%3C1.6.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-23471?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.6.0%2C%3C1.6.12"
        }
      ]
    },
    {
      "id": "4b9111a0d36e64938f5e1bf2b2328ade6565c592419352ce65cf35745d23102b",
      "category": "container_scanning",
      "message": "CVE-2022-23471 on github.com/containerd/containerd@1.5.5",
      "description": "### Impact\n\nA bug was found in containerd's CRI implementation where a user can exhaust memory on the host. In the CRI stream server, a goroutine is launched to handle terminal resize events if a TTY is requested. If the user's process fails to launch due to, for example, a faulty command, the goroutine will be stuck waiting to send without a receiver, resulting in a memory leak. Kubernetes and crictl can both be configured to use containerd's CRI implementation and the stream server is used for handling container IO.\n\n### Patches\n\nThis bug has been fixed in containerd 1.6.12 and 1.5.16.  Users should update to these versions to resolve the issue.\n\n### Workarounds\n\nEnsure that only trusted images and commands are used and that only trusted users have permissions to execute commands in running containers. \n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)\n\nTo report a security issue in containerd:\n* [Report a new vulnerability](https://github.com/containerd/containerd/security/advisories/new)\n* Email us at [security@containerd.io](mailto:security@containerd.io)",
      "cve": "CVE-2022-23471",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.5.5 to 1.5.16",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.5.5"
          },
          "version": "1.5.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-23471",
          "value": "CVE-2022-23471",
          "url": "https://scout.docker.com/v/CVE-2022-23471?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.5.16"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-23471?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.5.16"
        }
      ]
    },
    {
      "id": "49419824cbee955c1f3c31bac2f17f9ffc1ae06b3e826acc960ba17af6e14b0d",
      "category": "container_scanning",
      "message": "CVE-2022-3171 on com.google.protobuf/protobuf-java@3.5.1",
      "description": "## Summary\nA potential Denial of Service issue in `protobuf-java` core and lite was discovered in the parsing procedure for binary and text format data. Input streams containing multiple instances of non-repeated [embedded messages](http://developers.google.com/protocol-buffers/docs/encoding#embedded) with repeated or unknown fields causes objects to be converted back-n-forth between mutable and immutable forms, resulting in potentially long garbage collection pauses. \n\nReporter: [OSS Fuzz](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=48771)\n\nAffected versions: This issue affects both the Java full and lite Protobuf runtimes, as well as Protobuf for Kotlin and JRuby, which themselves use the Java Protobuf runtime.\n\n## Severity\n\n[CVE-2022-3171](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-3171) Medium - CVSS Score: 5.7 (NOTE: there may be a delay in publication)\n\n## Remediation and Mitigation\n\nPlease update to the latest available versions of the following packages:\n\nprotobuf-java (3.21.7, 3.20.3, 3.19.6, 3.16.3)\nprotobuf-javalite (3.21.7, 3.20.3, 3.19.6, 3.16.3)\nprotobuf-kotlin (3.21.7, 3.20.3, 3.19.6, 3.16.3)\nprotobuf-kotlin-lite (3.21.7, 3.20.3, 3.19.6, 3.16.3)\ngoogle-protobuf [JRuby gem only] (3.21.7, 3.20.3, 3.19.6)\n",
      "cve": "CVE-2022-3171",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade com.google.protobuf/protobuf-java@3.5.1 to 3.16.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.google.protobuf/protobuf-java@3.5.1"
          },
          "version": "3.5.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-3171",
          "value": "CVE-2022-3171",
          "url": "https://scout.docker.com/v/CVE-2022-3171?s=github&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3C3.16.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-3171?s=github&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3C3.16.3"
        }
      ]
    },
    {
      "id": "eb1350901bf41fa6de674633d3021d56f2c303552e96d26686eaf9e733898ae3",
      "category": "container_scanning",
      "message": "CVE-2022-3171 on com.google.protobuf/protobuf-java@3.19.4",
      "description": "## Summary\nA potential Denial of Service issue in `protobuf-java` core and lite was discovered in the parsing procedure for binary and text format data. Input streams containing multiple instances of non-repeated [embedded messages](http://developers.google.com/protocol-buffers/docs/encoding#embedded) with repeated or unknown fields causes objects to be converted back-n-forth between mutable and immutable forms, resulting in potentially long garbage collection pauses. \n\nReporter: [OSS Fuzz](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=48771)\n\nAffected versions: This issue affects both the Java full and lite Protobuf runtimes, as well as Protobuf for Kotlin and JRuby, which themselves use the Java Protobuf runtime.\n\n## Severity\n\n[CVE-2022-3171](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-3171) Medium - CVSS Score: 5.7 (NOTE: there may be a delay in publication)\n\n## Remediation and Mitigation\n\nPlease update to the latest available versions of the following packages:\n\nprotobuf-java (3.21.7, 3.20.3, 3.19.6, 3.16.3)\nprotobuf-javalite (3.21.7, 3.20.3, 3.19.6, 3.16.3)\nprotobuf-kotlin (3.21.7, 3.20.3, 3.19.6, 3.16.3)\nprotobuf-kotlin-lite (3.21.7, 3.20.3, 3.19.6, 3.16.3)\ngoogle-protobuf [JRuby gem only] (3.21.7, 3.20.3, 3.19.6)\n",
      "cve": "CVE-2022-3171",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade com.google.protobuf/protobuf-java@3.19.4 to 3.19.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.google.protobuf/protobuf-java@3.19.4"
          },
          "version": "3.19.4"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-3171",
          "value": "CVE-2022-3171",
          "url": "https://scout.docker.com/v/CVE-2022-3171?s=github&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3E%3D3.17.0-rc-1%2C%3C3.19.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-3171?s=github&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3E%3D3.17.0-rc-1%2C%3C3.19.6"
        }
      ]
    },
    {
      "id": "e73a6fa2f745c9920699e3738cb1114e625b7b7dd2379514e4abf8c884eaae5d",
      "category": "container_scanning",
      "message": "CVE-2023-45803 on urllib3@1.25.8",
      "description": "urllib3 previously wouldn't remove the HTTP request body when an HTTP redirect response using status 303 \"See Other\" after the request had its method changed from one that could accept a request body (like `POST`) to `GET` as is required by HTTP RFCs. Although the behavior of removing the request body is not specified in the section for redirects, it can be inferred by piecing together information from different sections and we have observed the behavior in other major HTTP client implementations like curl and web browsers.\n\nFrom [RFC 9110 Section 9.3.1](https://www.rfc-editor.org/rfc/rfc9110.html#name-get):\n\n> A client SHOULD NOT generate content in a GET request unless it is made directly to an origin server that has previously indicated, in or out of band, that such a request has a purpose and will be adequately supported.\n\n## Affected usages\n\nBecause the vulnerability requires a previously trusted service to become compromised in order to have an impact on confidentiality we believe the exploitability of this vulnerability is low. Additionally, many users aren't putting sensitive data in HTTP request bodies, if this is the case then this vulnerability isn't exploitable.\n\nBoth of the following conditions must be true to be affected by this vulnerability:\n\n* If you're using urllib3 and submitting sensitive information in the HTTP request body (such as form data or JSON)\n* The origin service is compromised and starts redirecting using 303 to a malicious peer or the redirected-to service becomes compromised.\n\n## Remediation\n\nYou can remediate this vulnerability with any of the following steps:\n\n* Upgrade to a patched version of urllib3 (v1.26.18 or v2.0.7)\n* Disable redirects for services that you aren't expecting to respond with redirects with `redirects=False`.\n* Disable automatic redirects with `redirects=False` and handle 303 redirects manually by stripping the HTTP request body.",
      "cve": "CVE-2023-45803",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade urllib3@1.25.8 to 1.26.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/urllib3@1.25.8"
          },
          "version": "1.25.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45803",
          "value": "CVE-2023-45803",
          "url": "https://scout.docker.com/v/CVE-2023-45803?s=github&n=urllib3&t=pypi&vr=%3C1.26.18"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45803?s=github&n=urllib3&t=pypi&vr=%3C1.26.18"
        }
      ]
    },
    {
      "id": "c5a2c3fd1833b5cab378d4ab6a979c87ab3d412bf6f72eff8a470984d8cd18ff",
      "category": "container_scanning",
      "message": "CVE-2018-20200 on com.squareup.okhttp3/okhttp@3.9.1",
      "description": "CertificatePinner.java allows man-in-the-middle attackers to bypass certificate pinning by changing SSLContext and the boolean values while hooking the application.",
      "cve": "CVE-2018-20200",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade com.squareup.okhttp3/okhttp@3.9.1 to 3.12.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.squareup.okhttp3/okhttp@3.9.1"
          },
          "version": "3.9.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2018-20200",
          "value": "CVE-2018-20200",
          "url": "https://scout.docker.com/v/CVE-2018-20200?s=gitlab&n=okhttp&ns=com.squareup.okhttp3&t=maven&vr=%3E%3D3.0.0%2C%3C%3D3.12.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2018-20200?s=gitlab&n=okhttp&ns=com.squareup.okhttp3&t=maven&vr=%3E%3D3.0.0%2C%3C%3D3.12.0"
        }
      ]
    },
    {
      "id": "7f7c2459e184122171c6ee0eeac8d92bccfe4e25d64162f5800606bd03e13200",
      "category": "container_scanning",
      "message": "CVE-2021-31525 on golang.org/x/net@0.0.0-20201224014010-6772e930b67b",
      "description": "golang.org/x/net/http/httpguts in Go before 1.15.12 and 1.16.x before 1.16.4 allows remote attackers to cause a denial of service (panic) via a large header to ReadRequest or ReadResponse. Server, Transport, and Client can each be affected in some configurations.",
      "cve": "CVE-2021-31525",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.0.0-20201224014010-6772e930b67b to 0.0.0-20210428140749-89ef3d95e781",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.0.0-20201224014010-6772e930b67b"
          },
          "version": "0.0.0-20201224014010-6772e930b67b"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-31525",
          "value": "CVE-2021-31525",
          "url": "https://scout.docker.com/v/CVE-2021-31525?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20210428140749-89ef3d95e781"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-31525?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20210428140749-89ef3d95e781"
        }
      ]
    },
    {
      "id": "e269be584a266cca34229ee70da46673f001a29a69ed340c005e3c2e153318b7",
      "category": "container_scanning",
      "message": "CVE-2021-41103 on github.com/containerd/containerd@1.5.5",
      "description": "### Impact\nA bug was found in containerd where container root directories and some plugins had insufficiently restricted permissions, allowing otherwise unprivileged Linux users to traverse directory contents and execute programs. When containers included executable programs with extended permission bits (such as setuid), unprivileged Linux users could discover and execute those programs. When the UID of an unprivileged Linux user on the host collided with the file owner or group inside a container, the unprivileged Linux user on the host could discover, read, and modify those files.\n\n### Patches\nThis vulnerability has been fixed in containerd 1.4.11 and containerd 1.5.7. Users should update to these version when they are released and may restart containers or update directory permissions to mitigate the vulnerability.\n\n### Workarounds\nLimit access to the host to trusted users. Update directory permission on container bundles directories. \n\n### For more information\nIf you have any questions or comments about this advisory: \n* Open an issue in [github.com/containerd/containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)\n",
      "cve": "CVE-2021-41103",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.5.5 to 1.5.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.5.5"
          },
          "version": "1.5.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-41103",
          "value": "CVE-2021-41103",
          "url": "https://scout.docker.com/v/CVE-2021-41103?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.5.0%2C%3C1.5.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-41103?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.5.0%2C%3C1.5.7"
        }
      ]
    },
    {
      "id": "cbf5ce823bca30dabbedcdb716709d3c828ce50e7a8ac9c9bac6c58708096a77",
      "category": "container_scanning",
      "message": "CVE-2022-23491 on certifi@2019.11.28",
      "description": "Certifi 2022.12.07 removes root certificates from \"TrustCor\" from the root store. These are in the process of being removed from Mozilla's trust store.\n\nTrustCor's root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor's ownership also operated a business that produced spyware. Conclusions of Mozilla's investigation can be found [here](https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/oxX69KFvsm4/m/yLohoVqtCgAJ).",
      "cve": "CVE-2022-23491",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade certifi@2019.11.28 to 2022.12.07",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/certifi@2019.11.28"
          },
          "version": "2019.11.28"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-23491",
          "value": "CVE-2022-23491",
          "url": "https://scout.docker.com/v/CVE-2022-23491?s=github&n=certifi&t=pypi&vr=%3E%3D2017.11.05%2C%3C2022.12.07"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-23491?s=github&n=certifi&t=pypi&vr=%3E%3D2017.11.05%2C%3C2022.12.07"
        }
      ]
    },
    {
      "id": "412d120d2b70483a2e461bc12689d8d2b5e936dbe0929f34fdb36e761adb7851",
      "category": "container_scanning",
      "message": "CVE-2022-29162 on github.com/opencontainers/runc@1.0.1",
      "description": "### Impact\n\nA bug was found in runc where `runc exec --cap` executed processes with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during execve(2).\n\nThis bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set.\n\n### Patches\nThis bug has been fixed in runc 1.1.2. Users should update to this version as soon as possible.\n\nThis fix changes `runc exec --cap` behavior such that the additional capabilities granted to the process being executed (as specified via `--cap` arguments) do not include inheritable capabilities.\n\nIn addition, `runc spec` is changed to not set any inheritable capabilities in the created example OCI spec (`config.json`) file.\n\n### Credits\nThe opencontainers project would like to thank [Andrew G. Morgan](https://github.com/AndrewGMorgan) for responsibly disclosing this issue in accordance with the [opencontainers org security policy](https://github.com/opencontainers/.github/blob/master/SECURITY.md).\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n* [Open an issue](https://github.com/opencontainers/runc/issues/new)\n* Email us at [security@opencontainers.org](mailto:security@opencontainers.org) if you think you’ve found a security bug",
      "cve": "CVE-2022-29162",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/opencontainers/runc@1.0.1 to 1.1.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/opencontainers/runc@1.0.1"
          },
          "version": "1.0.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-29162",
          "value": "CVE-2022-29162",
          "url": "https://scout.docker.com/v/CVE-2022-29162?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.1.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-29162?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.1.2"
        }
      ]
    },
    {
      "id": "dcae58ed43959be104e4e1065decc2fb053a6acdd1392cb6d61029e38401a7c1",
      "category": "container_scanning",
      "message": "CVE-2022-34716 on System.Security.Cryptography.Xml@4.7.0",
      "description": "Microsoft is releasing this security advisory to provide information about a vulnerability in .NET Core 3.1 and .NET 6.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nAn information disclosure vulnerability exists in .NET Core 3.1 and .NET 6.0 that could lead to unauthorized access of privileged information.\n\n## <a name=\"affected-software\"></a>Affected software\n\n* Any .NET 6.0 application running on .NET 6.0.7 or earlier.\n* Any .NET Core 3.1 applicaiton running on .NET Core 3.1.27 or earlier.\n\nIf your application uses the following package versions, ensure you update to the latest version of .NET.\n\n### <a name=\".NET Core 3.1\"></a>.NET Core 3.1\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[System.Security.Cryptography.Xml](http://system.security)| <=4.7.0| 4.7.1\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)| >=3.1.0, 3.1.27| 3.1.28\n\n### <a name=\".NET 6\"></a>.NET 6\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[System.Security.Cryptography.Xml](https://www.nuget.org/packages/System.Security.Cryptography.Xml)| >=5.0.0, 6.0.0| 6.0.1\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)| >=6.0.0, 6.0.7| 6.0.8\n\n## Patches\n\n\n* If you're using .NET 6.0, you should download and install Runtime 6.0.8 or SDK 6.0.108 (for Visual Studio 2022 v17.1) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n* If you're using .NET Core 3.1, you should download and install Runtime 3.1.28 (for Visual Studio 2019 v16.9) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\n\n\n### Other\n\nAnnouncement for this issue can be found at https://github.com/dotnet/announcements/issues/232\nAn Issue for this can be found at https://github.com/dotnet/aspnetcore/issues/43166\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-34716",
      "cve": "CVE-2022-34716",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade System.Security.Cryptography.Xml@4.7.0 to 4.7.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/System.Security.Cryptography.Xml@4.7.0"
          },
          "version": "4.7.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-34716",
          "value": "CVE-2022-34716",
          "url": "https://scout.docker.com/v/CVE-2022-34716?s=github&n=System.Security.Cryptography.Xml&t=nuget&vr=%3C%3D4.7.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-34716?s=github&n=System.Security.Cryptography.Xml&t=nuget&vr=%3C%3D4.7.0"
        }
      ]
    },
    {
      "id": "074608347ce1d5a10e4cdb73f3760b675978694ce0ebf1a77b3da05838b8a41b",
      "category": "container_scanning",
      "message": "CVE-2022-34716 on Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0",
      "description": "Microsoft is releasing this security advisory to provide information about a vulnerability in .NET Core 3.1 and .NET 6.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nAn information disclosure vulnerability exists in .NET Core 3.1 and .NET 6.0 that could lead to unauthorized access of privileged information.\n\n## <a name=\"affected-software\"></a>Affected software\n\n* Any .NET 6.0 application running on .NET 6.0.7 or earlier.\n* Any .NET Core 3.1 applicaiton running on .NET Core 3.1.27 or earlier.\n\nIf your application uses the following package versions, ensure you update to the latest version of .NET.\n\n### <a name=\".NET Core 3.1\"></a>.NET Core 3.1\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[System.Security.Cryptography.Xml](http://system.security)| <=4.7.0| 4.7.1\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64)| >=3.1.0, 3.1.27| 3.1.28\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)| >=3.1.0, 3.1.27| 3.1.28\n\n### <a name=\".NET 6\"></a>.NET 6\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[System.Security.Cryptography.Xml](https://www.nuget.org/packages/System.Security.Cryptography.Xml)| >=5.0.0, 6.0.0| 6.0.1\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64)| >=6.0.0, 6.0.7| 6.0.8\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)| >=6.0.0, 6.0.7| 6.0.8\n\n## Patches\n\n\n* If you're using .NET 6.0, you should download and install Runtime 6.0.8 or SDK 6.0.108 (for Visual Studio 2022 v17.1) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n* If you're using .NET Core 3.1, you should download and install Runtime 3.1.28 (for Visual Studio 2019 v16.9) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\n\n\n### Other\n\nAnnouncement for this issue can be found at https://github.com/dotnet/announcements/issues/232\nAn Issue for this can be found at https://github.com/dotnet/aspnetcore/issues/43166\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-34716",
      "cve": "CVE-2022-34716",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0 to 6.0.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-34716",
          "value": "CVE-2022-34716",
          "url": "https://scout.docker.com/v/CVE-2022-34716?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C%3D6.0.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-34716?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C%3D6.0.7"
        }
      ]
    },
    {
      "id": "530c438a3345f314fe4a9b73c73daeaccefe10303238b9e4f49ddc55d66cc215",
      "category": "container_scanning",
      "message": "CVE-2022-48566 on ubuntu/python2.7@2.7.18-1~20.04.3",
      "description": "An issue was discovered in compare_digest in Lib/hmac.py in Python through 3.9.1. Constant-time-defeating optimisations were possible in the accumulator variable in hmac.compare_digest.",
      "cve": "CVE-2022-48566",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python2.7@2.7.18-1~20.04.3 to 2.7.18-1~20.04.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python2.7@2.7.18-1~20.04.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.7.18-1~20.04.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-48566",
          "value": "CVE-2022-48566",
          "url": "https://scout.docker.com/v/CVE-2022-48566?s=ubuntu&n=python2.7&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.7.18-1%7E20.04.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-48566?s=ubuntu&n=python2.7&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.7.18-1%7E20.04.7"
        }
      ]
    },
    {
      "id": "261028324b54747b22b26473c488823141cebd1ded2678d33f09153ed41685a6",
      "category": "container_scanning",
      "message": "CVE-2023-22899 on net.lingala.zip4j/zip4j@2.11.2",
      "description": "Zip4j through 2.11.2, as used in Threema and other products, does not always check the MAC when decrypting a ZIP archive. This issue has been fixed in version 2.11.3.",
      "cve": "CVE-2023-22899",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade net.lingala.zip4j/zip4j@2.11.2 to 2.11.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/net.lingala.zip4j/zip4j@2.11.2"
          },
          "version": "2.11.2"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-22899",
          "value": "CVE-2023-22899",
          "url": "https://scout.docker.com/v/CVE-2023-22899?s=github&n=zip4j&ns=net.lingala.zip4j&t=maven&vr=%3C%3D2.11.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-22899?s=github&n=zip4j&ns=net.lingala.zip4j&t=maven&vr=%3C%3D2.11.2"
        }
      ]
    },
    {
      "id": "8a4e33cad5b0cfe10cb23322b4fab9712de49e499b9b934e3c6b23e67bae186b",
      "category": "container_scanning",
      "message": "CVE-2023-3635 on com.squareup.okio/okio@1.13.0",
      "description": "GzipSource does not handle an exception that might be raised when parsing a malformed gzip buffer. This may lead to denial of service of the Okio client when handling a crafted GZIP archive, by using the GzipSource class.\n\n",
      "cve": "CVE-2023-3635",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade com.squareup.okio/okio@1.13.0 to 1.17.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.squareup.okio/okio@1.13.0"
          },
          "version": "1.13.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-3635",
          "value": "CVE-2023-3635",
          "url": "https://scout.docker.com/v/CVE-2023-3635?s=github&n=okio&ns=com.squareup.okio&t=maven&vr=%3C1.17.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-3635?s=github&n=okio&ns=com.squareup.okio&t=maven&vr=%3C1.17.6"
        }
      ]
    },
    {
      "id": "4f4cc2a1a7ef82a680055a7e4d92308f00761fbfa9b0654cb08e926ff97fbdc1",
      "category": "container_scanning",
      "message": "CVE-2023-48795 on golang.org/x/crypto@0.0.0-20220722155217-630584e8d5aa",
      "description": "### Summary\n\nTerrapin is a prefix truncation attack targeting the SSH protocol. More precisely, Terrapin breaks the integrity of SSH's secure channel. By carefully adjusting the sequence numbers during the handshake, an attacker can remove an arbitrary amount of messages sent by the client or server at the beginning of the secure channel without the client or server noticing it.\n\n### Mitigations\n\nTo mitigate this protocol vulnerability, OpenSSH suggested a so-called \"strict kex\" which alters the SSH handshake to ensure a Man-in-the-Middle attacker cannot introduce unauthenticated messages as well as convey sequence number manipulation across handshakes.\n\n**Warning: To take effect, both the client and server must support this countermeasure.** \n\nAs a stop-gap measure, peers may also (temporarily) disable the affected algorithms and use unaffected alternatives like AES-GCM instead until patches are available.\n\n### Details\n\nThe SSH specifications of ChaCha20-Poly1305 (chacha20-poly1305@openssh.com) and Encrypt-then-MAC (*-etm@openssh.com MACs) are vulnerable against an arbitrary prefix truncation attack (a.k.a. Terrapin attack). This allows for an extension negotiation downgrade by stripping the SSH_MSG_EXT_INFO sent after the first message after SSH_MSG_NEWKEYS, downgrading security, and disabling attack countermeasures in some versions of OpenSSH. When targeting Encrypt-then-MAC, this attack requires the use of a CBC cipher to be practically exploitable due to the internal workings of the cipher mode. Additionally, this novel attack technique can be used to exploit previously unexploitable implementation flaws in a Man-in-the-Middle scenario.\n\nThe attack works by an attacker injecting an arbitrary number of SSH_MSG_IGNORE messages during the initial key exchange and consequently removing the same number of messages just after the initial key exchange has concluded. This is possible due to missing authentication of the excess SSH_MSG_IGNORE messages and the fact that the implicit sequence numbers used within the SSH protocol are only checked after the initial key exchange.\n\nIn the case of ChaCha20-Poly1305, the attack is guaranteed to work on every connection as this cipher does not maintain an internal state other than the message's sequence number. In the case of Encrypt-Then-MAC, practical exploitation requires the use of a CBC cipher; while theoretical integrity is broken for all ciphers when using this mode, message processing will fail at the application layer for CTR and stream ciphers.\n\nFor more details see [https://terrapin-attack.com](https://terrapin-attack.com). \n\n### Impact\n\nThis attack targets the specification of ChaCha20-Poly1305 (chacha20-poly1305@openssh.com) and Encrypt-then-MAC (*-etm@openssh.com), which are widely adopted by well-known SSH implementations and can be considered de-facto standard. These algorithms can be practically exploited; however, in the case of Encrypt-Then-MAC, we additionally require the use of a CBC cipher. As a consequence, this attack works against all well-behaving SSH implementations supporting either of those algorithms and can be used to downgrade (but not fully strip) connection security in case SSH extension negotiation (RFC8308) is supported. The attack may also enable attackers to exploit certain implementation flaws in a man-in-the-middle (MitM) scenario.",
      "cve": "CVE-2023-48795",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/crypto@0.0.0-20220722155217-630584e8d5aa to 0.0.0-20231218163308-9d2ee975ef9f",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/crypto@0.0.0-20220722155217-630584e8d5aa"
          },
          "version": "0.0.0-20220722155217-630584e8d5aa"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-48795",
          "value": "CVE-2023-48795",
          "url": "https://scout.docker.com/v/CVE-2023-48795?s=github&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20231218163308-9d2ee975ef9f"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-48795?s=github&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20231218163308-9d2ee975ef9f"
        }
      ]
    },
    {
      "id": "a1eeb4da716bfc034adf98a41b51d37732c608c27414c24639a840c3fd5c1b13",
      "category": "container_scanning",
      "message": "CVE-2023-48795 on ubuntu/libssh@0.9.3-2ubuntu2.3",
      "description": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust.",
      "cve": "CVE-2023-48795",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libssh@0.9.3-2ubuntu2.3 to 0.9.3-2ubuntu2.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libssh@0.9.3-2ubuntu2.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "0.9.3-2ubuntu2.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-48795",
          "value": "CVE-2023-48795",
          "url": "https://scout.docker.com/v/CVE-2023-48795?s=ubuntu&n=libssh&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C0.9.3-2ubuntu2.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-48795?s=ubuntu&n=libssh&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C0.9.3-2ubuntu2.4"
        }
      ]
    },
    {
      "id": "c17db9d844146a6cbbb605dcbdd4a20f5f1b4708d7d68e6df7d28ff415d334e8",
      "category": "container_scanning",
      "message": "CVE-2023-48795 on ubuntu/openssh@1:8.2p1-4ubuntu0.9",
      "description": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust.",
      "cve": "CVE-2023-48795",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/openssh@1:8.2p1-4ubuntu0.9 to 1:8.2p1-4ubuntu0.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/openssh@1%3A8.2p1-4ubuntu0.9?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1:8.2p1-4ubuntu0.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-48795",
          "value": "CVE-2023-48795",
          "url": "https://scout.docker.com/v/CVE-2023-48795?s=ubuntu&n=openssh&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1%3A8.2p1-4ubuntu0.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-48795?s=ubuntu&n=openssh&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1%3A8.2p1-4ubuntu0.10"
        }
      ]
    },
    {
      "id": "8c46dda268762289cb16cf72585a3b08196c409f222ff945d1fb9af89cfc93df",
      "category": "container_scanning",
      "message": "CVE-2023-48795 on golang.org/x/crypto@0.0.0-20210322153248-0c34fe9e7dc2",
      "description": "### Summary\n\nTerrapin is a prefix truncation attack targeting the SSH protocol. More precisely, Terrapin breaks the integrity of SSH's secure channel. By carefully adjusting the sequence numbers during the handshake, an attacker can remove an arbitrary amount of messages sent by the client or server at the beginning of the secure channel without the client or server noticing it.\n\n### Mitigations\n\nTo mitigate this protocol vulnerability, OpenSSH suggested a so-called \"strict kex\" which alters the SSH handshake to ensure a Man-in-the-Middle attacker cannot introduce unauthenticated messages as well as convey sequence number manipulation across handshakes.\n\n**Warning: To take effect, both the client and server must support this countermeasure.** \n\nAs a stop-gap measure, peers may also (temporarily) disable the affected algorithms and use unaffected alternatives like AES-GCM instead until patches are available.\n\n### Details\n\nThe SSH specifications of ChaCha20-Poly1305 (chacha20-poly1305@openssh.com) and Encrypt-then-MAC (*-etm@openssh.com MACs) are vulnerable against an arbitrary prefix truncation attack (a.k.a. Terrapin attack). This allows for an extension negotiation downgrade by stripping the SSH_MSG_EXT_INFO sent after the first message after SSH_MSG_NEWKEYS, downgrading security, and disabling attack countermeasures in some versions of OpenSSH. When targeting Encrypt-then-MAC, this attack requires the use of a CBC cipher to be practically exploitable due to the internal workings of the cipher mode. Additionally, this novel attack technique can be used to exploit previously unexploitable implementation flaws in a Man-in-the-Middle scenario.\n\nThe attack works by an attacker injecting an arbitrary number of SSH_MSG_IGNORE messages during the initial key exchange and consequently removing the same number of messages just after the initial key exchange has concluded. This is possible due to missing authentication of the excess SSH_MSG_IGNORE messages and the fact that the implicit sequence numbers used within the SSH protocol are only checked after the initial key exchange.\n\nIn the case of ChaCha20-Poly1305, the attack is guaranteed to work on every connection as this cipher does not maintain an internal state other than the message's sequence number. In the case of Encrypt-Then-MAC, practical exploitation requires the use of a CBC cipher; while theoretical integrity is broken for all ciphers when using this mode, message processing will fail at the application layer for CTR and stream ciphers.\n\nFor more details see [https://terrapin-attack.com](https://terrapin-attack.com). \n\n### Impact\n\nThis attack targets the specification of ChaCha20-Poly1305 (chacha20-poly1305@openssh.com) and Encrypt-then-MAC (*-etm@openssh.com), which are widely adopted by well-known SSH implementations and can be considered de-facto standard. These algorithms can be practically exploited; however, in the case of Encrypt-Then-MAC, we additionally require the use of a CBC cipher. As a consequence, this attack works against all well-behaving SSH implementations supporting either of those algorithms and can be used to downgrade (but not fully strip) connection security in case SSH extension negotiation (RFC8308) is supported. The attack may also enable attackers to exploit certain implementation flaws in a man-in-the-middle (MitM) scenario.",
      "cve": "CVE-2023-48795",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/crypto@0.0.0-20210322153248-0c34fe9e7dc2 to 0.0.0-20231218163308-9d2ee975ef9f",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/crypto@0.0.0-20210322153248-0c34fe9e7dc2"
          },
          "version": "0.0.0-20210322153248-0c34fe9e7dc2"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-48795",
          "value": "CVE-2023-48795",
          "url": "https://scout.docker.com/v/CVE-2023-48795?s=github&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20231218163308-9d2ee975ef9f"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-48795?s=github&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20231218163308-9d2ee975ef9f"
        }
      ]
    },
    {
      "id": "d31fd18553fb86895dfd29815660817055cbf986cf52c2b268750b1d12d138c8",
      "category": "container_scanning",
      "message": "CVE-2023-5981 on ubuntu/gnutls28@3.6.13-2ubuntu1.8",
      "description": "A vulnerability was found that the response times to malformed ciphertexts in RSA-PSK ClientKeyExchange differ from response times of ciphertexts with correct PKCS#1 v1.5 padding.",
      "cve": "CVE-2023-5981",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/gnutls28@3.6.13-2ubuntu1.8 to 3.6.13-2ubuntu1.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/gnutls28@3.6.13-2ubuntu1.8?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "3.6.13-2ubuntu1.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-5981",
          "value": "CVE-2023-5981",
          "url": "https://scout.docker.com/v/CVE-2023-5981?s=ubuntu&n=gnutls28&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.6.13-2ubuntu1.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-5981?s=ubuntu&n=gnutls28&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.6.13-2ubuntu1.9"
        }
      ]
    },
    {
      "id": "578cd666f6e21926f2189b1e6930f780f241de05796c965b1a3152a137c5e9a4",
      "category": "container_scanning",
      "message": "CVE-2024-24783 on stdlib@1.16.12",
      "description": "Verifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic.\n\nThis affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates.",
      "cve": "CVE-2024-24783",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24783",
          "value": "CVE-2024-24783",
          "url": "https://scout.docker.com/v/CVE-2024-24783?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24783?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "49cf99c76bde37dcf9361798dedabac71d62bd5bc86b827f47beadcb5c5a6ace",
      "category": "container_scanning",
      "message": "CVE-2024-24783 on stdlib@1.18.9",
      "description": "Verifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic.\n\nThis affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates.",
      "cve": "CVE-2024-24783",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24783",
          "value": "CVE-2024-24783",
          "url": "https://scout.docker.com/v/CVE-2024-24783?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24783?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "d41eca2f86efd7ce0d7584e5f811f5d34a25c07fb4630bcb3359373357748243",
      "category": "container_scanning",
      "message": "CVE-2024-24783 on stdlib@1.20.6",
      "description": "Verifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic.\n\nThis affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates.",
      "cve": "CVE-2024-24783",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24783",
          "value": "CVE-2024-24783",
          "url": "https://scout.docker.com/v/CVE-2024-24783?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24783?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "c12cf6205278eba78c6782175998bcc3cf2f687d6672899c3679f7c8e6e2e69b",
      "category": "container_scanning",
      "message": "CVE-2024-24783 on stdlib@1.16.10",
      "description": "Verifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic.\n\nThis affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates.",
      "cve": "CVE-2024-24783",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24783",
          "value": "CVE-2024-24783",
          "url": "https://scout.docker.com/v/CVE-2024-24783?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24783?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "253c527dab252489082ab7f2c78cb9995e277cf2c222fb345c0dccb13c6f58be",
      "category": "container_scanning",
      "message": "CVE-2024-25710 on org.apache.commons/commons-compress@1.21",
      "description": "Loop with Unreachable Exit Condition ('Infinite Loop') vulnerability in Apache Commons Compress. This issue affects Apache Commons Compress: from 1.3 through 1.25.0.\n\nUsers are recommended to upgrade to version 1.26.0 which fixes the issue.",
      "cve": "CVE-2024-25710",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.commons/commons-compress@1.21 to 1.26.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.commons/commons-compress@1.21"
          },
          "version": "1.21"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-25710",
          "value": "CVE-2024-25710",
          "url": "https://scout.docker.com/v/CVE-2024-25710?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3E%3D1.3%2C%3C1.26.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-25710?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3E%3D1.3%2C%3C1.26.0"
        }
      ]
    },
    {
      "id": "b5861258d8906b7e81bef0d48ad3e5f8c01e6ce0b0e608b38d5f01a055c90e26",
      "category": "container_scanning",
      "message": "CVE-2024-25710 on org.apache.commons/commons-compress@1.5",
      "description": "Loop with Unreachable Exit Condition ('Infinite Loop') vulnerability in Apache Commons Compress. This issue affects Apache Commons Compress: from 1.3 through 1.25.0.\n\nUsers are recommended to upgrade to version 1.26.0 which fixes the issue.",
      "cve": "CVE-2024-25710",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.commons/commons-compress@1.5 to 1.26.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.commons/commons-compress@1.5"
          },
          "version": "1.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-25710",
          "value": "CVE-2024-25710",
          "url": "https://scout.docker.com/v/CVE-2024-25710?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3E%3D1.3%2C%3C1.26.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-25710?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3E%3D1.3%2C%3C1.26.0"
        }
      ]
    },
    {
      "id": "75c4e5c7edd721e3f094825d879d101825e4f19c2f34d8e7808b1d37423bfa6c",
      "category": "container_scanning",
      "message": "CVE-2024-25710 on org.apache.commons/commons-compress@1.20",
      "description": "Loop with Unreachable Exit Condition ('Infinite Loop') vulnerability in Apache Commons Compress. This issue affects Apache Commons Compress: from 1.3 through 1.25.0.\n\nUsers are recommended to upgrade to version 1.26.0 which fixes the issue.",
      "cve": "CVE-2024-25710",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.commons/commons-compress@1.20 to 1.26.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.commons/commons-compress@1.20"
          },
          "version": "1.20"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-25710",
          "value": "CVE-2024-25710",
          "url": "https://scout.docker.com/v/CVE-2024-25710?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3E%3D1.3%2C%3C1.26.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-25710?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3E%3D1.3%2C%3C1.26.0"
        }
      ]
    },
    {
      "id": "8c30050b337d20e93487ef1a55b88e0ad56307963dbb8cb8d5ec19fb0f06833e",
      "category": "container_scanning",
      "message": "CVE-2024-29018 on github.com/docker/docker@20.10.17+incompatible",
      "description": "Moby is an open source container framework originally developed by Docker Inc. as Docker. It is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. As a batteries-included container runtime, Moby comes with a built-in networking implementation that enables communication between containers, and between containers and external resources.\n\nMoby's networking implementation allows for creating and using many networks, each with their own subnet and gateway. This feature is frequently referred to as custom networks, as each network can have a different driver, set of parameters, and thus behaviors. When creating a network, the `--internal` flag is used to designate a network as _internal_. The `internal` attribute in a docker-compose.yml file may also be used to mark a network _internal_, and other API clients may specify the `internal` parameter as well.\n\nWhen containers with networking are created, they are assigned unique network interfaces and IP addresses (typically from a non-routable [RFC 1918](https://datatracker.ietf.org/doc/html/rfc1918) subnet). The root network namespace (hereafter referred to as the 'host') serves as a router for non-internal networks, with a gateway IP that provides SNAT/DNAT to/from container IPs.\n\nContainers on an _internal_ network may communicate between each other, but are precluded from communicating with any networks the host has access to (LAN or WAN) as no default route is configured, and firewall rules are set up to drop all outgoing traffic. Communication with the gateway IP address (and thus appropriately configured host services) is possible, and the host may communicate with any container IP directly.\n\nIn addition to configuring the Linux kernel's various networking features to enable container networking, `dockerd` directly provides some services to container networks. Principal among these is serving as a resolver, enabling service discovery (looking up other containers on the network by name), and resolution of names from an upstream resolver.\n\nWhen a DNS request for a name that does not correspond to a container is received, the request is forwarded to the configured upstream resolver (by default, the host's configured resolver). This request is made from the container network namespace: the level of access and routing of traffic is the same as if the request was made by the container itself.\n\nAs a consequence of this design, containers solely attached to _internal_ network(s) will be unable to resolve names using the upstream resolver, as the container itself is unable to communicate with that nameserver. Only the names of containers also attached to the internal network are able to be resolved.\n\nMany systems will run a local forwarding DNS resolver, typically present on a loopback address (`127.0.0.0/8`), such as systemd-resolved or dnsmasq. Common loopback address examples include `127.0.0.1` or `127.0.0.53`. As the host and any containers have separate loopback devices, a consequence of the design described above is that containers are unable to resolve names from the host's configured resolver, as they cannot reach these addresses on the host loopback device.\n\nTo bridge this gap, and to allow containers to properly resolve names even when a local forwarding resolver is used on a loopback address, `dockerd` will detect this scenario and instead forward DNS requests from the host/root network namespace. The loopback resolver will then forward the requests to its configured upstream resolvers, as expected.\n\n## Impact\n\nBecause `dockerd` will forward DNS requests to the host loopback device, bypassing the container network namespace's normal routing semantics entirely, _internal_ networks can unexpectedly forward DNS requests to an external nameserver.\n\nBy registering a domain for which they control the authoritative nameservers, an attacker could arrange for a compromised container to exfiltrate data by encoding it in DNS queries that will eventually be answered by their nameservers. For example, if the domain `evil.example` was registered, the authoritative nameserver(s) for that domain could (eventually and indirectly) receive a request for `this-is-a-secret.evil.example`.\n\nDocker Desktop is not affected, as Docker Desktop always runs an internal resolver on a RFC 1918 address.\n\n## Patches\n\nMoby releases 26.0.0-rc3, 25.0.5 (released) and 23.0.11 (to be released) are patched to prevent forwarding DNS requests from internal networks.\n\n## Workarounds\n\n-   Run containers intended to be solely attached to _internal_ networks with a custom upstream address (`--dns` argument to `docker run`, or API equivalent), which will force all upstream DNS queries to be resolved from the container network namespace.\n\n## Background\n\n- yair zak originally reported this issue to the Docker security team.\n-  PR <https://github.com/moby/moby/pull/46609> was opened in public to fix this issue, as it was not originally considered to have a security implication.\n- [The official documentation](https://docs.docker.com/network/drivers/ipvlan/#:~:text=If%20the%20parent,the%20network%20completely) claims that \"the `--internal` flag that will completely isolate containers on a network from any communications external to that network,\" which necessitated this advisory and CVE.",
      "cve": "CVE-2024-29018",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/docker/docker@20.10.17+incompatible to 23.0.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/docker@20.10.17%2Bincompatible"
          },
          "version": "20.10.17+incompatible"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-29018",
          "value": "CVE-2024-29018",
          "url": "https://scout.docker.com/v/CVE-2024-29018?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C23.0.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-29018?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C23.0.11"
        }
      ]
    },
    {
      "id": "34129bd88c7fd6026b8a7af5e298b7efb313a787b5b4d1e655d706fc73b7fef5",
      "category": "container_scanning",
      "message": "CVE-2024-30171 on org.bouncycastle/bcprov-jdk15on@1.69",
      "description": "An issue was discovered in Bouncy Castle Java TLS API and JSSE Provider before 1.78. Timing-based leakage may occur in RSA based handshakes because of exception processing.",
      "cve": "CVE-2024-30171",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.bouncycastle/bcprov-jdk15on@1.69 to 1.78",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.bouncycastle/bcprov-jdk15on@1.69"
          },
          "version": "1.69"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-30171",
          "value": "CVE-2024-30171",
          "url": "https://scout.docker.com/v/CVE-2024-30171?s=github&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3C1.78"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-30171?s=github&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3C1.78"
        }
      ]
    },
    {
      "id": "dd7d01a12b7a185e76cdcd0a9e098e7ba98d566f939a7603deae5296c6b5a9fc",
      "category": "container_scanning",
      "message": "CVE-2021-43784 on github.com/opencontainers/runc@1.0.1",
      "description": "### Impact\n\nIn runc, [netlink](https://www.man7.org/linux/man-pages/man7/netlink.7.html) is used internally as a serialization system for specifying the relevant container configuration to the C portion of our code (responsible for the based namespace setup of containers). In all versions of runc prior to 1.0.3, the encoder did not handle the possibility of an integer overflow in the 16-bit length field for the byte array attribute type, meaning that a large enough malicious byte array attribute could result in the length overflowing and the attribute contents being parsed as netlink messages for container configuration.\n\nThis vulnerability requires the attacker to have some control over the configuration of the container and would allow the attacker to bypass the namespace restrictions of the container by simply adding their own netlink payload which disables all namespaces.\n\nPrior to 9c444070ec7bb83995dbc0185da68284da71c554, in practice it was fairly difficult to specify an arbitrary-length netlink message with most container runtimes. The only user-controlled byte array was the namespace paths attributes which can be specified in runc's `config.json`, but as far as we can tell no container runtime gives raw access to that configuration setting -- and having raw access to that setting **would allow the attacker to disable namespace protections entirely anyway** (setting them to `/proc/1/ns/...` for instance). In addition, each namespace path is limited to 4096 bytes (with only 7 namespaces supported by runc at the moment) meaning that even with custom namespace paths it appears an attacker still cannot shove enough bytes into the netlink bytemsg in order to overflow the uint16 counter.\n\nHowever, out of an abundance of caution (given how old this bug is) we decided to treat it as a potentially exploitable vulnerability with a low severity. After 9c444070ec7bb83995dbc0185da68284da71c554 (which was not present in any release of runc prior to the discovery of this bug), all mount paths are included as a giant netlink message which means that this bug becomes significantly more exploitable in more reasonable threat scenarios.\n\nThe main users impacted are those who allow untrusted images with untrusted configurations to run on their machines (such as with shared cloud infrastructure), though as mentioned above it appears this bug was not practically exploitable on any released version of runc to date.\n\n### Patches\nThe patch for this is d72d057ba794164c3cce9451a00b72a78b25e1ae and runc 1.0.3 was released with this bug fixed.\n\n### Workarounds\nTo the extent this is exploitable, disallowing untrusted namespace paths in container configuration should eliminate all practical ways of exploiting this bug. It should be noted that untrusted namespace paths would allow the attacker to disable namespace protections entirely even in the absence of this bug.\n\n### References\n* commit d72d057ba794 (\"runc init: avoid netlink message length overflows\")\n* https://bugs.chromium.org/p/project-zero/issues/detail?id=2241\n\n### Credits\nThanks to Felix Wilhelm from Google Project Zero for discovering and reporting this vulnerability. In particular, the fact they found this vulnerability so quickly, before we made a 1.1 release of runc (which would've been vulnerable) was quite impressive.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [our repo](https://github.com/opencontainers/runc)\n",
      "cve": "CVE-2021-43784",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/opencontainers/runc@1.0.1 to 1.0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/opencontainers/runc@1.0.1"
          },
          "version": "1.0.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-43784",
          "value": "CVE-2021-43784",
          "url": "https://scout.docker.com/v/CVE-2021-43784?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-43784?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.0.3"
        }
      ]
    },
    {
      "id": "4c08cb9903fbb324bfa0d9fdcb1f74516af7c36a1921bf89a618434abb692b68",
      "category": "container_scanning",
      "message": "CVE-2023-28642 on github.com/opencontainers/runc@1.0.1",
      "description": "### Impact\nIt was found that AppArmor, and potentially SELinux, can be bypassed when `/proc` inside the container is symlinked with a specific mount configuration.\n\n### Patches\nFixed in runc v1.1.5, by prohibiting symlinked `/proc`: https://github.com/opencontainers/runc/pull/3785\n\nThis PR fixes CVE-2023-27561 as well.\n\n### Workarounds\nAvoid using an untrusted container image.\n\n",
      "cve": "CVE-2023-28642",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/opencontainers/runc@1.0.1 to 1.1.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/opencontainers/runc@1.0.1"
          },
          "version": "1.0.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-28642",
          "value": "CVE-2023-28642",
          "url": "https://scout.docker.com/v/CVE-2023-28642?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.1.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-28642?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.1.5"
        }
      ]
    },
    {
      "id": "b523b6f5e70c480d264a7613631b16d83301b6e127a9b998ad9fe0c9a613dbbb",
      "category": "container_scanning",
      "message": "CVE-2023-28642 on github.com/opencontainers/runc@1.1.3",
      "description": "### Impact\nIt was found that AppArmor, and potentially SELinux, can be bypassed when `/proc` inside the container is symlinked with a specific mount configuration.\n\n### Patches\nFixed in runc v1.1.5, by prohibiting symlinked `/proc`: https://github.com/opencontainers/runc/pull/3785\n\nThis PR fixes CVE-2023-27561 as well.\n\n### Workarounds\nAvoid using an untrusted container image.\n\n",
      "cve": "CVE-2023-28642",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/opencontainers/runc@1.1.3 to 1.1.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/opencontainers/runc@1.1.3"
          },
          "version": "1.1.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-28642",
          "value": "CVE-2023-28642",
          "url": "https://scout.docker.com/v/CVE-2023-28642?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.1.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-28642?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3C1.1.5"
        }
      ]
    },
    {
      "id": "8a8e26ab6597437dc2dae693c39c8ef787edba11b0939e1c1218c97269386f33",
      "category": "container_scanning",
      "message": "CVE-2023-32681 on requests@2.22.0",
      "description": "### Impact\n\nSince Requests v2.3.0, Requests has been vulnerable to potentially leaking `Proxy-Authorization` headers to destination servers, specifically during redirects to an HTTPS origin. This is a product of how `rebuild_proxies` is used to recompute and [reattach the `Proxy-Authorization` header](https://github.com/psf/requests/blob/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773/requests/sessions.py#L319-L328) to requests when redirected. Note this behavior has _only_ been observed to affect proxied requests when credentials are supplied in the URL user information component (e.g. `https://username:password@proxy:8080`).\n\n**Current vulnerable behavior(s):**\n\n1. HTTP → HTTPS: **leak**\n2. HTTPS → HTTP: **no leak**\n3. HTTPS → HTTPS: **leak**\n4. HTTP → HTTP: **no leak**\n\nFor HTTP connections sent through the proxy, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the `Proxy-Authorization` header must be sent in the CONNECT request as the proxy has no visibility into further tunneled requests. This results in Requests forwarding the header to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate those credentials.\n\nThe reason this currently works for HTTPS connections in Requests is the `Proxy-Authorization` header is also handled by urllib3 with our usage of the ProxyManager in adapters.py with [`proxy_manager_for`](https://github.com/psf/requests/blob/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773/requests/adapters.py#L199-L235). This will compute the required proxy headers in `proxy_headers` and pass them to the Proxy Manager, avoiding attaching them directly to the Request object. This will be our preferred option going forward for default usage.\n\n### Patches\nStarting in Requests v2.31.0, Requests will no longer attach this header to redirects with an HTTPS destination. This should have no negative impacts on the default behavior of the library as the proxy credentials are already properly being handled by urllib3's ProxyManager.\n\nFor users with custom adapters, this _may_ be potentially breaking if you were already working around this behavior. The previous functionality of `rebuild_proxies` doesn't make sense in any case, so we would encourage any users impacted to migrate any handling of Proxy-Authorization directly into their custom adapter.\n\n### Workarounds\nFor users who are not able to update Requests immediately, there is one potential workaround.\n\nYou may disable redirects by setting `allow_redirects` to `False` on all calls through Requests top-level APIs. Note that if you're currently relying on redirect behaviors, you will need to capture the 3xx response codes and ensure a new request is made to the redirect destination.\n```\nimport requests\nr = requests.get('http://github.com/', allow_redirects=False)\n```\n\n### Credits\n\nThis vulnerability was discovered and disclosed by the following individuals.\n\nDennis Brinkrolf, Haxolot (https://haxolot.com/)\nTobias Funke, (tobiasfunke93@gmail.com)",
      "cve": "CVE-2023-32681",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade requests@2.22.0 to 2.31.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/requests@2.22.0"
          },
          "version": "2.22.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-32681",
          "value": "CVE-2023-32681",
          "url": "https://scout.docker.com/v/CVE-2023-32681?s=github&n=requests&t=pypi&vr=%3E%3D2.3.0%2C%3C2.31.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-32681?s=github&n=requests&t=pypi&vr=%3E%3D2.3.0%2C%3C2.31.0"
        }
      ]
    },
    {
      "id": "2195db07a6d75b042649f5307c2ce23d3aa5a20d94fa163c715c79e8f9d86662",
      "category": "container_scanning",
      "message": "CVE-2023-39318 on stdlib@1.16.10",
      "description": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in <script> contexts. This may cause the template parser to improperly interpret the contents of <script> contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
      "cve": "CVE-2023-39318",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.20.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39318",
          "value": "CVE-2023-39318",
          "url": "https://scout.docker.com/v/CVE-2023-39318?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39318?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ]
    },
    {
      "id": "8cc03107ed991854568a74b7e18c95f59cc02c54f9e7cb1adad46d2cff1f3721",
      "category": "container_scanning",
      "message": "CVE-2023-39318 on stdlib@1.16.12",
      "description": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in <script> contexts. This may cause the template parser to improperly interpret the contents of <script> contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
      "cve": "CVE-2023-39318",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.20.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39318",
          "value": "CVE-2023-39318",
          "url": "https://scout.docker.com/v/CVE-2023-39318?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39318?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ]
    },
    {
      "id": "5c514f287fc5254db25cd3cbcda786e4dbb8209ed0f7ce5799e8d048dffb4ea1",
      "category": "container_scanning",
      "message": "CVE-2023-39318 on stdlib@1.20.6",
      "description": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in <script> contexts. This may cause the template parser to improperly interpret the contents of <script> contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
      "cve": "CVE-2023-39318",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.20.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39318",
          "value": "CVE-2023-39318",
          "url": "https://scout.docker.com/v/CVE-2023-39318?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39318?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ]
    },
    {
      "id": "a1bbdb4d5d84e862128185885b7327f84e04199d1c1930868ad2f86a4b674980",
      "category": "container_scanning",
      "message": "CVE-2023-39318 on stdlib@1.18.9",
      "description": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in <script> contexts. This may cause the template parser to improperly interpret the contents of <script> contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
      "cve": "CVE-2023-39318",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.20.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39318",
          "value": "CVE-2023-39318",
          "url": "https://scout.docker.com/v/CVE-2023-39318?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39318?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ]
    },
    {
      "id": "ed7af7ceaac63ff25fd84b65108a288d319246780ab624f76c6b39e5f343bd46",
      "category": "container_scanning",
      "message": "CVE-2023-39319 on stdlib@1.18.9",
      "description": "The html/template package does not apply the proper rules for handling occurrences of \"<script\", \"<!--\", and \"</script\" within JS literals in <script> contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
      "cve": "CVE-2023-39319",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.20.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39319",
          "value": "CVE-2023-39319",
          "url": "https://scout.docker.com/v/CVE-2023-39319?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39319?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ]
    },
    {
      "id": "81138c61d7daa9376c787a20dbdac27049d4884635e1c7f9e24f702777386716",
      "category": "container_scanning",
      "message": "CVE-2023-39319 on stdlib@1.16.10",
      "description": "The html/template package does not apply the proper rules for handling occurrences of \"<script\", \"<!--\", and \"</script\" within JS literals in <script> contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
      "cve": "CVE-2023-39319",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.20.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39319",
          "value": "CVE-2023-39319",
          "url": "https://scout.docker.com/v/CVE-2023-39319?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39319?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ]
    },
    {
      "id": "2a1fe0a53330b723888bb7e1c9ae7276a343dac4dcfc9ed04a684b5b70a651e4",
      "category": "container_scanning",
      "message": "CVE-2023-39319 on stdlib@1.16.12",
      "description": "The html/template package does not apply the proper rules for handling occurrences of \"<script\", \"<!--\", and \"</script\" within JS literals in <script> contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
      "cve": "CVE-2023-39319",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.20.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39319",
          "value": "CVE-2023-39319",
          "url": "https://scout.docker.com/v/CVE-2023-39319?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39319?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ]
    },
    {
      "id": "7d7b6567da7113330f5abbfca2b5b0780db07e7f740ad5aee4a7701c39813ac7",
      "category": "container_scanning",
      "message": "CVE-2023-39319 on stdlib@1.20.6",
      "description": "The html/template package does not apply the proper rules for handling occurrences of \"<script\", \"<!--\", and \"</script\" within JS literals in <script> contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
      "cve": "CVE-2023-39319",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.20.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39319",
          "value": "CVE-2023-39319",
          "url": "https://scout.docker.com/v/CVE-2023-39319?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39319?s=golang&n=stdlib&t=golang&vr=%3C1.20.8"
        }
      ]
    },
    {
      "id": "68f9fff389db10e670c55df4e268d72cb95261dd99b61919a29f482ac662a15f",
      "category": "container_scanning",
      "message": "CVE-2023-3978 on golang.org/x/net@0.10.0",
      "description": "Text nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack. ",
      "cve": "CVE-2023-3978",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.10.0 to 0.13.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.10.0"
          },
          "version": "0.10.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-3978",
          "value": "CVE-2023-3978",
          "url": "https://scout.docker.com/v/CVE-2023-3978?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.13.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-3978?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.13.0"
        }
      ]
    },
    {
      "id": "23bc9e6437da0a4971707702bbadc937ddd4e933a0bbae2ed2c99e732d096112",
      "category": "container_scanning",
      "message": "CVE-2024-45336 on stdlib@1.18.9",
      "description": "The HTTP client drops sensitive headers after following a cross-domain redirect. For example, a request to a.com/ containing an Authorization header which is redirected to b.com/ will not send that header to b.com.\n\nIn the event that the client received a subsequent same-domain redirect, however, the sensitive headers would be restored. For example, a chain of redirects from a.com/, to b.com/1, and finally to b.com/2 would incorrectly send the Authorization header to b.com/2.",
      "cve": "CVE-2024-45336",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.22.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45336",
          "value": "CVE-2024-45336",
          "url": "https://scout.docker.com/v/CVE-2024-45336?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45336?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ]
    },
    {
      "id": "84b9a3de6ba759ba126ec8915b63f215e53f86478963a1f85a82aff58f8a4be6",
      "category": "container_scanning",
      "message": "CVE-2024-45336 on stdlib@1.16.12",
      "description": "The HTTP client drops sensitive headers after following a cross-domain redirect. For example, a request to a.com/ containing an Authorization header which is redirected to b.com/ will not send that header to b.com.\n\nIn the event that the client received a subsequent same-domain redirect, however, the sensitive headers would be restored. For example, a chain of redirects from a.com/, to b.com/1, and finally to b.com/2 would incorrectly send the Authorization header to b.com/2.",
      "cve": "CVE-2024-45336",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.22.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45336",
          "value": "CVE-2024-45336",
          "url": "https://scout.docker.com/v/CVE-2024-45336?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45336?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ]
    },
    {
      "id": "1eff669f5a009f1619fbeb946a66e80adf7023f6b65990feb0c10839517fa263",
      "category": "container_scanning",
      "message": "CVE-2024-45336 on stdlib@1.20.6",
      "description": "The HTTP client drops sensitive headers after following a cross-domain redirect. For example, a request to a.com/ containing an Authorization header which is redirected to b.com/ will not send that header to b.com.\n\nIn the event that the client received a subsequent same-domain redirect, however, the sensitive headers would be restored. For example, a chain of redirects from a.com/, to b.com/1, and finally to b.com/2 would incorrectly send the Authorization header to b.com/2.",
      "cve": "CVE-2024-45336",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.22.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45336",
          "value": "CVE-2024-45336",
          "url": "https://scout.docker.com/v/CVE-2024-45336?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45336?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ]
    },
    {
      "id": "68c1b6e20245202dbea4a323e77d45d7867a030677e4cd257ed31072a2ed8b0d",
      "category": "container_scanning",
      "message": "CVE-2024-45336 on stdlib@1.16.10",
      "description": "The HTTP client drops sensitive headers after following a cross-domain redirect. For example, a request to a.com/ containing an Authorization header which is redirected to b.com/ will not send that header to b.com.\n\nIn the event that the client received a subsequent same-domain redirect, however, the sensitive headers would be restored. For example, a chain of redirects from a.com/, to b.com/1, and finally to b.com/2 would incorrectly send the Authorization header to b.com/2.",
      "cve": "CVE-2024-45336",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.22.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45336",
          "value": "CVE-2024-45336",
          "url": "https://scout.docker.com/v/CVE-2024-45336?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45336?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ]
    },
    {
      "id": "7f887188f30f7710713d53e3024175622970e1c73e8498abdfe9e03828fe771d",
      "category": "container_scanning",
      "message": "CVE-2024-45341 on stdlib@1.16.12",
      "description": "A certificate with a URI which has a IPv6 address with a zone ID may incorrectly satisfy a URI name constraint that applies to the certificate chain.\n\nCertificates containing URIs are not permitted in the web PKI, so this only affects users of private PKIs which make use of URIs.",
      "cve": "CVE-2024-45341",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.22.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45341",
          "value": "CVE-2024-45341",
          "url": "https://scout.docker.com/v/CVE-2024-45341?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45341?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ]
    },
    {
      "id": "a06a69341dcc046504135dab849c36d7ccce7f44a94a50461857d76b4165db7a",
      "category": "container_scanning",
      "message": "CVE-2024-45341 on stdlib@1.16.10",
      "description": "A certificate with a URI which has a IPv6 address with a zone ID may incorrectly satisfy a URI name constraint that applies to the certificate chain.\n\nCertificates containing URIs are not permitted in the web PKI, so this only affects users of private PKIs which make use of URIs.",
      "cve": "CVE-2024-45341",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.22.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45341",
          "value": "CVE-2024-45341",
          "url": "https://scout.docker.com/v/CVE-2024-45341?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45341?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ]
    },
    {
      "id": "ec9acfc8875d9bf7f72f96296ad0927594a56a3f771c855374a871bfc0414531",
      "category": "container_scanning",
      "message": "CVE-2024-45341 on stdlib@1.20.6",
      "description": "A certificate with a URI which has a IPv6 address with a zone ID may incorrectly satisfy a URI name constraint that applies to the certificate chain.\n\nCertificates containing URIs are not permitted in the web PKI, so this only affects users of private PKIs which make use of URIs.",
      "cve": "CVE-2024-45341",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.22.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45341",
          "value": "CVE-2024-45341",
          "url": "https://scout.docker.com/v/CVE-2024-45341?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45341?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ]
    },
    {
      "id": "14ec88a77e046815e9e2450d492003e222f3a074764eaaaf7f1eee65090fac3e",
      "category": "container_scanning",
      "message": "CVE-2024-45341 on stdlib@1.18.9",
      "description": "A certificate with a URI which has a IPv6 address with a zone ID may incorrectly satisfy a URI name constraint that applies to the certificate chain.\n\nCertificates containing URIs are not permitted in the web PKI, so this only affects users of private PKIs which make use of URIs.",
      "cve": "CVE-2024-45341",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.22.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45341",
          "value": "CVE-2024-45341",
          "url": "https://scout.docker.com/v/CVE-2024-45341?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45341?s=golang&n=stdlib&t=golang&vr=%3C1.22.11"
        }
      ]
    },
    {
      "id": "6dbc8c4be02f9a49ab8cf46e7b21e2a7cee34b48210e755b094927fe11aab447",
      "category": "container_scanning",
      "message": "CVE-2023-36558 on Microsoft.AspNetCore.Components@6.0.21.52608",
      "description": "# Microsoft Security Advisory CVE-2023-36558: .NET Security Feature Bypass Vulnerability\n\n## <a name=\"executive-summary\"></a>Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 6.0, ASP.NET Core 7.0 and, ASP.NET Core 8.0 RC2. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\n\nA security feature bypass vulnerability exists in ASP.NET where an unauthenticated user is able to bypass validation on Blazor server forms which could trigger unintended actions.\n\n\n## Announcement\n\nAnnouncement for this issue can be found at  https://github.com/dotnet/announcements/issues/288\n\n### <a name=\"mitigation-factors\"></a>Mitigation factors\n\nThis vulnerability only affects ASP.NET Core Blazor apps. Other application types, including ASP.NET Core apps which do not utilize Blazor, are not affected.\n\n## <a name=\"affected-software\"></a>Affected software\n\n\n* Any ASP.NET Core Blazor 6.0 application running on .NET 6.0.24 or earlier.\n* Any ASP.NET Core Blazor 7.0 application running on .NET 7.0.13 or earlier.\n* Any ASP.NET Core Blazor 8.0 application running on .NET 8.0 RC2.\n\nIf your application uses the following package versions, ensure you update to the latest version of .NET.\n\n### <a name=\".NET 7\"></a>.NET 8.0\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.AspNetCore.Components](https://www.nuget.org/packages/Microsoft.AspNetCore.Components/8.0.0-rc.2.23480.2)      | 8.0.0-rc.2.23480.2 | 8.0.0\n\n### <a name=\".NET 7\"></a>.NET 7.0\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.AspNetCore.Components](https://www.nuget.org/packages/Microsoft.AspNetCore.Components)      | >= 7.0.0, < 7.0.13> | 7.0.14\n\n### <a name=\".NET 7\"></a>.NET 6.0\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.AspNetCore.Components](https://www.nuget.org/packages/Microsoft.AspNetCore.Components)      | >= 6.0.0, < 6.0.24 | 6.0.25\n\n\n## Advisory FAQ\n\n### <a name=\"how-affected\"></a>How do I know if I am affected?\n\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\n\n### <a name=\"how-fix\"></a>How do I fix the issue?\n\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n* If you are using one of the affected packages, please update to the patched version listed above.\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET Core SDK (reflecting any global.json):\n\n Version:   7.0.200\n Commit:    8473146e7d\n\nRuntime Environment:\n\n OS Name:     Windows\n OS Version:  10.0.18363\n OS Platform: Windows\n RID:         win10-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\7.0.300\\\n\nHost (useful for support):\n\n  Version: 76.0.5\n  Commit:  8473146e7d\n\n.NET Core SDKs installed:\n\n  7.0.200 [C:\\Program Files\\dotnet\\sdk]\n\n.NET Core runtimes installed:\n\n  Microsoft.AspNetCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 7.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nTo install additional .NET Core runtimes or SDKs:\n  https://aka.ms/dotnet-download\n```\n\n* If you're using .NET 8.0, you should download and install .NET 8.0.0  Runtime  or .NET 8.0.100 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\n* If you're using .NET 7.0, you should download and install Runtime 7.0.14 or SDK 7.0.114 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n* If you're using .NET 6.0, you should download and install Runtime 6.0.25 or SDK 6.0.317 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n.NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### External Links\n\n[CVE-2023-36558]( https://www.cve.org/CVERecord?id=CVE-2023-36558)\n\n### Revisions\n\nV1.0 (November 14, 2023): Advisory published.\n\n_Version 1.0_\n\n_Last Updated 2023-11-14_",
      "cve": "CVE-2023-36558",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade Microsoft.AspNetCore.Components@6.0.21.52608 to 6.0.25",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Microsoft.AspNetCore.Components@6.0.21.52608"
          },
          "version": "6.0.21.52608"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-36558",
          "value": "CVE-2023-36558",
          "url": "https://scout.docker.com/v/CVE-2023-36558?s=github&n=Microsoft.AspNetCore.Components&t=nuget&vr=%3E%3D6.0.0%2C%3C%3D6.0.24"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-36558?s=github&n=Microsoft.AspNetCore.Components&t=nuget&vr=%3E%3D6.0.0%2C%3C%3D6.0.24"
        }
      ]
    },
    {
      "id": "505c261cd7b9b596c4bb75b83cc21e6ac1b192da254e2f7fa5af48d92332f45e",
      "category": "container_scanning",
      "message": "CVE-2020-1945 on org.apache.ant/ant@1.7.1",
      "description": "Apache Ant 1.1 to 1.9.14 and 1.10.0 to 1.10.7 uses the default temporary directory identified by the Java system property java.io.tmpdir for several tasks and may thus leak sensitive information. The fixcrlf and replaceregexp tasks also copy files from the temporary directory back into the build tree allowing an attacker to inject modified source files into the build process.",
      "cve": "CVE-2020-1945",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.ant/ant@1.7.1 to 1.9.15",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.ant/ant@1.7.1"
          },
          "version": "1.7.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-1945",
          "value": "CVE-2020-1945",
          "url": "https://scout.docker.com/v/CVE-2020-1945?s=github&n=ant&ns=org.apache.ant&t=maven&vr=%3E%3D1.1%2C%3C1.9.15"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-1945?s=github&n=ant&ns=org.apache.ant&t=maven&vr=%3E%3D1.1%2C%3C1.9.15"
        }
      ]
    },
    {
      "id": "2d7cb0d314c589ff0fc54582b48baae16889807fc8265bc602f7f83389fd7ff3",
      "category": "container_scanning",
      "message": "CVE-2020-1945 on org.apache.ant/ant@1.9.9",
      "description": "Apache Ant 1.1 to 1.9.14 and 1.10.0 to 1.10.7 uses the default temporary directory identified by the Java system property java.io.tmpdir for several tasks and may thus leak sensitive information. The fixcrlf and replaceregexp tasks also copy files from the temporary directory back into the build tree allowing an attacker to inject modified source files into the build process.",
      "cve": "CVE-2020-1945",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.ant/ant@1.9.9 to 1.9.15",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.ant/ant@1.9.9"
          },
          "version": "1.9.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-1945",
          "value": "CVE-2020-1945",
          "url": "https://scout.docker.com/v/CVE-2020-1945?s=github&n=ant&ns=org.apache.ant&t=maven&vr=%3E%3D1.1%2C%3C1.9.15"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-1945?s=github&n=ant&ns=org.apache.ant&t=maven&vr=%3E%3D1.1%2C%3C1.9.15"
        }
      ]
    },
    {
      "id": "b7e80305f8bcab5130468e74bbcc442020b09af13a5a34619ca0f02aac84768f",
      "category": "container_scanning",
      "message": "CVE-2022-24512 on Microsoft.NETCore.App.Runtime.linux-x64@6.0.0",
      "description": "Microsoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 5.0, and .NET Core 3.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\nA Remote Code Execution vulnerability exists in .NET 6.0, .NET 5.0, and .NET Core 3.1 where a stack buffer overrun occurs in .NET Double Parse routine.\n\n### Patches\n* Any .NET 6.0 application running on .NET 6.0.2 or lower\n* Any .NET 5.0 application running on .NET 5.0.14 or lower\n* Any .NET Core 3.1 application running on .NET Core 3.1.22 or lower\n\nTo fix the issue, please install the latest version of .NET 6.0, .NET 5.0, or .NET Core 3.1. If you have installed one or more .NET Core SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET Core SDKs.\n\n* If you're using .NET 6.0, you should download and install Runtime 6.0.3 or SDK 6.0.103 (for Visual Studio 2019 v17.0) or SDK 6.0.201 (for Visual Studio 2019 V17.1) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\n* If you're using .NET 5.0, you should download and install Runtime 5.0.15 or SDK 5.0.406 (for Visual Studio 2019 v16.11) or SDK 5.0.212 (for Visual Studio 2019 V16.9) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\n* If you're using .NET Core 3.1, you should download and install Runtime 3.1.23 or SDK 3.1.417 (for Visual Studio 2019 v16.7) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\n.NET 6.0, .NET 5.0, and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\n### Other Details\n\n- Announcement for this issue can be found at dotnet/announcements#213\n- An Issue for this can be found at https://github.com/dotnet/runtime/issues/66348\n- MSRC details for this can be found at https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2022-24512",
      "cve": "CVE-2022-24512",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade Microsoft.NETCore.App.Runtime.linux-x64@6.0.0 to 6.0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Microsoft.NETCore.App.Runtime.linux-x64@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-24512",
          "value": "CVE-2022-24512",
          "url": "https://scout.docker.com/v/CVE-2022-24512?s=github&n=Microsoft.NETCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-24512?s=github&n=Microsoft.NETCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.3"
        }
      ]
    },
    {
      "id": "77bbac422bfc282a22d272eb88b9f4e2efcf6ad2f8dd51d3f4a31d491063dd58",
      "category": "container_scanning",
      "message": "CVE-2021-37533 on commons-net/commons-net@3.4",
      "description": "Prior to Apache Commons Net 3.9.0, Net's FTP client trusts the host from PASV response by default. A malicious server can redirect the Commons Net code to use a different host, but the user has to connect to the malicious server in the first place. This may lead to leakage of information about services running on the private network of the client.\nThe default in version 3.9.0 is now false to ignore such hosts, as cURL does. See https://issues.apache.org/jira/browse/NET-711.\n",
      "cve": "CVE-2021-37533",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade commons-net/commons-net@3.4 to 3.9.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/commons-net/commons-net@3.4"
          },
          "version": "3.4"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-37533",
          "value": "CVE-2021-37533",
          "url": "https://scout.docker.com/v/CVE-2021-37533?s=github&n=commons-net&ns=commons-net&t=maven&vr=%3C3.9.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-37533?s=github&n=commons-net&ns=commons-net&t=maven&vr=%3C3.9.0"
        }
      ]
    },
    {
      "id": "fec30ddfcce94d60fa2678a10027f4e8de79e1fa923500cec665af81d9e1c036",
      "category": "container_scanning",
      "message": "CVE-2021-37533 on commons-net/commons-net@3.3",
      "description": "Prior to Apache Commons Net 3.9.0, Net's FTP client trusts the host from PASV response by default. A malicious server can redirect the Commons Net code to use a different host, but the user has to connect to the malicious server in the first place. This may lead to leakage of information about services running on the private network of the client.\nThe default in version 3.9.0 is now false to ignore such hosts, as cURL does. See https://issues.apache.org/jira/browse/NET-711.\n",
      "cve": "CVE-2021-37533",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade commons-net/commons-net@3.3 to 3.9.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/commons-net/commons-net@3.3"
          },
          "version": "3.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-37533",
          "value": "CVE-2021-37533",
          "url": "https://scout.docker.com/v/CVE-2021-37533?s=github&n=commons-net&ns=commons-net&t=maven&vr=%3C3.9.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-37533?s=github&n=commons-net&ns=commons-net&t=maven&vr=%3C3.9.0"
        }
      ]
    },
    {
      "id": "479914c064b80cd13d86068adb0b8cb8fc24aeb3f1eb5b6b45f29020f6ffb9bd",
      "category": "container_scanning",
      "message": "CVE-2022-1705 on stdlib@1.16.12",
      "description": "The HTTP/1 client accepted some invalid Transfer-Encoding headers as indicating a \"chunked\" encoding. This could potentially allow for request smuggling, but only if combined with an intermediate server that also improperly failed to reject the header as invalid.",
      "cve": "CVE-2022-1705",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.17.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-1705",
          "value": "CVE-2022-1705",
          "url": "https://scout.docker.com/v/CVE-2022-1705?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-1705?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ]
    },
    {
      "id": "e3e00b17d26abf0c15bfa4aae97b50053f07bad192b92aa6a47c99d44b7974db",
      "category": "container_scanning",
      "message": "CVE-2022-1705 on stdlib@1.16.10",
      "description": "The HTTP/1 client accepted some invalid Transfer-Encoding headers as indicating a \"chunked\" encoding. This could potentially allow for request smuggling, but only if combined with an intermediate server that also improperly failed to reject the header as invalid.",
      "cve": "CVE-2022-1705",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.17.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-1705",
          "value": "CVE-2022-1705",
          "url": "https://scout.docker.com/v/CVE-2022-1705?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-1705?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ]
    },
    {
      "id": "227023c4213e44baa096530f950602ef1d24267e7e42f60ff6074442e537334a",
      "category": "container_scanning",
      "message": "CVE-2022-32148 on stdlib@1.16.10",
      "description": "Client IP adresses may be unintentionally exposed via X-Forwarded-For headers.\n\nWhen httputil.ReverseProxy.ServeHTTP is called with a Request.Header map containing a nil value for the X-Forwarded-For header, ReverseProxy sets the client IP as the value of the X-Forwarded-For header, contrary to its documentation.\n\nIn the more usual case where a Director function sets the X-Forwarded-For header value to nil, ReverseProxy leaves the header unmodified as expected.",
      "cve": "CVE-2022-32148",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.17.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-32148",
          "value": "CVE-2022-32148",
          "url": "https://scout.docker.com/v/CVE-2022-32148?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-32148?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ]
    },
    {
      "id": "403b1bc677d834b3444a198f1a233671ab90bdc10e42c4bc5bfd0a96ba447c6e",
      "category": "container_scanning",
      "message": "CVE-2022-32148 on stdlib@1.16.12",
      "description": "Client IP adresses may be unintentionally exposed via X-Forwarded-For headers.\n\nWhen httputil.ReverseProxy.ServeHTTP is called with a Request.Header map containing a nil value for the X-Forwarded-For header, ReverseProxy sets the client IP as the value of the X-Forwarded-For header, contrary to its documentation.\n\nIn the more usual case where a Director function sets the X-Forwarded-For header value to nil, ReverseProxy leaves the header unmodified as expected.",
      "cve": "CVE-2022-32148",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.17.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-32148",
          "value": "CVE-2022-32148",
          "url": "https://scout.docker.com/v/CVE-2022-32148?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-32148?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ]
    },
    {
      "id": "a97423286051a5f08cb521a6fa0660002b02113283b65b1d1af86ce317977287",
      "category": "container_scanning",
      "message": "CVE-2022-38749 on org.yaml/snakeyaml@1.26",
      "description": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
      "cve": "CVE-2022-38749",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.yaml/snakeyaml@1.26 to 1.31",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.yaml/snakeyaml@1.26"
          },
          "version": "1.26"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-38749",
          "value": "CVE-2022-38749",
          "url": "https://scout.docker.com/v/CVE-2022-38749?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.31"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-38749?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.31"
        }
      ]
    },
    {
      "id": "bd7bb8fdd28f55bdcef43c75889b45e2ffabf6f5d94ec3a0ddcb4f26653eb37d",
      "category": "container_scanning",
      "message": "CVE-2022-38751 on org.yaml/snakeyaml@1.26",
      "description": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
      "cve": "CVE-2022-38751",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.yaml/snakeyaml@1.26 to 1.31",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.yaml/snakeyaml@1.26"
          },
          "version": "1.26"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-38751",
          "value": "CVE-2022-38751",
          "url": "https://scout.docker.com/v/CVE-2022-38751?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.31"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-38751?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.31"
        }
      ]
    },
    {
      "id": "dcfd75c05dea427cda4b1c33781c98b4a3a39b13c6c2ab61c9975463d2b8d51d",
      "category": "container_scanning",
      "message": "CVE-2022-38752 on org.yaml/snakeyaml@1.26",
      "description": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DoS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack-overflow.",
      "cve": "CVE-2022-38752",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.yaml/snakeyaml@1.26 to 1.32",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.yaml/snakeyaml@1.26"
          },
          "version": "1.26"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-38752",
          "value": "CVE-2022-38752",
          "url": "https://scout.docker.com/v/CVE-2022-38752?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.32"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-38752?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.32"
        }
      ]
    },
    {
      "id": "685397bbb18f08902f5e68382489268a57291a70da073fe1abb23e57cefdaf44",
      "category": "container_scanning",
      "message": "CVE-2022-40152 on com.fasterxml.woodstox/woodstox-core@6.2.4",
      "description": "Those using FasterXML/woodstox to seralize XML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.\n\nThis vulnerability is only relevant for users making use of the DTD parsing functionality.",
      "cve": "CVE-2022-40152",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade com.fasterxml.woodstox/woodstox-core@6.2.4 to 6.4.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.fasterxml.woodstox/woodstox-core@6.2.4"
          },
          "version": "6.2.4"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-40152",
          "value": "CVE-2022-40152",
          "url": "https://scout.docker.com/v/CVE-2022-40152?s=github&n=woodstox-core&ns=com.fasterxml.woodstox&t=maven&vr=%3E%3D6.0.0%2C%3C6.4.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-40152?s=github&n=woodstox-core&ns=com.fasterxml.woodstox&t=maven&vr=%3E%3D6.0.0%2C%3C6.4.0"
        }
      ]
    },
    {
      "id": "d1179ce240b4884dcdb0db8f6b36cdaa3e2b0c3a6b0e0ee6a1180da67b3a5c76",
      "category": "container_scanning",
      "message": "CVE-2022-40152 on com.fasterxml.woodstox/woodstox-core@6.2.1",
      "description": "Those using FasterXML/woodstox to seralize XML data may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.\n\nThis vulnerability is only relevant for users making use of the DTD parsing functionality.",
      "cve": "CVE-2022-40152",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade com.fasterxml.woodstox/woodstox-core@6.2.1 to 6.4.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.fasterxml.woodstox/woodstox-core@6.2.1"
          },
          "version": "6.2.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-40152",
          "value": "CVE-2022-40152",
          "url": "https://scout.docker.com/v/CVE-2022-40152?s=github&n=woodstox-core&ns=com.fasterxml.woodstox&t=maven&vr=%3E%3D6.0.0%2C%3C6.4.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-40152?s=github&n=woodstox-core&ns=com.fasterxml.woodstox&t=maven&vr=%3E%3D6.0.0%2C%3C6.4.0"
        }
      ]
    },
    {
      "id": "4506339fbda359c6922c8ed656a83a86efd42166ac7deef60d26b131a65932a6",
      "category": "container_scanning",
      "message": "CVE-2022-41854 on org.yaml/snakeyaml@1.26",
      "description": "Those using Snakeyaml to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack.",
      "cve": "CVE-2022-41854",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.yaml/snakeyaml@1.26 to 1.32",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.yaml/snakeyaml@1.26"
          },
          "version": "1.26"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41854",
          "value": "CVE-2022-41854",
          "url": "https://scout.docker.com/v/CVE-2022-41854?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.32"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41854?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.32"
        }
      ]
    },
    {
      "id": "76b291df3167b2422e50d4ee04a45251eaacb3dedbed993254477d58d8543c7d",
      "category": "container_scanning",
      "message": "CVE-2023-29406 on stdlib@1.18.9",
      "description": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests.\n\nWith fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
      "cve": "CVE-2023-29406",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.19.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29406",
          "value": "CVE-2023-29406",
          "url": "https://scout.docker.com/v/CVE-2023-29406?s=golang&n=stdlib&t=golang&vr=%3C1.19.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29406?s=golang&n=stdlib&t=golang&vr=%3C1.19.11"
        }
      ]
    },
    {
      "id": "c04605fff43c073bf4dacea84e6c2c151f0f956748ae19dcd41dcd210651ddfb",
      "category": "container_scanning",
      "message": "CVE-2023-29406 on stdlib@1.16.10",
      "description": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests.\n\nWith fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
      "cve": "CVE-2023-29406",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.19.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29406",
          "value": "CVE-2023-29406",
          "url": "https://scout.docker.com/v/CVE-2023-29406?s=golang&n=stdlib&t=golang&vr=%3C1.19.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29406?s=golang&n=stdlib&t=golang&vr=%3C1.19.11"
        }
      ]
    },
    {
      "id": "c9dfe884f38023feb5b6f1150c19bb7c205fb14a5ffc796297b0c480912d5a46",
      "category": "container_scanning",
      "message": "CVE-2023-29406 on stdlib@1.16.12",
      "description": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests.\n\nWith fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
      "cve": "CVE-2023-29406",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.19.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29406",
          "value": "CVE-2023-29406",
          "url": "https://scout.docker.com/v/CVE-2023-29406?s=golang&n=stdlib&t=golang&vr=%3C1.19.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29406?s=golang&n=stdlib&t=golang&vr=%3C1.19.11"
        }
      ]
    },
    {
      "id": "84a008ee79f9adcc89475e119af7e56d2755ae9eda61185c5675d7823e9693fa",
      "category": "container_scanning",
      "message": "CVE-2023-34462 on io.netty/netty-handler@4.1.73.Final",
      "description": "### Summary\nThe `SniHandler` can allocate up to 16MB of heap for each channel during the TLS handshake. When the handler or the channel does not have an idle timeout, it can be used to make a TCP server using the `SniHandler` to allocate 16MB of heap.\n\n### Details\nThe `SniHandler` class is a handler that waits for the TLS handshake to configure a `SslHandler` according to the indicated server name by the `ClientHello` record. For this matter it allocates a `ByteBuf` using the value defined in the `ClientHello` record. \n\nNormally the value of the packet should be smaller than the handshake packet but there are not checks done here and the way the code is written, it is possible to craft a packet that makes the `SslClientHelloHandler`\n\n1/ allocate a 16MB `ByteBuf`\n2/ not fail `decode` method `in` buffer\n3/ get out of the loop without an exception\n\nThe combination of this without the use of a timeout makes  easy to connect to a TCP server and allocate 16MB of heap memory per connection.\n\n### Impact\nIf the user has no idle timeout handler configured it might be possible for a remote peer to send a client hello packet which lead the server to buffer up to 16MB of data per connection. This could lead to a OutOfMemoryError and so result in a DDOS.",
      "cve": "CVE-2023-34462",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-handler@4.1.73.Final to 4.1.94.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-handler@4.1.73.Final"
          },
          "version": "4.1.73.Final"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-34462",
          "value": "CVE-2023-34462",
          "url": "https://scout.docker.com/v/CVE-2023-34462?s=github&n=netty-handler&ns=io.netty&t=maven&vr=%3C4.1.94.Final"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-34462?s=github&n=netty-handler&ns=io.netty&t=maven&vr=%3C4.1.94.Final"
        }
      ]
    },
    {
      "id": "e242fca93dd06774249f11286024eb7aa7f0c01f40b454f1988b7d67835af25b",
      "category": "container_scanning",
      "message": "CVE-2023-36054 on ubuntu/krb5@1.17-6ubuntu4.3",
      "description": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
      "cve": "CVE-2023-36054",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/krb5@1.17-6ubuntu4.3 to 1.17-6ubuntu4.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/krb5@1.17-6ubuntu4.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.17-6ubuntu4.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-36054",
          "value": "CVE-2023-36054",
          "url": "https://scout.docker.com/v/CVE-2023-36054?s=ubuntu&n=krb5&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.17-6ubuntu4.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-36054?s=ubuntu&n=krb5&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.17-6ubuntu4.4"
        }
      ]
    },
    {
      "id": "ad15f3ee19d8cbcd5ff69308c88b80bd07145613f0e79c11f04092d859d818f0",
      "category": "container_scanning",
      "message": "CVE-2023-36799 on Microsoft.NETCore.App.Runtime.linux-x64@6.0.0",
      "description": "# Microsoft Security Advisory CVE-2023-36799: .NET Denial of Service Vulnerability\n\n## <a name=\"executive-summary\"></a>Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0 and .NET 6.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET where reading a maliciously crafted X.509 certificate may result in Denial of Service. This issue only affects Linux systems.\n\n## Announcement\n\nAnnouncement for this issue can be found at  https://github.com/dotnet/announcements/issues/275\n\n### <a name=\"mitigation-factors\"></a>Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n## <a name=\"affected-software\"></a>Affected software\n\n* Any .NET 7.0 application running on .NET 7.0.10 or earlier.\n* Any .NET 6.0 application running on .NET 6.0.21 or earlier.\n\nIf your application uses the following package versions, ensure you update to the latest version of .NET.\n\n### <a name=\".NET 7\"></a>.NET 7\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.NETCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-arm64) | >= 7.0.0, <= 7.0.10 | 7.0.11\n[Microsoft.NETCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-musl-arm64) | >= 7.0.0, <= 7.0.10 | 7.0.11\n[Microsoft.NETCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-arm) | >= 7.0.0, <= 7.0.10 | 7.0.11\n[Microsoft.NETCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-musl-arm) | >= 7.0.0, <= 7.0.10 | 7.0.11\n[Microsoft.NETCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-x64) | >= 7.0.0, <= 7.0.10 | 7.0.11\n[Microsoft.NETCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-musl-x64) | >= 7.0.0, <= 7.0.10 | 7.0.11\n\n\n### <a name=\".NET 6\"></a>.NET 6\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.NETCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-arm64) | >= 6.0.0, <= 6.0.21 | 6.0.22\n[Microsoft.NETCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-musl-arm64) | >= 6.0.0, <= 6.0.21 | 6.0.22\n[Microsoft.NETCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-arm) | >= 6.0.0, <= 6.0.21 | 6.0.22\n[Microsoft.NETCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-musl-arm) | >= 6.0.0, <= 6.0.21 | 6.0.22\n[Microsoft.NETCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-x64) | >= 6.0.0, <= 6.0.21 | 6.0.22\n[Microsoft.NETCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.NETCore.App.Runtime.linux-musl-x64) | >= 6.0.0, <= 6.0.21 | 6.0.22\n\n\n## Advisory FAQ\n\n### <a name=\"how-affected\"></a>How do I know if I am affected?\n\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\n\n### <a name=\"how-fix\"></a>How do I fix the issue?\n\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n* If you are using one of the affected packages, please update to the patched version listed above.\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET Core SDK (reflecting any global.json):\n\n Version:   6.0.300\n Commit:    8473146e7d\n\nRuntime Environment:\n\n OS Name:     Windows\n OS Version:  10.0.18363\n OS Platform: Windows\n RID:         win10-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\n\nHost (useful for support):\n\n  Version: 6.0.5\n  Commit:  8473146e7d\n\n.NET Core SDKs installed:\n\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\n\n.NET Core runtimes installed:\n\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nTo install additional .NET Core runtimes or SDKs:\n  https://aka.ms/dotnet-download\n```\n\n* If you're using .NET 7.0, you should download and install Runtime 7.0.11 or SDK 7.0.111 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n* If you're using .NET 6.0, you should download and install Runtime 6.0.22 or SDK 6.0.317 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n.NET 6.0 and and .NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### External Links\n\n[CVE-2023-36799]( https://www.cve.org/CVERecord?id=CVE-2023-36799)\n\n### Revisions\n\nV1.0 (September 12, 2023): Advisory published.\n\n_Version 1.0_\n\n_Last Updated 2023-09-12_",
      "cve": "CVE-2023-36799",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade Microsoft.NETCore.App.Runtime.linux-x64@6.0.0 to 6.0.22",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Microsoft.NETCore.App.Runtime.linux-x64@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-36799",
          "value": "CVE-2023-36799",
          "url": "https://scout.docker.com/v/CVE-2023-36799?s=github&n=Microsoft.NETCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C%3D6.0.21"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-36799?s=github&n=Microsoft.NETCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C%3D6.0.21"
        }
      ]
    },
    {
      "id": "a10780d6104a60f8ad8b3a314265c86cd6ddd442927d9b887b0483d9c225243b",
      "category": "container_scanning",
      "message": "CVE-2023-45290 on stdlib@1.16.12",
      "description": "When parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion.\n\nWith fix, the ParseMultipartForm function now correctly limits the maximum size of form lines.",
      "cve": "CVE-2023-45290",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45290",
          "value": "CVE-2023-45290",
          "url": "https://scout.docker.com/v/CVE-2023-45290?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45290?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "76648baf30d57752ae5e673aeb212fdc9dd0cdd22c7f66d9a487cdeb3f566858",
      "category": "container_scanning",
      "message": "CVE-2023-45290 on stdlib@1.18.9",
      "description": "When parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion.\n\nWith fix, the ParseMultipartForm function now correctly limits the maximum size of form lines.",
      "cve": "CVE-2023-45290",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45290",
          "value": "CVE-2023-45290",
          "url": "https://scout.docker.com/v/CVE-2023-45290?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45290?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "23747528ad01d315a728d218a9623f06b012983b83eda4c4f113458b638e8c8c",
      "category": "container_scanning",
      "message": "CVE-2023-45290 on stdlib@1.16.10",
      "description": "When parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion.\n\nWith fix, the ParseMultipartForm function now correctly limits the maximum size of form lines.",
      "cve": "CVE-2023-45290",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45290",
          "value": "CVE-2023-45290",
          "url": "https://scout.docker.com/v/CVE-2023-45290?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45290?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "fc1fb70f356d94efee317827654cf5edbe6c370cde9e9746b9eec2b48e911492",
      "category": "container_scanning",
      "message": "CVE-2023-45290 on stdlib@1.20.6",
      "description": "When parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion.\n\nWith fix, the ParseMultipartForm function now correctly limits the maximum size of form lines.",
      "cve": "CVE-2023-45290",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45290",
          "value": "CVE-2023-45290",
          "url": "https://scout.docker.com/v/CVE-2023-45290?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45290?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "623c2b405c3efcd24a863b0764873537df2f505218e0c245a0cdf03d174373a0",
      "category": "container_scanning",
      "message": "CVE-2023-46218 on ubuntu/curl@7.68.0-1ubuntu2.19",
      "description": "This flaw allows a malicious HTTP server to set \"super cookies\" in curl that are then passed back to more origins than what is otherwise allowed or possible. This allows a site to set cookies that then would get sent to different and unrelated sites and domains.  It could do this by exploiting a mixed case flaw in curl's function that verifies a given cookie domain against the Public Suffix List (PSL). For example a cookie could be set with `domain=co.UK` when the URL used a lower case hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.",
      "cve": "CVE-2023-46218",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/curl@7.68.0-1ubuntu2.19 to 7.68.0-1ubuntu2.21",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/curl@7.68.0-1ubuntu2.19?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "7.68.0-1ubuntu2.19"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-46218",
          "value": "CVE-2023-46218",
          "url": "https://scout.docker.com/v/CVE-2023-46218?s=ubuntu&n=curl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C7.68.0-1ubuntu2.21"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-46218?s=ubuntu&n=curl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C7.68.0-1ubuntu2.21"
        }
      ]
    },
    {
      "id": "5cddc6eebdade5aae85e05efb862f0853ec1b1a3f2e60cadcfce95c278f25c23",
      "category": "container_scanning",
      "message": "CVE-2023-51385 on ubuntu/openssh@1:8.2p1-4ubuntu0.9",
      "description": "In ssh in OpenSSH before 9.6, OS command injection might occur if a user name or host name has shell metacharacters, and this name is referenced by an expansion token in certain situations. For example, an untrusted Git repository can have a submodule with shell metacharacters in a user name or host name.",
      "cve": "CVE-2023-51385",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/openssh@1:8.2p1-4ubuntu0.9 to 1:8.2p1-4ubuntu0.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/openssh@1%3A8.2p1-4ubuntu0.9?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1:8.2p1-4ubuntu0.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-51385",
          "value": "CVE-2023-51385",
          "url": "https://scout.docker.com/v/CVE-2023-51385?s=ubuntu&n=openssh&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1%3A8.2p1-4ubuntu0.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-51385?s=ubuntu&n=openssh&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1%3A8.2p1-4ubuntu0.11"
        }
      ]
    },
    {
      "id": "d00e3434717bfdf5f9f8cb357e8a8112785389bddb98bbfa231edfb16e5fa216",
      "category": "container_scanning",
      "message": "CVE-2024-7264 on ubuntu/curl@7.68.0-1ubuntu2.19",
      "description": "libcurl's ASN1 parser code has the `GTime2str()` function, used for parsing an ASN.1 Generalized Time field. If given an syntactically incorrect field, the parser might end up using -1 for the length of the *time fraction*, leading to a `strlen()` getting performed on a pointer to a heap buffer area that is not (purposely) null terminated.  This flaw most likely leads to a crash, but can also lead to heap contents getting returned to the application when [CURLINFO_CERTINFO](https://curl.se/libcurl/c/CURLINFO_CERTINFO.html) is used.",
      "cve": "CVE-2024-7264",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/curl@7.68.0-1ubuntu2.19 to 7.68.0-1ubuntu2.23",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/curl@7.68.0-1ubuntu2.19?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "7.68.0-1ubuntu2.19"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-7264",
          "value": "CVE-2024-7264",
          "url": "https://scout.docker.com/v/CVE-2024-7264?s=ubuntu&n=curl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C7.68.0-1ubuntu2.23"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-7264?s=ubuntu&n=curl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C7.68.0-1ubuntu2.23"
        }
      ]
    },
    {
      "id": "4e6d606843d86471eefbed3d560849a88911a456226bac775d6e8416bbea8455",
      "category": "container_scanning",
      "message": "CVE-2025-2784 on ubuntu/libsoup2.4@2.70.0-1",
      "description": "A flaw was found in libsoup. The package is vulnerable to a heap buffer over-read when sniffing content via the skip_insight_whitespace() function. Libsoup clients may read one byte out-of-bounds in response to a crafted HTTP response by an HTTP server.",
      "cve": "CVE-2025-2784",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libsoup2.4@2.70.0-1 to 2.70.0-1ubuntu0.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libsoup2.4@2.70.0-1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.70.0-1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-2784",
          "value": "CVE-2025-2784",
          "url": "https://scout.docker.com/v/CVE-2025-2784?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-2784?s=ubuntu&n=libsoup2.4&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.70.0-1ubuntu0.2"
        }
      ]
    },
    {
      "id": "710f5ca162afdfbe154f4409de09015af641267c793e3b28714e442912745934",
      "category": "container_scanning",
      "message": "CVE-2025-47906 on stdlib@1.20.6",
      "description": "If the PATH environment variable contains paths which are executables (rather than just directories), passing certain strings to LookPath (\"\", \".\", and \"..\"), can result in the binaries listed in the PATH being unexpectedly returned.",
      "cve": "CVE-2025-47906",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.23.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-47906",
          "value": "CVE-2025-47906",
          "url": "https://scout.docker.com/v/CVE-2025-47906?s=golang&n=stdlib&t=golang&vr=%3C1.23.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-47906?s=golang&n=stdlib&t=golang&vr=%3C1.23.12"
        }
      ]
    },
    {
      "id": "c63655546cbd730b0265e8c42273d69fcbfbe2dced6a64e8a5b8a12b045bc670",
      "category": "container_scanning",
      "message": "CVE-2025-47906 on stdlib@1.16.12",
      "description": "If the PATH environment variable contains paths which are executables (rather than just directories), passing certain strings to LookPath (\"\", \".\", and \"..\"), can result in the binaries listed in the PATH being unexpectedly returned.",
      "cve": "CVE-2025-47906",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.23.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-47906",
          "value": "CVE-2025-47906",
          "url": "https://scout.docker.com/v/CVE-2025-47906?s=golang&n=stdlib&t=golang&vr=%3C1.23.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-47906?s=golang&n=stdlib&t=golang&vr=%3C1.23.12"
        }
      ]
    },
    {
      "id": "1e11a2b80c54db8c8e684493445b8e5a920e93b41535632c9112e4a57f819637",
      "category": "container_scanning",
      "message": "CVE-2025-47906 on stdlib@1.16.10",
      "description": "If the PATH environment variable contains paths which are executables (rather than just directories), passing certain strings to LookPath (\"\", \".\", and \"..\"), can result in the binaries listed in the PATH being unexpectedly returned.",
      "cve": "CVE-2025-47906",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.23.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-47906",
          "value": "CVE-2025-47906",
          "url": "https://scout.docker.com/v/CVE-2025-47906?s=golang&n=stdlib&t=golang&vr=%3C1.23.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-47906?s=golang&n=stdlib&t=golang&vr=%3C1.23.12"
        }
      ]
    },
    {
      "id": "fe8f6efee1a279eb480ac7885fa3329ba52e2b2d0b2395cfa266e6682026efc8",
      "category": "container_scanning",
      "message": "CVE-2025-47906 on stdlib@1.18.9",
      "description": "If the PATH environment variable contains paths which are executables (rather than just directories), passing certain strings to LookPath (\"\", \".\", and \"..\"), can result in the binaries listed in the PATH being unexpectedly returned.",
      "cve": "CVE-2025-47906",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.23.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-47906",
          "value": "CVE-2025-47906",
          "url": "https://scout.docker.com/v/CVE-2025-47906?s=golang&n=stdlib&t=golang&vr=%3C1.23.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-47906?s=golang&n=stdlib&t=golang&vr=%3C1.23.12"
        }
      ]
    },
    {
      "id": "ce7072ffd9eec2f8f4331ed303518c2d95ce9304f63e477fb39c3c10d747e9ee",
      "category": "container_scanning",
      "message": "CVE-2025-48924 on org.apache.commons/commons-lang3@3.12.0",
      "description": "Uncontrolled Recursion vulnerability in Apache Commons Lang.\n\nThis issue affects Apache Commons Lang: Starting with commons-lang:commons-lang 2.0 to 2.6, and, from org.apache.commons:commons-lang3 3.0 before 3.18.0.\n\nThe methods ClassUtils.getClass(...) can throw StackOverflowError on very long inputs. Because an Error is usually not handled by applications and libraries, a StackOverflowError could cause an application to stop.\n\nUsers are recommended to upgrade to version 3.18.0, which fixes the issue.",
      "cve": "CVE-2025-48924",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.commons/commons-lang3@3.12.0 to 3.18.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.commons/commons-lang3@3.12.0"
          },
          "version": "3.12.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-48924",
          "value": "CVE-2025-48924",
          "url": "https://scout.docker.com/v/CVE-2025-48924?s=github&n=commons-lang3&ns=org.apache.commons&t=maven&vr=%3E%3D3.0%2C%3C3.18.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-48924?s=github&n=commons-lang3&ns=org.apache.commons&t=maven&vr=%3E%3D3.0%2C%3C3.18.0"
        }
      ]
    },
    {
      "id": "7c60320549615413d2c280cf0c2c5fd8ba223a1280541086af1bcb97202461d0",
      "category": "container_scanning",
      "message": "CVE-2025-48924 on org.apache.commons/commons-lang3@3.8.1",
      "description": "Uncontrolled Recursion vulnerability in Apache Commons Lang.\n\nThis issue affects Apache Commons Lang: Starting with commons-lang:commons-lang 2.0 to 2.6, and, from org.apache.commons:commons-lang3 3.0 before 3.18.0.\n\nThe methods ClassUtils.getClass(...) can throw StackOverflowError on very long inputs. Because an Error is usually not handled by applications and libraries, a StackOverflowError could cause an application to stop.\n\nUsers are recommended to upgrade to version 3.18.0, which fixes the issue.",
      "cve": "CVE-2025-48924",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.commons/commons-lang3@3.8.1 to 3.18.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.commons/commons-lang3@3.8.1"
          },
          "version": "3.8.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-48924",
          "value": "CVE-2025-48924",
          "url": "https://scout.docker.com/v/CVE-2025-48924?s=github&n=commons-lang3&ns=org.apache.commons&t=maven&vr=%3E%3D3.0%2C%3C3.18.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-48924?s=github&n=commons-lang3&ns=org.apache.commons&t=maven&vr=%3E%3D3.0%2C%3C3.18.0"
        }
      ]
    },
    {
      "id": "e132c6befcdef95a79355214d34c214e4edbf03199148b054b2d0bae8c6f2709",
      "category": "container_scanning",
      "message": "CVE-2025-58782 on org.apache.jackrabbit/jackrabbit-jcr-commons@1.5.0",
      "description": "There is a serialization of Untrusted Data vulnerability in Apache Jackrabbit Core and Apache Jackrabbit JCR Commons.\n\nThis issue affects Apache Jackrabbit Core: from 1.0.0 through 2.22.1; Apache Jackrabbit JCR Commons: from 1.0.0 through 2.22.1.\n\nDeployments that accept JNDI URIs for JCR lookup from untrusted users allows them to inject malicious JNDI references, potentially leading to arbitrary code execution through deserialization of untrusted data. Users are recommended to upgrade to version 2.22.2. JCR lookup through JNDI has been disabled by default in 2.22.2. Users of this feature need to enable it explicitly and are adviced to review their use of JNDI URI for JCR lookup.",
      "cve": "CVE-2025-58782",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.jackrabbit/jackrabbit-jcr-commons@1.5.0 to 2.22.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.jackrabbit/jackrabbit-jcr-commons@1.5.0"
          },
          "version": "1.5.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58782",
          "value": "CVE-2025-58782",
          "url": "https://scout.docker.com/v/CVE-2025-58782?s=github&n=jackrabbit-jcr-commons&ns=org.apache.jackrabbit&t=maven&vr=%3E%3D1.0.0%2C%3C2.22.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58782?s=github&n=jackrabbit-jcr-commons&ns=org.apache.jackrabbit&t=maven&vr=%3E%3D1.0.0%2C%3C2.22.2"
        }
      ]
    },
    {
      "id": "15a8bb748a5c3f0448cf5536a510314797439d17d02bd22450b1be0b991eebac",
      "category": "container_scanning",
      "message": "CVE-2024-24786 on google.golang.org/protobuf@1.26.0",
      "description": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.",
      "cve": "CVE-2024-24786",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade google.golang.org/protobuf@1.26.0 to 1.33.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/google.golang.org/protobuf@1.26.0"
          },
          "version": "1.26.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24786",
          "value": "CVE-2024-24786",
          "url": "https://scout.docker.com/v/CVE-2024-24786?s=github&n=protobuf&ns=google.golang.org&t=golang&vr=%3C1.33.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24786?s=github&n=protobuf&ns=google.golang.org&t=golang&vr=%3C1.33.0"
        }
      ]
    },
    {
      "id": "dcc1ddf035121bf59e13730508396f1958dab6b7c4a5e2708f0cf23fa37d8cc4",
      "category": "container_scanning",
      "message": "CVE-2024-24786 on google.golang.org/protobuf@1.28.1",
      "description": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.",
      "cve": "CVE-2024-24786",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade google.golang.org/protobuf@1.28.1 to 1.33.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/google.golang.org/protobuf@1.28.1"
          },
          "version": "1.28.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24786",
          "value": "CVE-2024-24786",
          "url": "https://scout.docker.com/v/CVE-2024-24786?s=github&n=protobuf&ns=google.golang.org&t=golang&vr=%3C1.33.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24786?s=github&n=protobuf&ns=google.golang.org&t=golang&vr=%3C1.33.0"
        }
      ]
    },
    {
      "id": "5be0b05a51b8b39d2d4f09129e9a9eafa0f565a9e73747eb9d865bd3845c8535",
      "category": "container_scanning",
      "message": "CVE-2024-26308 on org.apache.commons/commons-compress@1.21",
      "description": "Allocation of Resources Without Limits or Throttling vulnerability in Apache Commons Compress. This issue affects Apache Commons Compress: from 1.21 before 1.26.\n\nUsers are recommended to upgrade to version 1.26, which fixes the issue.",
      "cve": "CVE-2024-26308",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.commons/commons-compress@1.21 to 1.26.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.commons/commons-compress@1.21"
          },
          "version": "1.21"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-26308",
          "value": "CVE-2024-26308",
          "url": "https://scout.docker.com/v/CVE-2024-26308?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3E%3D1.21%2C%3C1.26.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-26308?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3E%3D1.21%2C%3C1.26.0"
        }
      ]
    },
    {
      "id": "713e7bde83d528d7f33f94410c05ca2b6898f63622adecbf4373d10c989994a2",
      "category": "container_scanning",
      "message": "CVE-2023-28841 on github.com/docker/docker@20.10.17+incompatible",
      "description": "[Moby](https://mobyproject.org/) is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as [moby/moby](https://github.com/moby/moby) is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of [SwarmKit](https://github.com/moby/swarmkit) and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of [VXLAN](https://en.wikipedia.org/wiki/Virtual_Extensible_LAN), which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the [IPsec Encapsulating Security Payload](https://en.wikipedia.org/wiki/IPsec#Encapsulating_Security_Payload) protocol in [Transport mode](https://en.wikipedia.org/wiki/IPsec#Transport_mode). By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three [iptables](https://www.netfilter.org/projects/iptables/index.html) (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nAn [iptables rule](https://github.com/moby/libnetwork/blob/d9fae4c73daf76c3b0f77e14b45b8bf612ba764d/drivers/overlay/encryption.go#L205-L207) designates outgoing VXLAN datagrams with a VNI that corresponds to an encrypted overlay network for IPsec encapsulation.\n\nOn Red Hat Enterprise Linux and derivatives such as CentOS and Rocky, the `xt_u32` module has been:\n* [moved to the kernel-modules-extra package and no longer installed by default in RHEL 8.3](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.3_release_notes/rhel-8-3-0-release#technology-preview_networking)\n* [officially deprecated in RHEL 8.6](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.6_release_notes/deprecated_functionality#deprecated-functionality_networking)\n* [removed completely in RHEL 9](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/considerations_in_adopting_rhel_9/assembly_networking_considerations-in-adopting-rhel-9#ref_firewall-networking_assembly_networking)\n\nThis rule is not created when `xt_u32` is unavailable, even though the container is still attached to the network.\n\n## Impact\nEncrypted overlay networks on affected platforms silently transmit unencrypted data. As a result, `overlay` networks may appear to be functional, passing traffic as expected, but without any of the expected confidentiality or data integrity guarantees.\n\nIt is possible for an attacker sitting in a trusted position on the network to read all of the application traffic that is moving across the overlay network, resulting in unexpected secrets or user data disclosure. Thus, because many database protocols, internal APIs, etc. are not protected by a second layer of encryption, a user may rely on Swarm encrypted overlay networks to provide confidentiality, which due to this vulnerability is no longer guaranteed.\n\n## Patches\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\n## Workarounds\n* Close the VXLAN port (by default, UDP port 4789) to outgoing traffic at the Internet boundary (see [GHSA-vwm3-crmr-xfxw](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)) in order to prevent unintentionally leaking unencrypted traffic over the Internet.\n* Ensure that the `xt_u32` kernel module is available on all nodes of the Swarm cluster.\n\n## Background\n* [#43382 ](https://github.com/moby/moby/issues/43382)partially discussed this concern, but did not consider the security implications.\n* Mirantis FIELD-5788 essentially duplicates [#43382](https://github.com/moby/moby/issues/43382), and was created six months earlier; it similarly overlooked the security implications.\n* [#45118](https://github.com/moby/moby/pull/45118) is the ancestor of the final patches, and was where the security implications were discovered.\n\n## Related\n* [CVE-2023-28840: Encrypted overlay network may be unauthenticated](https://github.com/moby/moby/security/advisories/GHSA-232p-vwff-86mp)\n* [CVE-2023-28842: Encrypted overlay network with a single endpoint is unauthenticated](https://github.com/moby/moby/security/advisories/GHSA-6wrf-mxfj-pf5p)\n* [GHSA-vwm3-crmr-xfxw: The Swarm VXLAN port may be exposed to attack due to ambiguous documentation](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)\n* [GHSA-gvm4-2qqg-m333: Security issues in encrypted overlay networks](https://github.com/moby/libnetwork/security/advisories/GHSA-gvm4-2qqg-m333) (libnetwork)",
      "cve": "CVE-2023-28841",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/docker/docker@20.10.17+incompatible to 20.10.24",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/docker@20.10.17%2Bincompatible"
          },
          "version": "20.10.17+incompatible"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-28841",
          "value": "CVE-2023-28841",
          "url": "https://scout.docker.com/v/CVE-2023-28841?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D1.12.0%2C%3C20.10.24"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-28841?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D1.12.0%2C%3C20.10.24"
        }
      ]
    },
    {
      "id": "abae9d5db3aed532c5a08ac04fa53b55daba1b7270b6f963d45fdfba503e5966",
      "category": "container_scanning",
      "message": "CVE-2023-28842 on github.com/docker/docker@20.10.17+incompatible",
      "description": "[Moby](https://mobyproject.org/) is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as [moby/moby](https://github.com/moby/moby) is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of [SwarmKit](https://github.com/moby/swarmkit) and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of [VXLAN](https://en.wikipedia.org/wiki/Virtual_Extensible_LAN), which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the [IPsec Encapsulating Security Payload](https://en.wikipedia.org/wiki/IPsec#Encapsulating_Security_Payload) protocol in [Transport mode](https://en.wikipedia.org/wiki/IPsec#Transport_mode). By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three [iptables](https://www.netfilter.org/projects/iptables/index.html) (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\nThe `overlay` driver dynamically and lazily defines the kernel configuration for the VXLAN network on each node as containers are attached and detached. Routes and encryption parameters are only defined for destination nodes that participate in the network. The iptables rules that prevent encrypted overlay networks from accepting unencrypted packets are not created until a peer is available with which to communicate.\n\n## Impact\nEncrypted overlay networks silently accept cleartext VXLAN datagrams that are tagged with the VNI of an encrypted overlay network. As a result, it is possible to inject arbitrary Ethernet frames into the encrypted overlay network by encapsulating them in VXLAN datagrams. The implications of this can be quite dire, and [GHSA-vwm3-crmr-xfxw](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw) should be referenced for a deeper exploration.\n\n## Patches\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\n## Workarounds\n* In multi-node clusters, deploy a global ‘pause’ container for each encrypted overlay network, on every node. For example, use the `registry.k8s.io/pause` image and a `--mode global` service.\n* For a single-node cluster, do not use overlay networks of any sort. Bridge networks provide the same connectivity on a single node and have no multi-node features.\nThe Swarm ingress feature is implemented using an overlay network, but can be disabled by publishing ports in `host` mode instead of `ingress` mode (allowing the use of an external load balancer), and removing the `ingress` network.\n* If encrypted overlay networks are in exclusive use, block UDP port 4789 from traffic that has not been validated by IPSec. For example, `iptables -A INPUT -m udp —-dport 4789 -m policy --dir in --pol none -j DROP`.\n\n## Background\n* This issue was discovered while characterizing and mitigating [CVE-2023-28840](https://github.com/moby/moby/security/advisories/GHSA-232p-vwff-86mp) and [CVE-2023-28841](https://github.com/moby/moby/security/advisories/GHSA-33pg-m6jh-5237).\n\n## Related\n* [CVE-2023-28841: Encrypted overlay network traffic may be unencrypted](https://github.com/moby/moby/security/advisories/GHSA-33pg-m6jh-5237)\n* [CVE-2023-28840: Encrypted overlay network may be unauthenticated](https://github.com/moby/moby/security/advisories/GHSA-232p-vwff-86mp)\n* [GHSA-vwm3-crmr-xfxw: The Swarm VXLAN port may be exposed to attack due to ambiguous documentation](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)\n* [GHSA-gvm4-2qqg-m333: Security issues in encrypted overlay networks](https://github.com/moby/libnetwork/security/advisories/GHSA-gvm4-2qqg-m333) (libnetwork)",
      "cve": "CVE-2023-28842",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/docker/docker@20.10.17+incompatible to 20.10.24",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/docker@20.10.17%2Bincompatible"
          },
          "version": "20.10.17+incompatible"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-28842",
          "value": "CVE-2023-28842",
          "url": "https://scout.docker.com/v/CVE-2023-28842?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D1.12.0%2C%3C20.10.24"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-28842?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D1.12.0%2C%3C20.10.24"
        }
      ]
    },
    {
      "id": "839b9aa15ee89f2b9cd91b0107180bf3142e4c5082cc2df05e2151f50eefc8d1",
      "category": "container_scanning",
      "message": "CVE-2025-26465 on ubuntu/openssh@1:8.2p1-4ubuntu0.9",
      "description": "A vulnerability was found in OpenSSH when the VerifyHostKeyDNS option is enabled. A machine-in-the-middle attack can be performed by a malicious machine impersonating a legit server. This issue occurs due to how OpenSSH mishandles error codes in specific conditions when verifying the host key. For an attack to be considered successful, the attacker needs to manage to exhaust the client's memory resource first, turning the attack complexity high.",
      "cve": "CVE-2025-26465",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/openssh@1:8.2p1-4ubuntu0.9 to 1:8.2p1-4ubuntu0.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/openssh@1%3A8.2p1-4ubuntu0.9?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1:8.2p1-4ubuntu0.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-26465",
          "value": "CVE-2025-26465",
          "url": "https://scout.docker.com/v/CVE-2025-26465?s=ubuntu&n=openssh&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1%3A8.2p1-4ubuntu0.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-26465?s=ubuntu&n=openssh&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1%3A8.2p1-4ubuntu0.12"
        }
      ]
    },
    {
      "id": "86b0451c807899369f569651564ff5670a3234f311dbe0e1de390b431e797bb6",
      "category": "container_scanning",
      "message": "CVE-2025-4673 on stdlib@1.20.6",
      "description": "Proxy-Authorization and Proxy-Authenticate headers persisted on cross-origin redirects potentially leaking sensitive information.",
      "cve": "CVE-2025-4673",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.23.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-4673",
          "value": "CVE-2025-4673",
          "url": "https://scout.docker.com/v/CVE-2025-4673?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-4673?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ]
    },
    {
      "id": "1cb793d4118c993b106295667ce18abe349a9da47a82f132cda02b9fdc680a58",
      "category": "container_scanning",
      "message": "CVE-2025-4673 on stdlib@1.18.9",
      "description": "Proxy-Authorization and Proxy-Authenticate headers persisted on cross-origin redirects potentially leaking sensitive information.",
      "cve": "CVE-2025-4673",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.23.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-4673",
          "value": "CVE-2025-4673",
          "url": "https://scout.docker.com/v/CVE-2025-4673?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-4673?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ]
    },
    {
      "id": "888bb9496851e3820dcf3751823443a7175366718aec71858891257f93f0aa4a",
      "category": "container_scanning",
      "message": "CVE-2025-4673 on stdlib@1.16.12",
      "description": "Proxy-Authorization and Proxy-Authenticate headers persisted on cross-origin redirects potentially leaking sensitive information.",
      "cve": "CVE-2025-4673",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.23.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-4673",
          "value": "CVE-2025-4673",
          "url": "https://scout.docker.com/v/CVE-2025-4673?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-4673?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ]
    },
    {
      "id": "0a6437271fb4e2365c4d63b4bb4d88f2d2263e705032988d1639edd6a008150f",
      "category": "container_scanning",
      "message": "CVE-2025-4673 on stdlib@1.16.10",
      "description": "Proxy-Authorization and Proxy-Authenticate headers persisted on cross-origin redirects potentially leaking sensitive information.",
      "cve": "CVE-2025-4673",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.23.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-4673",
          "value": "CVE-2025-4673",
          "url": "https://scout.docker.com/v/CVE-2025-4673?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-4673?s=golang&n=stdlib&t=golang&vr=%3C1.23.10"
        }
      ]
    },
    {
      "id": "d757a4e97976fe40a104c14309dfa32e5a7085622b0b94a48e02054ed4431efb",
      "category": "container_scanning",
      "message": "CVE-2025-4949 on org.eclipse.jgit/org.eclipse.jgit@5.10.0.202012080955-r",
      "description": "In Eclipse JGit versions 7.2.0.202503040940-r and older, the ManifestParser class used by the repo command and the AmazonS3 class used to implement the experimental amazons3 git transport protocol allowing to store git pack files in an Amazon S3 bucket, are vulnerable to XML External Entity (XXE) attacks when parsing XML files. This vulnerability can lead to information disclosure, denial of service, and other security issues.",
      "cve": "CVE-2025-4949",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.eclipse.jgit/org.eclipse.jgit@5.10.0.202012080955-r to 7.2.1.202505142326-r",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.eclipse.jgit/org.eclipse.jgit@5.10.0.202012080955-r"
          },
          "version": "5.10.0.202012080955-r"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-4949",
          "value": "CVE-2025-4949",
          "url": "https://scout.docker.com/v/CVE-2025-4949?s=github&n=org.eclipse.jgit&ns=org.eclipse.jgit&t=maven&vr=%3C6.10.1.202505221210-r"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-4949?s=github&n=org.eclipse.jgit&ns=org.eclipse.jgit&t=maven&vr=%3C6.10.1.202505221210-r"
        }
      ]
    },
    {
      "id": "a986c3a44281c2c0f8c4acb1efab1b8d2cd6340add38aae9bff284941518d318",
      "category": "container_scanning",
      "message": "CVE-2020-26137 on urllib3@1.25.8",
      "description": "urllib3 before 1.25.9 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of `putrequest()`. NOTE: this is similar to CVE-2020-26116.",
      "cve": "CVE-2020-26137",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade urllib3@1.25.8 to 1.25.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/urllib3@1.25.8"
          },
          "version": "1.25.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-26137",
          "value": "CVE-2020-26137",
          "url": "https://scout.docker.com/v/CVE-2020-26137?s=github&n=urllib3&t=pypi&vr=%3C1.25.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-26137?s=github&n=urllib3&t=pypi&vr=%3C1.25.9"
        }
      ]
    },
    {
      "id": "7470183e9f6aeddb2aedfeb39bc1c584c6454919a62a7f8603a91d57e73b5ffa",
      "category": "container_scanning",
      "message": "CVE-2020-8927 on Microsoft.NETCore.App.Runtime.linux-x64@6.0.0",
      "description": "A buffer overflow exists in the Brotli library versions prior to 1.0.8 where an attacker controlling the input length of a \"one-shot\" decompression request to a script can trigger a crash, which happens when copying over chunks of data larger than 2 GiB. It is recommended to update your Brotli library to 1.0.8 or later. If one cannot update, we recommend to use the \"streaming\" API as opposed to the \"one-shot\" API, and impose chunk size limits.",
      "cve": "CVE-2020-8927",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade Microsoft.NETCore.App.Runtime.linux-x64@6.0.0 to 6.0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Microsoft.NETCore.App.Runtime.linux-x64@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-8927",
          "value": "CVE-2020-8927",
          "url": "https://scout.docker.com/v/CVE-2020-8927?s=github&n=Microsoft.NETCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-8927?s=github&n=Microsoft.NETCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.3"
        }
      ]
    },
    {
      "id": "b5f4f1628064331b053f37217d0e1b67c96c047a240e1b7acd4cf3f9d074de4b",
      "category": "container_scanning",
      "message": "CVE-2023-44487 on golang.org/x/net@0.10.0",
      "description": "## HTTP/2 Rapid reset attack\nThe HTTP/2 protocol allows clients to indicate to the server that a previous stream should be canceled by sending a RST_STREAM frame. The protocol does not require the client and server to coordinate the cancellation in any way, the client may do it unilaterally. The client may also assume that the cancellation will take effect immediately when the server receives the RST_STREAM frame, before any other data from that TCP connection is processed.\n\nAbuse of this feature is called a Rapid Reset attack because it relies on the ability for an endpoint to send a RST_STREAM frame immediately after sending a request frame, which makes the other endpoint start working and then rapidly resets the request. The request is canceled, but leaves the HTTP/2 connection open. \n\nThe HTTP/2 Rapid Reset attack built on this capability is simple: The client opens a large number of streams at once as in the standard HTTP/2 attack, but rather than waiting for a response to each request stream from the server or proxy, the client cancels each request immediately.\n\nThe ability to reset streams immediately allows each connection to have an indefinite number of requests in flight. By explicitly canceling the requests, the attacker never exceeds the limit on the number of concurrent open streams. The number of in-flight requests is no longer dependent on the round-trip time (RTT), but only on the available network bandwidth.\n\nIn a typical HTTP/2 server implementation, the server will still have to do significant amounts of work for canceled requests, such as allocating new stream data structures, parsing the query and doing header decompression, and mapping the URL to a resource. For reverse proxy implementations, the request may be proxied to the backend server before the RST_STREAM frame is processed. The client on the other hand paid almost no costs for sending the requests. This creates an exploitable cost asymmetry between the server and the client.\n\nMultiple software artifacts implementing HTTP/2 are affected. This advisory was originally ingested from the `swift-nio-http2` repo advisory and their original conent follows.\n\n## swift-nio-http2 specific advisory\nswift-nio-http2 is vulnerable to a denial-of-service vulnerability in which a malicious client can create and then reset a large number of HTTP/2 streams in a short period of time. This causes swift-nio-http2 to commit to a large amount of expensive work which it then throws away, including creating entirely new `Channel`s to serve the traffic. This can easily overwhelm an `EventLoop` and prevent it from making forward progress.\n\nswift-nio-http2 1.28 contains a remediation for this issue that applies reset counter using a sliding window. This constrains the number of stream resets that may occur in a given window of time. Clients violating this limit will have their connections torn down. This allows clients to continue to cancel streams for legitimate reasons, while constraining malicious actors.",
      "cve": "CVE-2023-44487",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.10.0 to 0.17.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.10.0"
          },
          "version": "0.10.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-44487",
          "value": "CVE-2023-44487",
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.17.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.17.0"
        }
      ]
    },
    {
      "id": "169f2c35dc84c2b98ec0d4c9ae9047744bb25309db40255ccb9079775c756e03",
      "category": "container_scanning",
      "message": "CVE-2024-24557 on github.com/docker/docker@20.10.17+incompatible",
      "description": "The classic builder cache system is prone to cache poisoning if the image is built `FROM scratch`.\nAlso, changes to some instructions (most important being `HEALTHCHECK` and `ONBUILD`) would not cause a cache miss.\n\n\nAn attacker with the knowledge of the Dockerfile someone is using could poison their cache by making them pull a specially crafted image that would be considered as a valid cache candidate for some build steps.\n\nFor example, an attacker could create an image that is considered as a valid cache candidate for:\n```\nFROM scratch\nMAINTAINER Pawel\n```\n\nwhen in fact the malicious image used as a cache would be an image built from a different Dockerfile.\n\nIn the second case, the attacker could for example substitute a different `HEALTCHECK` command.\n\n\n### Impact\n\n23.0+ users are only affected if they explicitly opted out of Buildkit (`DOCKER_BUILDKIT=0` environment variable) or are using the `/build` API endpoint (which uses the classic builder by default).\n\nAll users on versions older than 23.0 could be impacted. An example could be a CI with a shared cache, or just a regular Docker user pulling a malicious image due to misspelling/typosquatting.\n\nImage build API endpoint (`/build`) and `ImageBuild` function from `github.com/docker/docker/client` is also affected as it the uses classic builder by default. \n\n\n### Patches\n\nPatches are included in Moby releases:\n\n- v25.0.2\n- v24.0.9\n- v23.0.10\n\n### Workarounds\n\n- Use `--no-cache` or use Buildkit if possible (`DOCKER_BUILDKIT=1`, it's default on 23.0+ assuming that the buildx plugin is installed).\n- Use `Version = types.BuilderBuildKit` or `NoCache = true` in `ImageBuildOptions` for `ImageBuild` call.\n\n",
      "cve": "CVE-2024-24557",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/docker/docker@20.10.17+incompatible to 24.0.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/docker@20.10.17%2Bincompatible"
          },
          "version": "20.10.17+incompatible"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24557",
          "value": "CVE-2024-24557",
          "url": "https://scout.docker.com/v/CVE-2024-24557?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C24.0.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24557?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3C24.0.9"
        }
      ]
    },
    {
      "id": "ec9c4d2413303a57d59811cb792601bb76816a5db8de4b7f4f5291bdab099f9e",
      "category": "container_scanning",
      "message": "CVE-2024-3651 on idna@2.8",
      "description": "### Impact\nA specially crafted argument to the `idna.encode()` function could consume significant resources. This may lead to a denial-of-service.\n\n### Patches\nThe function has been refined to reject such strings without the associated resource consumption in version 3.7.\n\n### Workarounds\nDomain names cannot exceed 253 characters in length, if this length limit is enforced prior to passing the domain to the `idna.encode()` function it should no longer consume significant resources. This is triggered by arbitrarily large inputs that would not occur in normal usage, but may be passed to the library assuming there is no preliminary input validation by the higher-level application.\n\n### References\n* https://huntr.com/bounties/93d78d07-d791-4b39-a845-cbfabc44aadb",
      "cve": "CVE-2024-3651",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade idna@2.8 to 3.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/idna@2.8"
          },
          "version": "2.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-3651",
          "value": "CVE-2024-3651",
          "url": "https://scout.docker.com/v/CVE-2024-3651?s=github&n=idna&t=pypi&vr=%3C3.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-3651?s=github&n=idna&t=pypi&vr=%3C3.7"
        }
      ]
    },
    {
      "id": "af0a99ac1714adcac7b0583bc06fd9f89176d87006a31b391150fd3f54681b31",
      "category": "container_scanning",
      "message": "CVE-2025-58057 on io.netty/netty-codec@4.1.73.Final",
      "description": "### Summary\n\nWith specially crafted input, `BrotliDecoder` and some other decompressing decoders will allocate a large number of reachable byte buffers, which can lead to denial of service.\n\n### Details\n\n`BrotliDecoder.decompress` has no limit in how often it calls `pull`, decompressing data 64K bytes at a time. The buffers are saved in the output list, and remain reachable until OOM is hit. This is basically a zip bomb.\n\nTested on 4.1.118, but there were no changes to the decoder since.\n\n### PoC\n\nRun this test case with `-Xmx1G`:\n\n```java\nimport io.netty.buffer.Unpooled;\nimport io.netty.channel.embedded.EmbeddedChannel;\n\nimport java.util.Base64;\n\npublic class T {\n    public static void main(String[] args) {\n        EmbeddedChannel channel = new EmbeddedChannel(new BrotliDecoder());\n        channel.writeInbound(Unpooled.wrappedBuffer(Base64.getDecoder().decode(\"aPpxD1tETigSAGj6cQ8vRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROMBIAEgIaHwBETlQQVFcXlgA=\")));\n    }\n}\n```\n\nError:\n\n```\nException in thread \"main\" java.lang.OutOfMemoryError: Cannot reserve 4194304 bytes of direct buffer memory (allocated: 1069580289, limit: 1073741824)\n\tat java.base/java.nio.Bits.reserveMemory(Bits.java:178)\n\tat java.base/java.nio.DirectByteBuffer.<init>(DirectByteBuffer.java:121)\n\tat java.base/java.nio.ByteBuffer.allocateDirect(ByteBuffer.java:332)\n\tat io.netty.buffer.PoolArena$DirectArena.allocateDirect(PoolArena.java:718)\n\tat io.netty.buffer.PoolArena$DirectArena.newChunk(PoolArena.java:693)\n\tat io.netty.buffer.PoolArena.allocateNormal(PoolArena.java:213)\n\tat io.netty.buffer.PoolArena.tcacheAllocateNormal(PoolArena.java:195)\n\tat io.netty.buffer.PoolArena.allocate(PoolArena.java:137)\n\tat io.netty.buffer.PoolArena.allocate(PoolArena.java:127)\n\tat io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:403)\n\tat io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:188)\n\tat io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:179)\n\tat io.netty.buffer.AbstractByteBufAllocator.buffer(AbstractByteBufAllocator.java:116)\n\tat io.netty.handler.codec.compression.BrotliDecoder.pull(BrotliDecoder.java:70)\n\tat io.netty.handler.codec.compression.BrotliDecoder.decompress(BrotliDecoder.java:101)\n\tat io.netty.handler.codec.compression.BrotliDecoder.decode(BrotliDecoder.java:137)\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)\n\tat io.netty.channel.embedded.EmbeddedChannel.writeInbound(EmbeddedChannel.java:348)\n\tat io.netty.handler.codec.compression.T.main(T.java:11)\n```\n\n### Impact\n\nDoS for anyone using `BrotliDecoder` on untrusted input.",
      "cve": "CVE-2025-58057",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-codec@4.1.73.Final to 4.1.125.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-codec@4.1.73.Final"
          },
          "version": "4.1.73.Final"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58057",
          "value": "CVE-2025-58057",
          "url": "https://scout.docker.com/v/CVE-2025-58057?s=github&n=netty-codec&ns=io.netty&t=maven&vr=%3C4.1.125.Final"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58057?s=github&n=netty-codec&ns=io.netty&t=maven&vr=%3C4.1.125.Final"
        }
      ]
    },
    {
      "id": "a1352571d02308090797f5e36fedfa78a2b468c0685fe396b47193815c3bf054",
      "category": "container_scanning",
      "message": "CVE-2023-7104 on ubuntu/sqlite3@3.31.1-4ubuntu0.5",
      "description": "A vulnerability was found in SQLite SQLite3 up to 3.43.0 and classified as critical. This issue affects the function sessionReadRecord of the file ext/session/sqlite3session.c of the component make alltest Handler. The manipulation leads to heap-based buffer overflow. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-248999.",
      "cve": "CVE-2023-7104",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/sqlite3@3.31.1-4ubuntu0.5 to 3.31.1-4ubuntu0.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/sqlite3@3.31.1-4ubuntu0.5?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "3.31.1-4ubuntu0.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-7104",
          "value": "CVE-2023-7104",
          "url": "https://scout.docker.com/v/CVE-2023-7104?s=ubuntu&n=sqlite3&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.31.1-4ubuntu0.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-7104?s=ubuntu&n=sqlite3&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.31.1-4ubuntu0.6"
        }
      ]
    },
    {
      "id": "e4cf0d10a432d56812ff814cf5e60809cf97904fc19f57409f228cd66c150b3e",
      "category": "container_scanning",
      "message": "CVE-2022-48560 on ubuntu/python2.7@2.7.18-1~20.04.3",
      "description": "A use-after-free exists in Python through 3.9 via heappushpop in heapq.",
      "cve": "CVE-2022-48560",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python2.7@2.7.18-1~20.04.3 to 2.7.18-1~20.04.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python2.7@2.7.18-1~20.04.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.7.18-1~20.04.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-48560",
          "value": "CVE-2022-48560",
          "url": "https://scout.docker.com/v/CVE-2022-48560?s=ubuntu&n=python2.7&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.7.18-1%7E20.04.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-48560?s=ubuntu&n=python2.7&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.7.18-1%7E20.04.7"
        }
      ]
    },
    {
      "id": "7a9b146a4dd336f850cd620232b5c8011074be392ec3f5c4115f06b36e57ff56",
      "category": "container_scanning",
      "message": "CVE-2023-24329 on ubuntu/python2.7@2.7.18-1~20.04.3",
      "description": "An issue in the urllib.parse component of Python before 3.11.4 allows attackers to bypass blocklisting methods by supplying a URL that starts with blank characters.",
      "cve": "CVE-2023-24329",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python2.7@2.7.18-1~20.04.3 to 2.7.18-1~20.04.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python2.7@2.7.18-1~20.04.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.7.18-1~20.04.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24329",
          "value": "CVE-2023-24329",
          "url": "https://scout.docker.com/v/CVE-2023-24329?s=ubuntu&n=python2.7&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.7.18-1%7E20.04.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24329?s=ubuntu&n=python2.7&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.7.18-1%7E20.04.7"
        }
      ]
    },
    {
      "id": "b6c9ad695e862fe0cb2cc29366aa83cd291b3250ac5465793ab5241994a2725b",
      "category": "container_scanning",
      "message": "CVE-2024-0553 on ubuntu/gnutls28@3.6.13-2ubuntu1.8",
      "description": "A vulnerability was found in GnuTLS. The response times to malformed ciphertexts in RSA-PSK ClientKeyExchange differ from the response times of ciphertexts with correct PKCS#1 v1.5 padding. This issue may allow a remote attacker to perform a timing side-channel attack in the RSA-PSK key exchange, potentially leading to the leakage of sensitive data. CVE-2024-0553 is designated as an incomplete resolution for CVE-2023-5981.",
      "cve": "CVE-2024-0553",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/gnutls28@3.6.13-2ubuntu1.8 to 3.6.13-2ubuntu1.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/gnutls28@3.6.13-2ubuntu1.8?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "3.6.13-2ubuntu1.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-0553",
          "value": "CVE-2024-0553",
          "url": "https://scout.docker.com/v/CVE-2024-0553?s=ubuntu&n=gnutls28&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.6.13-2ubuntu1.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-0553?s=ubuntu&n=gnutls28&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.6.13-2ubuntu1.10"
        }
      ]
    },
    {
      "id": "3237c8dd5d72df81d7317683170d0fbbe8de93e2765787860b4ecccb61f158a6",
      "category": "container_scanning",
      "message": "CVE-2024-25062 on ubuntu/libxml2@2.9.10+dfsg-5ubuntu0.20.04.6",
      "description": "An issue was discovered in libxml2 before 2.11.7 and 2.12.x before 2.12.5. When using the XML Reader interface with DTD validation and XInclude expansion enabled, processing crafted XML documents can lead to an xmlValidatePopElement use-after-free.",
      "cve": "CVE-2024-25062",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libxml2@2.9.10+dfsg-5ubuntu0.20.04.6 to 2.9.10+dfsg-5ubuntu0.20.04.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libxml2@2.9.10%2Bdfsg-5ubuntu0.20.04.6?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.9.10+dfsg-5ubuntu0.20.04.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-25062",
          "value": "CVE-2024-25062",
          "url": "https://scout.docker.com/v/CVE-2024-25062?s=ubuntu&n=libxml2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.9.10%2Bdfsg-5ubuntu0.20.04.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-25062?s=ubuntu&n=libxml2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.9.10%2Bdfsg-5ubuntu0.20.04.7"
        }
      ]
    },
    {
      "id": "bca33eedcb119b2b3241020df86fd9c242a0ebd0801a9c47c6cf6e57ba072f72",
      "category": "container_scanning",
      "message": "CVE-2024-3651 on ubuntu/python-idna@2.8-1",
      "description": "A vulnerability was identified in the kjd/idna library, specifically within the `idna.encode()` function, affecting version 3.6. The issue arises from the function's handling of crafted input strings, which can lead to quadratic complexity and consequently, a denial of service condition. This vulnerability is triggered by a crafted input that causes the `idna.encode()` function to process the input with considerable computational load, significantly increasing the processing time in a quadratic manner relative to the input size.",
      "cve": "CVE-2024-3651",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python-idna@2.8-1 to 2.8-1ubuntu0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python-idna@2.8-1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.8-1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-3651",
          "value": "CVE-2024-3651",
          "url": "https://scout.docker.com/v/CVE-2024-3651?s=ubuntu&n=python-idna&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.8-1ubuntu0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-3651?s=ubuntu&n=python-idna&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.8-1ubuntu0.1"
        }
      ]
    },
    {
      "id": "a54e67a83cc2dfc806cbc8d74b2288be0fbfcba74b3cc1873cafad533049636e",
      "category": "container_scanning",
      "message": "CVE-2024-37370 on ubuntu/krb5@1.17-6ubuntu4.3",
      "description": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can modify the plaintext Extra Count field of a confidential GSS krb5 wrap token, causing the unwrapped token to appear truncated to the application.",
      "cve": "CVE-2024-37370",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/krb5@1.17-6ubuntu4.3 to 1.17-6ubuntu4.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/krb5@1.17-6ubuntu4.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.17-6ubuntu4.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-37370",
          "value": "CVE-2024-37370",
          "url": "https://scout.docker.com/v/CVE-2024-37370?s=ubuntu&n=krb5&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.17-6ubuntu4.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-37370?s=ubuntu&n=krb5&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.17-6ubuntu4.6"
        }
      ]
    },
    {
      "id": "316f37845ecf6810b1e57404859f385a7b8d8ab3b6bc91e37ded6dd106b82642",
      "category": "container_scanning",
      "message": "CVE-2024-45490 on ubuntu/expat@2.2.9-1ubuntu0.6",
      "description": "An issue was discovered in libexpat before 2.6.3. xmlparse.c does not reject a negative length for XML_ParseBuffer.",
      "cve": "CVE-2024-45490",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/expat@2.2.9-1ubuntu0.6 to 2.2.9-1ubuntu0.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/expat@2.2.9-1ubuntu0.6?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.2.9-1ubuntu0.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45490",
          "value": "CVE-2024-45490",
          "url": "https://scout.docker.com/v/CVE-2024-45490?s=ubuntu&n=expat&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.2.9-1ubuntu0.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45490?s=ubuntu&n=expat&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.2.9-1ubuntu0.7"
        }
      ]
    },
    {
      "id": "d3b5b29b9ba052cc763d921cc4e8bc9d2a85e212f5954582f2693993565bdf8a",
      "category": "container_scanning",
      "message": "CVE-2024-6232 on ubuntu/python2.7@2.7.18-1~20.04.3",
      "description": "There is a MEDIUM severity vulnerability affecting CPython.      Regular expressions that allowed excessive backtracking during tarfile.TarFile header parsing are vulnerable to ReDoS via specifically-crafted tar archives.",
      "cve": "CVE-2024-6232",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python2.7@2.7.18-1~20.04.3 to 2.7.18-1~20.04.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python2.7@2.7.18-1~20.04.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.7.18-1~20.04.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-6232",
          "value": "CVE-2024-6232",
          "url": "https://scout.docker.com/v/CVE-2024-6232?s=ubuntu&n=python2.7&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.7.18-1%7E20.04.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-6232?s=ubuntu&n=python2.7&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.7.18-1%7E20.04.5"
        }
      ]
    },
    {
      "id": "0220058b6741e13e9858974fdbcfb317c9837fba001377d98ba1af3cd41346ac",
      "category": "container_scanning",
      "message": "CVE-2024-6232 on ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8",
      "description": "There is a MEDIUM severity vulnerability affecting CPython.      Regular expressions that allowed excessive backtracking during tarfile.TarFile header parsing are vulnerable to ReDoS via specifically-crafted tar archives.",
      "cve": "CVE-2024-6232",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8 to 3.8.10-0ubuntu1~20.04.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "3.8.10-0ubuntu1~20.04.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-6232",
          "value": "CVE-2024-6232",
          "url": "https://scout.docker.com/v/CVE-2024-6232?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-6232?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.12"
        }
      ]
    },
    {
      "id": "3a4ee6800c390284527173ba1a0f517cde714ec845d0be7b145bc5eaf401b1dc",
      "category": "container_scanning",
      "message": "CVE-2025-27113 on ubuntu/libxml2@2.9.10+dfsg-5ubuntu0.20.04.6",
      "description": "libxml2 before 2.12.10 and 2.13.x before 2.13.6 has a NULL pointer dereference in xmlPatMatch in pattern.c.",
      "cve": "CVE-2025-27113",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libxml2@2.9.10+dfsg-5ubuntu0.20.04.6 to 2.9.10+dfsg-5ubuntu0.20.04.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libxml2@2.9.10%2Bdfsg-5ubuntu0.20.04.6?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.9.10+dfsg-5ubuntu0.20.04.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-27113",
          "value": "CVE-2025-27113",
          "url": "https://scout.docker.com/v/CVE-2025-27113?s=ubuntu&n=libxml2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.9.10%2Bdfsg-5ubuntu0.20.04.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-27113?s=ubuntu&n=libxml2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.9.10%2Bdfsg-5ubuntu0.20.04.9"
        }
      ]
    },
    {
      "id": "bf4d61dff8cb551d481011e5d1753d17cbf7a697792ce0b8efffc324bc60d046",
      "category": "container_scanning",
      "message": "CVE-2025-32414 on ubuntu/libxml2@2.9.10+dfsg-5ubuntu0.20.04.6",
      "description": "In libxml2 before 2.13.8 and 2.14.x before 2.14.2, out-of-bounds memory access can occur in the Python API (Python bindings) because of an incorrect return value. This occurs in xmlPythonFileRead and xmlPythonFileReadRaw because of a difference between bytes and characters.",
      "cve": "CVE-2025-32414",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libxml2@2.9.10+dfsg-5ubuntu0.20.04.6 to 2.9.10+dfsg-5ubuntu0.20.04.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libxml2@2.9.10%2Bdfsg-5ubuntu0.20.04.6?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.9.10+dfsg-5ubuntu0.20.04.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-32414",
          "value": "CVE-2025-32414",
          "url": "https://scout.docker.com/v/CVE-2025-32414?s=ubuntu&n=libxml2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.9.10%2Bdfsg-5ubuntu0.20.04.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-32414?s=ubuntu&n=libxml2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.9.10%2Bdfsg-5ubuntu0.20.04.10"
        }
      ]
    },
    {
      "id": "dde3baffa49f3b1fd9cb0861d480fc36ed5267e871a360c1ad0733c8a08c8996",
      "category": "container_scanning",
      "message": "CVE-2025-32415 on ubuntu/libxml2@2.9.10+dfsg-5ubuntu0.20.04.6",
      "description": "In libxml2 before 2.13.8 and 2.14.x before 2.14.2, xmlSchemaIDCFillNodeTables in xmlschemas.c has a heap-based buffer under-read. To exploit this, a crafted XML document must be validated against an XML schema with certain identity constraints, or a crafted XML schema must be used.",
      "cve": "CVE-2025-32415",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libxml2@2.9.10+dfsg-5ubuntu0.20.04.6 to 2.9.10+dfsg-5ubuntu0.20.04.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libxml2@2.9.10%2Bdfsg-5ubuntu0.20.04.6?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.9.10+dfsg-5ubuntu0.20.04.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-32415",
          "value": "CVE-2025-32415",
          "url": "https://scout.docker.com/v/CVE-2025-32415?s=ubuntu&n=libxml2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.9.10%2Bdfsg-5ubuntu0.20.04.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-32415?s=ubuntu&n=libxml2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.9.10%2Bdfsg-5ubuntu0.20.04.10"
        }
      ]
    },
    {
      "id": "30e165c24566683d04d76d6178450c5462563b1e07674ba99cc9dceb49bec0fe",
      "category": "container_scanning",
      "message": "CVE-2022-48624 on ubuntu/less@551-1ubuntu0.1",
      "description": "close_altfile in filename.c in less before 606 omits shell_quote calls for LESSCLOSE.",
      "cve": "CVE-2022-48624",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/less@551-1ubuntu0.1 to 551-1ubuntu0.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/less@551-1ubuntu0.1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "551-1ubuntu0.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-48624",
          "value": "CVE-2022-48624",
          "url": "https://scout.docker.com/v/CVE-2022-48624?s=ubuntu&n=less&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C551-1ubuntu0.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-48624?s=ubuntu&n=less&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C551-1ubuntu0.2"
        }
      ]
    },
    {
      "id": "85d91e98f7838fad9f57bc76d365dbbe98732eb46a6eb5a666f195795d6c54af",
      "category": "container_scanning",
      "message": "CVE-2023-43787 on ubuntu/libx11@2:1.6.9-2ubuntu1.5",
      "description": "A vulnerability was found in libX11 due to an integer overflow within the XCreateImage() function. This flaw allows a local user to trigger an integer overflow and execute arbitrary code with elevated privileges.",
      "cve": "CVE-2023-43787",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/libx11@2:1.6.9-2ubuntu1.5 to 2:1.6.9-2ubuntu1.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/libx11@2%3A1.6.9-2ubuntu1.5?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2:1.6.9-2ubuntu1.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-43787",
          "value": "CVE-2023-43787",
          "url": "https://scout.docker.com/v/CVE-2023-43787?s=ubuntu&n=libx11&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2%3A1.6.9-2ubuntu1.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-43787?s=ubuntu&n=libx11&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2%3A1.6.9-2ubuntu1.6"
        }
      ]
    },
    {
      "id": "b62f6d4028c7178f98067a14a419c785acd573d84870a6f199a75e5bee388bcc",
      "category": "container_scanning",
      "message": "CVE-2023-47038 on ubuntu/perl@5.30.0-9ubuntu0.4",
      "description": "A vulnerability was found in perl 5.30.0 through 5.38.0. This issue occurs when a crafted regular expression is compiled by perl, which can allow an attacker controlled byte buffer overflow in a heap allocated buffer.",
      "cve": "CVE-2023-47038",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/perl@5.30.0-9ubuntu0.4 to 5.30.0-9ubuntu0.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/perl@5.30.0-9ubuntu0.4?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "5.30.0-9ubuntu0.4"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-47038",
          "value": "CVE-2023-47038",
          "url": "https://scout.docker.com/v/CVE-2023-47038?s=ubuntu&n=perl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C5.30.0-9ubuntu0.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-47038?s=ubuntu&n=perl&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C5.30.0-9ubuntu0.5"
        }
      ]
    },
    {
      "id": "2d837a158b5641d3ef233e2866925a4c12c9834de08041cf4885a4814710c46d",
      "category": "container_scanning",
      "message": "CVE-2024-9287 on ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8",
      "description": "A vulnerability has been found in the CPython `venv` module and CLI where path names provided when creating a virtual environment were not quoted properly, allowing the creator to inject commands into virtual environment \"activation\" scripts (ie \"source venv/bin/activate\"). This means that attacker-controlled virtual environments are able to run commands when the virtual environment is activated. Virtual environments which are not created by an attacker or which aren't activated before being used (ie \"./venv/bin/python\") are not affected.",
      "cve": "CVE-2024-9287",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8 to 3.8.10-0ubuntu1~20.04.16",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python3.8@3.8.10-0ubuntu1~20.04.8?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "3.8.10-0ubuntu1~20.04.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-9287",
          "value": "CVE-2024-9287",
          "url": "https://scout.docker.com/v/CVE-2024-9287?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.16"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-9287?s=ubuntu&n=python3.8&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C3.8.10-0ubuntu1%7E20.04.16"
        }
      ]
    },
    {
      "id": "56284da4e31ff45edd4a371a5cfd4ac5ffd1a431f0b436ef28cdf5a4a0fde4f3",
      "category": "container_scanning",
      "message": "CVE-2023-43804 on ubuntu/python-pip@20.0.2-5ubuntu1.9",
      "description": "urllib3 is a user-friendly HTTP client library for Python. urllib3 doesn't treat the `Cookie` HTTP header special or provide any helpers for managing cookies over HTTP, that is the responsibility of the user. However, it is possible for a user to specify a `Cookie` header and unknowingly leak information via HTTP redirects to a different origin if that user doesn't disable redirects explicitly. This issue has been patched in urllib3 version 1.26.17 or 2.0.5.",
      "cve": "CVE-2023-43804",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python-pip@20.0.2-5ubuntu1.9 to 20.0.2-5ubuntu1.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python-pip@20.0.2-5ubuntu1.9?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "20.0.2-5ubuntu1.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-43804",
          "value": "CVE-2023-43804",
          "url": "https://scout.docker.com/v/CVE-2023-43804?s=ubuntu&n=python-pip&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C20.0.2-5ubuntu1.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-43804?s=ubuntu&n=python-pip&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C20.0.2-5ubuntu1.10"
        }
      ]
    },
    {
      "id": "efd14658da61750b476b2dcef179f3bd334a1fe39efc0b75d87990ead2392da5",
      "category": "container_scanning",
      "message": "CVE-2023-43804 on ubuntu/python-urllib3@1.25.8-2ubuntu0.2",
      "description": "urllib3 is a user-friendly HTTP client library for Python. urllib3 doesn't treat the `Cookie` HTTP header special or provide any helpers for managing cookies over HTTP, that is the responsibility of the user. However, it is possible for a user to specify a `Cookie` header and unknowingly leak information via HTTP redirects to a different origin if that user doesn't disable redirects explicitly. This issue has been patched in urllib3 version 1.26.17 or 2.0.5.",
      "cve": "CVE-2023-43804",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python-urllib3@1.25.8-2ubuntu0.2 to 1.25.8-2ubuntu0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python-urllib3@1.25.8-2ubuntu0.2?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.25.8-2ubuntu0.2"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-43804",
          "value": "CVE-2023-43804",
          "url": "https://scout.docker.com/v/CVE-2023-43804?s=ubuntu&n=python-urllib3&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.25.8-2ubuntu0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-43804?s=ubuntu&n=python-urllib3&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.25.8-2ubuntu0.3"
        }
      ]
    },
    {
      "id": "01a4783f1788752403ac9b063a745417d039b90c9d73459fcab6e2ede246bf5f",
      "category": "container_scanning",
      "message": "CVE-2025-27363 on ubuntu/freetype@2.10.1-2ubuntu0.3",
      "description": "An out of bounds write exists in FreeType versions 2.13.0 and below (newer versions of FreeType are not vulnerable) when attempting to parse font subglyph structures related to TrueType GX and variable font files. The vulnerable code assigns a signed short value to an unsigned long and then adds a static value causing it to wrap around and allocate too small of a heap buffer. The code then writes up to 6 signed long integers out of bounds relative to this buffer. This may result in arbitrary code execution. This vulnerability may have been exploited in the wild.",
      "cve": "CVE-2025-27363",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/freetype@2.10.1-2ubuntu0.3 to 2.10.1-2ubuntu0.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/freetype@2.10.1-2ubuntu0.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.10.1-2ubuntu0.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-27363",
          "value": "CVE-2025-27363",
          "url": "https://scout.docker.com/v/CVE-2025-27363?s=ubuntu&n=freetype&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.10.1-2ubuntu0.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-27363?s=ubuntu&n=freetype&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.10.1-2ubuntu0.4"
        }
      ]
    },
    {
      "id": "b93c37c4388d50d1a079aca213efc69d99b87d9887a509b7dca892aa99ee6508",
      "category": "container_scanning",
      "message": "CVE-2025-47273 on ubuntu/setuptools@45.2.0-1ubuntu0.1",
      "description": "setuptools is a package that allows users to download, build, install, upgrade, and uninstall Python packages. A path traversal vulnerability in `PackageIndex` is present in setuptools prior to version 78.1.1. An attacker would be allowed to write files to arbitrary locations on the filesystem with the permissions of the process running the Python code, which could escalate to remote code execution depending on the context. Version 78.1.1 fixes the issue.",
      "cve": "CVE-2025-47273",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/setuptools@45.2.0-1ubuntu0.1 to 45.2.0-1ubuntu0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/setuptools@45.2.0-1ubuntu0.1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "45.2.0-1ubuntu0.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-47273",
          "value": "CVE-2025-47273",
          "url": "https://scout.docker.com/v/CVE-2025-47273?s=ubuntu&n=setuptools&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C45.2.0-1ubuntu0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-47273?s=ubuntu&n=setuptools&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C45.2.0-1ubuntu0.3"
        }
      ]
    },
    {
      "id": "6a35a40abbd9164d173fecc04c78b92c210d832bfb0529555adce801712e558d",
      "category": "container_scanning",
      "message": "CVE-2024-3596 on ubuntu/krb5@1.17-6ubuntu4.3",
      "description": "RADIUS Protocol under RFC 2865 is susceptible to forgery attacks by a local attacker who can modify any valid Response (Access-Accept, Access-Reject, or Access-Challenge) to any other response using a chosen-prefix collision attack against MD5 Response Authenticator signature.",
      "cve": "CVE-2024-3596",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/krb5@1.17-6ubuntu4.3 to 1.17-6ubuntu4.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/krb5@1.17-6ubuntu4.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.17-6ubuntu4.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-3596",
          "value": "CVE-2024-3596",
          "url": "https://scout.docker.com/v/CVE-2024-3596?s=ubuntu&n=krb5&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.17-6ubuntu4.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-3596?s=ubuntu&n=krb5&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.17-6ubuntu4.8"
        }
      ]
    },
    {
      "id": "3da9f8ef6ec590bfcb71fd2671ab5b3c6ff1dd16a779104074046b7dcd29427e",
      "category": "container_scanning",
      "message": "CVE-2024-37371 on ubuntu/krb5@1.17-6ubuntu4.3",
      "description": "In MIT Kerberos 5 (aka krb5) before 1.21.3, an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields.",
      "cve": "CVE-2024-37371",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/krb5@1.17-6ubuntu4.3 to 1.17-6ubuntu4.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/krb5@1.17-6ubuntu4.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.17-6ubuntu4.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-37371",
          "value": "CVE-2024-37371",
          "url": "https://scout.docker.com/v/CVE-2024-37371?s=ubuntu&n=krb5&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.17-6ubuntu4.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-37371?s=ubuntu&n=krb5&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.17-6ubuntu4.6"
        }
      ]
    },
    {
      "id": "f68f6f9ee1837d3520fabfa61e92267d97d14db17b27f3e0d2755d4db28ffa65",
      "category": "container_scanning",
      "message": "CVE-2016-1585 on ubuntu/apparmor@2.13.3-7ubuntu5.2",
      "description": "In all versions of AppArmor mount rules are accidentally widened when compiled.",
      "cve": "CVE-2016-1585",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/apparmor@2.13.3-7ubuntu5.2 to 2.13.3-7ubuntu5.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/apparmor@2.13.3-7ubuntu5.2?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.13.3-7ubuntu5.2"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2016-1585",
          "value": "CVE-2016-1585",
          "url": "https://scout.docker.com/v/CVE-2016-1585?s=ubuntu&n=apparmor&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.13.3-7ubuntu5.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2016-1585?s=ubuntu&n=apparmor&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.13.3-7ubuntu5.4"
        }
      ]
    },
    {
      "id": "e3229ce19d69e68c1ca4a96b319f9f9ff7d68753d19ca22c748fdef217a27c5d",
      "category": "container_scanning",
      "message": "CVE-2022-48565 on ubuntu/python2.7@2.7.18-1~20.04.3",
      "description": "An XML External Entity (XXE) issue was discovered in Python through 3.9.1. The plistlib module no longer accepts entity declarations in XML plist files to avoid XML vulnerabilities.",
      "cve": "CVE-2022-48565",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python2.7@2.7.18-1~20.04.3 to 2.7.18-1~20.04.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python2.7@2.7.18-1~20.04.3?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.7.18-1~20.04.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-48565",
          "value": "CVE-2022-48565",
          "url": "https://scout.docker.com/v/CVE-2022-48565?s=ubuntu&n=python2.7&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.7.18-1%7E20.04.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-48565?s=ubuntu&n=python2.7&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.7.18-1%7E20.04.7"
        }
      ]
    },
    {
      "id": "2fd9c67e09329dd93ede730e64948cbfd099ccc0693cc55f3e166dc5929430f6",
      "category": "container_scanning",
      "message": "CVE-2024-45491 on ubuntu/expat@2.2.9-1ubuntu0.6",
      "description": "An issue was discovered in libexpat before 2.6.3. dtdCopy in xmlparse.c can have an integer overflow for nDefaultAtts on 32-bit platforms (where UINT_MAX equals SIZE_MAX).",
      "cve": "CVE-2024-45491",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/expat@2.2.9-1ubuntu0.6 to 2.2.9-1ubuntu0.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/expat@2.2.9-1ubuntu0.6?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.2.9-1ubuntu0.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45491",
          "value": "CVE-2024-45491",
          "url": "https://scout.docker.com/v/CVE-2024-45491?s=ubuntu&n=expat&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.2.9-1ubuntu0.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45491?s=ubuntu&n=expat&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.2.9-1ubuntu0.7"
        }
      ]
    },
    {
      "id": "7b4f4813742d92fbb3d8204618c5f5fd4ee199a733bd0106f4c9b3681f47d6b1",
      "category": "container_scanning",
      "message": "CVE-2024-45492 on ubuntu/expat@2.2.9-1ubuntu0.6",
      "description": "An issue was discovered in libexpat before 2.6.3. nextScaffoldPart in xmlparse.c can have an integer overflow for m_groupSize on 32-bit platforms (where UINT_MAX equals SIZE_MAX).",
      "cve": "CVE-2024-45492",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/expat@2.2.9-1ubuntu0.6 to 2.2.9-1ubuntu0.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/expat@2.2.9-1ubuntu0.6?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "2.2.9-1ubuntu0.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45492",
          "value": "CVE-2024-45492",
          "url": "https://scout.docker.com/v/CVE-2024-45492?s=ubuntu&n=expat&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.2.9-1ubuntu0.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45492?s=ubuntu&n=expat&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C2.2.9-1ubuntu0.7"
        }
      ]
    },
    {
      "id": "770ff3761fc795e0b2bd44f03fc2cb761e64e6337ae933089894d9a716bab232",
      "category": "container_scanning",
      "message": "CVE-2024-47606 on ubuntu/gstreamer1.0@1.16.3-0ubuntu1.1",
      "description": "GStreamer is a library for constructing graphs of media-handling components. An integer underflow has been detected in the function qtdemux_parse_theora_extension within qtdemux.c. The vulnerability occurs due to an underflow of the gint size variable, which causes size to hold a large unintended value when cast to an unsigned integer. This 32-bit negative value is then cast to a 64-bit unsigned integer (0xfffffffffffffffa) in a subsequent call to gst_buffer_new_and_alloc. The function gst_buffer_new_allocate then attempts to allocate memory, eventually calling _sysmem_new_block. The function _sysmem_new_block adds alignment and header size to the (unsigned) size, causing the overflow of the 'slice_size' variable. As a result, only 0x89 bytes are allocated, despite the large input size. When the following memcpy call occurs in gst_buffer_fill, the data from the input file will overwrite the content of the GstMapInfo info structure. Finally, during the call to gst_memory_unmap, the overwritten memory may cause a function pointer hijack, as the mem->allocator->mem_unmap_full function is called with a corrupted pointer. This function pointer overwrite could allow an attacker to alter the execution flow of the program, leading to arbitrary code execution. This vulnerability is fixed in 1.24.10.",
      "cve": "CVE-2024-47606",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/gstreamer1.0@1.16.3-0ubuntu1.1 to 1.16.3-0ubuntu1.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/gstreamer1.0@1.16.3-0ubuntu1.1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.16.3-0ubuntu1.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47606",
          "value": "CVE-2024-47606",
          "url": "https://scout.docker.com/v/CVE-2024-47606?s=ubuntu&n=gstreamer1.0&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.16.3-0ubuntu1.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47606?s=ubuntu&n=gstreamer1.0&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.16.3-0ubuntu1.2"
        }
      ]
    },
    {
      "id": "aecaa27981f271b5914525c85ef5f04ddf4a7692e3b80697aa9a0b6f3361b7e2",
      "category": "container_scanning",
      "message": "CVE-2023-27561 on github.com/opencontainers/runc@1.1.3",
      "description": "runc 1.0.0-rc95 through 1.1.4 has Incorrect Access Control leading to Escalation of Privileges, related to `libcontainer/rootfs_linux.go`. To exploit this, an attacker must be able to spawn two containers with custom volume-mount configurations, and be able to run custom images. NOTE: this issue exists because of a CVE-2019-19921 regression.",
      "cve": "CVE-2023-27561",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/opencontainers/runc@1.1.3 to 1.1.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/opencontainers/runc@1.1.3"
          },
          "version": "1.1.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-27561",
          "value": "CVE-2023-27561",
          "url": "https://scout.docker.com/v/CVE-2023-27561?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3E%3D1.0.0-rc95%2C%3C1.1.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-27561?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3E%3D1.0.0-rc95%2C%3C1.1.5"
        }
      ]
    },
    {
      "id": "215d7195685000bf651e829850e01ff62406b2d1ab3b480f9475b48555d9dd37",
      "category": "container_scanning",
      "message": "CVE-2023-27561 on github.com/opencontainers/runc@1.0.1",
      "description": "runc 1.0.0-rc95 through 1.1.4 has Incorrect Access Control leading to Escalation of Privileges, related to `libcontainer/rootfs_linux.go`. To exploit this, an attacker must be able to spawn two containers with custom volume-mount configurations, and be able to run custom images. NOTE: this issue exists because of a CVE-2019-19921 regression.",
      "cve": "CVE-2023-27561",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/opencontainers/runc@1.0.1 to 1.1.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/opencontainers/runc@1.0.1"
          },
          "version": "1.0.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-27561",
          "value": "CVE-2023-27561",
          "url": "https://scout.docker.com/v/CVE-2023-27561?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3E%3D1.0.0-rc95%2C%3C1.1.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-27561?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3E%3D1.0.0-rc95%2C%3C1.1.5"
        }
      ]
    },
    {
      "id": "eb1809e8feace12774dbcc3af89e2ffc273bf1fa0f8a06c791db4638dfba58e2",
      "category": "container_scanning",
      "message": "CVE-2025-24070 on Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0",
      "description": "# Microsoft Security Advisory CVE-2025-24070: .NET Elevation of Privilege Vulnerability\n\n## <a name=\"executive-summary\"></a>Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 9.0, ASP.NET Core 8.0, ASP.NET Core 6.0, and ASP.NET Core 2.3. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\n\nA vulnerability exists in ASP.NET Core applications calling RefreshSignInAsync with an improperly authenticated user parameter that could allow an attacker to sign into another user's account, resulting in Elevation of Privilege.\n\n## Announcement\n\nAnnouncement for this issue can be found at https://github.com/dotnet/announcements/issues/348\n\n### <a name=\"mitigation-factors\"></a>Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n## <a name=\"affected-software\"></a>Affected software\n\n* Any ASP.NET Core 9.0 application running on ASP.NET Core 9.0.2 or earlier.\n* Any ASP.NET Core application running on ASP.NET Core 8.0.13 or earlier.\n* Any ASP.NET Core application running on ASP.NET Core 6.0.36 or earlier.\n* Any ASP.NET Core 2.x application consuming the package Microsoft.AspNetCore.Identity version 2.3.0 or earlier.\n\n## <a name=\"affected-packages\"></a>Affected Packages\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected packages versions listed below\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.AspNetCore.Identity](https://www.nuget.org/packages/Microsoft.AspNetCore.Identity) | 2.3.0 | 2.3.1\n\n### <a name=\"ASP.NET Core 9\"></a>ASP.NET Core 9\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)           | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)     | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64) | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)     | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)               | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)               | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                   | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                   | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)               | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                   | >= 9.0.0, <= 9.0.2 | 9.0.3\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                   | >= 9.0.0, <= 9.0.2 | 9.0.3\n\n\n### <a name=\"ASP.NET Core 8\"></a>ASP.NET Core 8\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)           | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)     | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64) | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)     | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)               | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)               | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                   | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                   | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)               | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                   | >= 8.0.0, <= 8.0.13 | 8.0.14\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                   | >= 8.0.0, <= 8.0.13 | 8.0.14\n\n\n### <a name=\"ASP.NET Core 6\"></a>ASP.NET Core 6\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               | >= 6.0.0, <= 6.0.36 | none\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)           | >= 6.0.0, <= 6.0.36 | none\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)     | >= 6.0.0, <= 6.0.36 | none\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64) | >= 6.0.0, <= 6.0.36 | none\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)     | >= 6.0.0, <= 6.0.36 | none\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)               | >= 6.0.0, <= 6.0.36 | none\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)               | >= 6.0.0, <= 6.0.36 | none\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                   | >= 6.0.0, <= 6.0.36 | none\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                   | >= 6.0.0, <= 6.0.36 | none\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)               | >= 6.0.0, <= 6.0.36 | none\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                   | >= 6.0.0, <= 6.0.36 | none\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                   | >= 6.0.0, <= 6.0.36 | none\n\n## Advisory FAQ\n\n### <a name=\"how-affected\"></a>How do I know if I am affected?\n\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-packages) or [affected packages](#affected-software), you're exposed to the vulnerability.\n\n### <a name=\"how-fix\"></a>How do I fix the issue?\n\n1. To fix the issue please install the latest version of .NET 9.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n2. If your application references the vulnerable package, update the package reference to the patched version.\n\n* You can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET SDK:\n Version:           9.0.100\n Commit:            59db016f11\n Workload version:  9.0.100-manifests.3068a692\n MSBuild version:   17.12.7+5b8665660\n\nRuntime Environment:\n OS Name:     Mac OS X\n OS Version:  15.2\n OS Platform: Darwin\n RID:         osx-arm64\n Base Path:   /usr/local/share/dotnet/sdk/9.0.100/\n\n.NET workloads installed:\nThere are no installed workloads to display.\nConfigured to use loose manifests when installing new manifests.\n\nHost:\n  Version:      9.0.0\n  Architecture: arm64\n  Commit:       9d5a6a9aa4\n\n.NET SDKs installed:\n  9.0.100 [/usr/local/share/dotnet/sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\n\nOther architectures found:\n  x64   [/usr/local/share/dotnet]\n    registered at [/etc/dotnet/install_location_x64]\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  Not found\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n```\n\n* If you're using .NET 9.0, you should download and install .NET 9.0.3  Runtime or .NET 9.0.103 SDK (for Visual Studio 2022 v17.12 latest Preview) from https://dotnet.microsoft.com/download/dotnet-core/9.0.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 8.0 or .NET 9.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/aspnetcore. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n### External Links\n\n### Acknowledgement\nZahid TOKAT\n\n[CVE-2025-24070]( https://www.cve.org/CVERecord?id=CVE-2025-24070)",
      "cve": "CVE-2025-24070",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-24070",
          "value": "CVE-2025-24070",
          "url": "https://scout.docker.com/v/CVE-2025-24070?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C%3D6.0.36"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-24070?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C%3D6.0.36"
        }
      ]
    },
    {
      "id": "73f943aa3ab378f03858c76077ace8aaf739ff4dd0ff64b3396e83d27eaafdfc",
      "category": "container_scanning",
      "message": "CVE-2022-2989 on github.com/containerd/containerd@1.5.5",
      "description": "Supplementary groups are not set up properly inside a container. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases and potentially escalate privileges in the container. Uses of the containerd client library may also have improperly setup supplementary groups.",
      "cve": "CVE-2022-2989",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.5.5 to 1.5.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.5.5"
          },
          "version": "1.5.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-2989",
          "value": "CVE-2022-2989",
          "url": "https://scout.docker.com/v/CVE-2022-2989?s=golang&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.5.18"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-2989?s=golang&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.5.18"
        }
      ]
    },
    {
      "id": "531f48aaa318e18731efa76bd27d0c32829fdc54277d473b2366142c21c1f84c",
      "category": "container_scanning",
      "message": "CVE-2022-2989 on github.com/containerd/containerd@1.6.6",
      "description": "Supplementary groups are not set up properly inside a container. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases and potentially escalate privileges in the container. Uses of the containerd client library may also have improperly setup supplementary groups.",
      "cve": "CVE-2022-2989",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.6.6 to 1.6.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.6.6"
          },
          "version": "1.6.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-2989",
          "value": "CVE-2022-2989",
          "url": "https://scout.docker.com/v/CVE-2022-2989?s=golang&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.6.0%2C%3C1.6.18"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-2989?s=golang&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.6.0%2C%3C1.6.18"
        }
      ]
    },
    {
      "id": "2f06cb5da5e70f7f32e1b29f49a5efd728241e141ff6aac55f0d8fa7b455beaa",
      "category": "container_scanning",
      "message": "CVE-2022-2990 on github.com/containerd/containerd@1.5.5",
      "description": "Supplementary groups are not set up properly inside a container. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases and potentially escalate privileges in the container. Uses of the containerd client library may also have improperly setup supplementary groups.",
      "cve": "CVE-2022-2990",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.5.5 to 1.5.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.5.5"
          },
          "version": "1.5.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-2990",
          "value": "CVE-2022-2990",
          "url": "https://scout.docker.com/v/CVE-2022-2990?s=golang&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.5.18"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-2990?s=golang&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.5.18"
        }
      ]
    },
    {
      "id": "ee8076aad75a3b792de11ce5b51b5b7185f62050d8997c129fb88e393ff853fe",
      "category": "container_scanning",
      "message": "CVE-2022-2990 on github.com/containerd/containerd@1.6.6",
      "description": "Supplementary groups are not set up properly inside a container. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases and potentially escalate privileges in the container. Uses of the containerd client library may also have improperly setup supplementary groups.",
      "cve": "CVE-2022-2990",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.6.6 to 1.6.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.6.6"
          },
          "version": "1.6.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-2990",
          "value": "CVE-2022-2990",
          "url": "https://scout.docker.com/v/CVE-2022-2990?s=golang&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.6.0%2C%3C1.6.18"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-2990?s=golang&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.6.0%2C%3C1.6.18"
        }
      ]
    },
    {
      "id": "f24bb6644a5acd3ebb961a4b615c88aa9361dd7493688a83ce829c58f6d9a7ba",
      "category": "container_scanning",
      "message": "CVE-2022-2995 on github.com/containerd/containerd@1.6.6",
      "description": "Supplementary groups are not set up properly inside a container. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases and potentially escalate privileges in the container. Uses of the containerd client library may also have improperly setup supplementary groups.",
      "cve": "CVE-2022-2995",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.6.6 to 1.6.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.6.6"
          },
          "version": "1.6.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-2995",
          "value": "CVE-2022-2995",
          "url": "https://scout.docker.com/v/CVE-2022-2995?s=golang&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.6.0%2C%3C1.6.18"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-2995?s=golang&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.6.0%2C%3C1.6.18"
        }
      ]
    },
    {
      "id": "68518bd719df3a2ff8257364e4ebc8040465b1f8ab4bd510d81d28459f39609c",
      "category": "container_scanning",
      "message": "CVE-2022-2995 on github.com/containerd/containerd@1.5.5",
      "description": "Supplementary groups are not set up properly inside a container. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases and potentially escalate privileges in the container. Uses of the containerd client library may also have improperly setup supplementary groups.",
      "cve": "CVE-2022-2995",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.5.5 to 1.5.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.5.5"
          },
          "version": "1.5.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-2995",
          "value": "CVE-2022-2995",
          "url": "https://scout.docker.com/v/CVE-2022-2995?s=golang&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.5.18"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-2995?s=golang&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3C1.5.18"
        }
      ]
    },
    {
      "id": "3c53617a4c8941ef7d7ab461ac63bb97ed151252a0e477dcb8054bd6afa57488",
      "category": "container_scanning",
      "message": "CVE-2023-29337 on NuGet.Protocol@4.9.4.5839",
      "description": "### Description\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\n\n### Affected software\nThis issue only affects Linux systems.\n\n#### NuGet & NuGet Packages\n\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 5.11.4\n\n#### .NET SDK(s)\n\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\n\n\n### Patches\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement  versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\n\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\n- If you're using NuGet.exe 5.11.4 or lower, you should download and install 5.11.5 from https://dist.nuget.org/win-x86-commandline/v5.11.5/nuget.exe.\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n\n### Other details\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/69\n\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-29337\n",
      "cve": "CVE-2023-29337",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Protocol@4.9.4.5839 to 5.11.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Protocol@4.9.4.5839"
          },
          "version": "4.9.4.5839"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29337",
          "value": "CVE-2023-29337",
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D4.7.0%2C%3C5.11.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D4.7.0%2C%3C5.11.5"
        }
      ]
    },
    {
      "id": "e3404655365306568a445be5dd39d2b9ac7a041a4c999642bd79759da71bbbde",
      "category": "container_scanning",
      "message": "CVE-2023-29337 on NuGet.Commands@6.0.0",
      "description": "### Description\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\n\n### Affected software\nThis issue only affects Linux systems.\n\n#### NuGet & NuGet Packages\n\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 5.11.4\n\n#### .NET SDK(s)\n\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\n\n\n### Patches\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement  versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\n\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\n- If you're using NuGet.exe 5.11.4 or lower, you should download and install 5.11.5 from https://dist.nuget.org/win-x86-commandline/v5.11.5/nuget.exe.\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n\n### Other details\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/69\n\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-29337\n",
      "cve": "CVE-2023-29337",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Commands@6.0.0 to 6.0.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Commands@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29337",
          "value": "CVE-2023-29337",
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Commands&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Commands&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.5"
        }
      ]
    },
    {
      "id": "1daebf9c1aec911ba0fcee1b920a5749e3cbaa97f2c135451b435e81a98a2a74",
      "category": "container_scanning",
      "message": "CVE-2023-29337 on NuGet.Common@6.0.0",
      "description": "### Description\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\n\n### Affected software\nThis issue only affects Linux systems.\n\n#### NuGet & NuGet Packages\n\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 5.11.4\n\n#### .NET SDK(s)\n\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\n\n\n### Patches\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement  versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\n\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\n- If you're using NuGet.exe 5.11.4 or lower, you should download and install 5.11.5 from https://dist.nuget.org/win-x86-commandline/v5.11.5/nuget.exe.\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n\n### Other details\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/69\n\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-29337\n",
      "cve": "CVE-2023-29337",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Common@6.0.0 to 6.0.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Common@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29337",
          "value": "CVE-2023-29337",
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Common&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Common&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.5"
        }
      ]
    },
    {
      "id": "78630166611d60c827cc9e5c9516e34662afeafafe33af5fba03d2a6aa7ed96e",
      "category": "container_scanning",
      "message": "CVE-2023-29337 on NuGet.Common@6.0.0.278",
      "description": "### Description\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\n\n### Affected software\nThis issue only affects Linux systems.\n\n#### NuGet & NuGet Packages\n\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 5.11.4\n\n#### .NET SDK(s)\n\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\n\n\n### Patches\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement  versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\n\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\n- If you're using NuGet.exe 5.11.4 or lower, you should download and install 5.11.5 from https://dist.nuget.org/win-x86-commandline/v5.11.5/nuget.exe.\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n\n### Other details\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/69\n\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-29337\n",
      "cve": "CVE-2023-29337",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Common@6.0.0.278 to 6.0.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Common@6.0.0.278"
          },
          "version": "6.0.0.278"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29337",
          "value": "CVE-2023-29337",
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Common&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Common&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.5"
        }
      ]
    },
    {
      "id": "1d4c43190982f8565f3e35fb00525494ff42b95801b36f92c9c4a14954008167",
      "category": "container_scanning",
      "message": "CVE-2023-29337 on NuGet.Protocol@5.2.0",
      "description": "### Description\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\n\n### Affected software\nThis issue only affects Linux systems.\n\n#### NuGet & NuGet Packages\n\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 5.11.4\n\n#### .NET SDK(s)\n\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\n\n\n### Patches\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement  versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\n\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\n- If you're using NuGet.exe 5.11.4 or lower, you should download and install 5.11.5 from https://dist.nuget.org/win-x86-commandline/v5.11.5/nuget.exe.\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n\n### Other details\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/69\n\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-29337\n",
      "cve": "CVE-2023-29337",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Protocol@5.2.0 to 5.11.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Protocol@5.2.0"
          },
          "version": "5.2.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29337",
          "value": "CVE-2023-29337",
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D4.7.0%2C%3C5.11.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D4.7.0%2C%3C5.11.5"
        }
      ]
    },
    {
      "id": "5495e0d4b4c1b3679650a809c6e68e94bd5062c7dc97d097f1d9f544d6fbf1c1",
      "category": "container_scanning",
      "message": "CVE-2023-29337 on NuGet.Common@5.2.0",
      "description": "### Description\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\n\n### Affected software\nThis issue only affects Linux systems.\n\n#### NuGet & NuGet Packages\n\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 5.11.4\n\n#### .NET SDK(s)\n\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\n\n\n### Patches\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement  versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\n\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\n- If you're using NuGet.exe 5.11.4 or lower, you should download and install 5.11.5 from https://dist.nuget.org/win-x86-commandline/v5.11.5/nuget.exe.\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n\n### Other details\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/69\n\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-29337\n",
      "cve": "CVE-2023-29337",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Common@5.2.0 to 5.11.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Common@5.2.0"
          },
          "version": "5.2.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29337",
          "value": "CVE-2023-29337",
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Common&t=nuget&vr=%3E%3D4.6.0%2C%3C5.11.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Common&t=nuget&vr=%3E%3D4.6.0%2C%3C5.11.5"
        }
      ]
    },
    {
      "id": "e825dcfa85c55990a10eed5718886c798565cda5b1d4a3ffe7c112bf6977d504",
      "category": "container_scanning",
      "message": "CVE-2023-29337 on NuGet.Common@4.9.4",
      "description": "### Description\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\n\n### Affected software\nThis issue only affects Linux systems.\n\n#### NuGet & NuGet Packages\n\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 5.11.4\n\n#### .NET SDK(s)\n\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\n\n\n### Patches\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement  versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\n\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\n- If you're using NuGet.exe 5.11.4 or lower, you should download and install 5.11.5 from https://dist.nuget.org/win-x86-commandline/v5.11.5/nuget.exe.\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n\n### Other details\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/69\n\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-29337\n",
      "cve": "CVE-2023-29337",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Common@4.9.4 to 5.11.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Common@4.9.4"
          },
          "version": "4.9.4"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29337",
          "value": "CVE-2023-29337",
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Common&t=nuget&vr=%3E%3D4.6.0%2C%3C5.11.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Common&t=nuget&vr=%3E%3D4.6.0%2C%3C5.11.5"
        }
      ]
    },
    {
      "id": "7eac849aac804071a4ae662f31d9aa8063a3c3f917f254e8c317ee304a773693",
      "category": "container_scanning",
      "message": "CVE-2023-29337 on NuGet.Protocol@6.0.0.278",
      "description": "### Description\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\n\n### Affected software\nThis issue only affects Linux systems.\n\n#### NuGet & NuGet Packages\n\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 5.11.4\n\n#### .NET SDK(s)\n\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\n\n\n### Patches\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement  versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\n\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\n- If you're using NuGet.exe 5.11.4 or lower, you should download and install 5.11.5 from https://dist.nuget.org/win-x86-commandline/v5.11.5/nuget.exe.\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n\n### Other details\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/69\n\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-29337\n",
      "cve": "CVE-2023-29337",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Protocol@6.0.0.278 to 6.0.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Protocol@6.0.0.278"
          },
          "version": "6.0.0.278"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29337",
          "value": "CVE-2023-29337",
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.5"
        }
      ]
    },
    {
      "id": "a5ce67e18ee32fdcc33595cfb846e8ddbe9bdcaad995a37cc6d83b55a12e1892",
      "category": "container_scanning",
      "message": "CVE-2023-29337 on NuGet.Common@4.9.4.5839",
      "description": "### Description\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\n\n### Affected software\nThis issue only affects Linux systems.\n\n#### NuGet & NuGet Packages\n\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 5.11.4\n\n#### .NET SDK(s)\n\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\n\n\n### Patches\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement  versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\n\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\n- If you're using NuGet.exe 5.11.4 or lower, you should download and install 5.11.5 from https://dist.nuget.org/win-x86-commandline/v5.11.5/nuget.exe.\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n\n### Other details\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/69\n\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-29337\n",
      "cve": "CVE-2023-29337",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Common@4.9.4.5839 to 5.11.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Common@4.9.4.5839"
          },
          "version": "4.9.4.5839"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29337",
          "value": "CVE-2023-29337",
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Common&t=nuget&vr=%3E%3D4.6.0%2C%3C5.11.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Common&t=nuget&vr=%3E%3D4.6.0%2C%3C5.11.5"
        }
      ]
    },
    {
      "id": "709d24345c54c294015ba1414b39661be933e9ee8c6061d94d5450e1cbc4d7de",
      "category": "container_scanning",
      "message": "CVE-2023-29337 on NuGet.Protocol@4.9.4",
      "description": "### Description\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\n\n### Affected software\nThis issue only affects Linux systems.\n\n#### NuGet & NuGet Packages\n\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 5.11.4\n\n#### .NET SDK(s)\n\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\n\n\n### Patches\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement  versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\n\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\n- If you're using NuGet.exe 5.11.4 or lower, you should download and install 5.11.5 from https://dist.nuget.org/win-x86-commandline/v5.11.5/nuget.exe.\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n\n### Other details\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/69\n\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-29337\n",
      "cve": "CVE-2023-29337",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Protocol@4.9.4 to 5.11.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Protocol@4.9.4"
          },
          "version": "4.9.4"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29337",
          "value": "CVE-2023-29337",
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D4.7.0%2C%3C5.11.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D4.7.0%2C%3C5.11.5"
        }
      ]
    },
    {
      "id": "981a1d2feb45bd2e4604568119ef41a7a3a85c9ce6ad05b86ad7e8031038496e",
      "category": "container_scanning",
      "message": "CVE-2023-29337 on NuGet.Protocol@6.0.0",
      "description": "### Description\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET and NuGet on Linux. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 6.0, .NET 7.0 and NuGet(nuget.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement) where a potential race condition that can lead to a symlink attack on Linux. Non-Linux platforms are not affected.\n\n### Affected software\nThis issue only affects Linux systems.\n\n#### NuGet & NuGet Packages\n\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.6.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.5.0 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.4.1 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.3.2 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.2.3 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 6.0.4 version or earlier.\n- Any NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, Microsoft.Build.NuGetSdkResolver, NuGet.PackageManagement 5.11.4\n\n#### .NET SDK(s)\n\n- Any .NET SDK 7.0.106 or earlier, or 7.0.303 or earlier\n- Any .NET SDK 6.0.117 or earlier, or 6.0.312 or earlier, or 6.0.409 or earlier.\n\n\n### Patches\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 7.0 and NuGet (NuGet.exe, NuGet.Protocol, NuGet.Common, NuGet.CommandLine, NuGet.Commands, NuGet.PackageManagement  versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\n\n- If you're using NuGet.exe 6.6.0 or lower, you should download and install 6.6.1 from https://dist.nuget.org/win-x86-commandline/v6.6.1/nuget.exe.\n- If you're using NuGet.exe 6.5.0 or lower, you should download and install 6.5.1 from https://dist.nuget.org/win-x86-commandline/v6.5.1/nuget.exe.\n- If you're using NuGet.exe 6.4.1 or lower, you should download and install 6.4.2 from https://dist.nuget.org/win-x86-commandline/v6.4.2/nuget.exe.\n- If you're using NuGet.exe 6.3.2 or lower, you should download and install 6.3.3 from https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe.\n- If you're using NuGet.exe 6.2.3 or lower, you should download and install 6.2.4 from https://dist.nuget.org/win-x86-commandline/v6.2.4/nuget.exe.\n- If you're using NuGet.exe 6.0.4 or lower, you should download and install 6.0.5 from https://dist.nuget.org/win-x86-commandline/v6.0.5/nuget.exe.\n- If you're using NuGet.exe 5.11.4 or lower, you should download and install 5.11.5 from https://dist.nuget.org/win-x86-commandline/v5.11.5/nuget.exe.\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n\n- If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.107 or SDK 7.0.304 from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n- If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.118 or SDK 6.0.312 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n\n### Other details\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/69\n\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-29337\n",
      "cve": "CVE-2023-29337",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Protocol@6.0.0 to 6.0.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Protocol@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29337",
          "value": "CVE-2023-29337",
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29337?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.5"
        }
      ]
    },
    {
      "id": "15f8232fc52a63eea503474344dacd216e65d68988227a2c75ff19d0adea33f0",
      "category": "container_scanning",
      "message": "CVE-2023-24539 on stdlib@1.16.12",
      "description": "Angle brackets (<>) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
      "cve": "CVE-2023-24539",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.19.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24539",
          "value": "CVE-2023-24539",
          "url": "https://scout.docker.com/v/CVE-2023-24539?s=golang&n=stdlib&t=golang&vr=%3C1.19.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24539?s=golang&n=stdlib&t=golang&vr=%3C1.19.9"
        }
      ]
    },
    {
      "id": "2e76099e33a2df8703e49880ca9b60d15566b155ae476281e69cce2a6736a7a5",
      "category": "container_scanning",
      "message": "CVE-2023-24539 on stdlib@1.16.10",
      "description": "Angle brackets (<>) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
      "cve": "CVE-2023-24539",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.19.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24539",
          "value": "CVE-2023-24539",
          "url": "https://scout.docker.com/v/CVE-2023-24539?s=golang&n=stdlib&t=golang&vr=%3C1.19.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24539?s=golang&n=stdlib&t=golang&vr=%3C1.19.9"
        }
      ]
    },
    {
      "id": "3920d93672234b1af7d959841a4081c160d3f9b570fcf3d6952f0c29f4a57ebf",
      "category": "container_scanning",
      "message": "CVE-2023-24539 on stdlib@1.18.9",
      "description": "Angle brackets (<>) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
      "cve": "CVE-2023-24539",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.19.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24539",
          "value": "CVE-2023-24539",
          "url": "https://scout.docker.com/v/CVE-2023-24539?s=golang&n=stdlib&t=golang&vr=%3C1.19.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24539?s=golang&n=stdlib&t=golang&vr=%3C1.19.9"
        }
      ]
    },
    {
      "id": "7819e9e89acde10ca64db3d3d75f95a3dfdc77e67f55440abe814a44de9534a0",
      "category": "container_scanning",
      "message": "CVE-2023-29400 on stdlib@1.18.9",
      "description": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
      "cve": "CVE-2023-29400",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.19.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29400",
          "value": "CVE-2023-29400",
          "url": "https://scout.docker.com/v/CVE-2023-29400?s=golang&n=stdlib&t=golang&vr=%3C1.19.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29400?s=golang&n=stdlib&t=golang&vr=%3C1.19.9"
        }
      ]
    },
    {
      "id": "d76e71a341eed5b06bc4e8efe777891689c5c3b29042aa92345578eee0cfc1ce",
      "category": "container_scanning",
      "message": "CVE-2023-29400 on stdlib@1.16.12",
      "description": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
      "cve": "CVE-2023-29400",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.19.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29400",
          "value": "CVE-2023-29400",
          "url": "https://scout.docker.com/v/CVE-2023-29400?s=golang&n=stdlib&t=golang&vr=%3C1.19.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29400?s=golang&n=stdlib&t=golang&vr=%3C1.19.9"
        }
      ]
    },
    {
      "id": "9965470bfccb87c8fbafad280725e93d51b6e0ee2ff56255427fec06f535c183",
      "category": "container_scanning",
      "message": "CVE-2023-29400 on stdlib@1.16.10",
      "description": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
      "cve": "CVE-2023-29400",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.19.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29400",
          "value": "CVE-2023-29400",
          "url": "https://scout.docker.com/v/CVE-2023-29400?s=golang&n=stdlib&t=golang&vr=%3C1.19.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29400?s=golang&n=stdlib&t=golang&vr=%3C1.19.9"
        }
      ]
    },
    {
      "id": "098ca99476ab9f8b8c368e3fbd736a6d98a9de439f1d8d68659236d788658621",
      "category": "container_scanning",
      "message": "CVE-2023-43804 on urllib3@1.25.8",
      "description": "urllib3 doesn't treat the `Cookie` HTTP header special or provide any helpers for managing cookies over HTTP, that is the responsibility of the user. However, it is possible for a user to specify a `Cookie` header and unknowingly leak information via HTTP redirects to a different origin if that user doesn't disable redirects explicitly.\n\nUsers **must** handle redirects themselves instead of relying on urllib3's automatic redirects to achieve safe processing of the `Cookie` header, thus we decided to strip the header by default in order to further protect users who aren't using the correct approach.\n\n## Affected usages\n\nWe believe the number of usages affected by this advisory is low. It requires all of the following to be true to be exploited:\n\n* Using an affected version of urllib3 (patched in v1.26.17 and v2.0.6)\n* Using the `Cookie` header on requests, which is mostly typical for impersonating a browser.\n* Not disabling HTTP redirects\n* Either not using HTTPS or for the origin server to redirect to a malicious origin.\n\n## Remediation\n\n* Upgrading to at least urllib3 v1.26.17 or v2.0.6\n* Disabling HTTP redirects using `redirects=False` when sending requests.\n* Not using the `Cookie` header.",
      "cve": "CVE-2023-43804",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade urllib3@1.25.8 to 1.26.17",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/urllib3@1.25.8"
          },
          "version": "1.25.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-43804",
          "value": "CVE-2023-43804",
          "url": "https://scout.docker.com/v/CVE-2023-43804?s=github&n=urllib3&t=pypi&vr=%3C1.26.17"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-43804?s=github&n=urllib3&t=pypi&vr=%3C1.26.17"
        }
      ]
    },
    {
      "id": "f26e27d3ff5612fc2197d8d16dbed37675b9c0fb2498b40c8d53a6a519ad6770",
      "category": "container_scanning",
      "message": "CVE-2018-1000632 on org.dom4j/dom4j@1.4",
      "description": "dom4j version prior to version 2.1.1 contains a CWE-91: XML Injection vulnerability in Class: Element. Methods: addElement, addAttribute that can result in an attacker tampering with XML documents through XML injection. This attack appear to be exploitable via an attacker specifying attributes or elements in the XML document. This vulnerability appears to have been fixed in 2.1.1 or later.\n\nNote: This advisory applies to `dom4j:dom4j` version 1.x legacy artifacts.  To resolve this a change to the latest version of `org.dom4j:dom4j` is recommended.",
      "cve": "CVE-2018-1000632",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.dom4j/dom4j@1.4 to 2.0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.dom4j/dom4j@1.4"
          },
          "version": "1.4"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2018-1000632",
          "value": "CVE-2018-1000632",
          "url": "https://scout.docker.com/v/CVE-2018-1000632?s=github&n=dom4j&ns=org.dom4j&t=maven&vr=%3C2.0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2018-1000632?s=github&n=dom4j&ns=org.dom4j&t=maven&vr=%3C2.0.3"
        }
      ]
    },
    {
      "id": "78e5fd0f0ea1fbd89c99c9e6b57b6f4780d473d217c624077647ee6c533c7530",
      "category": "container_scanning",
      "message": "CVE-2018-8292 on System.Net.Http@4.3.0",
      "description": "An information disclosure vulnerability exists in .NET Core when authentication information is inadvertently exposed in a redirect, aka \".NET Core Information Disclosure Vulnerability.\" This affects .NET Core 2.1, .NET Core 1.0, .NET Core 1.1, PowerShell Core 6.0.",
      "cve": "CVE-2018-8292",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade System.Net.Http@4.3.0 to 4.3.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/System.Net.Http@4.3.0"
          },
          "version": "4.3.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2018-8292",
          "value": "CVE-2018-8292",
          "url": "https://scout.docker.com/v/CVE-2018-8292?s=github&n=System.Net.Http&t=nuget&vr=%3C4.3.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2018-8292?s=github&n=System.Net.Http&t=nuget&vr=%3C4.3.4"
        }
      ]
    },
    {
      "id": "536c2b169bbbe0c722b2d9b51322b92d12ee06aa38bb4448e604b49d3c3f6184",
      "category": "container_scanning",
      "message": "CVE-2019-0820 on System.Text.RegularExpressions@4.3.0",
      "description": "A denial of service vulnerability exists when .NET Framework and .NET Core improperly process RegEx strings, aka '.NET Framework and .NET Core Denial of Service Vulnerability'. This CVE ID is unique from CVE-2019-0980, CVE-2019-0981.",
      "cve": "CVE-2019-0820",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade System.Text.RegularExpressions@4.3.0 to 4.3.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/System.Text.RegularExpressions@4.3.0"
          },
          "version": "4.3.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-0820",
          "value": "CVE-2019-0820",
          "url": "https://scout.docker.com/v/CVE-2019-0820?s=github&n=System.Text.RegularExpressions&t=nuget&vr=%3E%3D4.3.0%2C%3C4.3.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-0820?s=github&n=System.Text.RegularExpressions&t=nuget&vr=%3E%3D4.3.0%2C%3C4.3.1"
        }
      ]
    },
    {
      "id": "2a7130fb3929cf7e0f7c4ee84a2c72478031bfcf776eac358e63616a01195f94",
      "category": "container_scanning",
      "message": "CVE-2019-5427 on com.mchange/c3p0@0.9.5.2",
      "description": "c3p0 version < 0.9.5.4 may be exploited by a billion laughs attack when loading XML configuration due to missing protections against recursive entity expansion when loading configuration.",
      "cve": "CVE-2019-5427",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.mchange/c3p0@0.9.5.2 to 0.9.5.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.mchange/c3p0@0.9.5.2"
          },
          "version": "0.9.5.2"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-5427",
          "value": "CVE-2019-5427",
          "url": "https://scout.docker.com/v/CVE-2019-5427?s=github&n=c3p0&ns=com.mchange&t=maven&vr=%3C%3D0.9.5.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-5427?s=github&n=c3p0&ns=com.mchange&t=maven&vr=%3C%3D0.9.5.3"
        }
      ]
    },
    {
      "id": "42e19d9b142d6cfede8d26872110ada89d385b21e3162180cedc0bcbc37ba26d",
      "category": "container_scanning",
      "message": "CVE-2020-11979 on org.apache.ant/ant@1.9.9",
      "description": "As mitigation for CVE-2020-1945 Apache Ant 1.10.8 changed the permissions of temporary files it created so that only the current user was allowed to access them. Unfortunately the fixcrlf task deleted the temporary file and created a new one without said protection, effectively nullifying the effort. This would still allow an attacker to inject modified source files into the build process.",
      "cve": "CVE-2020-11979",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.ant/ant@1.9.9 to 1.10.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.ant/ant@1.9.9"
          },
          "version": "1.9.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-11979",
          "value": "CVE-2020-11979",
          "url": "https://scout.docker.com/v/CVE-2020-11979?s=github&n=ant&ns=org.apache.ant&t=maven&vr=%3C1.10.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-11979?s=github&n=ant&ns=org.apache.ant&t=maven&vr=%3C1.10.9"
        }
      ]
    },
    {
      "id": "f697bf0c27ac3e2e0974b345f288333c435fc52cec32bd90e51bb68bd13f5dd8",
      "category": "container_scanning",
      "message": "CVE-2020-11979 on org.apache.ant/ant@1.7.1",
      "description": "As mitigation for CVE-2020-1945 Apache Ant 1.10.8 changed the permissions of temporary files it created so that only the current user was allowed to access them. Unfortunately the fixcrlf task deleted the temporary file and created a new one without said protection, effectively nullifying the effort. This would still allow an attacker to inject modified source files into the build process.",
      "cve": "CVE-2020-11979",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.ant/ant@1.7.1 to 1.10.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.ant/ant@1.7.1"
          },
          "version": "1.7.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-11979",
          "value": "CVE-2020-11979",
          "url": "https://scout.docker.com/v/CVE-2020-11979?s=github&n=ant&ns=org.apache.ant&t=maven&vr=%3C1.10.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-11979?s=github&n=ant&ns=org.apache.ant&t=maven&vr=%3C1.10.9"
        }
      ]
    },
    {
      "id": "f24ffc2c12fbf8a145c8748f81e5a65476019071b022a906063a4e4cdefa70f8",
      "category": "container_scanning",
      "message": "CVE-2020-25649 on com.fasterxml.jackson.core/jackson-databind@2.10.5",
      "description": "A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity.",
      "cve": "CVE-2020-25649",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.fasterxml.jackson.core/jackson-databind@2.10.5 to 2.10.5.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.10.5"
          },
          "version": "2.10.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-25649",
          "value": "CVE-2020-25649",
          "url": "https://scout.docker.com/v/CVE-2020-25649?s=github&n=jackson-databind&ns=com.fasterxml.jackson.core&t=maven&vr=%3E%3D2.10.0.0%2C%3C%3D2.10.5.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-25649?s=github&n=jackson-databind&ns=com.fasterxml.jackson.core&t=maven&vr=%3E%3D2.10.0.0%2C%3C%3D2.10.5.0"
        }
      ]
    },
    {
      "id": "9d4f399cb78f56dfc192044f228a2f3dbc718d51e8c678e99cf372d36a458487",
      "category": "container_scanning",
      "message": "CVE-2020-36518 on com.fasterxml.jackson.core/jackson-databind@2.10.5",
      "description": "jackson-databind is a data-binding package for the Jackson Data Processor. jackson-databind allows a Java stack overflow exception and denial of service via a large depth of nested objects.",
      "cve": "CVE-2020-36518",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.fasterxml.jackson.core/jackson-databind@2.10.5 to 2.12.6.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.10.5"
          },
          "version": "2.10.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-36518",
          "value": "CVE-2020-36518",
          "url": "https://scout.docker.com/v/CVE-2020-36518?s=github&n=jackson-databind&ns=com.fasterxml.jackson.core&t=maven&vr=%3C%3D2.12.6.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-36518?s=github&n=jackson-databind&ns=com.fasterxml.jackson.core&t=maven&vr=%3C%3D2.12.6.0"
        }
      ]
    },
    {
      "id": "51c9b9361ebd84ddfcaf83bbbe013fbe19e3d9eed8e2135b976d5c44f1851793",
      "category": "container_scanning",
      "message": "CVE-2021-22569 on com.google.protobuf/protobuf-java@3.5.1",
      "description": "## Summary\n\nA potential Denial of Service issue in protobuf-java was discovered in the parsing procedure for binary data.\n\nReporter: [OSS-Fuzz](https://github.com/google/oss-fuzz)\n\nAffected versions: All versions of Java Protobufs (including Kotlin and JRuby) prior to the versions listed below. Protobuf \"javalite\" users (typically Android) are not affected.\n\n## Severity\n\n[CVE-2021-22569](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-22569) **High** - CVSS Score: 7.5,  An implementation weakness in how unknown fields are parsed in Java. A small (~800 KB) malicious payload can occupy the parser for several minutes by creating large numbers of short-lived objects that cause frequent, repeated GC pauses.\n\n## Proof of Concept\n\nFor reproduction details, please refer to the oss-fuzz issue that identifies the specific inputs that exercise this parsing weakness.\n\n## Remediation and Mitigation\n\nPlease update to the latest available versions of the following packages:\n\n- protobuf-java (3.16.1, 3.18.2, 3.19.2) \n- protobuf-kotlin (3.18.2, 3.19.2)\n- google-protobuf [JRuby  gem only] (3.19.2) \n",
      "cve": "CVE-2021-22569",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.google.protobuf/protobuf-java@3.5.1 to 3.16.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.google.protobuf/protobuf-java@3.5.1"
          },
          "version": "3.5.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-22569",
          "value": "CVE-2021-22569",
          "url": "https://scout.docker.com/v/CVE-2021-22569?s=github&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3C3.16.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-22569?s=github&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3C3.16.1"
        }
      ]
    },
    {
      "id": "e75dc93f897649ded106da9987363a72e0076558a5a5025275c542cf54cb1e5f",
      "category": "container_scanning",
      "message": "CVE-2021-33194 on golang.org/x/net@0.0.0-20201224014010-6772e930b67b",
      "description": "Go through 1.15.12 and 1.16.x through 1.16.4 has a golang.org/x/net/html infinite loop via crafted ParseFragment input.",
      "cve": "CVE-2021-33194",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.0.0-20201224014010-6772e930b67b to 0.0.0-20210520170846-37e1c6afe023",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.0.0-20201224014010-6772e930b67b"
          },
          "version": "0.0.0-20201224014010-6772e930b67b"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-33194",
          "value": "CVE-2021-33194",
          "url": "https://scout.docker.com/v/CVE-2021-33194?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20210520170846-37e1c6afe023"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-33194?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20210520170846-37e1c6afe023"
        }
      ]
    },
    {
      "id": "276748a5b6d8ec8e49d710dde0a48ecf5fa67c4f74e806e59da3dd7fc1f1394a",
      "category": "container_scanning",
      "message": "CVE-2021-33813 on org.jdom/jdom@1.1",
      "description": "An XXE issue in SAXBuilder in JDOM through 2.0.6 allows attackers to cause a denial of service via a crafted HTTP request. As a workaround, to avoid external entities being expanded, one can call `builder.setExpandEntities(false)` and they won't be expanded.",
      "cve": "CVE-2021-33813",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.jdom/jdom@1.1"
          },
          "version": "1.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-33813",
          "value": "CVE-2021-33813",
          "url": "https://scout.docker.com/v/CVE-2021-33813?s=github&n=jdom&ns=org.jdom&t=maven&vr=%3C%3D2.0.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-33813?s=github&n=jdom&ns=org.jdom&t=maven&vr=%3C%3D2.0.2"
        }
      ]
    },
    {
      "id": "171f42f6de13354ff57ce610a888caf7b3c54a3a750686e8d34c66b0e5b7edff",
      "category": "container_scanning",
      "message": "CVE-2021-33813 on org.jdom/jdom@1.0",
      "description": "An XXE issue in SAXBuilder in JDOM through 2.0.6 allows attackers to cause a denial of service via a crafted HTTP request. As a workaround, to avoid external entities being expanded, one can call `builder.setExpandEntities(false)` and they won't be expanded.",
      "cve": "CVE-2021-33813",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.jdom/jdom@1.0"
          },
          "version": "1.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-33813",
          "value": "CVE-2021-33813",
          "url": "https://scout.docker.com/v/CVE-2021-33813?s=github&n=jdom&ns=org.jdom&t=maven&vr=%3C%3D2.0.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-33813?s=github&n=jdom&ns=org.jdom&t=maven&vr=%3C%3D2.0.2"
        }
      ]
    },
    {
      "id": "c7a12778dca021adefd7f06bc4f8fb4cd61bc7e5e153b7bb1c29a873b67cd45b",
      "category": "container_scanning",
      "message": "CVE-2021-35515 on org.apache.commons/commons-compress@1.5",
      "description": "When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
      "cve": "CVE-2021-35515",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.commons/commons-compress@1.5 to 1.21",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.commons/commons-compress@1.5"
          },
          "version": "1.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-35515",
          "value": "CVE-2021-35515",
          "url": "https://scout.docker.com/v/CVE-2021-35515?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3C1.21"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-35515?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3C1.21"
        }
      ]
    },
    {
      "id": "b4b97e2034d6bc676ab890742b287fec90e23b707f9fb7589d25fba23481627e",
      "category": "container_scanning",
      "message": "CVE-2021-35515 on org.apache.commons/commons-compress@1.20",
      "description": "When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
      "cve": "CVE-2021-35515",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.commons/commons-compress@1.20 to 1.21",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.commons/commons-compress@1.20"
          },
          "version": "1.20"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-35515",
          "value": "CVE-2021-35515",
          "url": "https://scout.docker.com/v/CVE-2021-35515?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3C1.21"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-35515?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3C1.21"
        }
      ]
    },
    {
      "id": "b89c846da3305c8f8de830bde617ec9048ceae1af0a8e1afc7621954839cb3f9",
      "category": "container_scanning",
      "message": "CVE-2021-35516 on org.apache.commons/commons-compress@1.5",
      "description": "When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
      "cve": "CVE-2021-35516",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.commons/commons-compress@1.5 to 1.21",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.commons/commons-compress@1.5"
          },
          "version": "1.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-35516",
          "value": "CVE-2021-35516",
          "url": "https://scout.docker.com/v/CVE-2021-35516?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3C1.21"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-35516?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3C1.21"
        }
      ]
    },
    {
      "id": "0c9cf0f2d69828ef16a4b4aeb2b285d6e727ee34e945c07dfe0be5944f0f78ac",
      "category": "container_scanning",
      "message": "CVE-2021-35516 on org.apache.commons/commons-compress@1.20",
      "description": "When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",
      "cve": "CVE-2021-35516",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.commons/commons-compress@1.20 to 1.21",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.commons/commons-compress@1.20"
          },
          "version": "1.20"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-35516",
          "value": "CVE-2021-35516",
          "url": "https://scout.docker.com/v/CVE-2021-35516?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3C1.21"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-35516?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3C1.21"
        }
      ]
    },
    {
      "id": "81fa5ea96c468227eb116a129c25b3d5e0f1617b19102aa508822b1eaf36fcff",
      "category": "container_scanning",
      "message": "CVE-2021-35517 on org.apache.commons/commons-compress@1.5",
      "description": "When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package.",
      "cve": "CVE-2021-35517",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.commons/commons-compress@1.5 to 1.21",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.commons/commons-compress@1.5"
          },
          "version": "1.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-35517",
          "value": "CVE-2021-35517",
          "url": "https://scout.docker.com/v/CVE-2021-35517?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3C1.21"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-35517?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3C1.21"
        }
      ]
    },
    {
      "id": "27adeae274753b8bcfa67ebdfc24679f5a5277cf5ec36e1ed2d8c3b026ea058b",
      "category": "container_scanning",
      "message": "CVE-2021-35517 on org.apache.commons/commons-compress@1.20",
      "description": "When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package.",
      "cve": "CVE-2021-35517",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.commons/commons-compress@1.20 to 1.21",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.commons/commons-compress@1.20"
          },
          "version": "1.20"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-35517",
          "value": "CVE-2021-35517",
          "url": "https://scout.docker.com/v/CVE-2021-35517?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3C1.21"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-35517?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3C1.21"
        }
      ]
    },
    {
      "id": "89f29f132cf460cc242ec5a1434a5c4d5dc4931388d1f4ace69a35da785dafde",
      "category": "container_scanning",
      "message": "CVE-2021-36090 on org.apache.commons/commons-compress@1.5",
      "description": "When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package.",
      "cve": "CVE-2021-36090",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.commons/commons-compress@1.5 to 1.21",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.commons/commons-compress@1.5"
          },
          "version": "1.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-36090",
          "value": "CVE-2021-36090",
          "url": "https://scout.docker.com/v/CVE-2021-36090?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3C1.21"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-36090?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3C1.21"
        }
      ]
    },
    {
      "id": "cff401ad503e33ce861cf9617ddbf79d3bb4aa1cc6c1bb1c06fbdf5ebe72729f",
      "category": "container_scanning",
      "message": "CVE-2021-36090 on org.apache.commons/commons-compress@1.20",
      "description": "When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package.",
      "cve": "CVE-2021-36090",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.commons/commons-compress@1.20 to 1.21",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.commons/commons-compress@1.20"
          },
          "version": "1.20"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-36090",
          "value": "CVE-2021-36090",
          "url": "https://scout.docker.com/v/CVE-2021-36090?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3C1.21"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-36090?s=github&n=commons-compress&ns=org.apache.commons&t=maven&vr=%3C1.21"
        }
      ]
    },
    {
      "id": "d76b39454a418c1eb637a92f3980aaa1bc4eb1e320f7be32460167eac6cb54ec",
      "category": "container_scanning",
      "message": "CVE-2021-38561 on golang.org/x/text@0.3.6",
      "description": "golang.org/x/text/language in golang.org/x/text before 0.3.7 can panic with an out-of-bounds read during BCP 47 language tag parsing. Index calculation is mishandled. If parsing untrusted user input, this can be used as a vector for a denial-of-service attack.",
      "cve": "CVE-2021-38561",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/text@0.3.6 to 0.3.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/text@0.3.6"
          },
          "version": "0.3.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-38561",
          "value": "CVE-2021-38561",
          "url": "https://scout.docker.com/v/CVE-2021-38561?s=github&n=text&ns=golang.org%2Fx&t=golang&vr=%3C0.3.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-38561?s=github&n=text&ns=golang.org%2Fx&t=golang&vr=%3C0.3.7"
        }
      ]
    },
    {
      "id": "423d170529430b6f9b1fe2bae2d411d2f7b3435aa0c62af2588d679c7e01dc47",
      "category": "container_scanning",
      "message": "CVE-2021-43565 on golang.org/x/crypto@0.0.0-20210322153248-0c34fe9e7dc2",
      "description": "The x/crypto/ssh package before 0.0.0-20211202192323-5770296d904e of golang.org/x/crypto allows an unauthenticated attacker to panic an SSH server. When using AES-GCM or ChaCha20Poly1305, consuming a malformed packet which contains an empty plaintext causes a panic.",
      "cve": "CVE-2021-43565",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/crypto@0.0.0-20210322153248-0c34fe9e7dc2 to 0.0.0-20211202192323-5770296d904e",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/crypto@0.0.0-20210322153248-0c34fe9e7dc2"
          },
          "version": "0.0.0-20210322153248-0c34fe9e7dc2"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-43565",
          "value": "CVE-2021-43565",
          "url": "https://scout.docker.com/v/CVE-2021-43565?s=github&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20211202192323-5770296d904e"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-43565?s=github&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20211202192323-5770296d904e"
        }
      ]
    },
    {
      "id": "0649d341de20ab373e93354553073b3e75c0a75ba62eeed4cc87d20101c0ed31",
      "category": "container_scanning",
      "message": "CVE-2021-44716 on stdlib@1.16.10",
      "description": "An attacker can cause unbounded memory growth in servers accepting HTTP/2 requests.",
      "cve": "CVE-2021-44716",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.16.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-44716",
          "value": "CVE-2021-44716",
          "url": "https://scout.docker.com/v/CVE-2021-44716?s=golang&n=stdlib&t=golang&vr=%3C1.16.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-44716?s=golang&n=stdlib&t=golang&vr=%3C1.16.12"
        }
      ]
    },
    {
      "id": "ae6d0da0f1d47f9e717c00574404dd490ae216f00e2d71b1b89e9f5598bf0dc2",
      "category": "container_scanning",
      "message": "CVE-2021-44716 on golang.org/x/net@0.0.0-20201224014010-6772e930b67b",
      "description": "An attacker can cause unbounded memory growth in servers accepting HTTP/2 requests.",
      "cve": "CVE-2021-44716",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.0.0-20201224014010-6772e930b67b to 0.0.0-20211209124913-491a49abca63",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.0.0-20201224014010-6772e930b67b"
          },
          "version": "0.0.0-20201224014010-6772e930b67b"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-44716",
          "value": "CVE-2021-44716",
          "url": "https://scout.docker.com/v/CVE-2021-44716?s=golang&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20211209124913-491a49abca63"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-44716?s=golang&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20211209124913-491a49abca63"
        }
      ]
    },
    {
      "id": "c1d96fbb9ea967f486b4bb0117f7f83da1b249e64482fc5cecea992ca6aba2a8",
      "category": "container_scanning",
      "message": "CVE-2021-44716 on golang.org/x/net@0.0.0-20210520170846-37e1c6afe023",
      "description": "An attacker can cause unbounded memory growth in servers accepting HTTP/2 requests.",
      "cve": "CVE-2021-44716",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.0.0-20210520170846-37e1c6afe023 to 0.0.0-20211209124913-491a49abca63",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.0.0-20210520170846-37e1c6afe023"
          },
          "version": "0.0.0-20210520170846-37e1c6afe023"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-44716",
          "value": "CVE-2021-44716",
          "url": "https://scout.docker.com/v/CVE-2021-44716?s=golang&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20211209124913-491a49abca63"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-44716?s=golang&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20211209124913-491a49abca63"
        }
      ]
    },
    {
      "id": "cc3ea824aa75673677f16d1051023fab314b69988b8068157febfdedb4f05aff",
      "category": "container_scanning",
      "message": "CVE-2021-46877 on com.fasterxml.jackson.core/jackson-databind@2.10.5",
      "description": "jackson-databind 2.10.x through 2.12.x before 2.12.6 and 2.13.x before 2.13.1 allows attackers to cause a denial of service (2 GB transient heap usage per read) in uncommon situations involving JsonNode JDK serialization.",
      "cve": "CVE-2021-46877",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.fasterxml.jackson.core/jackson-databind@2.10.5 to 2.12.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.10.5"
          },
          "version": "2.10.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-46877",
          "value": "CVE-2021-46877",
          "url": "https://scout.docker.com/v/CVE-2021-46877?s=github&n=jackson-databind&ns=com.fasterxml.jackson.core&t=maven&vr=%3E%3D2.10.0%2C%3C2.12.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-46877?s=github&n=jackson-databind&ns=com.fasterxml.jackson.core&t=maven&vr=%3E%3D2.10.0%2C%3C2.12.6"
        }
      ]
    },
    {
      "id": "b580d3e9299bccec761046164af85f01c08add35385ec495b877ac5a29f1ad6e",
      "category": "container_scanning",
      "message": "CVE-2022-21698 on github.com/prometheus/client_golang@1.11.0",
      "description": "This is the Go client library for Prometheus. It has two separate parts, one for instrumenting application code, and one for creating clients that talk to the Prometheus HTTP API. client_golang is the instrumentation library for Go applications in Prometheus, and the promhttp package in client_golang provides tooling around HTTP servers and clients.\n\n### Impact\n\nHTTP server susceptible to a Denial of Service through unbounded cardinality, and potential memory exhaustion, when handling requests with non-standard HTTP methods.\n\n###  Affected Configuration\n\nIn order to be affected, an instrumented software must\n\n* Use any of `promhttp.InstrumentHandler*` middleware except `RequestsInFlight`.\n* Do not filter any specific methods (e.g GET) before middleware.\n* Pass metric with `method` label name to our middleware.\n* Not have any firewall/LB/proxy that filters away requests with unknown `method`.\n\n### Patches\n\n* https://github.com/prometheus/client_golang/pull/962\n* https://github.com/prometheus/client_golang/pull/987\n\n### Workarounds\n\nIf you cannot upgrade to [v1.11.1 or above](https://github.com/prometheus/client_golang/releases/tag/v1.11.1), in order to stop being affected you can:\n\n* Remove `method` label name from counter/gauge you use in the InstrumentHandler.\n* Turn off affected promhttp handlers.\n* Add custom middleware before promhttp handler that will sanitize the request method given by Go http.Request.\n* Use a reverse proxy or web application firewall, configured to only allow a limited set of methods.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in https://github.com/prometheus/client_golang\n* Email us at `prometheus-team@googlegroups.com`\n",
      "cve": "CVE-2022-21698",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/prometheus/client_golang@1.11.0 to 1.11.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/prometheus/client_golang@1.11.0"
          },
          "version": "1.11.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-21698",
          "value": "CVE-2022-21698",
          "url": "https://scout.docker.com/v/CVE-2022-21698?s=github&n=client_golang&ns=github.com%2Fprometheus&t=golang&vr=%3C1.11.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-21698?s=github&n=client_golang&ns=github.com%2Fprometheus&t=golang&vr=%3C1.11.1"
        }
      ]
    },
    {
      "id": "c3930e46f6a94ffe1e88d75572fd73035f04ad4b059cfa3c5c39d20fa382ff5d",
      "category": "container_scanning",
      "message": "CVE-2022-21986 on Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0",
      "description": "Microsoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0 and .NET 5.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA Denial of Service vulnerability exists in .NET 6.0 and .NET 5.0 when the Kestrel web server processes certain HTTP/2 and HTTP/3 requests.\n\n### Affected Software\n\n* Any .NET 6.0 application running on .NET 6.0.1 or lower.\n* Any .NET 5.0 application running on .NET 5.0.13 or lower.\n\n### Patches\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 5.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n\n* If you're using .NET Core 6.0, you should download and install Runtime 6.0.2 or SDK 6.0.102 (for Visual Studio 2022 v17.1) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n* If you're using .NET 5.0, you should download and install Runtime 5.0.14 or SDK 5.0.114 (for Visual Studio 2019 v16.8) or SDK 5.0.405 (for Visual Studio 2011 v16.11) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\n\n\n.NET 6.0 and .NET 5.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\n#### Other Details\n\n- Announcement for this issue can be found at https://github.com/dotnet/announcements/issues/207\n- An Issue for this can be found at https://github.com/dotnet/aspnetcore/issues/40072\n- MSRC details for this can be found at https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2022-21986",
      "cve": "CVE-2022-21986",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0 to 6.0.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-21986",
          "value": "CVE-2022-21986",
          "url": "https://scout.docker.com/v/CVE-2022-21986?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-21986?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.2"
        }
      ]
    },
    {
      "id": "da4c213cc059973ef169cd785d8fb55471290823064cf3f2dc6083eb643bb282",
      "category": "container_scanning",
      "message": "CVE-2022-23267 on Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0",
      "description": "Microsoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 5.0 and .NET Core 3.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 6.0, .NET 5.0 and .NET Core 3.1 where a malicious client can cause a Denial of Service via excess memory allocations through HttpClient.\n\n### Affected software\n\n* Any .NET 6.0 application running on .NET 6.0.4 or earlier.\n* Any .NET 5.0 application running .NET 5.0.16 or earlier.\n* Any .NET Core 3.1 applicaiton running on .NET Core 3.1.24 or earlier.\n\n### Patches\n* If you're using .NET Core 6.0, you should download and install Runtime 6.0.5 or SDK 6.0.105 (for Visual Studio 2022 v17.0) or SDK 6.0.203 (for Visual Studio 2022 v17.1) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n* If you're using .NET 5.0, you should download and install Runtime 5.0.17 or SDK 5.0.214 (for Visual Studio 2019 v16.9) or SDK 5.0.408 (for Visual Studio 2011 v16.11) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\n\n* If you're using .NET Core 3.1, you should download and install Runtime 3.1.25 or SDK 3.1.419 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1 ) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\n\n.NET 6.0, .NET 5.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\n### Other Details\nAnnouncement for this issue can be found at https://github.com/dotnet/announcements/issues/221\nAn Issue for this can be found at https://github.com/dotnet/runtime/issues/69149\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2022-23267",
      "cve": "CVE-2022-23267",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0 to 6.0.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-23267",
          "value": "CVE-2022-23267",
          "url": "https://scout.docker.com/v/CVE-2022-23267?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-23267?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.5"
        }
      ]
    },
    {
      "id": "f49d9cd3a4c01a69652e467a9357be9d836b6b4b08f3907372b74a5f15d5d715",
      "category": "container_scanning",
      "message": "CVE-2022-23648 on github.com/containerd/containerd@1.5.5",
      "description": "### Impact\n\nA bug was found in containerd where containers launched through containerd’s CRI implementation with a specially-crafted image configuration could gain access to read-only copies of arbitrary files and directories on the host.  This may bypass any policy-based enforcement on container setup (including a Kubernetes Pod Security Policy) and expose potentially sensitive information.  Kubernetes and crictl can both be configured to use containerd’s CRI implementation.\n\n### Patches\n\nThis bug has been fixed in containerd 1.6.1, 1.5.10 and 1.4.13.  Users should update to these versions to resolve the issue.\n\n### Workarounds\n\nEnsure that only trusted images are used.\n\n### Credits\n\nThe containerd project would like to thank Felix Wilhelm of Google Project Zero for responsibly disclosing this issue in accordance with the [containerd security policy](https://github.com/containerd/project/blob/main/SECURITY.md).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)",
      "cve": "CVE-2022-23648",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.5.5 to 1.5.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.5.5"
          },
          "version": "1.5.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-23648",
          "value": "CVE-2022-23648",
          "url": "https://scout.docker.com/v/CVE-2022-23648?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.5.0%2C%3C1.5.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-23648?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.5.0%2C%3C1.5.10"
        }
      ]
    },
    {
      "id": "0ab8ab1ebb7a1aebc96a7ffcc42b5042b4176497a8c87555d5c54c9a3f62cea9",
      "category": "container_scanning",
      "message": "CVE-2022-23772 on stdlib@1.16.12",
      "description": "Rat.SetString had an overflow issue that can lead to uncontrolled memory consumption.",
      "cve": "CVE-2022-23772",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.16.14",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-23772",
          "value": "CVE-2022-23772",
          "url": "https://scout.docker.com/v/CVE-2022-23772?s=golang&n=stdlib&t=golang&vr=%3C1.16.14"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-23772?s=golang&n=stdlib&t=golang&vr=%3C1.16.14"
        }
      ]
    },
    {
      "id": "bdd13de8071be91bb6ec0be8b6316c83ee0fca1e78b15a04e6e1fd3df2d1a8d5",
      "category": "container_scanning",
      "message": "CVE-2022-23772 on stdlib@1.16.10",
      "description": "Rat.SetString had an overflow issue that can lead to uncontrolled memory consumption.",
      "cve": "CVE-2022-23772",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.16.14",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-23772",
          "value": "CVE-2022-23772",
          "url": "https://scout.docker.com/v/CVE-2022-23772?s=golang&n=stdlib&t=golang&vr=%3C1.16.14"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-23772?s=golang&n=stdlib&t=golang&vr=%3C1.16.14"
        }
      ]
    },
    {
      "id": "178f6d65c5dbd516d585b252a237461c8c2e35f8f7412661687c38a46faf9398",
      "category": "container_scanning",
      "message": "CVE-2022-24464 on Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0",
      "description": "Microsoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 5.0, and .NET CORE 3.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nMicrosoft is aware of a Denial of Service vulnerability, which exists in .NET 6.0, .NET 5.0, and .NET CORE 3.1 when parsing certain types of http form requests.\n\n### Affected Software\n\n* Any .NET 6.0 application running on .NET 6.0.2 or lower\n* Any .NET 5.0 application running on .NET 5.0.14 or lower\n* Any .NET Core 3.1 application running on .NET Core 3.1.22 or lower \n\n### Patches\nTo fix the issue, please install the latest version of .NET 6.0 or .NET 5.0 or .NET Core 3.1.. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n\n* If you're using .NET Core 6.0, you should download and install Runtime 6.0.3 or SDK 6.0.201 (for Visual Studio 2022 v17.1) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n* If you're using .NET 5.0, you should download and install Runtime 5.0.15 or SDK 5.0.406 (for Visual Studio 2019 v16.11) or SDK 5.0.212 (for Visual Studio 2011 v16.9) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\n\n* If you're using .NET Core 3.1, you should download and install Runtime 3.1.23 or SDK 3.1.417 (for Visual Studio 2019 v16.7.26) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\n.NET 6.0 and .NET 5.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\n.NET 6.0 and .NET 5.0 and, .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\n#### Other Details\n\n- Announcement for this issue can be found at https://github.com/dotnet/announcements/issues/212\n- An Issue for this can be found at https://github.com/dotnet/aspnetcore/issues/40598\n- MSRC details for this can be found at https://msrc.microsoft.com/update-guide/en-US/vulnerability/ CVE-2022-24464",
      "cve": "CVE-2022-24464",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0 to 6.0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-24464",
          "value": "CVE-2022-24464",
          "url": "https://scout.docker.com/v/CVE-2022-24464?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-24464?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.3"
        }
      ]
    },
    {
      "id": "e328fd00423f61adaacdea274aa41c01dd42cc71c671d8ba4073827a9f4ec402",
      "category": "container_scanning",
      "message": "CVE-2022-24675 on stdlib@1.16.10",
      "description": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
      "cve": "CVE-2022-24675",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.17.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-24675",
          "value": "CVE-2022-24675",
          "url": "https://scout.docker.com/v/CVE-2022-24675?s=golang&n=stdlib&t=golang&vr=%3C1.17.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-24675?s=golang&n=stdlib&t=golang&vr=%3C1.17.9"
        }
      ]
    },
    {
      "id": "9d460b6da0386a322f7754f2cd02bb3fc2e70edcf9c5e5425eb9271a68bf49d6",
      "category": "container_scanning",
      "message": "CVE-2022-24675 on stdlib@1.16.12",
      "description": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
      "cve": "CVE-2022-24675",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.17.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-24675",
          "value": "CVE-2022-24675",
          "url": "https://scout.docker.com/v/CVE-2022-24675?s=golang&n=stdlib&t=golang&vr=%3C1.17.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-24675?s=golang&n=stdlib&t=golang&vr=%3C1.17.9"
        }
      ]
    },
    {
      "id": "e8cd5a65dd55ee4e941c6cb0ba57bc81ed10b40b72194b42b7e210d4ede86dcf",
      "category": "container_scanning",
      "message": "CVE-2022-24921 on stdlib@1.16.10",
      "description": "On 64-bit platforms, an extremely deeply nested expression can cause regexp.Compile to cause goroutine stack exhaustion, forcing the program to exit. Note this applies to very large expressions, on the order of 2MB.",
      "cve": "CVE-2022-24921",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.16.15",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-24921",
          "value": "CVE-2022-24921",
          "url": "https://scout.docker.com/v/CVE-2022-24921?s=golang&n=stdlib&t=golang&vr=%3C1.16.15"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-24921?s=golang&n=stdlib&t=golang&vr=%3C1.16.15"
        }
      ]
    },
    {
      "id": "07fa74dbd8f51693c6f80c5b993dcd75e715f442e7a97b4c0bad81a851fb6e6b",
      "category": "container_scanning",
      "message": "CVE-2022-24921 on stdlib@1.16.12",
      "description": "On 64-bit platforms, an extremely deeply nested expression can cause regexp.Compile to cause goroutine stack exhaustion, forcing the program to exit. Note this applies to very large expressions, on the order of 2MB.",
      "cve": "CVE-2022-24921",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.16.15",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-24921",
          "value": "CVE-2022-24921",
          "url": "https://scout.docker.com/v/CVE-2022-24921?s=golang&n=stdlib&t=golang&vr=%3C1.16.15"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-24921?s=golang&n=stdlib&t=golang&vr=%3C1.16.15"
        }
      ]
    },
    {
      "id": "3740dfd55c70c646e573dc07692ea3e361e2f872f84fb5b699f25aeaa8632931",
      "category": "container_scanning",
      "message": "CVE-2022-25857 on org.yaml/snakeyaml@1.26",
      "description": "The package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to Denial of Service (DoS) due missing to nested depth limitation for collections.",
      "cve": "CVE-2022-25857",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.yaml/snakeyaml@1.26 to 1.31",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.yaml/snakeyaml@1.26"
          },
          "version": "1.26"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-25857",
          "value": "CVE-2022-25857",
          "url": "https://scout.docker.com/v/CVE-2022-25857?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.31"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-25857?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.31"
        }
      ]
    },
    {
      "id": "0bc9e929c9e62609f41bdd023e6e8926d586d4a7bfd42e3f355db827023be0f9",
      "category": "container_scanning",
      "message": "CVE-2022-27191 on golang.org/x/crypto@0.0.0-20210322153248-0c34fe9e7dc2",
      "description": "The golang.org/x/crypto/ssh package before 0.0.0-20220314234659-1baeb1ce4c0b for Go allows an attacker to crash a server in certain circumstances involving AddHostKey.",
      "cve": "CVE-2022-27191",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/crypto@0.0.0-20210322153248-0c34fe9e7dc2 to 0.0.0-20220314234659-1baeb1ce4c0b",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/crypto@0.0.0-20210322153248-0c34fe9e7dc2"
          },
          "version": "0.0.0-20210322153248-0c34fe9e7dc2"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-27191",
          "value": "CVE-2022-27191",
          "url": "https://scout.docker.com/v/CVE-2022-27191?s=github&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20220314234659-1baeb1ce4c0b"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-27191?s=github&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20220314234659-1baeb1ce4c0b"
        }
      ]
    },
    {
      "id": "5b4a5591abb0f0778202f40158d1568f6d321334e0c7592fb3eccd925112507d",
      "category": "container_scanning",
      "message": "CVE-2022-27664 on stdlib@1.16.12",
      "description": "HTTP/2 server connections can hang forever waiting for a clean shutdown that was preempted by a fatal error. This condition can be exploited by a malicious client to cause a denial of service.",
      "cve": "CVE-2022-27664",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.18.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-27664",
          "value": "CVE-2022-27664",
          "url": "https://scout.docker.com/v/CVE-2022-27664?s=golang&n=stdlib&t=golang&vr=%3C1.18.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-27664?s=golang&n=stdlib&t=golang&vr=%3C1.18.6"
        }
      ]
    },
    {
      "id": "0b9065bfe60c7354e505db9684256846b29008f279788cd5473a2479eb7fbe46",
      "category": "container_scanning",
      "message": "CVE-2022-27664 on golang.org/x/net@0.0.0-20210520170846-37e1c6afe023",
      "description": "In net/http in Go before 1.18.6 and 1.19.x before 1.19.1, attackers can cause a denial of service because an HTTP/2 connection can hang during closing if shutdown were preempted by a fatal error.",
      "cve": "CVE-2022-27664",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.0.0-20210520170846-37e1c6afe023 to 0.0.0-20220906165146-f3363e06e74c",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.0.0-20210520170846-37e1c6afe023"
          },
          "version": "0.0.0-20210520170846-37e1c6afe023"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-27664",
          "value": "CVE-2022-27664",
          "url": "https://scout.docker.com/v/CVE-2022-27664?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20220906165146-f3363e06e74c"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-27664?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20220906165146-f3363e06e74c"
        }
      ]
    },
    {
      "id": "2f9a046ba048d05d27a8801867db450a453c4fbeb32d451462a139971bffc4f2",
      "category": "container_scanning",
      "message": "CVE-2022-27664 on golang.org/x/net@0.0.0-20220802222814-0bcc04d9c69b",
      "description": "In net/http in Go before 1.18.6 and 1.19.x before 1.19.1, attackers can cause a denial of service because an HTTP/2 connection can hang during closing if shutdown were preempted by a fatal error.",
      "cve": "CVE-2022-27664",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.0.0-20220802222814-0bcc04d9c69b to 0.0.0-20220906165146-f3363e06e74c",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.0.0-20220802222814-0bcc04d9c69b"
          },
          "version": "0.0.0-20220802222814-0bcc04d9c69b"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-27664",
          "value": "CVE-2022-27664",
          "url": "https://scout.docker.com/v/CVE-2022-27664?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20220906165146-f3363e06e74c"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-27664?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20220906165146-f3363e06e74c"
        }
      ]
    },
    {
      "id": "53dc2b9a5fd935008522a662d6b5cee9125757e79688593d515b227ccf641282",
      "category": "container_scanning",
      "message": "CVE-2022-27664 on stdlib@1.16.10",
      "description": "HTTP/2 server connections can hang forever waiting for a clean shutdown that was preempted by a fatal error. This condition can be exploited by a malicious client to cause a denial of service.",
      "cve": "CVE-2022-27664",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.18.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-27664",
          "value": "CVE-2022-27664",
          "url": "https://scout.docker.com/v/CVE-2022-27664?s=golang&n=stdlib&t=golang&vr=%3C1.18.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-27664?s=golang&n=stdlib&t=golang&vr=%3C1.18.6"
        }
      ]
    },
    {
      "id": "ff7b0f05da24a61c3181c797679ba1804a044139792690e0cfdd84ec32ab8281",
      "category": "container_scanning",
      "message": "CVE-2022-27664 on golang.org/x/net@0.0.0-20201224014010-6772e930b67b",
      "description": "In net/http in Go before 1.18.6 and 1.19.x before 1.19.1, attackers can cause a denial of service because an HTTP/2 connection can hang during closing if shutdown were preempted by a fatal error.",
      "cve": "CVE-2022-27664",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.0.0-20201224014010-6772e930b67b to 0.0.0-20220906165146-f3363e06e74c",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.0.0-20201224014010-6772e930b67b"
          },
          "version": "0.0.0-20201224014010-6772e930b67b"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-27664",
          "value": "CVE-2022-27664",
          "url": "https://scout.docker.com/v/CVE-2022-27664?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20220906165146-f3363e06e74c"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-27664?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20220906165146-f3363e06e74c"
        }
      ]
    },
    {
      "id": "cd36bcd3aeb286470188d66a7f99d4307435192aed9b543d664b5638f768f69f",
      "category": "container_scanning",
      "message": "CVE-2022-28131 on stdlib@1.16.10",
      "description": "Calling Decoder.Skip when parsing a deeply nested XML document can cause a panic due to stack exhaustion.",
      "cve": "CVE-2022-28131",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.17.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-28131",
          "value": "CVE-2022-28131",
          "url": "https://scout.docker.com/v/CVE-2022-28131?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-28131?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ]
    },
    {
      "id": "d04ac65d25c1e860de43a13b67a89883729ba8d1627234fb566a0b0c8eb5521f",
      "category": "container_scanning",
      "message": "CVE-2022-28131 on stdlib@1.16.12",
      "description": "Calling Decoder.Skip when parsing a deeply nested XML document can cause a panic due to stack exhaustion.",
      "cve": "CVE-2022-28131",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.17.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-28131",
          "value": "CVE-2022-28131",
          "url": "https://scout.docker.com/v/CVE-2022-28131?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-28131?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ]
    },
    {
      "id": "b8672752e6062d75f5d190c545ecfeeee513fd552a493371c9b9fdf9398617de",
      "category": "container_scanning",
      "message": "CVE-2022-28327 on stdlib@1.16.12",
      "description": "A crafted scalar input longer than 32 bytes can cause P256().ScalarMult or P256().ScalarBaseMult to panic. Indirect uses through crypto/ecdsa and crypto/tls are unaffected. amd64, arm64, ppc64le, and s390x are unaffected.",
      "cve": "CVE-2022-28327",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.17.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-28327",
          "value": "CVE-2022-28327",
          "url": "https://scout.docker.com/v/CVE-2022-28327?s=golang&n=stdlib&t=golang&vr=%3C1.17.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-28327?s=golang&n=stdlib&t=golang&vr=%3C1.17.9"
        }
      ]
    },
    {
      "id": "5f09322adc35324f24f4a8691f23dfcab7d6968ecae45f3a91458175458206d0",
      "category": "container_scanning",
      "message": "CVE-2022-28327 on stdlib@1.16.10",
      "description": "A crafted scalar input longer than 32 bytes can cause P256().ScalarMult or P256().ScalarBaseMult to panic. Indirect uses through crypto/ecdsa and crypto/tls are unaffected. amd64, arm64, ppc64le, and s390x are unaffected.",
      "cve": "CVE-2022-28327",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.17.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-28327",
          "value": "CVE-2022-28327",
          "url": "https://scout.docker.com/v/CVE-2022-28327?s=golang&n=stdlib&t=golang&vr=%3C1.17.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-28327?s=golang&n=stdlib&t=golang&vr=%3C1.17.9"
        }
      ]
    },
    {
      "id": "6343ab7d419d74a43d065b3c36bac2dab80ead66830be011b76981148b276315",
      "category": "container_scanning",
      "message": "CVE-2022-2879 on stdlib@1.16.12",
      "description": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
      "cve": "CVE-2022-2879",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.18.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-2879",
          "value": "CVE-2022-2879",
          "url": "https://scout.docker.com/v/CVE-2022-2879?s=golang&n=stdlib&t=golang&vr=%3C1.18.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-2879?s=golang&n=stdlib&t=golang&vr=%3C1.18.7"
        }
      ]
    },
    {
      "id": "a3447079ac9166707af0d49bdb6f2adc82e46b985e54de6d4e6592010486a965",
      "category": "container_scanning",
      "message": "CVE-2022-2879 on stdlib@1.16.10",
      "description": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
      "cve": "CVE-2022-2879",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.18.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-2879",
          "value": "CVE-2022-2879",
          "url": "https://scout.docker.com/v/CVE-2022-2879?s=golang&n=stdlib&t=golang&vr=%3C1.18.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-2879?s=golang&n=stdlib&t=golang&vr=%3C1.18.7"
        }
      ]
    },
    {
      "id": "b4b69ec80778209667cda314ee08ce22920b3b0afc47aded9b33ad92f530efbc",
      "category": "container_scanning",
      "message": "CVE-2022-2880 on stdlib@1.16.12",
      "description": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value.\n\nAfter fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
      "cve": "CVE-2022-2880",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.18.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-2880",
          "value": "CVE-2022-2880",
          "url": "https://scout.docker.com/v/CVE-2022-2880?s=golang&n=stdlib&t=golang&vr=%3C1.18.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-2880?s=golang&n=stdlib&t=golang&vr=%3C1.18.7"
        }
      ]
    },
    {
      "id": "55bfab06f1ff0be70647ace1c7a7c8b9a412c4eb27dfe37a8c8d07e3d0088d4f",
      "category": "container_scanning",
      "message": "CVE-2022-2880 on stdlib@1.16.10",
      "description": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value.\n\nAfter fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
      "cve": "CVE-2022-2880",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.18.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-2880",
          "value": "CVE-2022-2880",
          "url": "https://scout.docker.com/v/CVE-2022-2880?s=golang&n=stdlib&t=golang&vr=%3C1.18.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-2880?s=golang&n=stdlib&t=golang&vr=%3C1.18.7"
        }
      ]
    },
    {
      "id": "2c261ce80b7cfdf1c0185f6e407ad12f3e1e05244f3e28de3c03303974716476",
      "category": "container_scanning",
      "message": "CVE-2022-28948 on gopkg.in/yaml.v3@3.0.0-20210107192922-496545a6307b",
      "description": "An issue in the Unmarshal function in Go-Yaml v3 can cause a program to panic when attempting to deserialize invalid input.",
      "cve": "CVE-2022-28948",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade gopkg.in/yaml.v3@3.0.0-20210107192922-496545a6307b to 3.0.0-20220521103104-8f96da9f5d5e",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/gopkg.in/yaml.v3@3.0.0-20210107192922-496545a6307b"
          },
          "version": "3.0.0-20210107192922-496545a6307b"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-28948",
          "value": "CVE-2022-28948",
          "url": "https://scout.docker.com/v/CVE-2022-28948?s=github&n=yaml.v3&ns=gopkg.in&t=golang&vr=%3C3.0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-28948?s=github&n=yaml.v3&ns=gopkg.in&t=golang&vr=%3C3.0.1"
        }
      ]
    },
    {
      "id": "36f83f9cc2c53862e4c1c2fce54bea1c1756877cd96fb328cd72017e71d6ab28",
      "category": "container_scanning",
      "message": "CVE-2022-29117 on Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0",
      "description": "Microsoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 5.0 and .NET Core 3.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 6.0, .NET 5.0 and .NET core 3.1 where a malicious client can manipulate cookies and cause a Denial of Service.\n\n### Affected software\n\n* Any .NET 6.0 application running on .NET 6.0.4 or earlier.\n* Any .NET 5.0 application running .NET 5.0.16 or earlier.\n* Any .NET Core 3.1 application running on .NET Core 3.1.24 or earlier.\n\n#### Affected packages\n\n**.NET Core 3.1**\n\n| Package name                                 | Affected versions | Patched versions |\n|---------------------------------------------------|-------------------|------------------|\n| Microsoft.Owin.Security.Cookies                   | <4.2.2            | 4.2.2             |\n| Microsoft.Owin.Security                           | <4.2.2            | 4.2.2             |\n| Microsoft.AspNetCore.App.Runtime.win-x64          | >=3.0.0,3.1.24    | 3.1.25           |\n| Microsoft.AspNetCore.App.Runtime.linux-x64        | >=3.0.0,3.1.24    | 3.1.25           |\n| Microsoft.AspNetCore.App.Runtime.win-x86          | >=3.0.0,3.1.24    | 3.1.25           |\n| Microsoft.AspNetCore.App.Runtime.osx-x64          | >=3.0.0,3.1.24    | 3.1.25           |\n| Microsoft.AspNetCore.App.Runtime.linux-musl-x64   | >=3.0.0,3.1.24    | 3.1.25           |\n| Microsoft.AspNetCore.App.Runtime.linux-arm64      | >=3.0.0,3.1.24    | 3.1.25           |\n| Microsoft.AspNetCore.App.Runtime.linux-arm        | >=3.0.0,3.1.24    | 3.1.25           |\n| Microsoft.AspNetCore.App.Runtime.win-arm64        | >=3.0.0,3.1.24    | 3.1.25           |\n| Microsoft.AspNetCore.App.Runtime.win-arm          | >=3.0.0,3.1.24    | 3.1.25           |\n| Microsoft.AspNetCore.App.Runtime.linux-musl-arm64 | >=3.0.0,3.1.24    | 3.1.25           |\n| Microsoft.AspNetCore.App.Runtime.linux-musl-arm   | >=3.0.0,3.1.24    | 3.1.25           |\n\n**.NET 5.0**\n\n| Affected packages                                 | Affected versions | Patched versions |\n|---------------------------------------------------|-------------------|------------------|\n| Microsoft.Owin.Security.Cookies                   | < 4.2.2            | 4.2.2             |\n| Microsoft.AspNetCore.App.Runtime.win-x64          | >=5.0.0,5.0.16    | 5.0.17           |\n| Microsoft.AspNetCore.App.Runtime.linux-x64        | >=5.0.0,5.0.16    | 5.0.17           |\n| Microsoft.AspNetCore.App.Runtime.win-x86          | >=5.0.0,5.0.16    | 5.0.17           |\n| Microsoft.AspNetCore.App.Runtime.osx-x64          | >=5.0.0,5.0.16    | 5.0.17           |\n| Microsoft.AspNetCore.App.Runtime.linux-musl-x64   | >=5.0.0,5.0.16    | 5.0.17           |\n| Microsoft.AspNetCore.App.Runtime.linux-arm64      | >=5.0.0,5.0.16    | 5.0.17           |\n| Microsoft.AspNetCore.App.Runtime.linux-arm        | >=5.0.0,5.0.16    | 5.0.17           |\n| Microsoft.AspNetCore.App.Runtime.win-arm64        | >=5.0.0,5.0.16    | 5.0.17           |\n| Microsoft.AspNetCore.App.Runtime.win-arm          | >=5.0.0,5.0.16    | 5.0.17           |\n| Microsoft.AspNetCore.App.Runtime.linux-musl-arm64 | >=5.0.0,5.0.16    | 5.0.17           |\n| Microsoft.AspNetCore.App.Runtime.linux-musl-arm   | >=5.0.0,5.0.16    | 5.0.17           |\n\n**.NET 6.0**\n\n| Affected packages                                 | Affected versions | Patched versions |\n|---------------------------------------------------|-------------------|------------------|\n| Microsoft.Owin.Security.Cookies                   | <4.2.2            | 4.2.2             |\n| Microsoft.AspNetCore.App.Runtime.win-x64          | >=6.0.0,6.0.4     | 6.0.5            |\n| Microsoft.AspNetCore.App.Runtime.linux-x64        | >=6.0.0,6.0.4     | 6.0.5            |\n| Microsoft.AspNetCore.App.Runtime.win-x86          | >=6.0.0,6.0.4     | 6.0.5            |\n| Microsoft.AspNetCore.App.Runtime.osx-x64          | >=6.0.0,6.0.4     | 6.0.5            |\n| Microsoft.AspNetCore.App.Runtime.linux-musl-x64   | >=6.0.0,6.0.4     | 6.0.5            |\n| Microsoft.AspNetCore.App.Runtime.linux-arm64      | >=6.0.0,6.0.4     | 6.0.5            |\n| Microsoft.AspNetCore.App.Runtime.linux-arm        | >=6.0.0,6.0.4     | 6.0.5            |\n| Microsoft.AspNetCore.App.Runtime.win-arm64        | >=6.0.0,6.0.4     | 6.0.5            |\n| Microsoft.AspNetCore.App.Runtime.win-arm          | >=6.0.0,6.0.4     | 6.0.5            |\n| Microsoft.AspNetCore.App.Runtime.osx-arm64        | >=6.0.0,6.0.4     | 6.0.5            |\n| Microsoft.AspNetCore.App.Runtime.linux-musl-arm64 | >=6.0.0,6.0.4     | 6.0.5            |\n| Microsoft.AspNetCore.App.Runtime.linux-musl-arm   | >=6.0.0,6.0.4     | 6.0.5            |\n\n\n### Patches\n\n* If you're using .NET Core 6.0, you should download and install Runtime 6.0.5 or SDK 6.0.105 (for Visual Studio 2022 v17.0) or SDK 6.0.203 (for Visual Studio 2022 v17.1) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n* If you're using .NET 5.0, you should download and install Runtime 5.0.17 or SDK 5.0.214 (for Visual Studio 2019 v16.9) or SDK 5.0.408 (for Visual Studio 2011 v16.11) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\n\n* If you're using .NET Core 3.1, you should download and install Runtime 3.1.25 or SDK 3.1.419 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1 ) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\n\n.NET 6.0, .NET 5.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\n#### Other Details\n\n- Announcement for this issue can be found at https://github.com/dotnet/announcements/issues/220\n- An Issue for this can be found at https://github.com/dotnet/aspnetcore/issues/41608\n- MSRC details for this can be found at https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-29117\n",
      "cve": "CVE-2022-29117",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0 to 6.0.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-29117",
          "value": "CVE-2022-29117",
          "url": "https://scout.docker.com/v/CVE-2022-29117?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C%3D6.0.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-29117?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C%3D6.0.4"
        }
      ]
    },
    {
      "id": "61d003c8c1bc4687fefcb93f18add49f0798977c8140539715a1151cfb56fccd",
      "category": "container_scanning",
      "message": "CVE-2022-29145 on Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0",
      "description": "Microsoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 5.0 and .NET Core 3.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 6.0, .NET 5.0 and .NET core 3.1 where a malicious client can can cause a denial of service when HTML forms are parsed.\n\n### Affected software\n\n* Any .NET 6.0 application running on .NET 6.0.4 or earlier.\n* Any .NET 5.0 application running .NET 5.0.16 or earlier.\n* Any .NET Core 3.1 application running on .NET Core 3.1.24 or earlier.\n\n#### Affected packages\n\n**.NET Core 3.1**\n\n| Package name                                  | Affected version | Patched version |\n|---------------------------------------------------|---------------------|---------------|\n| Microsoft.AspNetCore.App.Runtime.win-x64          | >=3.0.0,3.1.24      | 3.1.25        |\n| Microsoft.AspNetCore.App.Runtime.linux-x64        | >=3.0.0,3.1.24      | 3.1.25        |\n| Microsoft.AspNetCore.App.Runtime.win-x86          | >=3.0.0,3.1.24      | 3.1.25        |\n| Microsoft.AspNetCore.App.Runtime.osx-x64          | >=3.0.0,3.1.24      | 3.1.25        |\n| Microsoft.AspNetCore.App.Runtime.linux-musl-x64   | >=3.0.0,3.1.24      | 3.1.25        |\n| Microsoft.AspNetCore.App.Runtime.linux-arm64      | >=3.0.0,3.1.24      | 3.1.25        |\n| Microsoft.AspNetCore.App.Runtime.linux-arm        | >=3.0.0,3.1.24      | 3.1.25        |\n| Microsoft.AspNetCore.App.Runtime.win-arm64        | >=3.0.0,3.1.24      | 3.1.25        |\n| Microsoft.AspNetCore.App.Runtime.win-arm          | >=3.0.0,3.1.24      | 3.1.25        |\n| Microsoft.AspNetCore.App.Runtime.linux-musl-arm64 | >=3.0.0,3.1.24      | 3.1.25        |\n| Microsoft.AspNetCore.App.Runtime.linux-musl-arm   | >=3.0.0,3.1.24      | 3.1.25        |\n\n**.NET 5.0**\n\n| Package name                                  | Affected version | Patched version |\n|---------------------------------------------------|---------------------|---------------|\n| Microsoft.AspNetCore.App.Runtime.win-x64          | >=5.0.0,5.0.16      | 5.0.17        |\n| Microsoft.AspNetCore.App.Runtime.linux-x64        | >=5.0.0,5.0.16      | 5.0.17        |\n| Microsoft.AspNetCore.App.Runtime.win-x86          | >=5.0.0,5.0.16      | 5.0.17        |\n| Microsoft.AspNetCore.App.Runtime.osx-x64          | >=5.0.0,5.0.16      | 5.0.17        |\n| Microsoft.AspNetCore.App.Runtime.linux-musl-x64   | >=5.0.0,5.0.16      | 5.0.17        |\n| Microsoft.AspNetCore.App.Runtime.linux-arm64      | >=5.0.0,5.0.16      | 5.0.17        |\n| Microsoft.AspNetCore.App.Runtime.linux-arm        | >=5.0.0,5.0.16      | 5.0.17        |\n| Microsoft.AspNetCore.App.Runtime.win-arm64        | >=5.0.0,5.0.16      | 5.0.17        |\n| Microsoft.AspNetCore.App.Runtime.win-arm          | >=5.0.0,5.0.16      | 5.0.17        |\n| Microsoft.AspNetCore.App.Runtime.linux-musl-arm64 | >=5.0.0,5.0.16      | 5.0.17        |\n| Microsoft.AspNetCore.App.Runtime.linux-musl-arm   | >=5.0.0,5.0.16      | 5.0.17        |\n\n**.NET 6.0**\n\n| Package name                                  | Affected version | Patched version |\n|---------------------------------------------------|---------------------|---------------|\n| Microsoft.AspNetCore.App.Runtime.win-x64          | >=6.0.0,6.0.4       | 6.0.5         |\n| Microsoft.AspNetCore.App.Runtime.linux-x64        | >=6.0.0,6.0.4       | 6.0.5         |\n| Microsoft.AspNetCore.App.Runtime.win-x86          | >=6.0.0,6.0.4       | 6.0.5         |\n| Microsoft.AspNetCore.App.Runtime.osx-x64          | >=6.0.0,6.0.4       | 6.0.5         |\n| Microsoft.AspNetCore.App.Runtime.linux-musl-x64   | >=6.0.0,6.0.4       | 6.0.5         |\n| Microsoft.AspNetCore.App.Runtime.linux-arm64      | >=6.0.0,6.0.4       | 6.0.5         |\n| Microsoft.AspNetCore.App.Runtime.linux-arm        | >=6.0.0,6.0.4       | 6.0.5         |\n| Microsoft.AspNetCore.App.Runtime.win-arm64        | >=6.0.0,6.0.4       | 6.0.5         |\n| Microsoft.AspNetCore.App.Runtime.win-arm          | >=6.0.0,6.0.4       | 6.0.5         |\n| Microsoft.AspNetCore.App.Runtime.osx-arm64        | >=6.0.0,6.0.4       | 6.0.5         |\n| Microsoft.AspNetCore.App.Runtime.linux-musl-arm64 | >=6.0.0,6.0.4       | 6.0.5         |\n| Microsoft.AspNetCore.App.Runtime.linux-musl-arm   | >=6.0.0,6.0.4       | 6.0.5         |\n\n\n### Patches\n* If you're using .NET Core 6.0, you should download and install Runtime 6.0.5 or SDK 6.0.105 (for Visual Studio 2022 v17.0) or SDK 6.0.203 (for Visual Studio 2022 v17.1) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n* If you're using .NET 5.0, you should download and install Runtime 5.0.17 or SDK 5.0.214 (for Visual Studio 2019 v16.9) or SDK 5.0.408 (for Visual Studio 2011 v16.11) from https://dotnet.microsoft.com/download/dotnet-core/5.0.\n\n* If you're using .NET Core 3.1, you should download and install Runtime 3.1.25 or SDK 3.1.419 (for Visual Studio 2019 v16.9 or Visual Studio 2011 16.11 or Visual Studio 2022 17.0 or Visual Studio 2022 17.1 ) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\n\n.NET 6.0, .NET 5.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\n### Other\n\nAnnouncement for this issue can be found at https://github.com/dotnet/announcements/issues/222\nAn Issue for this can be found at https://github.com/dotnet/aspnetcore/issues/41609\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-29145",
      "cve": "CVE-2022-29145",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0 to 6.0.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-29145",
          "value": "CVE-2022-29145",
          "url": "https://scout.docker.com/v/CVE-2022-29145?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-29145?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.5"
        }
      ]
    },
    {
      "id": "d5970f1e0c9d6ed810a68bbfa947a12df2a6da9be1f7eca9a30204e5229a520e",
      "category": "container_scanning",
      "message": "CVE-2022-29804 on stdlib@1.16.12",
      "description": "On Windows, the filepath.Clean function can convert certain invalid paths to valid, absolute paths, potentially allowing a directory traversal attack.\n\nFor example, Clean(\".\\c:\") returns \"c:\".",
      "cve": "CVE-2022-29804",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.17.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-29804",
          "value": "CVE-2022-29804",
          "url": "https://scout.docker.com/v/CVE-2022-29804?s=golang&n=stdlib&t=golang&vr=%3C1.17.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-29804?s=golang&n=stdlib&t=golang&vr=%3C1.17.11"
        }
      ]
    },
    {
      "id": "a2f6efae41b97a877e977c7b747acb59bb8298817edd28472c89fb137878d38a",
      "category": "container_scanning",
      "message": "CVE-2022-29804 on stdlib@1.16.10",
      "description": "On Windows, the filepath.Clean function can convert certain invalid paths to valid, absolute paths, potentially allowing a directory traversal attack.\n\nFor example, Clean(\".\\c:\") returns \"c:\".",
      "cve": "CVE-2022-29804",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.17.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-29804",
          "value": "CVE-2022-29804",
          "url": "https://scout.docker.com/v/CVE-2022-29804?s=golang&n=stdlib&t=golang&vr=%3C1.17.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-29804?s=golang&n=stdlib&t=golang&vr=%3C1.17.11"
        }
      ]
    },
    {
      "id": "1b32952325831a1cc4a758299a1c3d62ee239a3555bd218c405502a18641f833",
      "category": "container_scanning",
      "message": "CVE-2022-30630 on stdlib@1.16.10",
      "description": "Calling Glob on a path which contains a large number of path separators can cause a panic due to stack exhaustion.",
      "cve": "CVE-2022-30630",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.17.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30630",
          "value": "CVE-2022-30630",
          "url": "https://scout.docker.com/v/CVE-2022-30630?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30630?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ]
    },
    {
      "id": "ca1505379610532a35147b6be0427227cfdce2f0f900fdb116152fbd43aab17f",
      "category": "container_scanning",
      "message": "CVE-2022-30630 on stdlib@1.16.12",
      "description": "Calling Glob on a path which contains a large number of path separators can cause a panic due to stack exhaustion.",
      "cve": "CVE-2022-30630",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.17.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30630",
          "value": "CVE-2022-30630",
          "url": "https://scout.docker.com/v/CVE-2022-30630?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30630?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ]
    },
    {
      "id": "a54694505c3595b0fc1aefba44203cf953f6776869dc4f2461a5bb1afcaaabe9",
      "category": "container_scanning",
      "message": "CVE-2022-30631 on stdlib@1.16.12",
      "description": "Calling Reader.Read on an archive containing a large number of concatenated 0-length compressed files can cause a panic due to stack exhaustion.",
      "cve": "CVE-2022-30631",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.17.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30631",
          "value": "CVE-2022-30631",
          "url": "https://scout.docker.com/v/CVE-2022-30631?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30631?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ]
    },
    {
      "id": "3e935300f3586fbda291d77e6daec1c8c897b91db578a437192bbe76fca5c471",
      "category": "container_scanning",
      "message": "CVE-2022-30631 on stdlib@1.16.10",
      "description": "Calling Reader.Read on an archive containing a large number of concatenated 0-length compressed files can cause a panic due to stack exhaustion.",
      "cve": "CVE-2022-30631",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.17.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30631",
          "value": "CVE-2022-30631",
          "url": "https://scout.docker.com/v/CVE-2022-30631?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30631?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ]
    },
    {
      "id": "54a67d296194e501f7c43a1a76cd3440851fa5d35be8bb9b82fbfe799ac6ce2f",
      "category": "container_scanning",
      "message": "CVE-2022-30632 on stdlib@1.16.12",
      "description": "Calling Glob on a path which contains a large number of path separators can cause a panic due to stack exhaustion.",
      "cve": "CVE-2022-30632",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.17.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30632",
          "value": "CVE-2022-30632",
          "url": "https://scout.docker.com/v/CVE-2022-30632?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30632?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ]
    },
    {
      "id": "e1ed013f6f4006d6c6bfddf3851f877d408b37a19634a56a711d9ebd909c73d8",
      "category": "container_scanning",
      "message": "CVE-2022-30632 on stdlib@1.16.10",
      "description": "Calling Glob on a path which contains a large number of path separators can cause a panic due to stack exhaustion.",
      "cve": "CVE-2022-30632",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.17.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30632",
          "value": "CVE-2022-30632",
          "url": "https://scout.docker.com/v/CVE-2022-30632?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30632?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ]
    },
    {
      "id": "f905777be4b02b0e928c202c6d083cd65738a9325f9a86aa773119761eb54d1f",
      "category": "container_scanning",
      "message": "CVE-2022-30633 on stdlib@1.16.12",
      "description": "Unmarshaling an XML document into a Go struct which has a nested field that uses the 'any' field tag can panic due to stack exhaustion.",
      "cve": "CVE-2022-30633",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.17.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30633",
          "value": "CVE-2022-30633",
          "url": "https://scout.docker.com/v/CVE-2022-30633?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30633?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ]
    },
    {
      "id": "55114179671d66253f5a740a331471330afd3c80f7ed7e0b7f34958a6af566d2",
      "category": "container_scanning",
      "message": "CVE-2022-30633 on stdlib@1.16.10",
      "description": "Unmarshaling an XML document into a Go struct which has a nested field that uses the 'any' field tag can panic due to stack exhaustion.",
      "cve": "CVE-2022-30633",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.17.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30633",
          "value": "CVE-2022-30633",
          "url": "https://scout.docker.com/v/CVE-2022-30633?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30633?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ]
    },
    {
      "id": "d2059d02cdbaba1e102c5648fbf459a8904aaab5a8a6cd5b9b591fc9041d7ef6",
      "category": "container_scanning",
      "message": "CVE-2022-30634 on stdlib@1.16.12",
      "description": "On Windows, rand.Read will hang indefinitely if passed a buffer larger than 1 << 32 - 1 bytes.",
      "cve": "CVE-2022-30634",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.17.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30634",
          "value": "CVE-2022-30634",
          "url": "https://scout.docker.com/v/CVE-2022-30634?s=golang&n=stdlib&t=golang&vr=%3C1.17.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30634?s=golang&n=stdlib&t=golang&vr=%3C1.17.11"
        }
      ]
    },
    {
      "id": "ac3d66e2095207bfe968a1d26bf35dd2b7f690f74189be08499c1011ad72eb1f",
      "category": "container_scanning",
      "message": "CVE-2022-30634 on stdlib@1.16.10",
      "description": "On Windows, rand.Read will hang indefinitely if passed a buffer larger than 1 << 32 - 1 bytes.",
      "cve": "CVE-2022-30634",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.17.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30634",
          "value": "CVE-2022-30634",
          "url": "https://scout.docker.com/v/CVE-2022-30634?s=golang&n=stdlib&t=golang&vr=%3C1.17.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30634?s=golang&n=stdlib&t=golang&vr=%3C1.17.11"
        }
      ]
    },
    {
      "id": "04e9a37e08a8c1633caa37fd489d9319b8c7230af1166009f6c60059f56c6b4b",
      "category": "container_scanning",
      "message": "CVE-2022-30635 on stdlib@1.18.9",
      "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
      "cve": "CVE-2022-30635",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30635",
          "value": "CVE-2022-30635",
          "url": "https://scout.docker.com/v/CVE-2022-30635?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30635?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "b17eba14dc93108801fb0b7081ec0637e928fb4517404d0e9b6057fa47693e95",
      "category": "container_scanning",
      "message": "CVE-2022-30635 on stdlib@1.16.10",
      "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion.",
      "cve": "CVE-2022-30635",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.17.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30635",
          "value": "CVE-2022-30635",
          "url": "https://scout.docker.com/v/CVE-2022-30635?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30635?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ]
    },
    {
      "id": "ed8632fd6e7c70d4a1adb65555660f5561a6d5133346623a45783049ddcaaad1",
      "category": "container_scanning",
      "message": "CVE-2022-30635 on stdlib@1.16.12",
      "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion.",
      "cve": "CVE-2022-30635",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.17.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30635",
          "value": "CVE-2022-30635",
          "url": "https://scout.docker.com/v/CVE-2022-30635?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30635?s=golang&n=stdlib&t=golang&vr=%3C1.17.12"
        }
      ]
    },
    {
      "id": "ae220146c01534e099840bb9ad7309d0222aa4cf421851cadfff49701f0782af",
      "category": "container_scanning",
      "message": "CVE-2022-30635 on stdlib@1.20.6",
      "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
      "cve": "CVE-2022-30635",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30635",
          "value": "CVE-2022-30635",
          "url": "https://scout.docker.com/v/CVE-2022-30635?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30635?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "b96f7a41486ab16256766642fb9572261e20487ac451d4a9bf41aed51f31e628",
      "category": "container_scanning",
      "message": "CVE-2022-30636 on golang.org/x/crypto@0.0.0-20210322153248-0c34fe9e7dc2",
      "description": "httpTokenCacheKey uses path.Base to extract the expected HTTP-01 token value to lookup in the DirCache implementation. On Windows, path.Base acts differently to filepath.Base, since Windows uses a different path separator (\\ vs. /), allowing a user to provide a relative path, i.e. .well-known/acme-challenge/..\\..\\asd becomes ..\\..\\asd. The extracted path is then suffixed with +http-01, joined with the cache directory, and opened.\n\nSince the controlled path is suffixed with +http-01 before opening, the impact of this is significantly limited, since it only allows reading arbitrary files on the system if and only if they have this suffix.",
      "cve": "CVE-2022-30636",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/crypto@0.0.0-20210322153248-0c34fe9e7dc2 to 0.0.0-20220525230936-793ad666bf5e",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/crypto@0.0.0-20210322153248-0c34fe9e7dc2"
          },
          "version": "0.0.0-20210322153248-0c34fe9e7dc2"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30636",
          "value": "CVE-2022-30636",
          "url": "https://scout.docker.com/v/CVE-2022-30636?s=golang&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20220525230936-793ad666bf5e"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30636?s=golang&n=crypto&ns=golang.org%2Fx&t=golang&vr=%3C0.0.0-20220525230936-793ad666bf5e"
        }
      ]
    },
    {
      "id": "02b3d5584e6562f7c207aac2c416f89fc0df23cb2750613117b6cdf0e8bb45e1",
      "category": "container_scanning",
      "message": "CVE-2022-32149 on golang.org/x/text@0.3.6",
      "description": "The BCP 47 tag parser has quadratic time complexity due to inherent aspects of its design. Since the parser is, by design, exposed to untrusted user input, this can be leveraged to force a program to consume significant time parsing Accept-Language headers. The parser cannot be easily rewritten to fix this behavior for various reasons. Instead the solution implemented in this CL is to limit the total complexity of tags passed into ParseAcceptLanguage by limiting the number of dashes in the string to 1000. This should be more than enough for the majority of real world use cases, where the number of tags being sent is likely to be in the single digits.\n\n### Specific Go Packages Affected\ngolang.org/x/text/language",
      "cve": "CVE-2022-32149",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/text@0.3.6 to 0.3.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/text@0.3.6"
          },
          "version": "0.3.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-32149",
          "value": "CVE-2022-32149",
          "url": "https://scout.docker.com/v/CVE-2022-32149?s=github&n=text&ns=golang.org%2Fx&t=golang&vr=%3C0.3.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-32149?s=github&n=text&ns=golang.org%2Fx&t=golang&vr=%3C0.3.8"
        }
      ]
    },
    {
      "id": "0bcd76ff8d47bb11ed149b2926b8165e6f04a983466cc400b9ba5bbe47238b5b",
      "category": "container_scanning",
      "message": "CVE-2022-32189 on stdlib@1.16.10",
      "description": "Decoding big.Float and big.Rat types can panic if the encoded message is too short, potentially allowing a denial of service.",
      "cve": "CVE-2022-32189",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.17.13",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-32189",
          "value": "CVE-2022-32189",
          "url": "https://scout.docker.com/v/CVE-2022-32189?s=golang&n=stdlib&t=golang&vr=%3C1.17.13"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-32189?s=golang&n=stdlib&t=golang&vr=%3C1.17.13"
        }
      ]
    },
    {
      "id": "b97f51f32ddfa2632d8750cf39ca926d97a5b3e421a39144e3ab06f92da818e9",
      "category": "container_scanning",
      "message": "CVE-2022-32189 on stdlib@1.16.12",
      "description": "Decoding big.Float and big.Rat types can panic if the encoded message is too short, potentially allowing a denial of service.",
      "cve": "CVE-2022-32189",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.17.13",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-32189",
          "value": "CVE-2022-32189",
          "url": "https://scout.docker.com/v/CVE-2022-32189?s=golang&n=stdlib&t=golang&vr=%3C1.17.13"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-32189?s=golang&n=stdlib&t=golang&vr=%3C1.17.13"
        }
      ]
    },
    {
      "id": "77b75ace34b7a5a5f1675108bc2242d19a9fe8779124e5fe7dbf6b974ec7e824",
      "category": "container_scanning",
      "message": "CVE-2022-3509 on com.google.protobuf/protobuf-java@3.19.4",
      "description": "A parsing issue similar to CVE-2022-3171, but with textformat in protobuf-java core and lite versions prior to 3.21.7, 3.20.3, 3.19.6 and 3.16.3 can lead to a denial of service attack. Inputs containing multiple instances of non-repeated embedded messages with repeated or unknown fields causes objects to be converted back-n-forth between mutable and immutable forms, resulting in potentially long garbage collection pauses. We recommend updating to the versions mentioned above.",
      "cve": "CVE-2022-3509",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.google.protobuf/protobuf-java@3.19.4 to 3.19.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.google.protobuf/protobuf-java@3.19.4"
          },
          "version": "3.19.4"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-3509",
          "value": "CVE-2022-3509",
          "url": "https://scout.docker.com/v/CVE-2022-3509?s=github&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3E%3D3.17.0%2C%3C3.19.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-3509?s=github&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3E%3D3.17.0%2C%3C3.19.6"
        }
      ]
    },
    {
      "id": "142441702ec7457df0a918c549eb0a673d91814ef6abfa936581ebb756a5c5db",
      "category": "container_scanning",
      "message": "CVE-2022-3509 on com.google.protobuf/protobuf-java@3.5.1",
      "description": "A parsing issue similar to CVE-2022-3171, but with textformat in protobuf-java core and lite versions prior to 3.21.7, 3.20.3, 3.19.6 and 3.16.3 can lead to a denial of service attack. Inputs containing multiple instances of non-repeated embedded messages with repeated or unknown fields causes objects to be converted back-n-forth between mutable and immutable forms, resulting in potentially long garbage collection pauses. We recommend updating to the versions mentioned above.",
      "cve": "CVE-2022-3509",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.google.protobuf/protobuf-java@3.5.1 to 3.16.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.google.protobuf/protobuf-java@3.5.1"
          },
          "version": "3.5.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-3509",
          "value": "CVE-2022-3509",
          "url": "https://scout.docker.com/v/CVE-2022-3509?s=github&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3E%3D3.0.0%2C%3C3.16.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-3509?s=github&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3E%3D3.0.0%2C%3C3.16.3"
        }
      ]
    },
    {
      "id": "5b84fb935b7e2ab110e508c7db82d3fe45f1a7f30f01700226779772d4d3558e",
      "category": "container_scanning",
      "message": "CVE-2022-3510 on com.google.protobuf/protobuf-java@3.5.1",
      "description": "A parsing issue similar to CVE-2022-3171, but with Message-Type Extensions in protobuf-java core and lite versions prior to 3.21.7, 3.20.3, 3.19.6 and 3.16.3 can lead to a denial of service attack. Inputs containing multiple instances of non-repeated embedded messages with repeated or unknown fields causes objects to be converted back-n-forth between mutable and immutable forms, resulting in potentially long garbage collection pauses. We recommend updating to the versions mentioned above.",
      "cve": "CVE-2022-3510",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.google.protobuf/protobuf-java@3.5.1 to 3.16.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.google.protobuf/protobuf-java@3.5.1"
          },
          "version": "3.5.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-3510",
          "value": "CVE-2022-3510",
          "url": "https://scout.docker.com/v/CVE-2022-3510?s=github&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3E%3D3.0.0%2C%3C3.16.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-3510?s=github&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3E%3D3.0.0%2C%3C3.16.3"
        }
      ]
    },
    {
      "id": "3907fb45c7d192c08058081bbf4dc658adbf9a8b1886bbebf3f901916c0e6a40",
      "category": "container_scanning",
      "message": "CVE-2022-3510 on com.google.protobuf/protobuf-java@3.19.4",
      "description": "A parsing issue similar to CVE-2022-3171, but with Message-Type Extensions in protobuf-java core and lite versions prior to 3.21.7, 3.20.3, 3.19.6 and 3.16.3 can lead to a denial of service attack. Inputs containing multiple instances of non-repeated embedded messages with repeated or unknown fields causes objects to be converted back-n-forth between mutable and immutable forms, resulting in potentially long garbage collection pauses. We recommend updating to the versions mentioned above.",
      "cve": "CVE-2022-3510",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.google.protobuf/protobuf-java@3.19.4 to 3.19.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.google.protobuf/protobuf-java@3.19.4"
          },
          "version": "3.19.4"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-3510",
          "value": "CVE-2022-3510",
          "url": "https://scout.docker.com/v/CVE-2022-3510?s=github&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3E%3D3.17.0%2C%3C3.19.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-3510?s=github&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3E%3D3.17.0%2C%3C3.19.6"
        }
      ]
    },
    {
      "id": "0cf097c3c78763dfe8d5d6aa99e8d4d101c74003cd066765f90a99cea89f025a",
      "category": "container_scanning",
      "message": "CVE-2022-38013 on Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0",
      "description": "Microsoft is releasing this security advisory to provide information about a vulnerability in .NET Core 3.1 and .NET 6.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA denial of service vulnerability exists in ASP.NET Core 3.1 and .NET 6.0 where a malicious client could cause a stack overflow which may result in a denial of service attack when an attacker sends a customized payload that is parsed during model binding.\n\n## <a name=\"affected-software\"></a>Affected software\n* Any .NET 6.0 application running on .NET 6.0.8 or earlier.\n* Any ASP.NET Core 3.1 application running on .NET Core 3.1.28 or earlier.\nIf your application uses the following package versions, ensure you update to the latest version of .NET.\n### <a name=\"ASP.NET Core 3.1\"></a>.NET Core 3.1\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)|>= 3.1.0, < 3.1.29|3.1.29\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)|>= 3.1.0, < 3.1.29|3.1.29\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64)|>= 3.1.0, < 3.1.29|3.1.29\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)|>= 3.1.0, < 3.1.29|3.1.29\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)|>= 3.1.0, < 3.1.29|3.1.29\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)|>= 3.1.0, < 3.1.29|3.1.29\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)|>= 3.1.0, < 3.1.29|3.1.29\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)|>= 3.1.5, < 3.1.29|3.1.29\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)|>= 3.1.0, < 3.1.29|3.1.29\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)|>= 3.1.0, < 3.1.29|3.1.29\n### <a name=\".NET 6\"></a>.NET 6\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)|>= 5.0.0, < 6.0.9|6.0.9\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)|>= 5.0.0, < 6.0.9|6.0.9\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)|>= 5.0.1, < 6.0.9|6.0.9\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64)|>= 5.0.0, < 6.0.9|6.0.9\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)|>= 5.0.0, < 6.0.9|6.0.9\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)|>= 5.0.0, < 6.0.9|6.0.9\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)|>= 6.0.0, < 6.0.9|6.0.9\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)|>= 5.0.0, < 6.0.9|6.0.9\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)|>= 5.0.0, < 6.0.9|6.0.9\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)|>= 5.0.0, < 6.0.9|6.0.9\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)|>= 5.0.0, < 6.0.9|6.0.9\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)|>= 5.0.0, < 6.0.9|6.0.9\n\n\n\n### Other\n\nAnnouncement for this issue can be found at https://github.com/dotnet/announcements/issues/234\nAn Issue for this can be found at https://github.com/dotnet/aspnetcore/issues/43953\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/vulnerability/CVE-2022-38013",
      "cve": "CVE-2022-38013",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0 to 6.0.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-38013",
          "value": "CVE-2022-38013",
          "url": "https://scout.docker.com/v/CVE-2022-38013?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D5.0.0%2C%3C6.0.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-38013?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D5.0.0%2C%3C6.0.9"
        }
      ]
    },
    {
      "id": "03c2897b9ac16a92102f362987a878d1027efc1935fbe317b36f1584cfdcaf6d",
      "category": "container_scanning",
      "message": "CVE-2022-41715 on stdlib@1.16.12",
      "description": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service.\n\nThe parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory.\n\nAfter fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
      "cve": "CVE-2022-41715",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.18.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41715",
          "value": "CVE-2022-41715",
          "url": "https://scout.docker.com/v/CVE-2022-41715?s=golang&n=stdlib&t=golang&vr=%3C1.18.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41715?s=golang&n=stdlib&t=golang&vr=%3C1.18.7"
        }
      ]
    },
    {
      "id": "d76730f8e82bcb470444ec52374b5f7697f3e2ac36b0603b8d1d6122dcc4ec69",
      "category": "container_scanning",
      "message": "CVE-2022-41715 on stdlib@1.16.10",
      "description": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service.\n\nThe parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory.\n\nAfter fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
      "cve": "CVE-2022-41715",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.18.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41715",
          "value": "CVE-2022-41715",
          "url": "https://scout.docker.com/v/CVE-2022-41715?s=golang&n=stdlib&t=golang&vr=%3C1.18.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41715?s=golang&n=stdlib&t=golang&vr=%3C1.18.7"
        }
      ]
    },
    {
      "id": "19564d40b508c64be15282b4c046ebfdead1c42a5b91b30a776d0cac777e15d5",
      "category": "container_scanning",
      "message": "CVE-2022-41716 on stdlib@1.16.10",
      "description": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows.\n\nIn syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
      "cve": "CVE-2022-41716",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.18.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41716",
          "value": "CVE-2022-41716",
          "url": "https://scout.docker.com/v/CVE-2022-41716?s=golang&n=stdlib&t=golang&vr=%3C1.18.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41716?s=golang&n=stdlib&t=golang&vr=%3C1.18.8"
        }
      ]
    },
    {
      "id": "20018f19a4fe61a52ab9b7542b04ed8c559654826b9f5cb9f60c8b13fd05bc83",
      "category": "container_scanning",
      "message": "CVE-2022-41716 on stdlib@1.16.12",
      "description": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows.\n\nIn syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
      "cve": "CVE-2022-41716",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.18.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41716",
          "value": "CVE-2022-41716",
          "url": "https://scout.docker.com/v/CVE-2022-41716?s=golang&n=stdlib&t=golang&vr=%3C1.18.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41716?s=golang&n=stdlib&t=golang&vr=%3C1.18.8"
        }
      ]
    },
    {
      "id": "3c9468351680af5e5ac33cd5bd35a713e334c5b9012283a4866fa915f4483755",
      "category": "container_scanning",
      "message": "CVE-2022-41720 on stdlib@1.16.12",
      "description": "On Windows, restricted files can be accessed via os.DirFS and http.Dir.\n\nThe os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access.\n\nIn addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system.\n\nWith fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
      "cve": "CVE-2022-41720",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.18.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41720",
          "value": "CVE-2022-41720",
          "url": "https://scout.docker.com/v/CVE-2022-41720?s=golang&n=stdlib&t=golang&vr=%3C1.18.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41720?s=golang&n=stdlib&t=golang&vr=%3C1.18.9"
        }
      ]
    },
    {
      "id": "5a603479ec48681100284e5babe096dd193977e0c1a4243f48f730c08a1e7b61",
      "category": "container_scanning",
      "message": "CVE-2022-41720 on stdlib@1.16.10",
      "description": "On Windows, restricted files can be accessed via os.DirFS and http.Dir.\n\nThe os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access.\n\nIn addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system.\n\nWith fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
      "cve": "CVE-2022-41720",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.18.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41720",
          "value": "CVE-2022-41720",
          "url": "https://scout.docker.com/v/CVE-2022-41720?s=golang&n=stdlib&t=golang&vr=%3C1.18.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41720?s=golang&n=stdlib&t=golang&vr=%3C1.18.9"
        }
      ]
    },
    {
      "id": "a4817f6ac836d81f6444be10c0306b3bd11a43436fbee8b3c69b5ecb7d030542",
      "category": "container_scanning",
      "message": "CVE-2022-41721 on golang.org/x/net@0.0.0-20220802222814-0bcc04d9c69b",
      "description": "A request smuggling attack is possible when using MaxBytesHandler. When using MaxBytesHandler, the body of an HTTP request is not fully consumed. When the server attempts to read HTTP2 frames from the connection, it will instead be reading the body of the HTTP request, which could be attacker-manipulated to represent arbitrary HTTP2 requests.\n\n### Specific Go Packages Affected\ngolang.org/x/net/http2/h2c",
      "cve": "CVE-2022-41721",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.0.0-20220802222814-0bcc04d9c69b to 0.1.1-0.20221104162952-702349b0e862",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.0.0-20220802222814-0bcc04d9c69b"
          },
          "version": "0.0.0-20220802222814-0bcc04d9c69b"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41721",
          "value": "CVE-2022-41721",
          "url": "https://scout.docker.com/v/CVE-2022-41721?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3E%3D0.0.0-20220524220425-1d687d428aca%2C%3C0.1.1-0.20221104162952-702349b0e862"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41721?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3E%3D0.0.0-20220524220425-1d687d428aca%2C%3C0.1.1-0.20221104162952-702349b0e862"
        }
      ]
    },
    {
      "id": "8039319c0e631d9dd0e43187ab4f6cffc82d31c9284b3916934a244c2ce39705",
      "category": "container_scanning",
      "message": "CVE-2022-41722 on stdlib@1.16.12",
      "description": "A path traversal vulnerability exists in filepath.Clean on Windows.\n\nOn Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack.\n\nAfter fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
      "cve": "CVE-2022-41722",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.19.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41722",
          "value": "CVE-2022-41722",
          "url": "https://scout.docker.com/v/CVE-2022-41722?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41722?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ]
    },
    {
      "id": "16ae2dbd4ea274b1df7c34571d06affd482d886538c7690a98baf3d133e0bc79",
      "category": "container_scanning",
      "message": "CVE-2022-41722 on stdlib@1.18.9",
      "description": "A path traversal vulnerability exists in filepath.Clean on Windows.\n\nOn Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack.\n\nAfter fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
      "cve": "CVE-2022-41722",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.19.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41722",
          "value": "CVE-2022-41722",
          "url": "https://scout.docker.com/v/CVE-2022-41722?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41722?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ]
    },
    {
      "id": "1d7c531b16e4e600efac6a6a9080363ba0c9e0dd9552f3e26d3432559305349b",
      "category": "container_scanning",
      "message": "CVE-2022-41722 on stdlib@1.16.10",
      "description": "A path traversal vulnerability exists in filepath.Clean on Windows.\n\nOn Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack.\n\nAfter fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
      "cve": "CVE-2022-41722",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.19.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41722",
          "value": "CVE-2022-41722",
          "url": "https://scout.docker.com/v/CVE-2022-41722?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41722?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ]
    },
    {
      "id": "a8ed7f3e1ff4cd3c098e6024bc326bf822654201933378e4201ad098dfb970f8",
      "category": "container_scanning",
      "message": "CVE-2022-41723 on stdlib@1.16.12",
      "description": "A maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.",
      "cve": "CVE-2022-41723",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.19.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41723",
          "value": "CVE-2022-41723",
          "url": "https://scout.docker.com/v/CVE-2022-41723?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41723?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ]
    },
    {
      "id": "4714ea08fe82a9aa0adf309f27f778ef6dd6ffb33770c088af15a4848b763351",
      "category": "container_scanning",
      "message": "CVE-2022-41723 on stdlib@1.18.9",
      "description": "A maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.",
      "cve": "CVE-2022-41723",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.19.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41723",
          "value": "CVE-2022-41723",
          "url": "https://scout.docker.com/v/CVE-2022-41723?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41723?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ]
    },
    {
      "id": "8d3c40f0cc74e23aa89bc133f9d6738d715020db4107f54980c468899a667ae0",
      "category": "container_scanning",
      "message": "CVE-2022-41723 on stdlib@1.16.10",
      "description": "A maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.",
      "cve": "CVE-2022-41723",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.19.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41723",
          "value": "CVE-2022-41723",
          "url": "https://scout.docker.com/v/CVE-2022-41723?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41723?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ]
    },
    {
      "id": "b7e097d1973945b6634087017860ec509df591de091f11b9ae9c0b30dcc66f85",
      "category": "container_scanning",
      "message": "CVE-2022-41724 on stdlib@1.16.10",
      "description": "Large handshake records may cause panics in crypto/tls.\n\nBoth clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses.\n\nThis affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth >= RequestClientCert).",
      "cve": "CVE-2022-41724",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.19.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41724",
          "value": "CVE-2022-41724",
          "url": "https://scout.docker.com/v/CVE-2022-41724?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41724?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ]
    },
    {
      "id": "266816ea63ba9d5943ca8819f7b1903cad3f3c7ceba5c0152302c3fcd5977cf1",
      "category": "container_scanning",
      "message": "CVE-2022-41724 on stdlib@1.16.12",
      "description": "Large handshake records may cause panics in crypto/tls.\n\nBoth clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses.\n\nThis affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth >= RequestClientCert).",
      "cve": "CVE-2022-41724",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.19.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41724",
          "value": "CVE-2022-41724",
          "url": "https://scout.docker.com/v/CVE-2022-41724?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41724?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ]
    },
    {
      "id": "5f1cb0d7261c354a419f5f452158416e8f70995f2b1bbb6bc53bc02b5fc130ec",
      "category": "container_scanning",
      "message": "CVE-2022-41724 on stdlib@1.18.9",
      "description": "Large handshake records may cause panics in crypto/tls.\n\nBoth clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses.\n\nThis affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth >= RequestClientCert).",
      "cve": "CVE-2022-41724",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.19.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41724",
          "value": "CVE-2022-41724",
          "url": "https://scout.docker.com/v/CVE-2022-41724?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41724?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ]
    },
    {
      "id": "6b6a0813536561b2ad2c3e6e6d32c7964d21d53216c0338cd5dac50bc2ee215f",
      "category": "container_scanning",
      "message": "CVE-2022-41725 on stdlib@1.16.10",
      "description": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart.\n\nMultipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue.\n\nReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files.\n\nWith fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous.\n\nIn addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct.\n\nUsers should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary files. Callers can limit the size of form data with http.MaxBytesReader.",
      "cve": "CVE-2022-41725",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.19.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41725",
          "value": "CVE-2022-41725",
          "url": "https://scout.docker.com/v/CVE-2022-41725?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41725?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ]
    },
    {
      "id": "d1e7aa9cd0f837e7108ba4dbd0d25125cc86af00af719cb920e190977c7a4f79",
      "category": "container_scanning",
      "message": "CVE-2022-41725 on stdlib@1.18.9",
      "description": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart.\n\nMultipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue.\n\nReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files.\n\nWith fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous.\n\nIn addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct.\n\nUsers should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary files. Callers can limit the size of form data with http.MaxBytesReader.",
      "cve": "CVE-2022-41725",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.19.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41725",
          "value": "CVE-2022-41725",
          "url": "https://scout.docker.com/v/CVE-2022-41725?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41725?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ]
    },
    {
      "id": "d3501851f460d06fadc09b973a9437587bf0f2e2855e46545c6b7d9aa55b8bdd",
      "category": "container_scanning",
      "message": "CVE-2022-41725 on stdlib@1.16.12",
      "description": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart.\n\nMultipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue.\n\nReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files.\n\nWith fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous.\n\nIn addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct.\n\nUsers should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary files. Callers can limit the size of form data with http.MaxBytesReader.",
      "cve": "CVE-2022-41725",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.19.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41725",
          "value": "CVE-2022-41725",
          "url": "https://scout.docker.com/v/CVE-2022-41725?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41725?s=golang&n=stdlib&t=golang&vr=%3C1.19.6"
        }
      ]
    },
    {
      "id": "cdabd10ccdbd08e5d3cc1198074b2cabe57cf4690ce09dcdf246e1a1e6aa15d9",
      "category": "container_scanning",
      "message": "CVE-2022-42003 on com.fasterxml.jackson.core/jackson-databind@2.10.5",
      "description": "In FasterXML jackson-databind 2.4.0-rc1 until 2.12.7.1 and in 2.13.x before 2.13.4.2 resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled. This was patched in 2.12.7.1, 2.13.4.2, and 2.14.0.\n\nCommits that introduced vulnerable code are \nhttps://github.com/FasterXML/jackson-databind/commit/d499f2e7bbc5ebd63af11e1f5cf1989fa323aa45, https://github.com/FasterXML/jackson-databind/commit/0e37a39502439ecbaa1a5b5188387c01bf7f7fa1, and https://github.com/FasterXML/jackson-databind/commit/7ba9ac5b87a9d6ac0d2815158ecbeb315ad4dcdc.\n\nFix commits are https://github.com/FasterXML/jackson-databind/commit/cd090979b7ea78c75e4de8a4aed04f7e9fa8deea and https://github.com/FasterXML/jackson-databind/commit/d78d00ee7b5245b93103fef3187f70543d67ca33.\n\nThe `2.13.4.1` release does fix this issue, however it also references a non-existent jackson-bom which causes build failures for gradle users. See https://github.com/FasterXML/jackson-databind/issues/3627#issuecomment-1277957548 for details. This is fixed in `2.13.4.2` which is listed in the advisory metadata so that users are not subjected to unnecessary build failures",
      "cve": "CVE-2022-42003",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.fasterxml.jackson.core/jackson-databind@2.10.5 to 2.12.7.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.10.5"
          },
          "version": "2.10.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-42003",
          "value": "CVE-2022-42003",
          "url": "https://scout.docker.com/v/CVE-2022-42003?s=github&n=jackson-databind&ns=com.fasterxml.jackson.core&t=maven&vr=%3E%3D2.4.0-rc1%2C%3C2.12.7.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-42003?s=github&n=jackson-databind&ns=com.fasterxml.jackson.core&t=maven&vr=%3E%3D2.4.0-rc1%2C%3C2.12.7.1"
        }
      ]
    },
    {
      "id": "309a6ad8bc44271ff56c1fd27188328ea128e2926070035bd06c207f1324a1b3",
      "category": "container_scanning",
      "message": "CVE-2022-42003 on com.fasterxml.jackson.core/jackson-databind@2.12.6.1",
      "description": "In FasterXML jackson-databind 2.4.0-rc1 until 2.12.7.1 and in 2.13.x before 2.13.4.2 resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled. This was patched in 2.12.7.1, 2.13.4.2, and 2.14.0.\n\nCommits that introduced vulnerable code are \nhttps://github.com/FasterXML/jackson-databind/commit/d499f2e7bbc5ebd63af11e1f5cf1989fa323aa45, https://github.com/FasterXML/jackson-databind/commit/0e37a39502439ecbaa1a5b5188387c01bf7f7fa1, and https://github.com/FasterXML/jackson-databind/commit/7ba9ac5b87a9d6ac0d2815158ecbeb315ad4dcdc.\n\nFix commits are https://github.com/FasterXML/jackson-databind/commit/cd090979b7ea78c75e4de8a4aed04f7e9fa8deea and https://github.com/FasterXML/jackson-databind/commit/d78d00ee7b5245b93103fef3187f70543d67ca33.\n\nThe `2.13.4.1` release does fix this issue, however it also references a non-existent jackson-bom which causes build failures for gradle users. See https://github.com/FasterXML/jackson-databind/issues/3627#issuecomment-1277957548 for details. This is fixed in `2.13.4.2` which is listed in the advisory metadata so that users are not subjected to unnecessary build failures",
      "cve": "CVE-2022-42003",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.fasterxml.jackson.core/jackson-databind@2.12.6.1 to 2.12.7.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.12.6.1"
          },
          "version": "2.12.6.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-42003",
          "value": "CVE-2022-42003",
          "url": "https://scout.docker.com/v/CVE-2022-42003?s=github&n=jackson-databind&ns=com.fasterxml.jackson.core&t=maven&vr=%3E%3D2.4.0-rc1%2C%3C2.12.7.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-42003?s=github&n=jackson-databind&ns=com.fasterxml.jackson.core&t=maven&vr=%3E%3D2.4.0-rc1%2C%3C2.12.7.1"
        }
      ]
    },
    {
      "id": "9ac1cb09b46bec8a0035b0a3d66811c014a756a12ecd48bcc96ca69974c3029a",
      "category": "container_scanning",
      "message": "CVE-2022-4244 on org.codehaus.plexus/plexus-utils@1.5.15",
      "description": "A flaw was found in plexus-codehaus. A directory traversal attack (also known as path traversal) aims to access files and directories stored outside the intended folder. By manipulating files with dot-dot-slash (`../`) sequences and their variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on the file system, including application source code, configuration, and other critical system files. ",
      "cve": "CVE-2022-4244",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.codehaus.plexus/plexus-utils@1.5.15 to 3.0.24",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.codehaus.plexus/plexus-utils@1.5.15"
          },
          "version": "1.5.15"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-4244",
          "value": "CVE-2022-4244",
          "url": "https://scout.docker.com/v/CVE-2022-4244?s=github&n=plexus-utils&ns=org.codehaus.plexus&t=maven&vr=%3C3.0.24"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-4244?s=github&n=plexus-utils&ns=org.codehaus.plexus&t=maven&vr=%3C3.0.24"
        }
      ]
    },
    {
      "id": "eda1e4c2fef0c9b1354df6aaa6698dc4ca8cfb6e4411fbda85a0070d9cf47e3d",
      "category": "container_scanning",
      "message": "CVE-2023-21538 on Microsoft.NETCore.App.Runtime.linux-x64@6.0.0",
      "description": "# Microsoft Security Advisory CVE-2023-21538: .NET Denial of Service Vulnerability\n\n## <a name=\"executive-summary\"></a>Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA denial of service vulnerability exists in .NET 6.0 where a malicious client could cause a stack overflow which may result in a denial of service attack when an attacker sends an invalid request to an exposed endpoint.\n## Discussion\n\nDiscussion for this issue can be found at https://github.com/dotnet/runtime/issues/80449\n\n### <a name=\"mitigation-factors\"></a>Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n## <a name=\"affected-software\"></a>Affected software\n\n* Any .NET 6.0 application running on .NET 6.0.12 or earlier.\n\nIf your application uses the following package versions, ensure you update to the latest version of .NET.\n\n### <a name=\".NET 6\"></a>.NET 6\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.NetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm)|>= 6.0.0, <= 6.0.12|6.0.13\n[Microsoft.NetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm64)|>= 6.0.0, <= 6.0.12|6.0.13\n[Microsoft.NetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm)|>= 6.0.0, <= 6.0.12|6.0.13\n[Microsoft.NetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm64)|>= 6.0.0, <= 6.0.12|6.0.13\n[Microsoft.NetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-x64)|>= 6.0.0, <= 6.0.12|6.0.13\n[Microsoft.NetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-x64)|>= 6.0.0, <= 6.0.12|6.0.13\n[Microsoft.NetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-arm64)|>= 6.0.0, <= 6.0.12|6.0.13\n[Microsoft.NetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-x64)|>= 6.0.0, <= 6.0.12|6.0.13\n[Microsoft.NetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm)|>= 6.0.0, <= 6.0.12|6.0.13\n[Microsoft.NetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm64)|>= 6.0.0, <= 6.0.12|6.0.13\n[Microsoft.NetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x64)|>= 6.0.0, <= 6.0.12|6.0.13\n[Microsoft.NetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x86)|>= 6.0.0, <= 6.0.12|6.0.13\n\n## Advisory FAQ\n\n### <a name=\"how-affected\"></a>How do I know if I am affected?\n\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\n\n### <a name=\"how-fix\"></a>How do I fix the issue?\n\n* To fix the issue please install the latest version of .NET 6.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n* If you have .NET Core 3.1 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n* If you are using one of the affected packages, please update to the patched version listed above. \n\n```\n.NET Core SDK (reflecting any global.json):\n\n Version:   6.0.300\n Commit:    8473146e7d\n\nRuntime Environment:\n\n OS Name:     Windows\n OS Version:  10.0.18363\n OS Platform: Windows\n RID:         win10-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\n\nHost (useful for support):\n\n  Version: 6.0.5\n  Commit:  8473146e7d\n\n.NET Core SDKs installed:\n\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\n\n.NET Core runtimes installed:\n\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nTo install additional .NET Core runtimes or SDKs:\n  https://aka.ms/dotnet-download\n```\n\n* If you're using .NET 6.0, you should download and install Runtime 6.0.13 or SDK 6.0.113 (for Visual Studio 2022 v17.1) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n.NET 6.0 and and .NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### External Links\n\n[CVE-2023-21538]( https://www.cve.org/CVERecord?id=CVE-2023-21538)\n\n### Revisions\n\nV1.0 (January 10, 2023): Advisory published.\n\n_Version 1.0_\n\n_Last Updated 2023-01-10_",
      "cve": "CVE-2023-21538",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade Microsoft.NETCore.App.Runtime.linux-x64@6.0.0 to 6.0.13",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Microsoft.NETCore.App.Runtime.linux-x64@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-21538",
          "value": "CVE-2023-21538",
          "url": "https://scout.docker.com/v/CVE-2023-21538?s=github&n=Microsoft.NETCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.13"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-21538?s=github&n=Microsoft.NETCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.13"
        }
      ]
    },
    {
      "id": "b8233711ef91cce586fb113be43ae90fe52aae052716140e41f36370d2e623cc",
      "category": "container_scanning",
      "message": "CVE-2023-2253 on github.com/docker/distribution@2.7.1+incompatible",
      "description": "### Impact\n\nSystems that run `distribution` built after a specific commit running on memory-restricted environments can suffer from denial of service by a crafted malicious `/v2/_catalog` API endpoint request. \n\n### Patches\n\nUpgrade to at least 2.8.2-beta.1 if you are running `v2.8.x` release. If you use the code from the main branch, update at least to the commit after [f55a6552b006a381d9167e328808565dd2bf77dc](https://github.com/distribution/distribution/commit/f55a6552b006a381d9167e328808565dd2bf77dc).\n\n### Workarounds\n\nThere is no way to work around this issue without patching. Restrict access to the affected API endpoint: see the recommendations section.\n\n### References\n\n`/v2/_catalog` endpoint accepts a parameter to control the maximum amount of records returned (query string: `n`).\n\nWhen not given the default `n=100` is used.  The server trusts that `n` has an acceptable value, however when using a \nmaliciously large value, it allocates an array/slice of `n` of strings before filling the slice with data.\n\nThis behaviour was introduced ~7yrs ago [1].\n\n### Recommendation\n\nThe `/v2/_catalog` endpoint was designed specifically to do registry syncs with search or other API systems. Such an endpoint would create a lot of load on the backend system, due to overfetch required to serve a request in certain implementations.\n\nBecause of this, we strongly recommend keeping this API endpoint behind heightened privilege and avoiding leaving it exposed to the internet.\n\n###  For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [distribution repository](https://github.com/distribution/distribution)\n* Email us at [cncf-distribution-security@lists.cncf.io](mailto:cncf-distribution-security@lists.cncf.io)\n\n[1] [faulty commit](https://github.com/distribution/distribution/blob/b7e26bac741c76cb792f8e14c41a2163b5dae8df/registry/handlers/catalog.go#L45)",
      "cve": "CVE-2023-2253",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/docker/distribution@2.7.1+incompatible to 2.8.2-beta.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/distribution@2.7.1%2Bincompatible"
          },
          "version": "2.7.1+incompatible"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-2253",
          "value": "CVE-2023-2253",
          "url": "https://scout.docker.com/v/CVE-2023-2253?s=github&n=distribution&ns=github.com%2Fdocker&t=golang&vr=%3C2.8.2-beta.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-2253?s=github&n=distribution&ns=github.com%2Fdocker&t=golang&vr=%3C2.8.2-beta.1"
        }
      ]
    },
    {
      "id": "92fec2915bd05c31be8d204db494384655b1253cdcecafdfca1978ff01c8660a",
      "category": "container_scanning",
      "message": "CVE-2023-2253 on github.com/docker/distribution@2.8.1+incompatible",
      "description": "### Impact\n\nSystems that run `distribution` built after a specific commit running on memory-restricted environments can suffer from denial of service by a crafted malicious `/v2/_catalog` API endpoint request. \n\n### Patches\n\nUpgrade to at least 2.8.2-beta.1 if you are running `v2.8.x` release. If you use the code from the main branch, update at least to the commit after [f55a6552b006a381d9167e328808565dd2bf77dc](https://github.com/distribution/distribution/commit/f55a6552b006a381d9167e328808565dd2bf77dc).\n\n### Workarounds\n\nThere is no way to work around this issue without patching. Restrict access to the affected API endpoint: see the recommendations section.\n\n### References\n\n`/v2/_catalog` endpoint accepts a parameter to control the maximum amount of records returned (query string: `n`).\n\nWhen not given the default `n=100` is used.  The server trusts that `n` has an acceptable value, however when using a \nmaliciously large value, it allocates an array/slice of `n` of strings before filling the slice with data.\n\nThis behaviour was introduced ~7yrs ago [1].\n\n### Recommendation\n\nThe `/v2/_catalog` endpoint was designed specifically to do registry syncs with search or other API systems. Such an endpoint would create a lot of load on the backend system, due to overfetch required to serve a request in certain implementations.\n\nBecause of this, we strongly recommend keeping this API endpoint behind heightened privilege and avoiding leaving it exposed to the internet.\n\n###  For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [distribution repository](https://github.com/distribution/distribution)\n* Email us at [cncf-distribution-security@lists.cncf.io](mailto:cncf-distribution-security@lists.cncf.io)\n\n[1] [faulty commit](https://github.com/distribution/distribution/blob/b7e26bac741c76cb792f8e14c41a2163b5dae8df/registry/handlers/catalog.go#L45)",
      "cve": "CVE-2023-2253",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/docker/distribution@2.8.1+incompatible to 2.8.2-beta.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/distribution@2.8.1%2Bincompatible"
          },
          "version": "2.8.1+incompatible"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-2253",
          "value": "CVE-2023-2253",
          "url": "https://scout.docker.com/v/CVE-2023-2253?s=github&n=distribution&ns=github.com%2Fdocker&t=golang&vr=%3C2.8.2-beta.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-2253?s=github&n=distribution&ns=github.com%2Fdocker&t=golang&vr=%3C2.8.2-beta.1"
        }
      ]
    },
    {
      "id": "b19f31e29d50ae765f8504df2ce2b4a44a2ea1f4a487d3de4b0b793bb2674dc1",
      "category": "container_scanning",
      "message": "CVE-2023-24534 on stdlib@1.16.12",
      "description": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service.\n\nCertain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service.\n\nWith fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
      "cve": "CVE-2023-24534",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.19.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24534",
          "value": "CVE-2023-24534",
          "url": "https://scout.docker.com/v/CVE-2023-24534?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24534?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ]
    },
    {
      "id": "4978cb70d56d807c1def4c31edaf820accdfb502f78e487df119917e98c920ed",
      "category": "container_scanning",
      "message": "CVE-2023-24534 on stdlib@1.18.9",
      "description": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service.\n\nCertain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service.\n\nWith fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
      "cve": "CVE-2023-24534",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.19.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24534",
          "value": "CVE-2023-24534",
          "url": "https://scout.docker.com/v/CVE-2023-24534?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24534?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ]
    },
    {
      "id": "48e4725abe17cc55a323f93e64c7e470551c2dd1da6399d3fcf98b1f7362b284",
      "category": "container_scanning",
      "message": "CVE-2023-24534 on stdlib@1.16.10",
      "description": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service.\n\nCertain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service.\n\nWith fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
      "cve": "CVE-2023-24534",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.19.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24534",
          "value": "CVE-2023-24534",
          "url": "https://scout.docker.com/v/CVE-2023-24534?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24534?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ]
    },
    {
      "id": "490e77cfd7d7b94200caffe7c11cf21a1425d37af65f2ccb241c2624c961d85c",
      "category": "container_scanning",
      "message": "CVE-2023-24536 on stdlib@1.16.12",
      "description": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts.\n\nThis stems from several causes:\n\n1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended.\n2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts.\n3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector.\n\nThe combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue.\n\nWith fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations.\n\nIn addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms:\n\n1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=.\n2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
      "cve": "CVE-2023-24536",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.19.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24536",
          "value": "CVE-2023-24536",
          "url": "https://scout.docker.com/v/CVE-2023-24536?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24536?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ]
    },
    {
      "id": "1f2dfc9a8d4d913834a33d6e2e1989d8bfa072b0b572d092bc426d532f6fa821",
      "category": "container_scanning",
      "message": "CVE-2023-24536 on stdlib@1.18.9",
      "description": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts.\n\nThis stems from several causes:\n\n1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended.\n2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts.\n3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector.\n\nThe combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue.\n\nWith fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations.\n\nIn addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms:\n\n1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=.\n2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
      "cve": "CVE-2023-24536",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.19.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24536",
          "value": "CVE-2023-24536",
          "url": "https://scout.docker.com/v/CVE-2023-24536?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24536?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ]
    },
    {
      "id": "04633eed776318c3d620e2a6cbbd0c3012936ee48d92dd8a23550a197a6e948e",
      "category": "container_scanning",
      "message": "CVE-2023-24536 on stdlib@1.16.10",
      "description": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts.\n\nThis stems from several causes:\n\n1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended.\n2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts.\n3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector.\n\nThe combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue.\n\nWith fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations.\n\nIn addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms:\n\n1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=.\n2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
      "cve": "CVE-2023-24536",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.19.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24536",
          "value": "CVE-2023-24536",
          "url": "https://scout.docker.com/v/CVE-2023-24536?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24536?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ]
    },
    {
      "id": "511d7afaec612ef02f4e2a7f2c8cf8a96cca51c66bd98a481572b9da26e25696",
      "category": "container_scanning",
      "message": "CVE-2023-24537 on stdlib@1.18.9",
      "description": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
      "cve": "CVE-2023-24537",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.19.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24537",
          "value": "CVE-2023-24537",
          "url": "https://scout.docker.com/v/CVE-2023-24537?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24537?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ]
    },
    {
      "id": "c23e134f258315a6a842265812907bcf6cc91c449b140c680befe04e57a06735",
      "category": "container_scanning",
      "message": "CVE-2023-24537 on stdlib@1.16.12",
      "description": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
      "cve": "CVE-2023-24537",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.19.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24537",
          "value": "CVE-2023-24537",
          "url": "https://scout.docker.com/v/CVE-2023-24537?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24537?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ]
    },
    {
      "id": "c6e1e3bfe019bc47ee7efff67a25e78d967d79a8c3129b987f7fafddd7b4653e",
      "category": "container_scanning",
      "message": "CVE-2023-24537 on stdlib@1.16.10",
      "description": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
      "cve": "CVE-2023-24537",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.19.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24537",
          "value": "CVE-2023-24537",
          "url": "https://scout.docker.com/v/CVE-2023-24537?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24537?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ]
    },
    {
      "id": "e095492c29443d5bdc533b6c0a6127b62d4d05f6d1d921f51f24e9b8dc6b276d",
      "category": "container_scanning",
      "message": "CVE-2023-25151 on github.com/prometheus/client_golang@1.11.0",
      "description": "The Prometheus client_golang HTTP server is vulnerable to a denial of service attack when handling requests with non-standard HTTP methods.\n\nIn order to be affected, an instrumented software must use any of the promhttp.InstrumentHandler* middleware except RequestsInFlight; not filter any specific methods (e.g GET) before middleware; pass a metric with a \"method\" label name to a middleware; and not have any firewall/LB/proxy that filters away requests with unknown \"method\".",
      "cve": "CVE-2023-25151",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/prometheus/client_golang@1.11.0 to 1.11.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/prometheus/client_golang@1.11.0"
          },
          "version": "1.11.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-25151",
          "value": "CVE-2023-25151",
          "url": "https://scout.docker.com/v/CVE-2023-25151?s=golang&n=client_golang&ns=github.com%2Fprometheus&t=golang&vr=%3C1.11.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-25151?s=golang&n=client_golang&ns=github.com%2Fprometheus&t=golang&vr=%3C1.11.1"
        }
      ]
    },
    {
      "id": "a951414eaaf7f0e10eaf555e0e885d2a4a181e0ce9a875cdb0489af83454b1e6",
      "category": "container_scanning",
      "message": "CVE-2023-28840 on github.com/docker/docker@20.10.17+incompatible",
      "description": "[Moby](https://mobyproject.org/) is an open source container framework developed by Docker Inc. that is distributed as Docker, Mirantis Container Runtime, and various other downstream projects/products. The Moby daemon component (`dockerd`), which is developed as [moby/moby](https://github.com/moby/moby) is commonly referred to as *Docker*.\n\nSwarm Mode, which is compiled in and delivered by default in `dockerd` and is thus present in most major Moby downstreams, is a simple, built-in container orchestrator that is implemented through a combination of [SwarmKit](https://github.com/moby/swarmkit) and supporting network code.\n\nThe `overlay` network driver is a core feature of Swarm Mode, providing isolated virtual LANs that allow communication between containers and services across the cluster. This driver is an implementation/user of [VXLAN](https://en.wikipedia.org/wiki/Virtual_Extensible_LAN), which encapsulates link-layer (Ethernet) frames in UDP datagrams that tag the frame with a VXLAN Network ID (VNI) that identifies the originating overlay network. In addition, the overlay network driver supports an optional, off-by-default encrypted mode, which is especially useful when VXLAN packets traverses an untrusted network between nodes.\n\nEncrypted overlay networks function by encapsulating the VXLAN datagrams through the use of the [IPsec Encapsulating Security Payload](https://en.wikipedia.org/wiki/IPsec#Encapsulating_Security_Payload) protocol in [Transport mode](https://en.wikipedia.org/wiki/IPsec#Transport_mode). By deploying IPSec encapsulation, encrypted overlay networks gain the additional properties of source authentication through cryptographic proof, data integrity through check-summing, and confidentiality through encryption.\n\nWhen setting an endpoint up on an encrypted overlay network, Moby installs three [iptables](https://www.netfilter.org/projects/iptables/index.html) (Linux kernel firewall) rules that enforce both incoming and outgoing IPSec. These rules rely on the `u32` iptables extension provided by the `xt_u32` kernel module to directly filter on a VXLAN packet's VNI field, so that IPSec guarantees can be enforced on encrypted overlay networks without interfering with other overlay networks or other users of VXLAN.\n\n[Two iptables rules](https://github.com/moby/libnetwork/blob/d9fae4c73daf76c3b0f77e14b45b8bf612ba764d/drivers/overlay/encryption.go#L230-L234) serve to filter incoming VXLAN datagrams with a VNI that corresponds to an encrypted network and discards unencrypted datagrams. The rules are appended to the end of the `INPUT` filter chain, following any rules that have been previously set by the system administrator. Administrator-set rules take precedence over the rules Moby sets to discard unencrypted VXLAN datagrams, which can potentially admit unencrypted datagrams that should have been discarded.\n\nOn Red Hat Enterprise Linux and derivatives such as CentOS and Rocky, the `xt_u32` module has been:\n* [moved to the kernel-modules-extra package and no longer installed by default in RHEL 8.3](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.3_release_notes/rhel-8-3-0-release#technology-preview_networking)\n* [officially deprecated in RHEL 8.6](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/8.6_release_notes/deprecated_functionality#deprecated-functionality_networking)\n* [removed completely in RHEL 9](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/considerations_in_adopting_rhel_9/assembly_networking_considerations-in-adopting-rhel-9#ref_firewall-networking_assembly_networking)\n\nThese rules are not created when `xt_u32` is unavailable, even though the container is still attached to the network.\n\n## Impact\nEncrypted overlay networks on affected configurations silently accept cleartext VXLAN datagrams that are tagged with the VNI of an encrypted overlay network. As a result, it is possible to inject arbitrary Ethernet frames into the encrypted overlay network by encapsulating them in VXLAN datagrams.\n\nThe injection of arbitrary Ethernet frames can enable a Denial of Service attack. A sophisticated attacker may be able to establish a UDP or TCP connection by way of the container’s outbound gateway that would otherwise be blocked by a stateful firewall, or carry out other escalations beyond simple injection by smuggling packets into the overlay network.\n\n## Patches\nPatches are available in Moby releases 23.0.3, and 20.10.24. As Mirantis Container Runtime's 20.10 releases are numbered differently, users of that platform should update to 20.10.16.\n\n## Workarounds\n* Close the VXLAN port (by default, UDP port 4789) to incoming traffic at the Internet boundary (see [GHSA-vwm3-crmr-xfxw](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)) to prevent all VXLAN packet injection.\n* Ensure that the `xt_u32` kernel module is available on all nodes of the Swarm cluster.\n\n## Background\n* [#43382](https://github.com/moby/moby/issues/43382) partially discussed this concern, but did not consider the security implications.\n* Mirantis FIELD-5788 essentially duplicates [#43382](https://github.com/moby/moby/issues/43382), and was created six months earlier; it similarly overlooked the security implications.\n* [#45118](https://github.com/moby/moby/pull/45118) is the ancestor of the final patches, and was where the security implications were discovered.\n\n## Related\n* [CVE-2023-28841: Encrypted overlay network traffic may be unencrypted](https://github.com/moby/moby/security/advisories/GHSA-33pg-m6jh-5237)\n* [CVE-2023-28842: Encrypted overlay network with a single endpoint is unauthenticated](https://github.com/moby/moby/security/advisories/GHSA-6wrf-mxfj-pf5p)\n* [GHSA-vwm3-crmr-xfxw: The Swarm VXLAN port may be exposed to attack due to ambiguous documentation](https://github.com/moby/moby/security/advisories/GHSA-vwm3-crmr-xfxw)\n* [GHSA-gvm4-2qqg-m333: Security issues in encrypted overlay networks](https://github.com/moby/libnetwork/security/advisories/GHSA-gvm4-2qqg-m333) (libnetwork)",
      "cve": "CVE-2023-28840",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/docker/docker@20.10.17+incompatible to 20.10.24",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/docker@20.10.17%2Bincompatible"
          },
          "version": "20.10.17+incompatible"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-28840",
          "value": "CVE-2023-28840",
          "url": "https://scout.docker.com/v/CVE-2023-28840?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D1.12.0%2C%3C20.10.24"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-28840?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D1.12.0%2C%3C20.10.24"
        }
      ]
    },
    {
      "id": "04799dc984e117bcf19a8ce638ff343c805d2b216e209309b44c51c6ac473eb8",
      "category": "container_scanning",
      "message": "CVE-2023-29331 on Microsoft.NETCore.App.Runtime.linux-x64@6.0.0",
      "description": "# Microsoft Security Advisory CVE-2023-29331: .NET Denial of Service vulnerability\n\n## <a name=\"executive-summary\"></a>Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0 and .NET 6.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET when processing X.509 certificates that may result in Denial of Service. \n\nDetails: [KB5025823 ](https://support.microsoft.com/kb/5025823)\n\n## Announcement\n\nAnnouncement for this issue can be found at  https://github.com/dotnet/announcements/issues/257\n\n### <a name=\"mitigation-factors\"></a>Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n## <a name=\"affected-software\"></a>Affected software\n\n* Any .NET 7.0 application running on .NET 7.0.5 or earlier.\n* Any .NET 6.0 application running on .NET 6.0.16 or earlier.\n\nIf your application uses the following package versions, ensure you update to the latest version of .NET.\n\n### <a name=\".NET 7\"></a>.NET 7\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.Windows.Compatibility](https://www.nuget.org/packages/Microsoft.Windows.Compatibility)               | >= 7.0.0, < 7.0.1 | 7.0.3\n[System.Security.Cryptography.Pkcs](https://www.nuget.org/packages/System.Security.Cryptography.Pkcs)           | >= 7.0.0, < 7.0.1 | 7.0.2\n[Microsoft.NetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm)               | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm64)           | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm)     | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm64) | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-x64)     | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-x64)               | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-arm64)               | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-x64)                   | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm)                   | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm64)               | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x64)                   | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x86)                   | >= 7.0.0, < 7.0.5 | 7.0.7\n\n### <a name=\".NET 6\"></a>.NET 6\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.Windows.Compatibility](https://www.nuget.org/packages/Microsoft.Windows.Compatibility)               | >= 6.0.0, < 6.0.4 | 6.0.6\n[System.Security.Cryptography.Pkcs](https://www.nuget.org/packages/System.Security.Cryptography.Pkcs)           | >= 6.0.0, < 6.0.2 | 6.0.3\n[Microsoft.NetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm)               | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm64)           | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm)     | >= 6.0.1, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm64) | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-x64)     | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-x64)               | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-arm64)               | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-x64)                   | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm)                   | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm64)               | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x64)                   | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x86)                   | >= 6.0.0, < 6.0.16 | 6.0.18\n\n\n## Advisory FAQ\n\n### <a name=\"how-affected\"></a>How do I know if I am affected?\n\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\n\n### <a name=\"how-fix\"></a>How do I fix the issue?\n\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n* If you are using one of the affected packages, please update to the patched version listed above.\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET Core SDK (reflecting any global.json):\n\n Version:   6.0.300\n Commit:    8473146e7d\n\nRuntime Environment:\n\n OS Name:     Windows\n OS Version:  10.0.18363\n OS Platform: Windows\n RID:         win10-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\n\nHost (useful for support):\n\n  Version: 6.0.5\n  Commit:  8473146e7d\n\n.NET Core SDKs installed:\n\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\n\n.NET Core runtimes installed:\n\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nTo install additional .NET Core runtimes or SDKs:\n  https://aka.ms/dotnet-download\n```\n\n* If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.106 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n* If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.312 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n.NET 6.0 and and .NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### External Links\n\n[CVE-2023-29331]( https://www.cve.org/CVERecord?id=2023-29331)\n\n### Revisions\n\nV1.0 (June 13, 2023): Advisory published.\n\n_Version 1.0_\n\n_Last Updated 2023-06-13_",
      "cve": "CVE-2023-29331",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade Microsoft.NETCore.App.Runtime.linux-x64@6.0.0 to 6.0.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Microsoft.NETCore.App.Runtime.linux-x64@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29331",
          "value": "CVE-2023-29331",
          "url": "https://scout.docker.com/v/CVE-2023-29331?s=github&n=Microsoft.NETCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C%3D6.0.16"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29331?s=github&n=Microsoft.NETCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C%3D6.0.16"
        }
      ]
    },
    {
      "id": "52a0efc0c0aaf53bba7237e941756b7dc9de13f13085d19f5c5c0d81795bdbb9",
      "category": "container_scanning",
      "message": "CVE-2023-37920 on certifi@2019.11.28",
      "description": "Certifi 2023.07.22 removes root certificates from \"e-Tugra\" from the root store. These are in the process of being removed from Mozilla's trust store.\n\n e-Tugra's root certificates are being removed pursuant to an investigation prompted by reporting of security issues in their systems. Conclusions of Mozilla's investigation can be found [here](https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/C-HrP1SEq1A).",
      "cve": "CVE-2023-37920",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade certifi@2019.11.28 to 2023.7.22",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/certifi@2019.11.28"
          },
          "version": "2019.11.28"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-37920",
          "value": "CVE-2023-37920",
          "url": "https://scout.docker.com/v/CVE-2023-37920?s=github&n=certifi&t=pypi&vr=%3E%3D2015.4.28%2C%3C2023.7.22"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-37920?s=github&n=certifi&t=pypi&vr=%3E%3D2015.4.28%2C%3C2023.7.22"
        }
      ]
    },
    {
      "id": "7265b7f57a58dda4dc4f3d97131a736f3dda6dce508adebc88cacbb3ae1d25fb",
      "category": "container_scanning",
      "message": "CVE-2023-39325 on stdlib@1.16.12",
      "description": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing.\n\nWith the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection.\n\nThis issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2.\n\nThe default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
      "cve": "CVE-2023-39325",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.20.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39325",
          "value": "CVE-2023-39325",
          "url": "https://scout.docker.com/v/CVE-2023-39325?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39325?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ]
    },
    {
      "id": "855ca9c0c4cb39f90332b48a1937fe7ae6a8350a2798a45d8c92c82460af3f65",
      "category": "container_scanning",
      "message": "CVE-2023-39325 on golang.org/x/net@0.10.0",
      "description": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. \n\nWith the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. \n\nThis issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2.\n\nThe default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
      "cve": "CVE-2023-39325",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade golang.org/x/net@0.10.0 to 0.17.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/golang.org/x/net@0.10.0"
          },
          "version": "0.10.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39325",
          "value": "CVE-2023-39325",
          "url": "https://scout.docker.com/v/CVE-2023-39325?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.17.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39325?s=github&n=net&ns=golang.org%2Fx&t=golang&vr=%3C0.17.0"
        }
      ]
    },
    {
      "id": "ad63f9d2896591d3c2dd5cb7264217b096043e4911e678d4144ad2d2ccd05690",
      "category": "container_scanning",
      "message": "CVE-2023-39325 on stdlib@1.20.6",
      "description": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing.\n\nWith the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection.\n\nThis issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2.\n\nThe default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
      "cve": "CVE-2023-39325",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.20.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39325",
          "value": "CVE-2023-39325",
          "url": "https://scout.docker.com/v/CVE-2023-39325?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39325?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ]
    },
    {
      "id": "5b1a7b574b14ff03793b4321034aff7e2641e5124ee4daaa4ea60a5340cc3471",
      "category": "container_scanning",
      "message": "CVE-2023-39325 on stdlib@1.16.10",
      "description": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing.\n\nWith the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection.\n\nThis issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2.\n\nThe default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
      "cve": "CVE-2023-39325",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.20.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39325",
          "value": "CVE-2023-39325",
          "url": "https://scout.docker.com/v/CVE-2023-39325?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39325?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ]
    },
    {
      "id": "7b631505cc0c4cc57d9ace4f6c04925787cf16a14f8352ddd29a2bc782b2f719",
      "category": "container_scanning",
      "message": "CVE-2023-39325 on stdlib@1.18.9",
      "description": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing.\n\nWith the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection.\n\nThis issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2.\n\nThe default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
      "cve": "CVE-2023-39325",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.20.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-39325",
          "value": "CVE-2023-39325",
          "url": "https://scout.docker.com/v/CVE-2023-39325?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-39325?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ]
    },
    {
      "id": "b74da389a00bf75adb50d6d054ed931b9273a31cd2d9f3de6928b20d3971e4d7",
      "category": "container_scanning",
      "message": "CVE-2023-44487 on stdlib@1.20.6",
      "description": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing.\n\nWith the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection.\n\nThis issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2.\n\nThe default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
      "cve": "CVE-2023-44487",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.20.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-44487",
          "value": "CVE-2023-44487",
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ]
    },
    {
      "id": "8cd30ea156830bcc2cfc094f65880a96a91f26a4f3e5ce3517436b96adb0dd28",
      "category": "container_scanning",
      "message": "CVE-2023-44487 on ubuntu/nghttp2@1.40.0-1ubuntu0.1",
      "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
      "cve": "CVE-2023-44487",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/nghttp2@1.40.0-1ubuntu0.1 to 1.40.0-1ubuntu0.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/nghttp2@1.40.0-1ubuntu0.1?os_distro=focal&os_name=ubuntu&os_version=20.04"
          },
          "version": "1.40.0-1ubuntu0.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-44487",
          "value": "CVE-2023-44487",
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=ubuntu&n=nghttp2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.40.0-1ubuntu0.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=ubuntu&n=nghttp2&ns=ubuntu&t=deb&osn=ubuntu&osv=20.04&vr=%3C1.40.0-1ubuntu0.2"
        }
      ]
    },
    {
      "id": "7a05803f4629fdd568f7aca53c844f10db41a3a58b0b8467045c845d18f9f9a3",
      "category": "container_scanning",
      "message": "CVE-2023-44487 on stdlib@1.16.12",
      "description": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing.\n\nWith the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection.\n\nThis issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2.\n\nThe default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
      "cve": "CVE-2023-44487",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.20.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-44487",
          "value": "CVE-2023-44487",
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ]
    },
    {
      "id": "af1f4be0bd903a737824618bb3a7e8753bbccb2e7504be12bd5427c710cc7701",
      "category": "container_scanning",
      "message": "CVE-2023-44487 on google.golang.org/grpc@1.40.0",
      "description": "An attacker can send HTTP/2 requests, cancel them, and send subsequent requests. This is valid by the HTTP/2 protocol, but would cause the gRPC-Go server to launch more concurrent method handlers than the configured maximum stream limit, grpc.MaxConcurrentStreams. This results in a denial of service due to resource consumption.",
      "cve": "CVE-2023-44487",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade google.golang.org/grpc@1.40.0 to 1.56.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/google.golang.org/grpc@1.40.0"
          },
          "version": "1.40.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-44487",
          "value": "CVE-2023-44487",
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=golang&n=grpc&ns=google.golang.org&t=golang&vr=%3C1.56.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=golang&n=grpc&ns=google.golang.org&t=golang&vr=%3C1.56.3"
        }
      ]
    },
    {
      "id": "e4287df33f08f6cc29b2bf7ade1c162af5ad133842952de2b1a7f80fbd7fda48",
      "category": "container_scanning",
      "message": "CVE-2023-44487 on stdlib@1.18.9",
      "description": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing.\n\nWith the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection.\n\nThis issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2.\n\nThe default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
      "cve": "CVE-2023-44487",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.20.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-44487",
          "value": "CVE-2023-44487",
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ]
    },
    {
      "id": "4b36131e36f1dd0cf328ff98492acdf63ccca9b27cc7ca34dc70f7222ac4dc83",
      "category": "container_scanning",
      "message": "CVE-2023-44487 on stdlib@1.16.10",
      "description": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing.\n\nWith the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection.\n\nThis issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2.\n\nThe default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
      "cve": "CVE-2023-44487",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.20.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-44487",
          "value": "CVE-2023-44487",
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=golang&n=stdlib&t=golang&vr=%3C1.20.10"
        }
      ]
    },
    {
      "id": "95e45dcab60c88e2ad53b2223aa041c194fdefe7b3ec61d6764840049b1d740f",
      "category": "container_scanning",
      "message": "CVE-2023-44487 on io.netty/netty-codec-http2@4.1.73.Final",
      "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
      "cve": "CVE-2023-44487",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-codec-http2@4.1.73.Final to 4.1.100.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-codec-http2@4.1.73.Final"
          },
          "version": "4.1.73.Final"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-44487",
          "value": "CVE-2023-44487",
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=gitlab&n=netty-codec-http2&ns=io.netty&t=maven&vr=%3C4.1.100"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=gitlab&n=netty-codec-http2&ns=io.netty&t=maven&vr=%3C4.1.100"
        }
      ]
    },
    {
      "id": "0d4d98dcbbcbccf478bb7deb2984d785f236d5d99183c270c6a63199f5857999",
      "category": "container_scanning",
      "message": "CVE-2023-45142 on github.com/prometheus/client_golang@1.11.0",
      "description": "The Prometheus client_golang HTTP server is vulnerable to a denial of service attack when handling requests with non-standard HTTP methods.\n\nIn order to be affected, an instrumented software must use any of the promhttp.InstrumentHandler* middleware except RequestsInFlight; not filter any specific methods (e.g GET) before middleware; pass a metric with a \"method\" label name to a middleware; and not have any firewall/LB/proxy that filters away requests with unknown \"method\".",
      "cve": "CVE-2023-45142",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/prometheus/client_golang@1.11.0 to 1.11.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/prometheus/client_golang@1.11.0"
          },
          "version": "1.11.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45142",
          "value": "CVE-2023-45142",
          "url": "https://scout.docker.com/v/CVE-2023-45142?s=golang&n=client_golang&ns=github.com%2Fprometheus&t=golang&vr=%3C1.11.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45142?s=golang&n=client_golang&ns=github.com%2Fprometheus&t=golang&vr=%3C1.11.1"
        }
      ]
    },
    {
      "id": "afd6d536bf06cafcd5123d12bd5492ebd17e1be182acbb6315f916a5fcf44c7f",
      "category": "container_scanning",
      "message": "CVE-2023-45283 on stdlib@1.16.10",
      "description": "The filepath package does not recognize paths with a \\??\\ prefix as special.\n\nOn Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x.\n\nBefore fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b.\n\nSimilarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b.\n\nIn addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name.\n\nUPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
      "cve": "CVE-2023-45283",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.20.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45283",
          "value": "CVE-2023-45283",
          "url": "https://scout.docker.com/v/CVE-2023-45283?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45283?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ]
    },
    {
      "id": "5e7e4913edc2636e5a5a948a4137faaaab398e53b6d941205379cb12dd4fb616",
      "category": "container_scanning",
      "message": "CVE-2023-45283 on stdlib@1.20.6",
      "description": "The filepath package does not recognize paths with a \\??\\ prefix as special.\n\nOn Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x.\n\nBefore fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b.\n\nSimilarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b.\n\nIn addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name.\n\nUPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
      "cve": "CVE-2023-45283",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.20.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45283",
          "value": "CVE-2023-45283",
          "url": "https://scout.docker.com/v/CVE-2023-45283?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45283?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ]
    },
    {
      "id": "ce63835aa6952caf51cc88cf01956768986fa8b25793b32b4dde9e8dc49284f4",
      "category": "container_scanning",
      "message": "CVE-2023-45283 on stdlib@1.18.9",
      "description": "The filepath package does not recognize paths with a \\??\\ prefix as special.\n\nOn Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x.\n\nBefore fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b.\n\nSimilarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b.\n\nIn addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name.\n\nUPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
      "cve": "CVE-2023-45283",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.20.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45283",
          "value": "CVE-2023-45283",
          "url": "https://scout.docker.com/v/CVE-2023-45283?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45283?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ]
    },
    {
      "id": "73e8460f5ea9f67e7b2187842449f469966c8aa69b9b6fab72a1077036fa5800",
      "category": "container_scanning",
      "message": "CVE-2023-45283 on stdlib@1.16.12",
      "description": "The filepath package does not recognize paths with a \\??\\ prefix as special.\n\nOn Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x.\n\nBefore fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b.\n\nSimilarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b.\n\nIn addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name.\n\nUPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
      "cve": "CVE-2023-45283",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.20.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45283",
          "value": "CVE-2023-45283",
          "url": "https://scout.docker.com/v/CVE-2023-45283?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45283?s=golang&n=stdlib&t=golang&vr=%3C1.20.11"
        }
      ]
    },
    {
      "id": "4986e9cf226ce68656ece61dfe008d70b78a54c633e32a2117654586871d80be",
      "category": "container_scanning",
      "message": "CVE-2023-45287 on stdlib@1.16.12",
      "description": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits.\n\nIn Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
      "cve": "CVE-2023-45287",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.20.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45287",
          "value": "CVE-2023-45287",
          "url": "https://scout.docker.com/v/CVE-2023-45287?s=golang&n=stdlib&t=golang&vr=%3C1.20.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45287?s=golang&n=stdlib&t=golang&vr=%3C1.20.0"
        }
      ]
    },
    {
      "id": "c6719c554f301a7ab1349dae1f5fc2c5e389fd3e43b210abca9dd264d3d4590e",
      "category": "container_scanning",
      "message": "CVE-2023-45287 on stdlib@1.16.10",
      "description": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits.\n\nIn Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
      "cve": "CVE-2023-45287",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.20.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45287",
          "value": "CVE-2023-45287",
          "url": "https://scout.docker.com/v/CVE-2023-45287?s=golang&n=stdlib&t=golang&vr=%3C1.20.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45287?s=golang&n=stdlib&t=golang&vr=%3C1.20.0"
        }
      ]
    },
    {
      "id": "09b0924d0f501e1f0509b48ab131266791defda411ee68f49dac4b2584a7796a",
      "category": "container_scanning",
      "message": "CVE-2023-45287 on stdlib@1.18.9",
      "description": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits.\n\nIn Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
      "cve": "CVE-2023-45287",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.20.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45287",
          "value": "CVE-2023-45287",
          "url": "https://scout.docker.com/v/CVE-2023-45287?s=golang&n=stdlib&t=golang&vr=%3C1.20.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45287?s=golang&n=stdlib&t=golang&vr=%3C1.20.0"
        }
      ]
    },
    {
      "id": "157e7e8b9d4b180833c0420d15b00c5bb5d5b62ff083d896a25b3b31daa1961f",
      "category": "container_scanning",
      "message": "CVE-2023-45288 on stdlib@1.16.12",
      "description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames.\n\nMaintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed.\n\nThis permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send.\n\nThe fix sets a limit on the amount of excess header frames we will process before closing a connection.",
      "cve": "CVE-2023-45288",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.21.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45288",
          "value": "CVE-2023-45288",
          "url": "https://scout.docker.com/v/CVE-2023-45288?s=golang&n=stdlib&t=golang&vr=%3C1.21.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45288?s=golang&n=stdlib&t=golang&vr=%3C1.21.9"
        }
      ]
    },
    {
      "id": "b0927c7a10103ef00261fceb3ab295770623c657b80309ee0f0cc9fb25023b04",
      "category": "container_scanning",
      "message": "CVE-2023-45288 on stdlib@1.18.9",
      "description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames.\n\nMaintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed.\n\nThis permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send.\n\nThe fix sets a limit on the amount of excess header frames we will process before closing a connection.",
      "cve": "CVE-2023-45288",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.21.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45288",
          "value": "CVE-2023-45288",
          "url": "https://scout.docker.com/v/CVE-2023-45288?s=golang&n=stdlib&t=golang&vr=%3C1.21.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45288?s=golang&n=stdlib&t=golang&vr=%3C1.21.9"
        }
      ]
    },
    {
      "id": "93d17889941b6a05cbdebb56d56a42cf14586e0efcc4f288e871059634cb5b22",
      "category": "container_scanning",
      "message": "CVE-2023-45288 on stdlib@1.20.6",
      "description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames.\n\nMaintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed.\n\nThis permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send.\n\nThe fix sets a limit on the amount of excess header frames we will process before closing a connection.",
      "cve": "CVE-2023-45288",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.21.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45288",
          "value": "CVE-2023-45288",
          "url": "https://scout.docker.com/v/CVE-2023-45288?s=golang&n=stdlib&t=golang&vr=%3C1.21.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45288?s=golang&n=stdlib&t=golang&vr=%3C1.21.9"
        }
      ]
    },
    {
      "id": "9374b3cbce079fd36ceb153262178e21bf2dfb0c8b9393f2ac5d9c24cd993fc3",
      "category": "container_scanning",
      "message": "CVE-2023-45288 on stdlib@1.16.10",
      "description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames.\n\nMaintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed.\n\nThis permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send.\n\nThe fix sets a limit on the amount of excess header frames we will process before closing a connection.",
      "cve": "CVE-2023-45288",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.21.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-45288",
          "value": "CVE-2023-45288",
          "url": "https://scout.docker.com/v/CVE-2023-45288?s=golang&n=stdlib&t=golang&vr=%3C1.21.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-45288?s=golang&n=stdlib&t=golang&vr=%3C1.21.9"
        }
      ]
    },
    {
      "id": "abd9491aca4c1b7a1f0696a7fc1822567332d0f28d553bb4e11531e6ebeba83f",
      "category": "container_scanning",
      "message": "CVE-2024-21634 on software.amazon.ion/ion-java@1.0.2",
      "description": "### Impact\n\nA potential denial-of-service issue exists in `ion-java` for applications that use `ion-java` to:\n\n* Deserialize Ion text encoded data, or\n* Deserialize Ion text or binary encoded data into the `IonValue` model and then invoke certain `IonValue` methods on that in-memory representation.\n\nAn actor could craft Ion data that, when loaded by the affected application and/or processed using the `IonValue` model, results in a `StackOverflowError` originating from the `ion-java` library.\n\nImpacted versions: <1.10.5\n\n### Patches\n\nThe patch is included in `ion-java` >= 1.10.5.\n\n### Workarounds\n\nDo not load data which originated from an untrusted source or that could have been tampered with. **Only load data you trust.**\n\n----\n\nIf you have any questions or comments about this advisory, we ask that you contact AWS/Amazon Security via our vulnerability reporting page [1] or directly via email to [aws-security@amazon.com](mailto:aws-security@amazon.com). Please do not create a public GitHub issue.\n\n[1] https://aws.amazon.com/security/vulnerability-reporting",
      "cve": "CVE-2024-21634",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/software.amazon.ion/ion-java@1.0.2"
          },
          "version": "1.0.2"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-21634",
          "value": "CVE-2024-21634",
          "url": "https://scout.docker.com/v/CVE-2024-21634?s=github&n=ion-java&ns=software.amazon.ion&t=maven&vr=%3C1.10.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-21634?s=github&n=ion-java&ns=software.amazon.ion&t=maven&vr=%3C1.10.5"
        }
      ]
    },
    {
      "id": "6a6257f3ad1b4319f066207be0e852f5a802687a6bbd2972dbbbfdad7f95009e",
      "category": "container_scanning",
      "message": "CVE-2024-21907 on Newtonsoft.Json@7.0.1.18622",
      "description": "Newtonsoft.Json prior to version 13.0.1 is vulnerable to Insecure Defaults due to improper handling of expressions with high nesting level that lead to StackOverFlow exception or high CPU and RAM usage. Exploiting this vulnerability results in Denial Of Service (DoS). \n\nThe serialization and deserialization path have different properties regarding the issue.\n\nDeserializing methods (like `JsonConvert.DeserializeObject`) will process the input that results in burning the CPU, allocating memory, and consuming a thread of execution. Quite high nesting level (>10kk, or 9.5MB of `{a:{a:{...` input) is needed to achieve the latency over 10 seconds, depending on the hardware.\n\nSerializing methods (like `JsonConvert.Serialize` or `JObject.ToString`) will throw StackOverFlow exception with the nesting level of around 20k.\n\nTo mitigate the issue one either need to update Newtonsoft.Json to 13.0.1 or set `MaxDepth` parameter in the `JsonSerializerSettings`. This can be done globally with the following statement. After that the parsing of the nested input will fail fast with `Newtonsoft.Json.JsonReaderException`:\n\n``` \nJsonConvert.DefaultSettings = () => new JsonSerializerSettings { MaxDepth = 128 };\n```\n\nRepro code:\n```\n//Create a string representation of an highly nested object (JSON serialized)\nint nRep = 25000;\nstring json = string.Concat(Enumerable.Repeat(\"{a:\", nRep)) + \"1\" +\n string.Concat(Enumerable.Repeat(\"}\", nRep));\n\n//Parse this object (leads to high CPU/RAM consumption)\nvar parsedJson = JsonConvert.DeserializeObject(json);\n\n// Methods below all throw stack overflow with nRep around 20k and higher\n// string a = parsedJson.ToString();\n// string b = JsonConvert.SerializeObject(parsedJson);\n```\n\n### Additional affected product and version information\n**The original statement about the problem only affecting IIS applications is misleading.** Any application is affected, however the IIS has a behavior that stops restarting the instance after some time resulting in a harder-to-fix DoS.**",
      "cve": "CVE-2024-21907",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade Newtonsoft.Json@7.0.1.18622 to 13.0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Newtonsoft.Json@7.0.1.18622"
          },
          "version": "7.0.1.18622"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-21907",
          "value": "CVE-2024-21907",
          "url": "https://scout.docker.com/v/CVE-2024-21907?s=github&n=Newtonsoft.Json&t=nuget&vr=%3C13.0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-21907?s=github&n=Newtonsoft.Json&t=nuget&vr=%3C13.0.1"
        }
      ]
    },
    {
      "id": "0c41383c8fe460cd9ea47b1810f4432458669cd00d3be3307854f52690778bb3",
      "category": "container_scanning",
      "message": "CVE-2024-21907 on Newtonsoft.Json@9.0.1.19813",
      "description": "Newtonsoft.Json prior to version 13.0.1 is vulnerable to Insecure Defaults due to improper handling of expressions with high nesting level that lead to StackOverFlow exception or high CPU and RAM usage. Exploiting this vulnerability results in Denial Of Service (DoS). \n\nThe serialization and deserialization path have different properties regarding the issue.\n\nDeserializing methods (like `JsonConvert.DeserializeObject`) will process the input that results in burning the CPU, allocating memory, and consuming a thread of execution. Quite high nesting level (>10kk, or 9.5MB of `{a:{a:{...` input) is needed to achieve the latency over 10 seconds, depending on the hardware.\n\nSerializing methods (like `JsonConvert.Serialize` or `JObject.ToString`) will throw StackOverFlow exception with the nesting level of around 20k.\n\nTo mitigate the issue one either need to update Newtonsoft.Json to 13.0.1 or set `MaxDepth` parameter in the `JsonSerializerSettings`. This can be done globally with the following statement. After that the parsing of the nested input will fail fast with `Newtonsoft.Json.JsonReaderException`:\n\n``` \nJsonConvert.DefaultSettings = () => new JsonSerializerSettings { MaxDepth = 128 };\n```\n\nRepro code:\n```\n//Create a string representation of an highly nested object (JSON serialized)\nint nRep = 25000;\nstring json = string.Concat(Enumerable.Repeat(\"{a:\", nRep)) + \"1\" +\n string.Concat(Enumerable.Repeat(\"}\", nRep));\n\n//Parse this object (leads to high CPU/RAM consumption)\nvar parsedJson = JsonConvert.DeserializeObject(json);\n\n// Methods below all throw stack overflow with nRep around 20k and higher\n// string a = parsedJson.ToString();\n// string b = JsonConvert.SerializeObject(parsedJson);\n```\n\n### Additional affected product and version information\n**The original statement about the problem only affecting IIS applications is misleading.** Any application is affected, however the IIS has a behavior that stops restarting the instance after some time resulting in a harder-to-fix DoS.**",
      "cve": "CVE-2024-21907",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade Newtonsoft.Json@9.0.1.19813 to 13.0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Newtonsoft.Json@9.0.1.19813"
          },
          "version": "9.0.1.19813"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-21907",
          "value": "CVE-2024-21907",
          "url": "https://scout.docker.com/v/CVE-2024-21907?s=github&n=Newtonsoft.Json&t=nuget&vr=%3C13.0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-21907?s=github&n=Newtonsoft.Json&t=nuget&vr=%3C13.0.1"
        }
      ]
    },
    {
      "id": "5052b6bd747f8c5e53743c936f8fa96831eb2b431e2743a82d3e75bba2d548bb",
      "category": "container_scanning",
      "message": "CVE-2024-21907 on Newtonsoft.Json@9.0.1",
      "description": "Newtonsoft.Json prior to version 13.0.1 is vulnerable to Insecure Defaults due to improper handling of expressions with high nesting level that lead to StackOverFlow exception or high CPU and RAM usage. Exploiting this vulnerability results in Denial Of Service (DoS). \n\nThe serialization and deserialization path have different properties regarding the issue.\n\nDeserializing methods (like `JsonConvert.DeserializeObject`) will process the input that results in burning the CPU, allocating memory, and consuming a thread of execution. Quite high nesting level (>10kk, or 9.5MB of `{a:{a:{...` input) is needed to achieve the latency over 10 seconds, depending on the hardware.\n\nSerializing methods (like `JsonConvert.Serialize` or `JObject.ToString`) will throw StackOverFlow exception with the nesting level of around 20k.\n\nTo mitigate the issue one either need to update Newtonsoft.Json to 13.0.1 or set `MaxDepth` parameter in the `JsonSerializerSettings`. This can be done globally with the following statement. After that the parsing of the nested input will fail fast with `Newtonsoft.Json.JsonReaderException`:\n\n``` \nJsonConvert.DefaultSettings = () => new JsonSerializerSettings { MaxDepth = 128 };\n```\n\nRepro code:\n```\n//Create a string representation of an highly nested object (JSON serialized)\nint nRep = 25000;\nstring json = string.Concat(Enumerable.Repeat(\"{a:\", nRep)) + \"1\" +\n string.Concat(Enumerable.Repeat(\"}\", nRep));\n\n//Parse this object (leads to high CPU/RAM consumption)\nvar parsedJson = JsonConvert.DeserializeObject(json);\n\n// Methods below all throw stack overflow with nRep around 20k and higher\n// string a = parsedJson.ToString();\n// string b = JsonConvert.SerializeObject(parsedJson);\n```\n\n### Additional affected product and version information\n**The original statement about the problem only affecting IIS applications is misleading.** Any application is affected, however the IIS has a behavior that stops restarting the instance after some time resulting in a harder-to-fix DoS.**",
      "cve": "CVE-2024-21907",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade Newtonsoft.Json@9.0.1 to 13.0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Newtonsoft.Json@9.0.1"
          },
          "version": "9.0.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-21907",
          "value": "CVE-2024-21907",
          "url": "https://scout.docker.com/v/CVE-2024-21907?s=github&n=Newtonsoft.Json&t=nuget&vr=%3C13.0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-21907?s=github&n=Newtonsoft.Json&t=nuget&vr=%3C13.0.1"
        }
      ]
    },
    {
      "id": "34dfd6ba2c70793ff545eacab116766226835946bb6ce4e63f13b6e764829227",
      "category": "container_scanning",
      "message": "CVE-2024-24784 on stdlib@1.16.12",
      "description": "The ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers.",
      "cve": "CVE-2024-24784",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24784",
          "value": "CVE-2024-24784",
          "url": "https://scout.docker.com/v/CVE-2024-24784?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24784?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "96a3a384a4e33d7ac6213ecc68876faa913a1f4a995799439e0bd3bc0538961e",
      "category": "container_scanning",
      "message": "CVE-2024-24784 on stdlib@1.18.9",
      "description": "The ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers.",
      "cve": "CVE-2024-24784",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24784",
          "value": "CVE-2024-24784",
          "url": "https://scout.docker.com/v/CVE-2024-24784?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24784?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "dafd932bb336dd5aae7a8b9672a090eece86e632e9e68d3287262ab719b1a781",
      "category": "container_scanning",
      "message": "CVE-2024-24784 on stdlib@1.16.10",
      "description": "The ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers.",
      "cve": "CVE-2024-24784",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24784",
          "value": "CVE-2024-24784",
          "url": "https://scout.docker.com/v/CVE-2024-24784?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24784?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "f5e407836cf253427fc7cbb39ad7ad6ba74f070b5657efeda46062bf8bd11947",
      "category": "container_scanning",
      "message": "CVE-2024-24784 on stdlib@1.20.6",
      "description": "The ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers.",
      "cve": "CVE-2024-24784",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.21.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24784",
          "value": "CVE-2024-24784",
          "url": "https://scout.docker.com/v/CVE-2024-24784?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24784?s=golang&n=stdlib&t=golang&vr=%3C1.21.8"
        }
      ]
    },
    {
      "id": "fdb9626cbf0864bbce77c170d9e7c79aa698def15d4cfc4351ac2968dd821a2e",
      "category": "container_scanning",
      "message": "CVE-2024-24791 on stdlib@1.16.10",
      "description": "The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an \"Expect: 100-continue\" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail.\n\nAn attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending \"Expect: 100-continue\" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail.",
      "cve": "CVE-2024-24791",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.21.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24791",
          "value": "CVE-2024-24791",
          "url": "https://scout.docker.com/v/CVE-2024-24791?s=golang&n=stdlib&t=golang&vr=%3C1.21.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24791?s=golang&n=stdlib&t=golang&vr=%3C1.21.12"
        }
      ]
    },
    {
      "id": "d43419c544dcadbd1fde46a97fb17ce27f0944101bbea13184bc4c75b688157f",
      "category": "container_scanning",
      "message": "CVE-2024-24791 on stdlib@1.16.12",
      "description": "The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an \"Expect: 100-continue\" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail.\n\nAn attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending \"Expect: 100-continue\" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail.",
      "cve": "CVE-2024-24791",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.21.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24791",
          "value": "CVE-2024-24791",
          "url": "https://scout.docker.com/v/CVE-2024-24791?s=golang&n=stdlib&t=golang&vr=%3C1.21.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24791?s=golang&n=stdlib&t=golang&vr=%3C1.21.12"
        }
      ]
    },
    {
      "id": "697a75bd255b3dfdfb3490f7f12befb94d17a25ea4b5ce67764b7bc55819c8b5",
      "category": "container_scanning",
      "message": "CVE-2024-24791 on stdlib@1.18.9",
      "description": "The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an \"Expect: 100-continue\" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail.\n\nAn attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending \"Expect: 100-continue\" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail.",
      "cve": "CVE-2024-24791",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.21.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24791",
          "value": "CVE-2024-24791",
          "url": "https://scout.docker.com/v/CVE-2024-24791?s=golang&n=stdlib&t=golang&vr=%3C1.21.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24791?s=golang&n=stdlib&t=golang&vr=%3C1.21.12"
        }
      ]
    },
    {
      "id": "385e6f9c0f698a63b3f9295b4bbbaf35d7be48d26aacdb665d47a761212ce773",
      "category": "container_scanning",
      "message": "CVE-2024-24791 on stdlib@1.20.6",
      "description": "The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an \"Expect: 100-continue\" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail.\n\nAn attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending \"Expect: 100-continue\" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail.",
      "cve": "CVE-2024-24791",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.21.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24791",
          "value": "CVE-2024-24791",
          "url": "https://scout.docker.com/v/CVE-2024-24791?s=golang&n=stdlib&t=golang&vr=%3C1.21.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24791?s=golang&n=stdlib&t=golang&vr=%3C1.21.12"
        }
      ]
    },
    {
      "id": "7a7b1d25649d2cde45b29c87fdfd973ffb680a5b315379e0683d3cca15bfd442",
      "category": "container_scanning",
      "message": "CVE-2024-34156 on stdlib@1.16.12",
      "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
      "cve": "CVE-2024-34156",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34156",
          "value": "CVE-2024-34156",
          "url": "https://scout.docker.com/v/CVE-2024-34156?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34156?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "1b926ad8f5c884804207e94ce30ebe382898c43f50e4676f7ad62f5c1ecc552b",
      "category": "container_scanning",
      "message": "CVE-2024-34156 on stdlib@1.20.6",
      "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
      "cve": "CVE-2024-34156",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34156",
          "value": "CVE-2024-34156",
          "url": "https://scout.docker.com/v/CVE-2024-34156?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34156?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "3c49650b4bee49dfa37130f949fe644581991e4ddbb2d6638d29487c9796e862",
      "category": "container_scanning",
      "message": "CVE-2024-34156 on stdlib@1.18.9",
      "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
      "cve": "CVE-2024-34156",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34156",
          "value": "CVE-2024-34156",
          "url": "https://scout.docker.com/v/CVE-2024-34156?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34156?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "e93a9bb76fd004e58f02f95459da4abb98d3f6f9ca573292ec01ac8c6daabea2",
      "category": "container_scanning",
      "message": "CVE-2024-34156 on stdlib@1.16.10",
      "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
      "cve": "CVE-2024-34156",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34156",
          "value": "CVE-2024-34156",
          "url": "https://scout.docker.com/v/CVE-2024-34156?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34156?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "8b3fa6b96a450765ed23b1e5e36f26b1fe7c768e3068e038a2dd70756b9f6b78",
      "category": "container_scanning",
      "message": "CVE-2024-34158 on stdlib@1.20.6",
      "description": "Calling Parse on a \"// +build\" build tag line with deeply nested expressions can cause a panic due to stack exhaustion.",
      "cve": "CVE-2024-34158",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34158",
          "value": "CVE-2024-34158",
          "url": "https://scout.docker.com/v/CVE-2024-34158?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34158?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "6d63e0cf5af860c36d78de439b9ac06a277aee7408729c80edfe9053deddc906",
      "category": "container_scanning",
      "message": "CVE-2024-34158 on stdlib@1.18.9",
      "description": "Calling Parse on a \"// +build\" build tag line with deeply nested expressions can cause a panic due to stack exhaustion.",
      "cve": "CVE-2024-34158",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34158",
          "value": "CVE-2024-34158",
          "url": "https://scout.docker.com/v/CVE-2024-34158?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34158?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "412453d92331f92af394496983701f5a8d31000576f408590aad186d0530207e",
      "category": "container_scanning",
      "message": "CVE-2024-34158 on stdlib@1.16.10",
      "description": "Calling Parse on a \"// +build\" build tag line with deeply nested expressions can cause a panic due to stack exhaustion.",
      "cve": "CVE-2024-34158",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34158",
          "value": "CVE-2024-34158",
          "url": "https://scout.docker.com/v/CVE-2024-34158?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34158?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "d1b4d350d29c2e67505fb950cfd468d1022812c99a92eccbf14d3f26387a21fb",
      "category": "container_scanning",
      "message": "CVE-2024-34158 on stdlib@1.16.12",
      "description": "Calling Parse on a \"// +build\" build tag line with deeply nested expressions can cause a panic due to stack exhaustion.",
      "cve": "CVE-2024-34158",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.22.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34158",
          "value": "CVE-2024-34158",
          "url": "https://scout.docker.com/v/CVE-2024-34158?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34158?s=golang&n=stdlib&t=golang&vr=%3C1.22.7"
        }
      ]
    },
    {
      "id": "d1ebf72aa28778a6c4da8e677ff77325ab18ef516dc65f5237f82696f3d1185a",
      "category": "container_scanning",
      "message": "GHSA-m425-mq94-257g on google.golang.org/grpc@1.40.0",
      "description": "### Impact\nIn affected releases of gRPC-Go, it is possible for an attacker to send HTTP/2 requests, cancel them, and send subsequent requests, which is valid by the HTTP/2 protocol, but would cause the gRPC-Go server to launch more concurrent method handlers than the configured maximum stream limit.\n\n### Patches\nThis vulnerability was addressed by #6703 and has been included in patch releases: 1.56.3, 1.57.1, 1.58.3.  It is also included in the latest release, 1.59.0.\n\nAlong with applying the patch, users should also ensure they are using the `grpc.MaxConcurrentStreams` server option to apply a limit to the server's resources used for any single connection.\n\n### Workarounds\nNone.\n\n### References\n#6703\n",
      "cve": "GHSA-m425-mq94-257g",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade google.golang.org/grpc@1.40.0 to 1.56.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/google.golang.org/grpc@1.40.0"
          },
          "version": "1.40.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-m425-mq94-257g",
          "value": "GHSA-m425-mq94-257g",
          "url": "https://scout.docker.com/v/GHSA-m425-mq94-257g?s=github&n=grpc&ns=google.golang.org&t=golang&vr=%3C1.56.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-m425-mq94-257g?s=github&n=grpc&ns=google.golang.org&t=golang&vr=%3C1.56.3"
        }
      ]
    },
    {
      "id": "c817d5b2e6b0c904d95330eccdff6a7572a93c50aac8cf184d9fb80ff4e6db4c",
      "category": "container_scanning",
      "message": "GHSA-xpw8-rcwv-8f8p on io.netty/netty-codec-http2@4.1.73.Final",
      "description": "A client might overload the server by issue frequent RST frames. This can cause a massive amount of load on the remote system and so cause a DDOS attack. \n\n### Impact\nThis is a DDOS attack, any http2 server is affected and so you should update as soon as possible.\n\n### Patches\nThis is patched in version 4.1.100.Final.\n\n### Workarounds\nA user can limit the amount of RST frames that are accepted per connection over a timeframe manually using either an own `Http2FrameListener` implementation or an `ChannelInboundHandler` implementation (depending which http2 API is used).\n\n### References\n- https://www.cve.org/CVERecord?id=CVE-2023-44487\n- https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/\n- https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/",
      "cve": "GHSA-xpw8-rcwv-8f8p",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-codec-http2@4.1.73.Final to 4.1.100.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-codec-http2@4.1.73.Final"
          },
          "version": "4.1.73.Final"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-xpw8-rcwv-8f8p",
          "value": "GHSA-xpw8-rcwv-8f8p",
          "url": "https://scout.docker.com/v/GHSA-xpw8-rcwv-8f8p?s=github&n=netty-codec-http2&ns=io.netty&t=maven&vr=%3C4.1.100.Final"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-xpw8-rcwv-8f8p?s=github&n=netty-codec-http2&ns=io.netty&t=maven&vr=%3C4.1.100.Final"
        }
      ]
    },
    {
      "id": "e84c7666c25ee032e7313ae218c84b0f564ca0f4a822c13a1a9e029618a065e8",
      "category": "container_scanning",
      "message": "CVE-2023-36049 on System.Net.Requests@6.0.21.52210",
      "description": "# Microsoft Security Advisory CVE-2023-36049: .NET Elevation of Privilege Vulnerability\n\n## <a name=\"executive-summary\"></a>Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0 RC2. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\n\nAn elevation of privilege vulnerability exists in .NET where untrusted URIs provided to System.Net.WebRequest.Create can be used to inject arbitrary commands to backend FTP servers.\n\n\n## Announcement\n\nAnnouncement for this issue can be found at  https://github.com/dotnet/announcements/issues/287\n\n### <a name=\"mitigation-factors\"></a>Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n## <a name=\"affected-software\"></a>Affected software\n\n* Any .NET 6.0 application running on .NET 6.0.24 or earlier.\n* Any .NET 7.0 application running on .NET 7.0.13 or earlier.\n* Any .NET 8.0 application running on .NET 8.0 RC2.\n\n## Advisory FAQ\n\n### <a name=\"how-affected\"></a>How do I know if I am affected?\n\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\n\n### <a name=\"how-fix\"></a>How do I fix the issue?\n\n* To fix the issue please install the latest version of .NET 8.0 or .NET 7.0 or .NET 6.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n* If you are using one of the affected packages, please update to the patched version listed above.\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET Core SDK (reflecting any global.json):\n\n Version:   6.0.200\n Commit:    8473146e7d\n\nRuntime Environment:\n\n OS Name:     Windows\n OS Version:  10.0.18363\n OS Platform: Windows\n RID:         win10-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\n\nHost (useful for support):\n\n  Version: 6.0.5\n  Commit:  8473146e7d\n\n.NET Core SDKs installed:\n\n  6.0.200 [C:\\Program Files\\dotnet\\sdk]\n\n.NET Core runtimes installed:\n\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nTo install additional .NET Core runtimes or SDKs:\n  https://aka.ms/dotnet-download\n```\n\n* If you're using .NET 8.0, you should download and install .NET 8.0.0  Runtime  or .NET 8.0.100 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\n* If you're using .NET 7.0, you should download and install Runtime 7.0.14 or SDK 7.0.114 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n* If you're using .NET 6.0, you should download and install Runtime 6.0.25 or SDK 6.0.317 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n.NET 6.0 and .NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### External Links\n\n[CVE-2023-36049]( https://www.cve.org/CVERecord?id=CVE-2023-36049)\n\n### Revisions\n\nV1.0 (November 14, 2023): Advisory published.\n\n_Version 1.0_\n\n_Last Updated 2023-11-14_",
      "cve": "CVE-2023-36049",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade System.Net.Requests@6.0.21.52210 to 6.0.25",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/System.Net.Requests@6.0.21.52210"
          },
          "version": "6.0.21.52210"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-36049",
          "value": "CVE-2023-36049",
          "url": "https://scout.docker.com/v/CVE-2023-36049?s=github&n=System.Net.Requests&t=nuget&vr=%3E%3D6.0.0%2C%3C%3D6.0.24"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-36049?s=github&n=System.Net.Requests&t=nuget&vr=%3E%3D6.0.0%2C%3C%3D6.0.24"
        }
      ]
    },
    {
      "id": "26777822117c70184666bd0d9425fbc519dd1a40106e8974c9db93e8f1334607",
      "category": "container_scanning",
      "message": "CVE-2022-30580 on stdlib@1.16.10",
      "description": "On Windows, executing Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset will unintentionally trigger execution of any binaries in the working directory named either \"..com\" or \"..exe\".",
      "cve": "CVE-2022-30580",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.17.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30580",
          "value": "CVE-2022-30580",
          "url": "https://scout.docker.com/v/CVE-2022-30580?s=golang&n=stdlib&t=golang&vr=%3C1.17.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30580?s=golang&n=stdlib&t=golang&vr=%3C1.17.11"
        }
      ]
    },
    {
      "id": "9a01a8d9c560d47d5cd141a4b57f7c18e5db361df9b7c3f533601893ac7ad77e",
      "category": "container_scanning",
      "message": "CVE-2022-30580 on stdlib@1.16.12",
      "description": "On Windows, executing Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset will unintentionally trigger execution of any binaries in the working directory named either \"..com\" or \"..exe\".",
      "cve": "CVE-2022-30580",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.17.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-30580",
          "value": "CVE-2022-30580",
          "url": "https://scout.docker.com/v/CVE-2022-30580?s=golang&n=stdlib&t=golang&vr=%3C1.17.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-30580?s=golang&n=stdlib&t=golang&vr=%3C1.17.11"
        }
      ]
    },
    {
      "id": "73308df152a1bcff8787efbdd2420a58590d5f9401e05d6ab6f7229c770c6b16",
      "category": "container_scanning",
      "message": "CVE-2022-41032 on NuGet.Protocol@6.0.0",
      "description": "## Description\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0.0-rc, .NET 6.0, .NET Core 3.1, and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 7.0.0-rc.1, .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol) where a malicious actor could cause a user to execute arbitrary code.\n\n## Affected software\n\n### NuGet & NuGet Packages\n\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.3.0 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.2.1 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.0.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.11.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.9.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.7.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 4.9.5 version or earlier.\n\n### .NET SDK(s)\n\n- Any .NET 6.0 application running on .NET 6.0.9 or earlier.\n- Any .NET 3.1 application running on .NET Core 3.1.29 or earlier.\n\n## Patches\n\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\n\n- If you're using NuGet.exe 6.3.0 or lower, you should download and install 6.3.1 from https://dist.nuget.org/win-x86-commandline/v6.3.1/nuget.exe .\n\n- If you're using NuGet.exe 6.2.1 or lower, you should download and install 6.2.2 from https://dist.nuget.org/win-x86-commandline/v6.2.2/nuget.exe .\n\n- If you're using NuGet.exe 6.0.2 or lower, you should download and install 6.0.3 from https://dist.nuget.org/win-x86-commandline/v6.0.3/nuget.exe .\n\n- If you're using NuGet.exe 5.11.2 or lower, you should download and install 5.11.3 from https://dist.nuget.org/win-x86-commandline/v5.11.3/nuget.exe .\n\n- If you're using NuGet.exe 5.9.2 or lower, you should download and install 5.9.3 from https://dist.nuget.org/win-x86-commandline/v5.9.3/nuget.exe .\n\n- If you're using NuGet.exe 5.7.2 or lower, you should download and install 5.7.3 from https://dist.nuget.org/win-x86-commandline/v5.7.3/nuget.exe .\n\n- If you're using NuGet.exe 4.9.5 or lower, you should download and install 4.9.6 from https://dist.nuget.org/win-x86-commandline/v4.9.6/nuget.exe .\n\n- If you're using .NET Core 6.0, you should download and install Runtime 6.0.10 or SDK 6.0.110 (for Visual Studio 2022 v17.0) or SDK 6.0.402 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n- If you're using .NET Core 3.1, you should download and install Runtime 3.1.30 or SDK 3.1.424 (for Visual Studio 2019 v16.9 or Visual Studio 2019 v16.11 or Visual Studio 2022 v17.0 or Visual Studio 2022 v17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\n\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\n## Other details\n\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/65\n\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2022-41032",
      "cve": "CVE-2022-41032",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Protocol@6.0.0 to 6.0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Protocol@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41032",
          "value": "CVE-2022-41032",
          "url": "https://scout.docker.com/v/CVE-2022-41032?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41032?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.3"
        }
      ]
    },
    {
      "id": "b0c4fd6e8d497611eba2f66a8d293f42f255201644b349bed0f2d1e562a10a95",
      "category": "container_scanning",
      "message": "CVE-2022-41032 on NuGet.Protocol@4.9.4.5839",
      "description": "## Description\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0.0-rc, .NET 6.0, .NET Core 3.1, and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 7.0.0-rc.1, .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol) where a malicious actor could cause a user to execute arbitrary code.\n\n## Affected software\n\n### NuGet & NuGet Packages\n\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.3.0 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.2.1 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.0.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.11.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.9.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.7.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 4.9.5 version or earlier.\n\n### .NET SDK(s)\n\n- Any .NET 6.0 application running on .NET 6.0.9 or earlier.\n- Any .NET 3.1 application running on .NET Core 3.1.29 or earlier.\n\n## Patches\n\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\n\n- If you're using NuGet.exe 6.3.0 or lower, you should download and install 6.3.1 from https://dist.nuget.org/win-x86-commandline/v6.3.1/nuget.exe .\n\n- If you're using NuGet.exe 6.2.1 or lower, you should download and install 6.2.2 from https://dist.nuget.org/win-x86-commandline/v6.2.2/nuget.exe .\n\n- If you're using NuGet.exe 6.0.2 or lower, you should download and install 6.0.3 from https://dist.nuget.org/win-x86-commandline/v6.0.3/nuget.exe .\n\n- If you're using NuGet.exe 5.11.2 or lower, you should download and install 5.11.3 from https://dist.nuget.org/win-x86-commandline/v5.11.3/nuget.exe .\n\n- If you're using NuGet.exe 5.9.2 or lower, you should download and install 5.9.3 from https://dist.nuget.org/win-x86-commandline/v5.9.3/nuget.exe .\n\n- If you're using NuGet.exe 5.7.2 or lower, you should download and install 5.7.3 from https://dist.nuget.org/win-x86-commandline/v5.7.3/nuget.exe .\n\n- If you're using NuGet.exe 4.9.5 or lower, you should download and install 4.9.6 from https://dist.nuget.org/win-x86-commandline/v4.9.6/nuget.exe .\n\n- If you're using .NET Core 6.0, you should download and install Runtime 6.0.10 or SDK 6.0.110 (for Visual Studio 2022 v17.0) or SDK 6.0.402 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n- If you're using .NET Core 3.1, you should download and install Runtime 3.1.30 or SDK 3.1.424 (for Visual Studio 2019 v16.9 or Visual Studio 2019 v16.11 or Visual Studio 2022 v17.0 or Visual Studio 2022 v17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\n\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\n## Other details\n\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/65\n\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2022-41032",
      "cve": "CVE-2022-41032",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Protocol@4.9.4.5839 to 4.9.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Protocol@4.9.4.5839"
          },
          "version": "4.9.4.5839"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41032",
          "value": "CVE-2022-41032",
          "url": "https://scout.docker.com/v/CVE-2022-41032?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D4.6.0%2C%3C4.9.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41032?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D4.6.0%2C%3C4.9.6"
        }
      ]
    },
    {
      "id": "a96d8a9fa4cc54efcbc54dbdde93606c3f2a0384faab84a1a2cdd848a00a60a0",
      "category": "container_scanning",
      "message": "CVE-2022-41032 on NuGet.Protocol@6.0.0.278",
      "description": "## Description\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0.0-rc, .NET 6.0, .NET Core 3.1, and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 7.0.0-rc.1, .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol) where a malicious actor could cause a user to execute arbitrary code.\n\n## Affected software\n\n### NuGet & NuGet Packages\n\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.3.0 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.2.1 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.0.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.11.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.9.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.7.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 4.9.5 version or earlier.\n\n### .NET SDK(s)\n\n- Any .NET 6.0 application running on .NET 6.0.9 or earlier.\n- Any .NET 3.1 application running on .NET Core 3.1.29 or earlier.\n\n## Patches\n\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\n\n- If you're using NuGet.exe 6.3.0 or lower, you should download and install 6.3.1 from https://dist.nuget.org/win-x86-commandline/v6.3.1/nuget.exe .\n\n- If you're using NuGet.exe 6.2.1 or lower, you should download and install 6.2.2 from https://dist.nuget.org/win-x86-commandline/v6.2.2/nuget.exe .\n\n- If you're using NuGet.exe 6.0.2 or lower, you should download and install 6.0.3 from https://dist.nuget.org/win-x86-commandline/v6.0.3/nuget.exe .\n\n- If you're using NuGet.exe 5.11.2 or lower, you should download and install 5.11.3 from https://dist.nuget.org/win-x86-commandline/v5.11.3/nuget.exe .\n\n- If you're using NuGet.exe 5.9.2 or lower, you should download and install 5.9.3 from https://dist.nuget.org/win-x86-commandline/v5.9.3/nuget.exe .\n\n- If you're using NuGet.exe 5.7.2 or lower, you should download and install 5.7.3 from https://dist.nuget.org/win-x86-commandline/v5.7.3/nuget.exe .\n\n- If you're using NuGet.exe 4.9.5 or lower, you should download and install 4.9.6 from https://dist.nuget.org/win-x86-commandline/v4.9.6/nuget.exe .\n\n- If you're using .NET Core 6.0, you should download and install Runtime 6.0.10 or SDK 6.0.110 (for Visual Studio 2022 v17.0) or SDK 6.0.402 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n- If you're using .NET Core 3.1, you should download and install Runtime 3.1.30 or SDK 3.1.424 (for Visual Studio 2019 v16.9 or Visual Studio 2019 v16.11 or Visual Studio 2022 v17.0 or Visual Studio 2022 v17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\n\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\n## Other details\n\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/65\n\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2022-41032",
      "cve": "CVE-2022-41032",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Protocol@6.0.0.278 to 6.0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Protocol@6.0.0.278"
          },
          "version": "6.0.0.278"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41032",
          "value": "CVE-2022-41032",
          "url": "https://scout.docker.com/v/CVE-2022-41032?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41032?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.3"
        }
      ]
    },
    {
      "id": "87dd86ffd371792e8184a5a0327d469803271f29e3cf18f11d39fd156d19ad8d",
      "category": "container_scanning",
      "message": "CVE-2022-41032 on NuGet.Commands@6.0.0",
      "description": "## Description\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0.0-rc, .NET 6.0, .NET Core 3.1, and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 7.0.0-rc.1, .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol) where a malicious actor could cause a user to execute arbitrary code.\n\n## Affected software\n\n### NuGet & NuGet Packages\n\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.3.0 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.2.1 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.0.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.11.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.9.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.7.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 4.9.5 version or earlier.\n\n### .NET SDK(s)\n\n- Any .NET 6.0 application running on .NET 6.0.9 or earlier.\n- Any .NET 3.1 application running on .NET Core 3.1.29 or earlier.\n\n## Patches\n\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\n\n- If you're using NuGet.exe 6.3.0 or lower, you should download and install 6.3.1 from https://dist.nuget.org/win-x86-commandline/v6.3.1/nuget.exe .\n\n- If you're using NuGet.exe 6.2.1 or lower, you should download and install 6.2.2 from https://dist.nuget.org/win-x86-commandline/v6.2.2/nuget.exe .\n\n- If you're using NuGet.exe 6.0.2 or lower, you should download and install 6.0.3 from https://dist.nuget.org/win-x86-commandline/v6.0.3/nuget.exe .\n\n- If you're using NuGet.exe 5.11.2 or lower, you should download and install 5.11.3 from https://dist.nuget.org/win-x86-commandline/v5.11.3/nuget.exe .\n\n- If you're using NuGet.exe 5.9.2 or lower, you should download and install 5.9.3 from https://dist.nuget.org/win-x86-commandline/v5.9.3/nuget.exe .\n\n- If you're using NuGet.exe 5.7.2 or lower, you should download and install 5.7.3 from https://dist.nuget.org/win-x86-commandline/v5.7.3/nuget.exe .\n\n- If you're using NuGet.exe 4.9.5 or lower, you should download and install 4.9.6 from https://dist.nuget.org/win-x86-commandline/v4.9.6/nuget.exe .\n\n- If you're using .NET Core 6.0, you should download and install Runtime 6.0.10 or SDK 6.0.110 (for Visual Studio 2022 v17.0) or SDK 6.0.402 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n- If you're using .NET Core 3.1, you should download and install Runtime 3.1.30 or SDK 3.1.424 (for Visual Studio 2019 v16.9 or Visual Studio 2019 v16.11 or Visual Studio 2022 v17.0 or Visual Studio 2022 v17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\n\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\n## Other details\n\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/65\n\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2022-41032",
      "cve": "CVE-2022-41032",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Commands@6.0.0 to 6.0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Commands@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41032",
          "value": "CVE-2022-41032",
          "url": "https://scout.docker.com/v/CVE-2022-41032?s=github&n=NuGet.Commands&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41032?s=github&n=NuGet.Commands&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.3"
        }
      ]
    },
    {
      "id": "cd059a1618249ef05e4f43daba5271905fd98a19550fcbf7c2cb01396fce4747",
      "category": "container_scanning",
      "message": "CVE-2022-41032 on NuGet.Protocol@4.9.4",
      "description": "## Description\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0.0-rc, .NET 6.0, .NET Core 3.1, and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 7.0.0-rc.1, .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol) where a malicious actor could cause a user to execute arbitrary code.\n\n## Affected software\n\n### NuGet & NuGet Packages\n\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.3.0 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.2.1 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.0.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.11.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.9.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.7.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 4.9.5 version or earlier.\n\n### .NET SDK(s)\n\n- Any .NET 6.0 application running on .NET 6.0.9 or earlier.\n- Any .NET 3.1 application running on .NET Core 3.1.29 or earlier.\n\n## Patches\n\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\n\n- If you're using NuGet.exe 6.3.0 or lower, you should download and install 6.3.1 from https://dist.nuget.org/win-x86-commandline/v6.3.1/nuget.exe .\n\n- If you're using NuGet.exe 6.2.1 or lower, you should download and install 6.2.2 from https://dist.nuget.org/win-x86-commandline/v6.2.2/nuget.exe .\n\n- If you're using NuGet.exe 6.0.2 or lower, you should download and install 6.0.3 from https://dist.nuget.org/win-x86-commandline/v6.0.3/nuget.exe .\n\n- If you're using NuGet.exe 5.11.2 or lower, you should download and install 5.11.3 from https://dist.nuget.org/win-x86-commandline/v5.11.3/nuget.exe .\n\n- If you're using NuGet.exe 5.9.2 or lower, you should download and install 5.9.3 from https://dist.nuget.org/win-x86-commandline/v5.9.3/nuget.exe .\n\n- If you're using NuGet.exe 5.7.2 or lower, you should download and install 5.7.3 from https://dist.nuget.org/win-x86-commandline/v5.7.3/nuget.exe .\n\n- If you're using NuGet.exe 4.9.5 or lower, you should download and install 4.9.6 from https://dist.nuget.org/win-x86-commandline/v4.9.6/nuget.exe .\n\n- If you're using .NET Core 6.0, you should download and install Runtime 6.0.10 or SDK 6.0.110 (for Visual Studio 2022 v17.0) or SDK 6.0.402 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n- If you're using .NET Core 3.1, you should download and install Runtime 3.1.30 or SDK 3.1.424 (for Visual Studio 2019 v16.9 or Visual Studio 2019 v16.11 or Visual Studio 2022 v17.0 or Visual Studio 2022 v17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\n\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\n## Other details\n\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/65\n\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2022-41032",
      "cve": "CVE-2022-41032",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Protocol@4.9.4 to 4.9.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Protocol@4.9.4"
          },
          "version": "4.9.4"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41032",
          "value": "CVE-2022-41032",
          "url": "https://scout.docker.com/v/CVE-2022-41032?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D4.6.0%2C%3C4.9.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41032?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D4.6.0%2C%3C4.9.6"
        }
      ]
    },
    {
      "id": "11800de9d499d4b2be9b6afb536083eb253d6a14fbe273cb6ab07199d74c8669",
      "category": "container_scanning",
      "message": "CVE-2022-41032 on NuGet.Protocol@5.2.0",
      "description": "## Description\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0.0-rc, .NET 6.0, .NET Core 3.1, and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol). This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET 7.0.0-rc.1, .NET 6.0, .NET Core 3.1, and NuGet clients (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol) where a malicious actor could cause a user to execute arbitrary code.\n\n## Affected software\n\n### NuGet & NuGet Packages\n\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.3.0 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.2.1 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 6.0.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.11.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.9.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 5.7.2 version or earlier.\n- Any NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol 4.9.5 version or earlier.\n\n### .NET SDK(s)\n\n- Any .NET 6.0 application running on .NET 6.0.9 or earlier.\n- Any .NET 3.1 application running on .NET Core 3.1.29 or earlier.\n\n## Patches\n\nTo fix the issue, please install the latest version of .NET 6.0 or .NET Core 3.1 and NuGet (NuGet.exe, NuGet.Commands, NuGet.CommandLine, NuGet.Protocol versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs.\n\n- If you're using NuGet.exe 6.3.0 or lower, you should download and install 6.3.1 from https://dist.nuget.org/win-x86-commandline/v6.3.1/nuget.exe .\n\n- If you're using NuGet.exe 6.2.1 or lower, you should download and install 6.2.2 from https://dist.nuget.org/win-x86-commandline/v6.2.2/nuget.exe .\n\n- If you're using NuGet.exe 6.0.2 or lower, you should download and install 6.0.3 from https://dist.nuget.org/win-x86-commandline/v6.0.3/nuget.exe .\n\n- If you're using NuGet.exe 5.11.2 or lower, you should download and install 5.11.3 from https://dist.nuget.org/win-x86-commandline/v5.11.3/nuget.exe .\n\n- If you're using NuGet.exe 5.9.2 or lower, you should download and install 5.9.3 from https://dist.nuget.org/win-x86-commandline/v5.9.3/nuget.exe .\n\n- If you're using NuGet.exe 5.7.2 or lower, you should download and install 5.7.3 from https://dist.nuget.org/win-x86-commandline/v5.7.3/nuget.exe .\n\n- If you're using NuGet.exe 4.9.5 or lower, you should download and install 4.9.6 from https://dist.nuget.org/win-x86-commandline/v4.9.6/nuget.exe .\n\n- If you're using .NET Core 6.0, you should download and install Runtime 6.0.10 or SDK 6.0.110 (for Visual Studio 2022 v17.0) or SDK 6.0.402 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n- If you're using .NET Core 3.1, you should download and install Runtime 3.1.30 or SDK 3.1.424 (for Visual Studio 2019 v16.9 or Visual Studio 2019 v16.11 or Visual Studio 2022 v17.0 or Visual Studio 2022 v17.1) from https://dotnet.microsoft.com/download/dotnet-core/3.1.\n\n.NET 6.0 and .NET Core 3.1 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\n## Other details\n\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/65\n\nMSRC details for this can be found at https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2022-41032",
      "cve": "CVE-2022-41032",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Protocol@5.2.0 to 5.7.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Protocol@5.2.0"
          },
          "version": "5.2.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41032",
          "value": "CVE-2022-41032",
          "url": "https://scout.docker.com/v/CVE-2022-41032?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D5.0.0%2C%3C5.7.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41032?s=github&n=NuGet.Protocol&t=nuget&vr=%3E%3D5.0.0%2C%3C5.7.3"
        }
      ]
    },
    {
      "id": "391bea869196c95b0e6b5988f698b5f5ff4df9b7f9bd8d717984b784c8ca9eb6",
      "category": "container_scanning",
      "message": "CVE-2023-29403 on stdlib@1.18.9",
      "description": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors.\n\nIf a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
      "cve": "CVE-2023-29403",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.19.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29403",
          "value": "CVE-2023-29403",
          "url": "https://scout.docker.com/v/CVE-2023-29403?s=golang&n=stdlib&t=golang&vr=%3C1.19.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29403?s=golang&n=stdlib&t=golang&vr=%3C1.19.10"
        }
      ]
    },
    {
      "id": "aabe7201d6b492bf63dfcdeaf221462e9c53084b5c6b159d4bc96a9e760d7f08",
      "category": "container_scanning",
      "message": "CVE-2023-29403 on stdlib@1.16.12",
      "description": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors.\n\nIf a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
      "cve": "CVE-2023-29403",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.19.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29403",
          "value": "CVE-2023-29403",
          "url": "https://scout.docker.com/v/CVE-2023-29403?s=golang&n=stdlib&t=golang&vr=%3C1.19.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29403?s=golang&n=stdlib&t=golang&vr=%3C1.19.10"
        }
      ]
    },
    {
      "id": "52f9a43172d10e920f6a6f6a9180c966357015295603f5af4a0d0494dcfb9e8d",
      "category": "container_scanning",
      "message": "CVE-2023-29403 on stdlib@1.16.10",
      "description": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors.\n\nIf a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
      "cve": "CVE-2023-29403",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.19.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-29403",
          "value": "CVE-2023-29403",
          "url": "https://scout.docker.com/v/CVE-2023-29403?s=golang&n=stdlib&t=golang&vr=%3C1.19.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-29403?s=golang&n=stdlib&t=golang&vr=%3C1.19.10"
        }
      ]
    },
    {
      "id": "bdfe57217ff5ce5c84849184e5c0d684ee6ff2c6c2312180c82956f9a7efd611",
      "category": "container_scanning",
      "message": "CVE-2022-31159 on com.amazonaws/aws-java-sdk-s3@1.12.199",
      "description": "### Overview\n\nA partial-path traversal issue exists within the `downloadDirectory` method in the AWS S3 TransferManager component of the AWS SDK for Java v1. Applications using the SDK control the `destinationDirectory` argument, but S3 object keys are determined by the application that uploaded the objects. The `downloadDirectory` method allows the caller to pass a filesystem object in the object key but contained an issue in the validation logic for the key name. A knowledgeable actor could bypass the validation logic by including a UNIX double-dot in the bucket key. Under certain conditions, this could permit them to retrieve a directory from their S3 bucket that is one level up in the filesystem from their working directory. \n\nThis issue’s scope is limited to directories whose name prefix matches the destinationDirectory. E.g. for destination directory`/tmp/foo`, the actor can cause a download to `/tmp/foo-bar`, but not `/tmp/bar`. \n\nVersions of the AWS Java SDK for S3 v1 before and including v1.12.260 are affected by this issue. \n\n### Impact\n\nIf `com.amazonaws.services.s3.transfer.TransferManager::downloadDirectory` is used to download an untrusted buckets contents, the contents of that bucket can be written outside of the intended destination directory.\n\n#### Root Cause\n\nThe `com.amazonaws.services.s3.transfer.TransferManager::downloadDirectory` contains a partial-path traversal vulnerability.\n\nThis is due to the guard logic in `leavesRoot` containing an insufficient protection against partial-path traversal.\n\nhttps://github.com/aws/aws-sdk-java/blob/5be0807af763b9fbf6b0a153c76dd305e407f035/aws-java-sdk-s3/src/main/java/com/amazonaws/services/s3/transfer/TransferManager.java#L1513-L1519\n\nThe application controls the `localBaseDirectory` argument, but the `key` comes from the AWS bucket entry (ie. can be attacker controlled). The above bit of logic can be bypassed with the following payloads:\n\n```java\n// The following will return 'false', although the attacker value will \"leave\" the `/usr/foo` directory\nleavesRoot(new File(\"/usr/foo\"), \"/../foo-bar/bar\")\n```\n\nThis guard is used here which should guard against path traversal, however `leavesRoot` is an insufficient guard:\n\nhttps://github.com/aws/aws-sdk-java/blob/ae88c8aa4b195047b94c154897475f85642d7eb3/aws-java-sdk-s3/src/main/java/com/amazonaws/services/s3/transfer/TransferManager.java#L1420-L1423\n\n#### True Root cause\n\n If the result of `parent.getCanonicalPath()` is not slash terminated it allows for partial path traversal.\n\n> Consider `\"/usr/outnot\".startsWith(\"/usr/out\")`. The check is bypassed although `outnot` is not under the `out` directory.\nThe terminating slash may be removed in various places. On Linux `println(new File(\"/var/\"))` returns `/var`, but `println(new File(\"/var\", \"/\"))` - `/var/`, however `println(new File(\"/var\", \"/\").getCanonicalPath())` - `/var`.\n \\- [@JarLob (Jaroslav Lobačevski)](https://github.com/JarLob)\n\n### Patches\n\nUpgrade to the AWS SDK for Java >= 1.12.261, if you are on a version < 1.12.261.\n\n### Workarounds\n\nWhen calling `com.amazonaws.services.s3.transfer.TransferManager::downloadDirectory` pass a `KeyFilter` that forbids `S3ObjectSummary` objects that `getKey` method return a string containing the substring `..` .\n\n### References\n\nSimilar vulnerabilities:\n - ESAPI (The OWASP Enterprise Security API) - https://nvd.nist.gov/vuln/detail/CVE-2022-23457\n\n### For more information\n\nIf you have any questions or comments about this advisory, please contact [AWS's Security team](mailto:aws-security@amazon.com).\n",
      "cve": "CVE-2022-31159",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.amazonaws/aws-java-sdk-s3@1.12.199 to 1.12.261",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.amazonaws/aws-java-sdk-s3@1.12.199"
          },
          "version": "1.12.199"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-31159",
          "value": "CVE-2022-31159",
          "url": "https://scout.docker.com/v/CVE-2022-31159?s=github&n=aws-java-sdk-s3&ns=com.amazonaws&t=maven&vr=%3C1.12.261"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-31159?s=github&n=aws-java-sdk-s3&ns=com.amazonaws&t=maven&vr=%3C1.12.261"
        }
      ]
    },
    {
      "id": "cc20781dd5b24b2faec93a1b6ca27514bd77d3270e94a95ed13cfb81f7a5be8e",
      "category": "container_scanning",
      "message": "CVE-2021-43816 on github.com/containerd/containerd@1.5.5",
      "description": "### Impact\n\nContainers launched through containerd’s CRI implementation on Linux systems which use the SELinux security module and containerd versions since v1.5.0 can cause arbitrary files and directories on the host to be relabeled to match the container process label through the use of specially-configured bind mounts in a hostPath volume. This relabeling elevates permissions for the container, granting full read/write access over the affected files and directories. Kubernetes and crictl can both be configured to use containerd’s CRI implementation.\n\nIf you are not using containerd’s CRI implementation (through one of the mechanisms described above), you are not affected by this issue.\n\n### Patches\n\nThis bug has been fixed in containerd 1.5.9.  Because file labels persist independently of containerd, users should both update to these versions as soon as they are released and validate that all files on their host are correctly labeled.\n\n### Workarounds\n\nEnsure that no sensitive files or directories are used as a hostPath volume source location.  Policy enforcement mechanisms such a Kubernetes Pod Security Policy [AllowedHostPaths](https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems) may be specified to limit the files and directories that can be bind-mounted to containers.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [containerd](https://github.com/containerd/containerd/issues/new/choose)\n* Email us at [security@containerd.io](mailto:security@containerd.io)",
      "cve": "CVE-2021-43816",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/containerd/containerd@1.5.5 to 1.5.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/containerd/containerd@1.5.5"
          },
          "version": "1.5.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-43816",
          "value": "CVE-2021-43816",
          "url": "https://scout.docker.com/v/CVE-2021-43816?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.5.0%2C%3C1.5.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-43816?s=github&n=containerd&ns=github.com%2Fcontainerd&t=golang&vr=%3E%3D1.5.0%2C%3C1.5.9"
        }
      ]
    },
    {
      "id": "9dda778f3c328e3295ae52494eeaf57a6b45c490b865d3095025b6b80dac1c2c",
      "category": "container_scanning",
      "message": "CVE-2025-26646 on Microsoft.Build.Tasks.Core@17.0.0",
      "description": "# Microsoft Security Advisory CVE-2025-26646: .NET Spoofing Vulnerability\n\n## <a name=\"executive-summary\"></a>Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 9.0.xxx and .NET 8.0.xxx SDK. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\n\nA vulnerability exists in .NET SDK or MSBuild applications where external control of file name or path allows an unauthorized attacked to perform spoofing over a network.\n\n## Announcement\n\nAnnouncement for this issue can be found at https://github.com/dotnet/announcements/issues/356\n\n### <a name=\"mitigation-factors\"></a>Mitigation factors\n\nProjects which do not utilize the [DownloadFile](https://learn.microsoft.com/visualstudio/msbuild/downloadfile-task)  build task are not susceptible to this vulnerability.\n\n## <a name=\"affected-software\"></a>Affected software\n\n* Any installation of .NET 9.0.105 SDK, .NET 9.0.203 SDK or earlier.\n* Any installation of .NET 8.0.115 SDK, .NET 8.0.311 or .NET 8.0.312 SDK, .NET 8.0.408 or .NET 8.0.409 SDK or earlier.\n\n## <a name=\"affected-packages\"></a>Affected Packages\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected packages versions listed below\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.Build.Tasks.Core](https://www.nuget.org/packages/Microsoft.Build.Tasks.Core) |>= 15.8.166, <=15.9.20<br />>=16.0.461, <= 16.11.0<br />>= 17.0.0, <= 17.8.3<br/>>= 17.9.5, <= 17.10.4<br />17.11.4<br />17.12.6 <br />17.13.9 | 15.9.30<br />16.11.6<br />17.8.29<br/>17.10.29<br />17.12.36<br />17.13.26 <br />17.14.8\n\n## Advisory FAQ\n\n### <a name=\"how-affected\"></a>How do I know if I am affected?\n\nIf you have a .NET SDK with a version listed, or an affected package listed in [affected software](#affected-packages) or [affected packages](#affected-software), you're exposed to the vulnerability.\n\n### <a name=\"how-fix\"></a>How do I fix the issue?\n\n1. To fix the issue please install the latest version of .NET 9.0 SDK or .NET 8.0 SDK. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n2. If your application references the vulnerable package, update the package reference to the patched version.\n\n* You can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET SDK:\n Version:           9.0.100\n Commit:            59db016f11\n Workload version:  9.0.100-manifests.3068a692\n MSBuild version:   17.12.7+5b8665660\n\nRuntime Environment:\n OS Name:     Mac OS X\n OS Version:  15.2\n OS Platform: Darwin\n RID:         osx-arm64\n Base Path:   /usr/local/share/dotnet/sdk/9.0.100/\n\n.NET workloads installed:\nThere are no installed workloads to display.\nConfigured to use loose manifests when installing new manifests.\n\nHost:\n  Version:      9.0.0\n  Architecture: arm64\n  Commit:       9d5a6a9aa4\n\n.NET SDKs installed:\n  9.0.100 [/usr/local/share/dotnet/sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 9.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\n\nOther architectures found:\n  x64   [/usr/local/share/dotnet]\n    registered at [/etc/dotnet/install_location_x64]\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  Not found\n\nLearn more:\n  https://aka.ms/dotnet/info\n\nDownload .NET:\n  https://aka.ms/dotnet/download\n```\n\n* If you're using .NET 9.0, you should download and install the appropriate SDK: `.NET 9.0.300` for Visual Studio 2022 v17.14, `.NET 9.0.204` for v17.13, or `.NET 9.0.106` for v17.12. Download from https://dotnet.microsoft.com/download/dotnet-core/9.0.\n\n* If you're using .NET 8.0, you should download and install the appropriate SDK: `.NET 8.0.410` for Visual Studio 2022 v17.11, `.NET 8.0.313` for v17.10, or `.NET 8.0.116` for v17.8. Download from https://dotnet.microsoft.com/download/dotnet-core/8.0.\n\nOnce you have installed the updated SDK, restart your apps for the update to take effect.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 8.0 or .NET 9.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/aspnetcore. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.",
      "cve": "CVE-2025-26646",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade Microsoft.Build.Tasks.Core@17.0.0 to 17.8.29",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Microsoft.Build.Tasks.Core@17.0.0"
          },
          "version": "17.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-26646",
          "value": "CVE-2025-26646",
          "url": "https://scout.docker.com/v/CVE-2025-26646?s=github&n=Microsoft.Build.Tasks.Core&t=nuget&vr=%3E%3D17.0.0%2C%3C%3D17.8.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-26646?s=github&n=Microsoft.Build.Tasks.Core&t=nuget&vr=%3E%3D17.0.0%2C%3C%3D17.8.3"
        }
      ]
    },
    {
      "id": "82c0ce5d5c846b284f0d107e7c622ebcf3404c5efbab91408fe8375bb7f95e73",
      "category": "container_scanning",
      "message": "CVE-2023-24936 on Microsoft.NETCore.App.Runtime.linux-x64@6.0.0",
      "description": "# Microsoft Security Advisory CVE-2023-24936: .NET Elevation of Privilege Vulnerability\n\n## <a name=\"executive-summary\"></a>Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 7.0 and .NET 6.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exists in .NET when deserializing a DataSet or DataTable from XML which may result in elevation of privileges.\n\n## Announcement\n\nAnnouncement for this issue can be found at  https://github.com/dotnet/announcements/issues/259\n\n### <a name=\"mitigation-factors\"></a>Mitigation factors\n\nThe default configuration of DataSet and DataTable is not susceptible to this vulnerability. This vulnerability only exists if the app developer or machine admin extends the DataSet and DataTable default allow-list [as specified here](https://learn.microsoft.com/en-us/dotnet/framework/data/adonet/dataset-datatable-dataview/security-guidance) to contain specific types which trigger the vulnerability.\n\n## <a name=\"affected-software\"></a>Affected software\n\n* Any .NET 7.0 application running on .NET 7.0.5 or earlier.\n* Any .NET 6.0 application running on .NET 6.0.16 or earlier.\n\nIf your application uses the following package versions, ensure you update to the latest version of .NET.\n\n### <a name=\".NET 7\"></a>.NET 7\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.NetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm)               | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm64)           | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm)     | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm64) | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-x64)     | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-x64)               | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-arm64)               | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-x64)                   | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm)                   | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm64)               | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x64)                   | >= 7.0.0, < 7.0.5 | 7.0.7\n[Microsoft.NetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x86)                   | >= 7.0.0, < 7.0.5 | 7.0.7\n\n### <a name=\".NET 6\"></a>.NET 6\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.NetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm)               | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm64)           | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm)     | >= 6.0.1, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm64) | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-x64)     | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-x64)               | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-arm64)               | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-x64)                   | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm)                   | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm64)               | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x64)                   | >= 6.0.0, < 6.0.16 | 6.0.18\n[Microsoft.NetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x86)                   | >= 6.0.0, < 6.0.16 | 6.0.18\n\n## Advisory FAQ\n\n### <a name=\"how-affected\"></a>How do I know if I am affected?\n\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\n\n### <a name=\"how-fix\"></a>How do I fix the issue?\n\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n* If you are using one of the affected packages, please update to the patched version listed above.\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET Core SDK (reflecting any global.json):\n\n Version:   6.0.300\n Commit:    8473146e7d\n\nRuntime Environment:\n\n OS Name:     Windows\n OS Version:  10.0.18363\n OS Platform: Windows\n RID:         win10-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\n\nHost (useful for support):\n\n  Version: 6.0.5\n  Commit:  8473146e7d\n\n.NET Core SDKs installed:\n\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\n\n.NET Core runtimes installed:\n\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nTo install additional .NET Core runtimes or SDKs:\n  https://aka.ms/dotnet-download\n```\n\n* If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.106 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n* If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.312 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n.NET 6.0 and and .NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### External Links\n\n[CVE-2023-24936]( https://www.cve.org/CVERecord?id=2023-24936)\n\n### Revisions\n\nV1.0 (June 13, 2023): Advisory published.\n\n_Version 1.0_\n\n_Last Updated 2023-06-13_",
      "cve": "CVE-2023-24936",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade Microsoft.NETCore.App.Runtime.linux-x64@6.0.0 to 6.0.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Microsoft.NETCore.App.Runtime.linux-x64@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24936",
          "value": "CVE-2023-24936",
          "url": "https://scout.docker.com/v/CVE-2023-24936?s=github&n=Microsoft.NETCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C%3D6.0.16"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24936?s=github&n=Microsoft.NETCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C%3D6.0.16"
        }
      ]
    },
    {
      "id": "720a367a2dad4e8830fe0d65890de6db9a1cbe9f9b5d89d84ca41de54468afb2",
      "category": "container_scanning",
      "message": "CVE-2023-33170 on Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0",
      "description": "# Microsoft Security Advisory CVE-2023-33170: .NET Security Feature Bypass Vulnerability\n\n## Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.1 and above. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA vulnerability exist in ASP.NET  Core applications where account lockout maximum failed attempts may not be immediately updated, allowing an attacker to try more passwords.\n\n## Discussion\n\nDiscussion for this issue can be found at https://github.com/dotnet/aspnetcore/issues/49334\n\n### Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n## Affected software\n\n* Any ASP.NET 7.0 application running on .NET 7.0.8 or earlier.\n* Any ASP.NET 6.0 application running on .NET 6.0.19 or earlier.\n* Any ASP.NET Core 2.1 application consuming the package Microsoft.AspNetCore.Identity version 2.1.31 or earlier.\n\nIf your application uses the following package versions, ensure you update to the latest version of .NET.\n\n### ASP.NET Core 2.1\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[ Microsoft.AspNetCore.Identity](https://www.nuget.org/packages/Microsoft.AspNetCore.Identity/2.1.39)      | <=2.1.39 | 2.1.39\n\n### Microsoft.AspNet.Identity.Owin\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[ Microsoft.AspNet.Identity.Owin](https://www.nuget.org/packages/Microsoft.AspNet.Identity.Owin)    |  <= 2.2.3 | 2.2.4\n\n\n### ASP.NET 6.0\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               |  <= 6.0.19 | 6.0.20\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)           |  <= 6.0.19 | 6.0.20\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)     |  <= 6.0.19 | 6.0.20\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64) |  <= 6.0.19 | 6.0.20\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)     |  <= 6.0.19 | 6.0.20\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)               |  <= 6.0.19 | 6.0.20\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)               |  <= 6.0.19 | 6.0.20\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                   |  <= 6.0.19 | 6.0.20\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                   |  <= 6.0.19 | 6.0.20\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)               |  <= 6.0.19 | 6.0.20\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                   |  <= 6.0.19 | 6.0.20\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                   |  <= 6.0.19 | 6.0.20\n\n\n### ASP.NET 7.0\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               |  <= 7.0.9 | 7.0.9\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)           |  <= 7.0.9 | 7.0.9\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)     |  <= 7.0.9 | 7.0.9\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64) |  <= 7.0.9 | 7.0.9\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)     |  <= 7.0.9 | 7.0.9\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)               |  <= 7.0.9 | 7.0.9\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)               |  <= 7.0.9 | 7.0.9\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                   |  <= 7.0.9 | 7.0.9\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                   |  <= 7.0.9 | 7.0.9\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)               |  <= 7.0.9 | 7.0.9\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                   |  <= 7.0.9 | 7.0.9\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                   |  <= 7.0.9 | 7.0.9\n\n\n\n## Advisory FAQ\n\n### How do I know if I am affected?\n\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software), you're exposed to the vulnerability.\n\n### How do I fix the issue?\n\n* To fix the issue please install the latest version of .NET 6.0 or .NET 7.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n* If you are using one of the affected packages, please update to the patched version listed above.\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET Core SDK (reflecting any global.json):\n\n Version:   6.0.300\n Commit:    8473146e7d\n\nRuntime Environment:\n\n OS Name:     Windows\n OS Version:  10.0.18363\n OS Platform: Windows\n RID:         win10-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\n\nHost (useful for support):\n\n  Version: 6.0.5\n  Commit:  8473146e7d\n\n.NET Core SDKs installed:\n\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\n\n.NET Core runtimes installed:\n\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nTo install additional .NET Core runtimes or SDKs:\n  https://aka.ms/dotnet-download\n```\n\n* If you're using .NET 7.0, you should download and install Runtime 7.0.7 or SDK 7.0.106 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n* If you're using .NET 6.0, you should download and install Runtime 6.0.18 or SDK 6.0.312 (for Visual Studio 2022 v17.2) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n* If you're using ASP.NET Core 2.1 and consuming the Microsoft.AspNetCore.Identity package, update that package to version [2.1.39](https://www.nuget.org/packages/Microsoft.AspNetCore.Identity/2.1.39)\n\n.NET 6.0 and and .NET 7.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 6.0 or .NET 7.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### External Links\n\n[CVE-2023-33170]( https://www.cve.org/CVERecord?id=CVE-2023-33170)\n\n### Revisions\n\nV1.0 (July 11, 2023): Advisory published.\n\n_Version 1.0_\n\n_Last Updated 2023-07-11_",
      "cve": "CVE-2023-33170",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0 to 6.0.20",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-33170",
          "value": "CVE-2023-33170",
          "url": "https://scout.docker.com/v/CVE-2023-33170?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3C6.0.20"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-33170?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3C6.0.20"
        }
      ]
    },
    {
      "id": "8b34d992484733477fca90ceff92bec85970e75672fb06102103e4ee58ce538f",
      "category": "container_scanning",
      "message": "CVE-2022-42004 on com.fasterxml.jackson.core/jackson-databind@2.12.6.1",
      "description": "In FasterXML jackson-databind before 2.12.7.1 and in 2.13.x before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. This issue can only happen when the `UNWRAP_SINGLE_VALUE_ARRAYS` feature is explicitly enabled.",
      "cve": "CVE-2022-42004",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.fasterxml.jackson.core/jackson-databind@2.12.6.1 to 2.12.7.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.12.6.1"
          },
          "version": "2.12.6.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-42004",
          "value": "CVE-2022-42004",
          "url": "https://scout.docker.com/v/CVE-2022-42004?s=github&n=jackson-databind&ns=com.fasterxml.jackson.core&t=maven&vr=%3C2.12.7.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-42004?s=github&n=jackson-databind&ns=com.fasterxml.jackson.core&t=maven&vr=%3C2.12.7.1"
        }
      ]
    },
    {
      "id": "a25664ce9bf781820fd5bb769f8d33337f0fa49c8766bb9ff3df678e0e821b8e",
      "category": "container_scanning",
      "message": "CVE-2022-42004 on com.fasterxml.jackson.core/jackson-databind@2.10.5",
      "description": "In FasterXML jackson-databind before 2.12.7.1 and in 2.13.x before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. This issue can only happen when the `UNWRAP_SINGLE_VALUE_ARRAYS` feature is explicitly enabled.",
      "cve": "CVE-2022-42004",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.fasterxml.jackson.core/jackson-databind@2.10.5 to 2.12.7.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.10.5"
          },
          "version": "2.10.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-42004",
          "value": "CVE-2022-42004",
          "url": "https://scout.docker.com/v/CVE-2022-42004?s=github&n=jackson-databind&ns=com.fasterxml.jackson.core&t=maven&vr=%3C2.12.7.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-42004?s=github&n=jackson-databind&ns=com.fasterxml.jackson.core&t=maven&vr=%3C2.12.7.1"
        }
      ]
    },
    {
      "id": "c3dcf6b1466a790a20473a04e4c82b934c126c53b587e2921236d40386406b31",
      "category": "container_scanning",
      "message": "CVE-2024-41909 on org.apache.sshd/sshd-common@2.8.0",
      "description": "Like many other SSH implementations, Apache MINA SSHD suffered from the issue that is more widely known as CVE-2023-48795. An attacker that can intercept traffic between client and server could drop certain packets from the stream, potentially causing client and server to consequently end up with a connection for which \nsome security features have been downgraded or disabled, aka a Terrapin \nattack\n\nThe mitigations to prevent this type of attack were implemented in Apache MINA SSHD 2.12.0, both client and server side. Users are recommended to upgrade to at least this version. Note that both the client and the server implementation must have mitigations applied against this issue, otherwise the connection may still be affected.",
      "cve": "CVE-2024-41909",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.sshd/sshd-common@2.8.0 to 2.12.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.sshd/sshd-common@2.8.0"
          },
          "version": "2.8.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-41909",
          "value": "CVE-2024-41909",
          "url": "https://scout.docker.com/v/CVE-2024-41909?s=github&n=sshd-common&ns=org.apache.sshd&t=maven&vr=%3C2.12.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-41909?s=github&n=sshd-common&ns=org.apache.sshd&t=maven&vr=%3C2.12.0"
        }
      ]
    },
    {
      "id": "bca7f14a8d99f4e6b1c29cdf8ff84ded35391f6c8a0a0c28479722152d85c4a0",
      "category": "container_scanning",
      "message": "CVE-2025-55163 on io.netty/netty-codec-http2@4.1.73.Final",
      "description": "Below is a technical explanation of a newly discovered vulnerability in HTTP/2, which we refer to as “MadeYouReset.”\n\n### MadeYouReset Vulnerability Summary\nThe MadeYouReset DDoS vulnerability is a logical vulnerability in the HTTP/2 protocol, that uses malformed HTTP/2 control frames in order to break the max concurrent streams limit - which results in resource exhaustion and distributed denial of service.\n\n### Mechanism\nThe vulnerability uses malformed HTTP/2 control frames, or malformed flow, in order to make the server reset streams created by the client (using the RST_STREAM frame). \nThe vulnerability could be triggered by several primitives, defined by the RFC of HTTP/2 (RFC 9113). The Primitives are:\n1. WINDOW_UPDATE frame with an increment of 0 or an increment that makes the window exceed 2^31 - 1. (section 6.9 + 6.9.1)\n2. HEADERS or DATA frames sent on a half-closed (remote) stream (which was closed using the END_STREAM flag). (note that for some implementations it's possible a CONTINUATION frame to trigger that as well - but it's very rare). (Section 5.1)\n3. PRIORITY frame with a length other than 5. (section 6.3)\nFrom our experience, the primitives are likely to exist in the decreasing order listed above.\nNote that based on the implementation of the library, other primitives (which are not defined by the RFC) might exist - meaning scenarios in which RST_STREAM is not supposed to be sent, but in the implementation it does. On the other hand - some RFC-defined primitives might not work, even though they are defined by the RFC (as some implementations are not fully complying with RFC). For example, some implementations we’ve seen discard the PRIORITY frame - and thus does not return RST_STREAM, and some implementations send GO_AWAY when receiving a WINDOW_UPDATE frame with increment of 0.\n\nThe vulnerability takes advantage of a design flaw in the HTTP/2 protocol - While HTTP/2 has a limit on the number of concurrently active streams per connection (which is usually 100, and is set by the parameter SETTINGS_MAX_CONCURRENT_STREAMS), the number of active streams is not counted correctly - when a stream is reset, it is immediately considered not active, and thus unaccounted for in the active streams counter. \nWhile the protocol does not count those streams as active, the server’s backend logic still processes and handles the requests that were canceled.\n\nThus, the attacker can exploit this vulnerability to cause the server to handle an unbounded number of concurrent streams from a client on the same connection. The exploitation is very simple: the client issues a request in a stream, and then sends the control frame that causes the server to send a RST_STREAM.\n\n### Attack Flow\nFor example, a possible attack scenario can be: \n1. Attacker opens an HTTP/2 connection to the server.\n2. Attacker sends HEADERS frame with END_STREAM flag on a new stream X.  \n3. Attacker sends WINDOW_UPDATE for stream X with flow-control window of 0.\n4. The server receives the WINDOW_UPDATE and immediately sends RST_STREAM for stream X to the client (+ decreases the active streams counter by 1).\n\nThe attacker can repeat steps 2+3 as rapidly as it is capable, since the active streams counter never exceeds 1 and the attacker does not need to wait for the response from the server.\nThis leads to resource exhaustion and distributed denial of service vulnerabilities with an impact of: CPU overload and/or memory exhaustion (implementation dependent)\n\n### Comparison to Rapid Reset\nThe vulnerability takes advantage of a design flow in the HTTP/2 protocol that was also used in the Rapid Reset vulnerability (CVE-2023-44487) which was exploited as a zero-day in the wild in August 2023 to October 2023, against multiple services and vendors.\nThe Rapid Reset vulnerability uses RST_STREAM frames sent from the client, in order to create an unbounded amount of concurrent streams - it was given a CVSS score of 7.5.\nRapid Reset was mostly mitigated by limiting the number/rate of RST_STREAM sent from the client, which does not mitigate the MadeYouReset attack - since it triggers the server to send a RST_STREAM.\n\n### Suggested Mitigations for MadeYouReset\nA quick and easy mitigation will be to limit the number/rate of RST_STREAMs sent from the server.\nIt is also possible to limit the number/rate of control frames sent by the client (e.g. WINDOW_UPDATE and PRIORITY), and treat protocol flow errors as a connection error.\n\nAs mentioned in our previous message, this is a protocol-level vulnerability that affects multiple vendors and implementations. Given its broad impact, it is the shared responsibility of all parties involved to handle the disclosure process carefully and coordinate mitigations effectively.\n\n\nIf you have any questions, we will be happy to clarify or schedule a Zoom call.\n\nGal, Anat and Yaniv.",
      "cve": "CVE-2025-55163",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-codec-http2@4.1.73.Final to 4.1.124.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-codec-http2@4.1.73.Final"
          },
          "version": "4.1.73.Final"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-55163",
          "value": "CVE-2025-55163",
          "url": "https://scout.docker.com/v/CVE-2025-55163?s=github&n=netty-codec-http2&ns=io.netty&t=maven&vr=%3C%3D4.1.123.Final"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-55163?s=github&n=netty-codec-http2&ns=io.netty&t=maven&vr=%3C%3D4.1.123.Final"
        }
      ]
    },
    {
      "id": "7eee40b60f1a3d259a9efef9f954380c0b2ead2231b2b368a4e75e1306d9e626",
      "category": "container_scanning",
      "message": "CVE-2022-1471 on org.yaml/snakeyaml@1.26",
      "description": "### Summary\nSnakeYaml's `Constructor` class, which inherits from `SafeConstructor`, allows\nany type be deserialized given the following line:\n\nnew Yaml(new Constructor(TestDataClass.class)).load(yamlContent);\n\nTypes do not have to match the types of properties in the\ntarget class. A `ConstructorException` is thrown, but only after a malicious\npayload is deserialized.\n\n### Severity\nHigh, lack of type checks during deserialization allows remote code execution.\n\n### Proof of Concept\nExecute `bash run.sh`. The PoC uses Constructor to deserialize a payload\nfor RCE. RCE is demonstrated by using a payload which performs a http request to\nhttp://127.0.0.1:8000.\n\nExample output of successful run of proof of concept:\n\n```\n$ bash run.sh\n\n[+] Downloading snakeyaml if needed\n[+] Starting mock HTTP server on 127.0.0.1:8000 to demonstrate RCE\nnc: no process found\n[+] Compiling and running Proof of Concept, which a payload that sends a HTTP request to mock web server.\n[+] An exception is expected.\nException:\nCannot create property=payload for JavaBean=Main$TestDataClass@3cbbc1e0\n in 'string', line 1, column 1:\n    payload: !!javax.script.ScriptEn ... \n    ^\nCan not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n in 'string', line 1, column 10:\n    payload: !!javax.script.ScriptEngineManag ... \n             ^\n\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:291)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.construct(Constructor.java:172)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructYamlObject.construct(Constructor.java:332)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructObjectNoCheck(BaseConstructor.java:230)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructObject(BaseConstructor.java:220)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructDocument(BaseConstructor.java:174)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.getSingleData(BaseConstructor.java:158)\n\tat org.yaml.snakeyaml.Yaml.loadFromReader(Yaml.java:491)\n\tat org.yaml.snakeyaml.Yaml.load(Yaml.java:416)\n\tat Main.main(Main.java:37)\nCaused by: java.lang.IllegalArgumentException: Can not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n\tat java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167)\n\tat java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171)\n\tat java.base/jdk.internal.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:81)\n\tat java.base/java.lang.reflect.Field.set(Field.java:780)\n\tat org.yaml.snakeyaml.introspector.FieldProperty.set(FieldProperty.java:44)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:286)\n\t... 9 more\n[+] Dumping Received HTTP Request. Will not be empty if PoC worked\nGET /proof-of-concept HTTP/1.1\nUser-Agent: Java/11.0.14\nHost: localhost:8000\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\nConnection: keep-alive\n```\n\n### Further Analysis\nPotential mitigations include, leveraging SnakeYaml's SafeConstructor while parsing untrusted content.\n\nSee https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64581479 for discussion on the subject.\n\n### Timeline\n**Date reported**: 4/11/2022\n**Date fixed**:  [30/12/2022](https://bitbucket.org/snakeyaml/snakeyaml/pull-requests/44)\n**Date disclosed**: 10/13/2022",
      "cve": "CVE-2022-1471",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.yaml/snakeyaml@1.26 to 2.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.yaml/snakeyaml@1.26"
          },
          "version": "1.26"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-1471",
          "value": "CVE-2022-1471",
          "url": "https://scout.docker.com/v/CVE-2022-1471?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C%3D1.33"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-1471?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C%3D1.33"
        }
      ]
    },
    {
      "id": "e6a9844a2762c9a2d098d7fe08e756de6b69b15fda8a7fc62c97386cb9754afd",
      "category": "container_scanning",
      "message": "CVE-2022-1471 on org.yaml/snakeyaml@1.33",
      "description": "### Summary\nSnakeYaml's `Constructor` class, which inherits from `SafeConstructor`, allows\nany type be deserialized given the following line:\n\nnew Yaml(new Constructor(TestDataClass.class)).load(yamlContent);\n\nTypes do not have to match the types of properties in the\ntarget class. A `ConstructorException` is thrown, but only after a malicious\npayload is deserialized.\n\n### Severity\nHigh, lack of type checks during deserialization allows remote code execution.\n\n### Proof of Concept\nExecute `bash run.sh`. The PoC uses Constructor to deserialize a payload\nfor RCE. RCE is demonstrated by using a payload which performs a http request to\nhttp://127.0.0.1:8000.\n\nExample output of successful run of proof of concept:\n\n```\n$ bash run.sh\n\n[+] Downloading snakeyaml if needed\n[+] Starting mock HTTP server on 127.0.0.1:8000 to demonstrate RCE\nnc: no process found\n[+] Compiling and running Proof of Concept, which a payload that sends a HTTP request to mock web server.\n[+] An exception is expected.\nException:\nCannot create property=payload for JavaBean=Main$TestDataClass@3cbbc1e0\n in 'string', line 1, column 1:\n    payload: !!javax.script.ScriptEn ... \n    ^\nCan not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n in 'string', line 1, column 10:\n    payload: !!javax.script.ScriptEngineManag ... \n             ^\n\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:291)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.construct(Constructor.java:172)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructYamlObject.construct(Constructor.java:332)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructObjectNoCheck(BaseConstructor.java:230)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructObject(BaseConstructor.java:220)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructDocument(BaseConstructor.java:174)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.getSingleData(BaseConstructor.java:158)\n\tat org.yaml.snakeyaml.Yaml.loadFromReader(Yaml.java:491)\n\tat org.yaml.snakeyaml.Yaml.load(Yaml.java:416)\n\tat Main.main(Main.java:37)\nCaused by: java.lang.IllegalArgumentException: Can not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n\tat java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167)\n\tat java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171)\n\tat java.base/jdk.internal.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:81)\n\tat java.base/java.lang.reflect.Field.set(Field.java:780)\n\tat org.yaml.snakeyaml.introspector.FieldProperty.set(FieldProperty.java:44)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:286)\n\t... 9 more\n[+] Dumping Received HTTP Request. Will not be empty if PoC worked\nGET /proof-of-concept HTTP/1.1\nUser-Agent: Java/11.0.14\nHost: localhost:8000\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\nConnection: keep-alive\n```\n\n### Further Analysis\nPotential mitigations include, leveraging SnakeYaml's SafeConstructor while parsing untrusted content.\n\nSee https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64581479 for discussion on the subject.\n\n### Timeline\n**Date reported**: 4/11/2022\n**Date fixed**:  [30/12/2022](https://bitbucket.org/snakeyaml/snakeyaml/pull-requests/44)\n**Date disclosed**: 10/13/2022",
      "cve": "CVE-2022-1471",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.yaml/snakeyaml@1.33 to 2.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.yaml/snakeyaml@1.33"
          },
          "version": "1.33"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-1471",
          "value": "CVE-2022-1471",
          "url": "https://scout.docker.com/v/CVE-2022-1471?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C%3D1.33"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-1471?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C%3D1.33"
        }
      ]
    },
    {
      "id": "17b576c6acf0774d722e187bdf19f242b5be84a9b595454aa249a2c63b050edf",
      "category": "container_scanning",
      "message": "CVE-2024-21626 on github.com/opencontainers/runc@1.0.1",
      "description": "### Impact\n\nIn runc 1.1.11 and earlier, due to an internal file descriptor leak, an attacker could cause a newly-spawned container process (from `runc exec`) to have a working directory in the host filesystem namespace, allowing for a container escape by giving access to the host filesystem (\"attack 2\"). The same attack could be used by a malicious image to allow a container process to gain access to the host filesystem through `runc run` (\"attack 1\"). Variants of attacks 1 and 2 could be also be used to overwrite semi-arbitrary host binaries, allowing for complete container escapes (\"attack 3a\" and \"attack 3b\").\n\nStrictly speaking, while attack 3a is the most severe from a CVSS perspective, attacks 2 and 3b are arguably more dangerous in practice because they allow for a breakout from inside a container as opposed to requiring a user execute a malicious image. The reason attacks 1 and 3a are scored higher is because being able to socially engineer users is treated as a given for UI:R vectors, despite attacks 2 and 3b requiring far more minimal user interaction (just reasonable `runc exec` operations on a container the attacker has access to). In any case, all four attacks can lead to full control of the host system.\n\n#### Attack 1: `process.cwd` \"mis-configuration\"\n\nIn runc 1.1.11 and earlier, several file descriptors were inadvertently leaked internally within runc into `runc init`, including a handle to the host's `/sys/fs/cgroup` (this leak was added in v1.0.0-rc93). If the container was configured to have `process.cwd` set to `/proc/self/fd/7/` (the actual fd can change depending on file opening order in `runc`), the resulting pid1 process will have a working directory in the host mount namespace and thus the spawned process can access the entire host filesystem. This alone is not an exploit against runc, however a malicious image could make any innocuous-looking non-`/` path a symlink to `/proc/self/fd/7/` and thus trick a user into starting a container whose binary has access to the host filesystem.\n\nFurthermore, prior to runc 1.1.12, runc also did not verify that the final working directory was inside the container's mount namespace after calling `chdir(2)` (as we have already joined the container namespace, it was incorrectly assumed there would be no way to chdir outside the container after `pivot_root(2)`).\n\nThe CVSS score for this attack is CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N (8.2, high severity).\n\nNote that this attack requires a privileged user to be tricked into running a malicious container image. It should be noted that when using higher-level runtimes (such as Docker or Kubernetes), this exploit can be considered critical as it can be done remotely by anyone with the rights to start a container image (and can be exploited from within Dockerfiles using `ONBUILD` in the case of Docker).\n\n#### Attack 2: `runc exec` container breakout\n\n(This is a modification of attack 1, constructed to allow for a process inside a container to break out.)\n\nThe same fd leak and lack of verification of the working directory in attack 1 also apply to `runc exec`. If a malicious process inside the container knows that some administrative process will call `runc exec` with the `--cwd` argument and a given path, in most cases they can replace that path with a symlink to `/proc/self/fd/7/`. Once the container process has executed the container binary, `PR_SET_DUMPABLE` protections no longer apply and the attacker can open `/proc/$exec_pid/cwd` to get access to the host filesystem.\n\n`runc exec` defaults to a cwd of `/` (which cannot be replaced with a symlink), so this attack depends on the attacker getting a user (or some administrative process) to use `--cwd` and figuring out what path the target working directory is. Note that if the target working directory is a parent of the program binary being executed, the attacker might be unable to replace the path with a symlink (the `execve` will fail in most cases, unless the host filesystem layout specifically matches the container layout in specific ways and the attacker knows which binary the `runc exec` is executing).\n\nThe CVSS score for this attack is CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N (7.2, high severity).\n\n#### Attacks 3a and 3b: `process.args` host binary overwrite attack\n\n(These are modifications of attacks 1 and 2, constructed to overwrite a host binary by using `execve` to bring a magic-link reference into the container.)\n\nAttacks 1 and 2 can be adapted to overwrite a host binary by using a path like `/proc/self/fd/7/../../../bin/bash` as the `process.args` binary argument, causing a host binary to be executed by a container process. The `/proc/$pid/exe` handle can then be used to overwrite the host binary, as seen in CVE-2019-5736 (note that the same `#!` trick can be used to avoid detection as an attacker). As the overwritten binary could be something like `/bin/bash`, as soon as a privileged user executes the target binary on the host, the attacker can pivot to gain full access to the host.\n\nFor the purposes of CVSS scoring:\n\n* Attack 3a is attack 1 but adapted to overwrite a host binary, where a malicious image is set up to execute `/proc/self/fd/7/../../../bin/bash` and run a shell script that overwrites `/proc/self/exe`, overwriting the host copy of `/bin/bash`. The CVSS score for this attack is CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H (8.6, high severity).\n* Attack 3b is attack 2 but adapted to overwrite a host binary, where the malicious container process overwrites all of the possible `runc exec` target binaries inside the container (such as `/bin/bash`) such that a host target binary is executed and then the container process opens `/proc/$pid/exe` to get access to the host binary and overwrite it. The CVSS score for this attack is CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H (8.2, high severity).\n\nAs mentioned in attack 1, while 3b is scored lower it is more dangerous in practice as it doesn't require a user to run a malicious image.\n\n### Patches\nrunc 1.1.12 has been released, and includes patches for this issue. Note that there are four separate fixes applied:\n\n* Checking that the working directory is actually inside the container by checking whether `os.Getwd` returns `ENOENT` (Linux provides a way of detecting if cwd is outside the current namespace root). This explicitly blocks runc from executing a container process when inside a non-container path and thus eliminates attacks 1 and 2 even in the case of fd leaks.\n* Close all internal runc file descriptors in the final stage of `runc init`, right before `execve`. This ensures that internal file descriptors cannot be used as an argument to `execve` and thus eliminates attacks 3a and 3b, even in the case of fd leaks. This requires hooking into some Go runtime internals to make sure we don't close critical Go internal file descriptors.\n* Fixing the specific fd leaks that made these bug exploitable (mark `/sys/fs/cgroup` as `O_CLOEXEC` and backport a fix for some `*os.File` leaks).\n* In order to protect against future `runc init` file descriptor leaks, mark all non-stdio files as `O_CLOEXEC` before executing `runc init`.\n\n### Other Runtimes\n\nWe have discovered that several other container runtimes are either potentially vulnerable to similar attacks, or do not have sufficient protection against attacks of this nature. We recommend other container runtime authors look at [our patches](#Patches) and make sure they at least add a `getcwd() != ENOENT` check as well as consider whether `close_range(3, UINT_MAX, CLOSE_RANGE_CLOEXEC)` before executing their equivalent of `runc init` is appropriate.\n\n * crun 1.12 does not leak any useful file descriptors into the `runc init`-equivalent process (so this attack is _not exploitable_ as far as we can tell), but no care is taken to make sure all non-stdio files are `O_CLOEXEC` and there is no check after `chdir(2)` to ensure the working directory is inside the container. If a file descriptor happened to be leaked in the future, this could be exploitable. In addition, any file descriptors passed to `crun` are not closed until the container process is executed, meaning that easily-overlooked programming errors by users of `crun` can lead to these attacks becoming exploitable.\n * youki 0.3.1 does not leak any useful file descriptors into the `runc init`-equivalent process (so this attack is _not exploitable_ as far as we can tell) however this appears to be pure luck. `youki` does leak a directory file descriptor from the host mount namespace, but it just so happens that the directory is the rootfs of the container (which then gets `pivot_root`'d into and so ends up as a in-root path thanks to `chroot_fs_refs`). In addition, no care is taken to make sure all non-stdio files are `O_CLOEXEC` and there is no check after `chdir(2)` to ensure the working directory is inside the container. If a file descriptor happened to be leaked in the future, this could be exploitable. In addition, any file descriptors passed to `youki` are not closed until the container process is executed, meaning that easily-overlooked programming errors by users of `youki` can lead to these attacks becoming exploitable.\n * LXC 5.0.3 does not appear to leak any useful file descriptors, and they have comments noting the importance of not leaking file descriptors in `lxc-attach`. However, they don't seem to have any proactive protection against file descriptor leaks at the point of `chdir` such as using `close_range(...)` (they do have RAII-like `__do_fclose` closers but those don't necessarily stop all leaks in this context) nor do they have any check after `chdir(2)` to ensure the working directory is inside the container. Unfortunately it seems they cannot use `CLOSE_RANGE_CLOEXEC` because they don't need to re-exec themselves.\n\n### Workarounds\nFor attacks 1 and 2, only permit containers (and `runc exec`) to use a `process.cwd` of `/`. It is not possible for `/` to be replaced with a symlink (the path is resolved from within the container's mount namespace, and you cannot change the root of a mount namespace or an fs root to a symlink).\n\nFor attacks 1 and 3a, only permit users to run trusted images.\n\nFor attack 3b, there is no practical workaround other than never using `runc exec` because any binary you try to execute with `runc exec` could end up being a malicious binary target.\n\n### See Also\n* https://www.cve.org/CVERecord?id=CVE-2024-21626\n* https://github.com/opencontainers/runc/releases/tag/v1.1.12\n* The runc 1.1.12 merge commit https://github.com/opencontainers/runc/commit/a9833ff391a71b30069a6c3f816db113379a4346, which contains the following security patches:\n  * https://github.com/opencontainers/runc/commit/506552a88bd3455e80a9b3829568e94ec0160309\n  * https://github.com/opencontainers/runc/commit/0994249a5ec4e363bfcf9af58a87a722e9a3a31b\n  * https://github.com/opencontainers/runc/commit/fbe3eed1e568a376f371d2ced1b4ac16b7d7adde\n  * https://github.com/opencontainers/runc/commit/284ba3057e428f8d6c7afcc3b0ac752e525957df\n  * https://github.com/opencontainers/runc/commit/b6633f48a8c970433737b9be5bfe4f25d58a5aa7\n  * https://github.com/opencontainers/runc/commit/683ad2ff3b01fb142ece7a8b3829de17150cf688\n  * https://github.com/opencontainers/runc/commit/e9665f4d606b64bf9c4652ab2510da368bfbd951\n\n### Credits\n\nThanks to Rory McNamara from Snyk for discovering and disclosing the original vulnerability (attack 1) to Docker, @lifubang from acmcoder for discovering how to adapt the attack to overwrite host binaries (attack 3a), and Aleksa Sarai from SUSE for discovering how to adapt the attacks to work as container breakouts using `runc exec` (attacks 2 and 3b).",
      "cve": "CVE-2024-21626",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/opencontainers/runc@1.0.1 to 1.1.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/opencontainers/runc@1.0.1"
          },
          "version": "1.0.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-21626",
          "value": "CVE-2024-21626",
          "url": "https://scout.docker.com/v/CVE-2024-21626?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3E%3D1.0.0-rc93%2C%3C%3D1.1.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-21626?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3E%3D1.0.0-rc93%2C%3C%3D1.1.11"
        }
      ]
    },
    {
      "id": "adaddf04c0d0bfd09d17fcfc6053b86113b6f5b5c69606b2f53090c7a7f142df",
      "category": "container_scanning",
      "message": "CVE-2024-21626 on github.com/opencontainers/runc@1.1.3",
      "description": "### Impact\n\nIn runc 1.1.11 and earlier, due to an internal file descriptor leak, an attacker could cause a newly-spawned container process (from `runc exec`) to have a working directory in the host filesystem namespace, allowing for a container escape by giving access to the host filesystem (\"attack 2\"). The same attack could be used by a malicious image to allow a container process to gain access to the host filesystem through `runc run` (\"attack 1\"). Variants of attacks 1 and 2 could be also be used to overwrite semi-arbitrary host binaries, allowing for complete container escapes (\"attack 3a\" and \"attack 3b\").\n\nStrictly speaking, while attack 3a is the most severe from a CVSS perspective, attacks 2 and 3b are arguably more dangerous in practice because they allow for a breakout from inside a container as opposed to requiring a user execute a malicious image. The reason attacks 1 and 3a are scored higher is because being able to socially engineer users is treated as a given for UI:R vectors, despite attacks 2 and 3b requiring far more minimal user interaction (just reasonable `runc exec` operations on a container the attacker has access to). In any case, all four attacks can lead to full control of the host system.\n\n#### Attack 1: `process.cwd` \"mis-configuration\"\n\nIn runc 1.1.11 and earlier, several file descriptors were inadvertently leaked internally within runc into `runc init`, including a handle to the host's `/sys/fs/cgroup` (this leak was added in v1.0.0-rc93). If the container was configured to have `process.cwd` set to `/proc/self/fd/7/` (the actual fd can change depending on file opening order in `runc`), the resulting pid1 process will have a working directory in the host mount namespace and thus the spawned process can access the entire host filesystem. This alone is not an exploit against runc, however a malicious image could make any innocuous-looking non-`/` path a symlink to `/proc/self/fd/7/` and thus trick a user into starting a container whose binary has access to the host filesystem.\n\nFurthermore, prior to runc 1.1.12, runc also did not verify that the final working directory was inside the container's mount namespace after calling `chdir(2)` (as we have already joined the container namespace, it was incorrectly assumed there would be no way to chdir outside the container after `pivot_root(2)`).\n\nThe CVSS score for this attack is CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:N (8.2, high severity).\n\nNote that this attack requires a privileged user to be tricked into running a malicious container image. It should be noted that when using higher-level runtimes (such as Docker or Kubernetes), this exploit can be considered critical as it can be done remotely by anyone with the rights to start a container image (and can be exploited from within Dockerfiles using `ONBUILD` in the case of Docker).\n\n#### Attack 2: `runc exec` container breakout\n\n(This is a modification of attack 1, constructed to allow for a process inside a container to break out.)\n\nThe same fd leak and lack of verification of the working directory in attack 1 also apply to `runc exec`. If a malicious process inside the container knows that some administrative process will call `runc exec` with the `--cwd` argument and a given path, in most cases they can replace that path with a symlink to `/proc/self/fd/7/`. Once the container process has executed the container binary, `PR_SET_DUMPABLE` protections no longer apply and the attacker can open `/proc/$exec_pid/cwd` to get access to the host filesystem.\n\n`runc exec` defaults to a cwd of `/` (which cannot be replaced with a symlink), so this attack depends on the attacker getting a user (or some administrative process) to use `--cwd` and figuring out what path the target working directory is. Note that if the target working directory is a parent of the program binary being executed, the attacker might be unable to replace the path with a symlink (the `execve` will fail in most cases, unless the host filesystem layout specifically matches the container layout in specific ways and the attacker knows which binary the `runc exec` is executing).\n\nThe CVSS score for this attack is CVSS:3.1/AV:L/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:N (7.2, high severity).\n\n#### Attacks 3a and 3b: `process.args` host binary overwrite attack\n\n(These are modifications of attacks 1 and 2, constructed to overwrite a host binary by using `execve` to bring a magic-link reference into the container.)\n\nAttacks 1 and 2 can be adapted to overwrite a host binary by using a path like `/proc/self/fd/7/../../../bin/bash` as the `process.args` binary argument, causing a host binary to be executed by a container process. The `/proc/$pid/exe` handle can then be used to overwrite the host binary, as seen in CVE-2019-5736 (note that the same `#!` trick can be used to avoid detection as an attacker). As the overwritten binary could be something like `/bin/bash`, as soon as a privileged user executes the target binary on the host, the attacker can pivot to gain full access to the host.\n\nFor the purposes of CVSS scoring:\n\n* Attack 3a is attack 1 but adapted to overwrite a host binary, where a malicious image is set up to execute `/proc/self/fd/7/../../../bin/bash` and run a shell script that overwrites `/proc/self/exe`, overwriting the host copy of `/bin/bash`. The CVSS score for this attack is CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H (8.6, high severity).\n* Attack 3b is attack 2 but adapted to overwrite a host binary, where the malicious container process overwrites all of the possible `runc exec` target binaries inside the container (such as `/bin/bash`) such that a host target binary is executed and then the container process opens `/proc/$pid/exe` to get access to the host binary and overwrite it. The CVSS score for this attack is CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H (8.2, high severity).\n\nAs mentioned in attack 1, while 3b is scored lower it is more dangerous in practice as it doesn't require a user to run a malicious image.\n\n### Patches\nrunc 1.1.12 has been released, and includes patches for this issue. Note that there are four separate fixes applied:\n\n* Checking that the working directory is actually inside the container by checking whether `os.Getwd` returns `ENOENT` (Linux provides a way of detecting if cwd is outside the current namespace root). This explicitly blocks runc from executing a container process when inside a non-container path and thus eliminates attacks 1 and 2 even in the case of fd leaks.\n* Close all internal runc file descriptors in the final stage of `runc init`, right before `execve`. This ensures that internal file descriptors cannot be used as an argument to `execve` and thus eliminates attacks 3a and 3b, even in the case of fd leaks. This requires hooking into some Go runtime internals to make sure we don't close critical Go internal file descriptors.\n* Fixing the specific fd leaks that made these bug exploitable (mark `/sys/fs/cgroup` as `O_CLOEXEC` and backport a fix for some `*os.File` leaks).\n* In order to protect against future `runc init` file descriptor leaks, mark all non-stdio files as `O_CLOEXEC` before executing `runc init`.\n\n### Other Runtimes\n\nWe have discovered that several other container runtimes are either potentially vulnerable to similar attacks, or do not have sufficient protection against attacks of this nature. We recommend other container runtime authors look at [our patches](#Patches) and make sure they at least add a `getcwd() != ENOENT` check as well as consider whether `close_range(3, UINT_MAX, CLOSE_RANGE_CLOEXEC)` before executing their equivalent of `runc init` is appropriate.\n\n * crun 1.12 does not leak any useful file descriptors into the `runc init`-equivalent process (so this attack is _not exploitable_ as far as we can tell), but no care is taken to make sure all non-stdio files are `O_CLOEXEC` and there is no check after `chdir(2)` to ensure the working directory is inside the container. If a file descriptor happened to be leaked in the future, this could be exploitable. In addition, any file descriptors passed to `crun` are not closed until the container process is executed, meaning that easily-overlooked programming errors by users of `crun` can lead to these attacks becoming exploitable.\n * youki 0.3.1 does not leak any useful file descriptors into the `runc init`-equivalent process (so this attack is _not exploitable_ as far as we can tell) however this appears to be pure luck. `youki` does leak a directory file descriptor from the host mount namespace, but it just so happens that the directory is the rootfs of the container (which then gets `pivot_root`'d into and so ends up as a in-root path thanks to `chroot_fs_refs`). In addition, no care is taken to make sure all non-stdio files are `O_CLOEXEC` and there is no check after `chdir(2)` to ensure the working directory is inside the container. If a file descriptor happened to be leaked in the future, this could be exploitable. In addition, any file descriptors passed to `youki` are not closed until the container process is executed, meaning that easily-overlooked programming errors by users of `youki` can lead to these attacks becoming exploitable.\n * LXC 5.0.3 does not appear to leak any useful file descriptors, and they have comments noting the importance of not leaking file descriptors in `lxc-attach`. However, they don't seem to have any proactive protection against file descriptor leaks at the point of `chdir` such as using `close_range(...)` (they do have RAII-like `__do_fclose` closers but those don't necessarily stop all leaks in this context) nor do they have any check after `chdir(2)` to ensure the working directory is inside the container. Unfortunately it seems they cannot use `CLOSE_RANGE_CLOEXEC` because they don't need to re-exec themselves.\n\n### Workarounds\nFor attacks 1 and 2, only permit containers (and `runc exec`) to use a `process.cwd` of `/`. It is not possible for `/` to be replaced with a symlink (the path is resolved from within the container's mount namespace, and you cannot change the root of a mount namespace or an fs root to a symlink).\n\nFor attacks 1 and 3a, only permit users to run trusted images.\n\nFor attack 3b, there is no practical workaround other than never using `runc exec` because any binary you try to execute with `runc exec` could end up being a malicious binary target.\n\n### See Also\n* https://www.cve.org/CVERecord?id=CVE-2024-21626\n* https://github.com/opencontainers/runc/releases/tag/v1.1.12\n* The runc 1.1.12 merge commit https://github.com/opencontainers/runc/commit/a9833ff391a71b30069a6c3f816db113379a4346, which contains the following security patches:\n  * https://github.com/opencontainers/runc/commit/506552a88bd3455e80a9b3829568e94ec0160309\n  * https://github.com/opencontainers/runc/commit/0994249a5ec4e363bfcf9af58a87a722e9a3a31b\n  * https://github.com/opencontainers/runc/commit/fbe3eed1e568a376f371d2ced1b4ac16b7d7adde\n  * https://github.com/opencontainers/runc/commit/284ba3057e428f8d6c7afcc3b0ac752e525957df\n  * https://github.com/opencontainers/runc/commit/b6633f48a8c970433737b9be5bfe4f25d58a5aa7\n  * https://github.com/opencontainers/runc/commit/683ad2ff3b01fb142ece7a8b3829de17150cf688\n  * https://github.com/opencontainers/runc/commit/e9665f4d606b64bf9c4652ab2510da368bfbd951\n\n### Credits\n\nThanks to Rory McNamara from Snyk for discovering and disclosing the original vulnerability (attack 1) to Docker, @lifubang from acmcoder for discovering how to adapt the attack to overwrite host binaries (attack 3a), and Aleksa Sarai from SUSE for discovering how to adapt the attacks to work as container breakouts using `runc exec` (attacks 2 and 3b).",
      "cve": "CVE-2024-21626",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/opencontainers/runc@1.1.3 to 1.1.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/opencontainers/runc@1.1.3"
          },
          "version": "1.1.3"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-21626",
          "value": "CVE-2024-21626",
          "url": "https://scout.docker.com/v/CVE-2024-21626?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3E%3D1.0.0-rc93%2C%3C%3D1.1.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-21626?s=github&n=runc&ns=github.com%2Fopencontainers&t=golang&vr=%3E%3D1.0.0-rc93%2C%3C%3D1.1.11"
        }
      ]
    },
    {
      "id": "33ea462bb701663a8cbac298d0965f1b8d7629ca67a46f00f8f90a805c43c2ae",
      "category": "container_scanning",
      "message": "CVE-2021-33503 on urllib3@1.25.8",
      "description": "### Impact\n\nWhen provided with a URL containing many `@` characters in the authority component the authority regular expression exhibits catastrophic backtracking causing a denial of service if a URL were passed as a parameter or redirected to via an HTTP redirect.\n\n\n### Patches\n\nThe issue has been fixed in urllib3 v1.26.5.\n\n### References\n\n- [CVE-2021-33503](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-33503)\n- [JVNVU#92413403 (English)](https://jvn.jp/en/vu/JVNVU92413403/)\n- [JVNVU#92413403 (Japanese)](https://jvn.jp/vu/JVNVU92413403/)\n- [urllib3 v1.26.5](https://github.com/urllib3/urllib3/releases/tag/1.26.5)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Ask in our [community Discord](https://discord.gg/urllib3)\n* Email [sethmichaellarson@gmail.com](mailto:sethmichaellarson@gmail.com)\n",
      "cve": "CVE-2021-33503",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade urllib3@1.25.8 to 1.26.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/urllib3@1.25.8"
          },
          "version": "1.25.8"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-33503",
          "value": "CVE-2021-33503",
          "url": "https://scout.docker.com/v/CVE-2021-33503?s=github&n=urllib3&t=pypi&vr=%3E%3D1.25.4%2C%3C1.26.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-33503?s=github&n=urllib3&t=pypi&vr=%3E%3D1.25.4%2C%3C1.26.5"
        }
      ]
    },
    {
      "id": "033266341d227179632387316f2894330afc2f0b1854d0fb86cc54555d449f02",
      "category": "container_scanning",
      "message": "CVE-2024-23651 on github.com/moby/buildkit@0.9.1-0.20211019185819-8778943ac3da",
      "description": "### Impact\nTwo malicious build steps running in parallel sharing the same cache mounts with subpaths could cause a race condition that can lead to files from the host system being accessible to the build container.\n\n### Patches\nThe issue has been fixed in v0.12.5\n\n### Workarounds\nAvoid using BuildKit frontend from an untrusted source or building an untrusted Dockerfile containing cache mounts with `--mount=type=cache,source=...` options.\n\n### References\nhttps://www.openwall.com/lists/oss-security/2019/05/28/1\n",
      "cve": "CVE-2024-23651",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/moby/buildkit@0.9.1-0.20211019185819-8778943ac3da to 0.12.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/moby/buildkit@0.9.1-0.20211019185819-8778943ac3da"
          },
          "version": "0.9.1-0.20211019185819-8778943ac3da"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-23651",
          "value": "CVE-2024-23651",
          "url": "https://scout.docker.com/v/CVE-2024-23651?s=github&n=buildkit&ns=github.com%2Fmoby&t=golang&vr=%3C0.12.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-23651?s=github&n=buildkit&ns=github.com%2Fmoby&t=golang&vr=%3C0.12.5"
        }
      ]
    },
    {
      "id": "f6724195150b11cc5cc251a4229d041562e2c0c2ad263a6e29a87e4cca6a613a",
      "category": "container_scanning",
      "message": "CVE-2024-38095 on Microsoft.NETCore.App.Runtime.linux-x64@6.0.0",
      "description": "# Microsoft Security Advisory CVE-2024-38095 | .NET Denial of Service Vulnerability\n\n## <a name=\"executive-summary\"></a>Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0 and .NET 8.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\n\nA Vulnerability exists when System.Formats.Asn1 in .NET parses an X.509 certificate or collection of certificates, a malicious certificate can result in excessive CPU consumption on all platforms result in Denial of Service.\n\n## Announcement\n\nAnnouncement for this issue can be found at  https://github.com/dotnet/announcements/issues/312\n\n## <a name=\"mitigation-factors\"></a>Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n## <a name=\"affected-software\"></a>Affected software\n\n* Any .NET 6.0 application running on .NET 6.0.31 or earlier.\n* Any .NET 8.0 application running on .NET 8.0.6 or earlier.\n\n## <a name=\"affected-packages\"></a>Affected Packages\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected packages versions listed below\n\n### <a name=\".NET 6\"></a>.NET 6\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.NetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm)               | >=6.0.0, <= 6.0.31 | 6.0.32\n[Microsoft.NetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm64)           | >=6.0.0, <= 6.0.31 | 6.0.32\n[Microsoft.NetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm)     | >=6.0.0, <= 6.0.31 | 6.0.32\n[Microsoft.NetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm64) | >=6.0.0, <= 6.0.31 | 6.0.32\n[Microsoft.NetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-x64)     | >=6.0.0, <= 6.0.31 | 6.0.32\n[Microsoft.NetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-x64)               | >=6.0.0, <= 6.0.31 | 6.0.32\n[Microsoft.NetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-arm64)               | >=6.0.0, <= 6.0.31 | 6.0.32\n[Microsoft.NetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-x64)                   | >=6.0.0, <= 6.0.31 | 6.0.32\n[Microsoft.NetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm)                   | >=6.0.0, <= 6.0.31 | 6.0.32\n[Microsoft.NetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm64)               | >=6.0.0, <= 6.0.31 | 6.0.32\n[Microsoft.NetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x64)                   | >=6.0.0, <= 6.0.31 | 6.0.32\n[Microsoft.NetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x86)                   | >=6.0.0, <= 6.0.31 | 6.0.32\n[System.Formats.Asn1](https://www.nuget.org/packages/System.Formats.Asn1)                   | >=5.0.0-preview.7.20364.11 | 6.0.1\n\n\n### <a name=\".NET 8\"></a>.NET 8\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.NetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm)               | >=8.0.0, <= 8.0.6 | 8.0.7\n[Microsoft.NetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-arm64)           | >=8.0.0, <= 8.0.6 | 8.0.7\n[Microsoft.NetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm)     | >=8.0.0, <= 8.0.6 | 8.0.7\n[Microsoft.NetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-arm64) | >=8.0.0, <= 8.0.6 | 8.0.7\n[Microsoft.NetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-musl-x64)     | >=8.0.0, <= 8.0.6 | 8.0.7\n[Microsoft.NetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.linux-x64)               | >=8.0.0, <= 8.0.6 | 8.0.7\n[Microsoft.NetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-arm64)               | >=8.0.0, <= 8.0.6 | 8.0.7\n[Microsoft.NetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.osx-x64)                   | >=8.0.0, <= 8.0.6 | 8.0.7\n[Microsoft.NetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm)                   | >=8.0.0, <= 8.0.6 | 8.0.7\n[Microsoft.NetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-arm64)               | >=8.0.0, <= 8.0.6 | 8.0.7\n[Microsoft.NetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x64)                   | >=8.0.0, <= 8.0.6 | 8.0.7\n[Microsoft.NetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.NetCore.App.Runtime.win-x86)                   | >=8.0.0, <= 8.0.6 | 8.0.7\n[System.Formats.Asn1](https://www.nuget.org/packages/System.Formats.Asn1)                   | <=6.0.0, >=7.0.0-preview.1.22076.8 | 8.0.1\n\n## Advisory FAQ\n\n### <a name=\"how-affected\"></a>How do I know if I am affected?\n\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-packages) or [affected packages](#affected-software), you're exposed to the vulnerability.\n\n### <a name=\"how-fix\"></a>How do I fix the issue?\n\n* To fix the issue please install the latest version of .NET 8.0 or .NET 7.0 or .NET 6.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET Core SDK (reflecting any global.json):\n\n\n Version:   8.0.200\n Commit:    8473146e7d\n\nRuntime Environment:\n\n OS Name:     Windows\n OS Version:  10.0.18363\n OS Platform: Windows\n RID:         win10-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\n\nHost (useful for support):\n\n  Version: 8.0.3\n  Commit:  8473146e7d\n\n.NET Core SDKs installed:\n\n  8.0.200 [C:\\Program Files\\dotnet\\sdk]\n\n.NET Core runtimes installed:\n\n  Microsoft.AspAspNetCore.App 8.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspAspNetCore.App]\n  Microsoft.AspNetCore.App 8.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.WindowsDesktop.App 8.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\n\nTo install additional .NET Core runtimes or SDKs:\n  https://aka.ms/dotnet-download\n```\n\n* If you're using .NET 8.0, you should download and install .NET 8.0.7  Runtime or .NET 8.0.107 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\n* If you're using .NET 6.0, you should download and install Runtime 6.0.32 or SDK 6.0.132 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n.NET 6.0 and .NET 8.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 8.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### External Links\n\n[CVE-2024-38095]( https://www.cve.org/CVERecord?id=CVE-2024-38095)\n\n### Revisions\n\nV1.0 (July 09, 2024): Advisory published.\n\n_Version 1.0_\n\n_Last Updated 2024-07-09_",
      "cve": "CVE-2024-38095",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade Microsoft.NETCore.App.Runtime.linux-x64@6.0.0 to 6.0.32",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Microsoft.NETCore.App.Runtime.linux-x64@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-38095",
          "value": "CVE-2024-38095",
          "url": "https://scout.docker.com/v/CVE-2024-38095?s=github&n=Microsoft.NETCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C%3D6.0.31"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-38095?s=github&n=Microsoft.NETCore.App.Runtime.linux-x64&t=nuget&vr=%3E%3D6.0.0%2C%3C%3D6.0.31"
        }
      ]
    },
    {
      "id": "7271637f288805d1e0cc1f07dfe5ae60d9710c6391db091eb6aaf53e86b92d5b",
      "category": "container_scanning",
      "message": "CVE-2024-47554 on commons-io/commons-io@2.7",
      "description": "Uncontrolled Resource Consumption vulnerability in Apache Commons IO.\n\nThe `org.apache.commons.io.input.XmlStreamReader` class may excessively consume CPU resources when processing maliciously crafted input.\n\n\nThis issue affects Apache Commons IO: from 2.0 before 2.14.0.\n\nUsers are recommended to upgrade to version 2.14.0 or later, which fixes the issue.",
      "cve": "CVE-2024-47554",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade commons-io/commons-io@2.7 to 2.14.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/commons-io/commons-io@2.7"
          },
          "version": "2.7"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47554",
          "value": "CVE-2024-47554",
          "url": "https://scout.docker.com/v/CVE-2024-47554?s=github&n=commons-io&ns=commons-io&t=maven&vr=%3E%3D2.0%2C%3C2.14.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47554?s=github&n=commons-io&ns=commons-io&t=maven&vr=%3E%3D2.0%2C%3C2.14.0"
        }
      ]
    },
    {
      "id": "4b28e1eff7c359143cc7d57c6c722b2f32fb356f1375e6c01246f05a02fb9c70",
      "category": "container_scanning",
      "message": "CVE-2024-47554 on commons-io/commons-io@2.11.0",
      "description": "Uncontrolled Resource Consumption vulnerability in Apache Commons IO.\n\nThe `org.apache.commons.io.input.XmlStreamReader` class may excessively consume CPU resources when processing maliciously crafted input.\n\n\nThis issue affects Apache Commons IO: from 2.0 before 2.14.0.\n\nUsers are recommended to upgrade to version 2.14.0 or later, which fixes the issue.",
      "cve": "CVE-2024-47554",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade commons-io/commons-io@2.11.0 to 2.14.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/commons-io/commons-io@2.11.0"
          },
          "version": "2.11.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47554",
          "value": "CVE-2024-47554",
          "url": "https://scout.docker.com/v/CVE-2024-47554?s=github&n=commons-io&ns=commons-io&t=maven&vr=%3E%3D2.0%2C%3C2.14.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47554?s=github&n=commons-io&ns=commons-io&t=maven&vr=%3E%3D2.0%2C%3C2.14.0"
        }
      ]
    },
    {
      "id": "4ada7cb9e752e550097432177aa73360fd6327c72e8a0ac6fcc93104dee93a7b",
      "category": "container_scanning",
      "message": "CVE-2024-47554 on commons-io/commons-io@2.6",
      "description": "Uncontrolled Resource Consumption vulnerability in Apache Commons IO.\n\nThe `org.apache.commons.io.input.XmlStreamReader` class may excessively consume CPU resources when processing maliciously crafted input.\n\n\nThis issue affects Apache Commons IO: from 2.0 before 2.14.0.\n\nUsers are recommended to upgrade to version 2.14.0 or later, which fixes the issue.",
      "cve": "CVE-2024-47554",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade commons-io/commons-io@2.6 to 2.14.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/commons-io/commons-io@2.6"
          },
          "version": "2.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47554",
          "value": "CVE-2024-47554",
          "url": "https://scout.docker.com/v/CVE-2024-47554?s=github&n=commons-io&ns=commons-io&t=maven&vr=%3E%3D2.0%2C%3C2.14.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47554?s=github&n=commons-io&ns=commons-io&t=maven&vr=%3E%3D2.0%2C%3C2.14.0"
        }
      ]
    },
    {
      "id": "71d66c688ab406de50ec253050ad08816876b8d4c954007ace83c48e2f0181fd",
      "category": "container_scanning",
      "message": "CVE-2024-7254 on com.google.protobuf/protobuf-java@3.19.4",
      "description": "### Summary\nWhen parsing unknown fields in the Protobuf Java Lite and Full library, a maliciously crafted message can cause a StackOverflow error and lead to a program crash.\n\nReporter: Alexis Challande, Trail of Bits Ecosystem Security Team <ecosystem@trailofbits.com>\n\nAffected versions: This issue affects all versions of both the Java full and lite Protobuf runtimes, as well as Protobuf for Kotlin and JRuby, which themselves use the Java Protobuf runtime.\n\n### Severity\n[CVE-2024-7254](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-7254) **High** CVSS4.0 Score 8.7 (NOTE: there may be a delay in publication)\nThis is a potential Denial of Service. Parsing nested groups as unknown fields with DiscardUnknownFieldsParser or Java Protobuf Lite parser, or against Protobuf map fields, creates unbounded recursions that can be abused by an attacker.\n\n### Proof of Concept\nFor reproduction details, please refer to the unit tests (Protobuf Java [LiteTest](https://github.com/protocolbuffers/protobuf/blob/a037f28ff81ee45ebe008c64ab632bf5372242ce/java/lite/src/test/java/com/google/protobuf/LiteTest.java) and [CodedInputStreamTest](https://github.com/protocolbuffers/protobuf/blob/a037f28ff81ee45ebe008c64ab632bf5372242ce/java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java)) that identify the specific inputs that exercise this parsing weakness.\n\n### Remediation and Mitigation\nWe have been working diligently to address this issue and have released a mitigation that is available now. Please update to the latest available versions of the following packages:\n* protobuf-java (3.25.5, 4.27.5, 4.28.2)\n* protobuf-javalite (3.25.5, 4.27.5, 4.28.2)\n* protobuf-kotlin (3.25.5, 4.27.5, 4.28.2)\n* protobuf-kotlin-lite (3.25.5, 4.27.5, 4.28.2)\n* com-protobuf [JRuby gem only] (3.25.5, 4.27.5, 4.28.2)",
      "cve": "CVE-2024-7254",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.google.protobuf/protobuf-java@3.19.4 to 3.25.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.google.protobuf/protobuf-java@3.19.4"
          },
          "version": "3.19.4"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-7254",
          "value": "CVE-2024-7254",
          "url": "https://scout.docker.com/v/CVE-2024-7254?s=github&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3C3.25.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-7254?s=github&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3C3.25.5"
        }
      ]
    },
    {
      "id": "c9d5edd9d545d405f805fea62247e9a53dc3fa5cca44e9a3b08f301e2c6953e9",
      "category": "container_scanning",
      "message": "CVE-2024-7254 on com.google.protobuf/protobuf-java@3.5.1",
      "description": "### Summary\nWhen parsing unknown fields in the Protobuf Java Lite and Full library, a maliciously crafted message can cause a StackOverflow error and lead to a program crash.\n\nReporter: Alexis Challande, Trail of Bits Ecosystem Security Team <ecosystem@trailofbits.com>\n\nAffected versions: This issue affects all versions of both the Java full and lite Protobuf runtimes, as well as Protobuf for Kotlin and JRuby, which themselves use the Java Protobuf runtime.\n\n### Severity\n[CVE-2024-7254](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-7254) **High** CVSS4.0 Score 8.7 (NOTE: there may be a delay in publication)\nThis is a potential Denial of Service. Parsing nested groups as unknown fields with DiscardUnknownFieldsParser or Java Protobuf Lite parser, or against Protobuf map fields, creates unbounded recursions that can be abused by an attacker.\n\n### Proof of Concept\nFor reproduction details, please refer to the unit tests (Protobuf Java [LiteTest](https://github.com/protocolbuffers/protobuf/blob/a037f28ff81ee45ebe008c64ab632bf5372242ce/java/lite/src/test/java/com/google/protobuf/LiteTest.java) and [CodedInputStreamTest](https://github.com/protocolbuffers/protobuf/blob/a037f28ff81ee45ebe008c64ab632bf5372242ce/java/core/src/test/java/com/google/protobuf/CodedInputStreamTest.java)) that identify the specific inputs that exercise this parsing weakness.\n\n### Remediation and Mitigation\nWe have been working diligently to address this issue and have released a mitigation that is available now. Please update to the latest available versions of the following packages:\n* protobuf-java (3.25.5, 4.27.5, 4.28.2)\n* protobuf-javalite (3.25.5, 4.27.5, 4.28.2)\n* protobuf-kotlin (3.25.5, 4.27.5, 4.28.2)\n* protobuf-kotlin-lite (3.25.5, 4.27.5, 4.28.2)\n* com-protobuf [JRuby gem only] (3.25.5, 4.27.5, 4.28.2)",
      "cve": "CVE-2024-7254",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.google.protobuf/protobuf-java@3.5.1 to 3.25.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.google.protobuf/protobuf-java@3.5.1"
          },
          "version": "3.5.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-7254",
          "value": "CVE-2024-7254",
          "url": "https://scout.docker.com/v/CVE-2024-7254?s=github&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3C3.25.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-7254?s=github&n=protobuf-java&ns=com.google.protobuf&t=maven&vr=%3C3.25.5"
        }
      ]
    },
    {
      "id": "85e6cbbdda52fcc79af318fc7ee43e373f6694828098c237151f696304097713",
      "category": "container_scanning",
      "message": "CVE-2025-52999 on com.fasterxml.jackson.core/jackson-core@2.14.0",
      "description": "### Impact\nWith older versions  of jackson-core, if you parse an input file and it has deeply nested data, Jackson could end up throwing a StackoverflowError if the depth is particularly large.\n\n### Patches\njackson-core 2.15.0 contains a configurable limit for how deep Jackson will traverse in an input document, defaulting to an allowable depth of 1000. Change is in https://github.com/FasterXML/jackson-core/pull/943. jackson-core will throw a StreamConstraintsException if the limit is reached.\njackson-databind also benefits from this change because it uses jackson-core to parse JSON inputs.\n\n### Workarounds\nUsers should avoid parsing input files from untrusted sources.",
      "cve": "CVE-2025-52999",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.fasterxml.jackson.core/jackson-core@2.14.0 to 2.15.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.fasterxml.jackson.core/jackson-core@2.14.0"
          },
          "version": "2.14.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-52999",
          "value": "CVE-2025-52999",
          "url": "https://scout.docker.com/v/CVE-2025-52999?s=github&n=jackson-core&ns=com.fasterxml.jackson.core&t=maven&vr=%3C2.15.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-52999?s=github&n=jackson-core&ns=com.fasterxml.jackson.core&t=maven&vr=%3C2.15.0"
        }
      ]
    },
    {
      "id": "79115a024421498c07129a38f94693227d841212f3fe157e4847e87f2068c827",
      "category": "container_scanning",
      "message": "CVE-2025-52999 on com.fasterxml.jackson.core/jackson-core@2.12.6",
      "description": "### Impact\nWith older versions  of jackson-core, if you parse an input file and it has deeply nested data, Jackson could end up throwing a StackoverflowError if the depth is particularly large.\n\n### Patches\njackson-core 2.15.0 contains a configurable limit for how deep Jackson will traverse in an input document, defaulting to an allowable depth of 1000. Change is in https://github.com/FasterXML/jackson-core/pull/943. jackson-core will throw a StreamConstraintsException if the limit is reached.\njackson-databind also benefits from this change because it uses jackson-core to parse JSON inputs.\n\n### Workarounds\nUsers should avoid parsing input files from untrusted sources.",
      "cve": "CVE-2025-52999",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.fasterxml.jackson.core/jackson-core@2.12.6 to 2.15.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.fasterxml.jackson.core/jackson-core@2.12.6"
          },
          "version": "2.12.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-52999",
          "value": "CVE-2025-52999",
          "url": "https://scout.docker.com/v/CVE-2025-52999?s=github&n=jackson-core&ns=com.fasterxml.jackson.core&t=maven&vr=%3C2.15.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-52999?s=github&n=jackson-core&ns=com.fasterxml.jackson.core&t=maven&vr=%3C2.15.0"
        }
      ]
    },
    {
      "id": "9cf5e9026c62947a2f144fb2a5a2bcb2f9248a986039c428382eacb17a75937b",
      "category": "container_scanning",
      "message": "CVE-2025-52999 on com.fasterxml.jackson.core/jackson-core@2.10.5",
      "description": "### Impact\nWith older versions  of jackson-core, if you parse an input file and it has deeply nested data, Jackson could end up throwing a StackoverflowError if the depth is particularly large.\n\n### Patches\njackson-core 2.15.0 contains a configurable limit for how deep Jackson will traverse in an input document, defaulting to an allowable depth of 1000. Change is in https://github.com/FasterXML/jackson-core/pull/943. jackson-core will throw a StreamConstraintsException if the limit is reached.\njackson-databind also benefits from this change because it uses jackson-core to parse JSON inputs.\n\n### Workarounds\nUsers should avoid parsing input files from untrusted sources.",
      "cve": "CVE-2025-52999",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.fasterxml.jackson.core/jackson-core@2.10.5 to 2.15.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.fasterxml.jackson.core/jackson-core@2.10.5"
          },
          "version": "2.10.5"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-52999",
          "value": "CVE-2025-52999",
          "url": "https://scout.docker.com/v/CVE-2025-52999?s=github&n=jackson-core&ns=com.fasterxml.jackson.core&t=maven&vr=%3C2.15.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-52999?s=github&n=jackson-core&ns=com.fasterxml.jackson.core&t=maven&vr=%3C2.15.0"
        }
      ]
    },
    {
      "id": "ccd795b7e5c15c16680be6f805f8cc6f48d2036c38b26bfbbf4d0b829dcb19e6",
      "category": "container_scanning",
      "message": "CVE-2023-4759 on org.eclipse.jgit/org.eclipse.jgit@5.10.0.202012080955-r",
      "description": "Arbitrary File Overwrite in Eclipse JGit <= 6.6.0\n\nIn Eclipse JGit, all versions <= 6.6.0.202305301015-r, a symbolic link present in a specially crafted git repository can be used to write a file to locations outside the working tree when this repository is cloned with JGit to a case-insensitive filesystem, or when a checkout from a clone of such a repository is performed on a case-insensitive filesystem.\n\nThis can happen on checkout (DirCacheCheckout), merge (ResolveMerger via its WorkingTreeUpdater), pull (PullCommand using merge), and when applying a patch (PatchApplier). This can be exploited for remote code execution (RCE), for instance if the file written outside the working tree is a git filter that gets executed on a subsequent git command.\n\nThe issue occurs only on case-insensitive filesystems, like the default filesystems on Windows and macOS. The user performing the clone or checkout must have the rights to create symbolic links for the problem to occur, and symbolic links must be enabled in the git configuration.\n\nSetting git configuration option core.symlinks = false before checking out avoids the problem.\n\nThe issue was fixed in Eclipse JGit version 6.6.1.202309021850-r and 6.7.0.202309050840-r, available via  Maven Central https://repo1.maven.org/maven2/org/eclipse/jgit/  and  repo.eclipse.org https://repo.eclipse.org/content/repositories/jgit-releases/ . A backport is available in 5.13.3 starting from 5.13.3.202401111512-r.\n\nThe JGit maintainers would like to thank RyotaK for finding and reporting this issue.\n\n\n\n",
      "cve": "CVE-2023-4759",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.eclipse.jgit/org.eclipse.jgit@5.10.0.202012080955-r to 5.13.3.202401111512-r",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.eclipse.jgit/org.eclipse.jgit@5.10.0.202012080955-r"
          },
          "version": "5.10.0.202012080955-r"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-4759",
          "value": "CVE-2023-4759",
          "url": "https://scout.docker.com/v/CVE-2023-4759?s=github&n=org.eclipse.jgit&ns=org.eclipse.jgit&t=maven&vr=%3C5.13.3.202401111512-r"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-4759?s=github&n=org.eclipse.jgit&ns=org.eclipse.jgit&t=maven&vr=%3C5.13.3.202401111512-r"
        }
      ]
    },
    {
      "id": "77071930ea058a904f89b9b83a43547f265dde9f7570ddbb3d85319300b13189",
      "category": "container_scanning",
      "message": "CVE-2024-21386 on Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0",
      "description": "# Microsoft Security Advisory CVE-2024-21386: .NET Denial of Service Vulnerability\n\n## Executive summary\n\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET 6.0, ASP.NET 7.0 and, ASP.NET 8.0 . This advisory also provides guidance on what developers can do to update their applications to address this vulnerability.\n\nA vulnerability exists in ASP.NET applications using SignalR where a malicious client can result in a denial-of-service.\n\n\n## Announcement\n\nAnnouncement for this issue can be found at https://github.com/dotnet/announcements/issues/295\n\n### Mitigation factors\n\nMicrosoft has not identified any mitigating factors for this vulnerability.\n\n## Affected software\n\n* Any .NET 6.0 application running on .NET 6.0.26 or earlier.\n* Any .NET 7.0 application running on .NET 7.0.15 or earlier.\n* Any .NET 8.0 application running on .NET 8.0.1 or earlier.\n\n## Affected Packages\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected packages versions listed below\n\n### ASP.NET 6.0\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               |  <= 6.0.26 | 6.0.27\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)           |  <= 6.0.26 | 6.0.27\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)     |  <= 6.0.26 | 6.0.27\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64) |  <= 6.0.26 | 6.0.27\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)     |  <= 6.0.26 | 6.0.27\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)               |  <= 6.0.26 | 6.0.27\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)               |  <= 6.0.26 | 6.0.27\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                   |  <= 6.0.26 | 6.0.27\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                   |  <= 6.0.26 | 6.0.27\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)               |  <= 6.0.26 | 6.0.27\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                   |  <= 6.0.26 | 6.0.27\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                   |  <= 6.0.26 | 6.0.27\n\n\n\n### ASP.NET 7.0\n\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               |  <= 7.0.15 | 7.0.16\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)           |  <= 7.0.15 | 7.0.16\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)     |  <= 7.0.15 | 7.0.16\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64) |  <= 7.0.15 | 7.0.16\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)     |  <= 7.0.15 | 7.0.16\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)               |  <= 7.0.15 | 7.0.16\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)               |  <= 7.0.15 | 7.0.16\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                   |  <= 7.0.15 | 7.0.16\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                   |  <= 7.0.15 | 7.0.16\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)               |  <= 7.0.15 | 7.0.16\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                   |  <= 7.0.15 | 7.0.16\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                   |  <= 7.0.15 | 7.0.16\n\n### ASP.NET 8.0\nPackage name | Affected version | Patched version\n------------ | ---------------- | -------------------------\n[Microsoft.AspNetCore.App.Runtime.linux-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm)               |  <= 8.0.1 | 8.0.2\n[Microsoft.AspNetCore.App.Runtime.linux-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-arm64)           |  <= 8.0.1 | 8.0.2\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm)     |  <= 8.0.1 | 8.0.2\n[Microsoft.AspNetCore.App.Runtime.linux-musl-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-arm64) |  <= 8.0.1 | 8.0.2\n[Microsoft.AspNetCore.App.Runtime.linux-musl-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-musl-x64)     |  <= 8.0.1 | 8.0.2\n[Microsoft.AspNetCore.App.Runtime.linux-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.linux-x64)               |  <= 8.0.1 | 8.0.2\n[Microsoft.AspNetCore.App.Runtime.osx-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-arm64)               |  <= 8.0.1 | 8.0.2\n[Microsoft.AspNetCore.App.Runtime.osx-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.osx-x64)                   |  <= 8.0.1 | 8.0.2\n[Microsoft.AspNetCore.App.Runtime.win-arm](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm)                   |  <= 8.0.1 | 8.0.2\n[Microsoft.AspNetCore.App.Runtime.win-arm64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-arm64)               |  <= 8.0.1 | 8.0.2\n[Microsoft.AspNetCore.App.Runtime.win-x64](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x64)                   |  <= 8.0.1 | 8.0.2\n[Microsoft.AspNetCore.App.Runtime.win-x86](https://www.nuget.org/packages/Microsoft.AspNetCore.App.Runtime.win-x86)                   |  <= 8.0.1 | 8.0.2\n\n## Advisory FAQ\n\n### How do I know if I am affected?\n\nIf you have a runtime or SDK with a version listed, or an affected package listed in [affected software](#affected-software) or [affected packages](#affected-packages) , you're exposed to the vulnerability.\n\n### How do I fix the issue?\n\n* To fix the issue please install the latest version of .NET 8.0 or .NET 7.0 or .NET 6.0. If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET  SDKs.\n* If you have .NET 6.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\n\n```\n.NET Core SDK (reflecting any global.json):\n\n Version:   6.0.200\n Commit:    8473146e7d\n\nRuntime Environment:\n\n OS Name:     Windows\n OS Version:  10.0.18363\n OS Platform: Windows\n RID:         win10-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.300\\\n\nHost (useful for support):\n\n  Version: 6.0.5\n  Commit:  8473146e7d\n\n.NET Core SDKs installed:\n\n  6.0.200 [C:\\Program Files\\dotnet\\sdk]\n\n.NET Core runtimes installed:\n\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nTo install additional .NET Core runtimes or SDKs:\n  https://aka.ms/dotnet-download\n```\n\n* If you're using .NET 8.0, you should download and install .NET 8.0.2  Runtime or .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0.\n* If you're using .NET 7.0, you should download and install Runtime 7.0.16 or SDK 7.0.116 (for Visual Studio 2022 v17.4) from https://dotnet.microsoft.com/download/dotnet-core/7.0.\n* If you're using .NET 6.0, you should download and install Runtime 6.0.27 or SDK 6.0.419 from https://dotnet.microsoft.com/download/dotnet-core/6.0.\n\n.NET 6.0, .NET 7.0 and, .NET 8.0 updates are also available from Microsoft Update. To access this either type \"Check for updates\" in your Windows search, or open Settings, choose Update & Security and then click Check for Updates.\n\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\n\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\n\n## Other Information\n\n### Reporting Security Issues\n\nIf you have found a potential security issue in .NET 8.0 or .NET 7.0 or .NET 6.0, please email details to secure@microsoft.com. Reports may qualify for the Microsoft .NET Core & .NET 5 Bounty. Details of the Microsoft .NET Bounty Program including terms and conditions are at <https://aka.ms/corebounty>.\n\n### Support\n\nYou can ask questions about this issue on GitHub in the .NET GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\n\n### Disclaimer\n\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\n\n### External Links\n\n[CVE-2024-21386]( https://www.cve.org/CVERecord?id=CVE-2024-21386)\n\n### Revisions\n\nV1.0 (February 13, 2024): Advisory published.\n\n_Version 1.0_\n\n_Last Updated 2024-02-13_",
      "cve": "CVE-2024-21386",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0 to 6.0.27",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/Microsoft.AspNetCore.App.Runtime.linux-x64@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-21386",
          "value": "CVE-2024-21386",
          "url": "https://scout.docker.com/v/CVE-2024-21386?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3C%3D6.0.26"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-21386?s=github&n=Microsoft.AspNetCore.App.Runtime.linux-x64&t=nuget&vr=%3C%3D6.0.26"
        }
      ]
    },
    {
      "id": "24a4fc5fe3186ee284875831c2f21e2c6c09da0b6a423e2ca44d2d24c74ceaed",
      "category": "container_scanning",
      "message": "CVE-2021-26291 on org.apache.maven/maven-core@2.2.1",
      "description": "Apache Maven will follow repositories that are defined in a dependency’s Project Object Model (pom) which may be surprising to some users, resulting in potential risk if a malicious actor takes over that repository or is able to insert themselves into a position to pretend to be that repository. Maven is changing the default behavior in 3.8.1+ to no longer follow http (non-SSL) repository references by default. More details available in the referenced urls. If you are currently using a repository manager to govern the repositories used by your builds, you are unaffected by the risks present in the legacy behavior, and are unaffected by this vulnerability and change to default behavior. See this link for more information about repository management: https://maven.apache.org/repository-management.html",
      "cve": "CVE-2021-26291",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.maven/maven-core@2.2.1 to 3.8.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.maven/maven-core@2.2.1"
          },
          "version": "2.2.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-26291",
          "value": "CVE-2021-26291",
          "url": "https://scout.docker.com/v/CVE-2021-26291?s=github&n=maven-core&ns=org.apache.maven&t=maven&vr=%3C3.8.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-26291?s=github&n=maven-core&ns=org.apache.maven&t=maven&vr=%3C3.8.1"
        }
      ]
    },
    {
      "id": "be42019259fe92067756670e7795010d02bcf5a13394b9b51cbee950789f78ed",
      "category": "container_scanning",
      "message": "CVE-2021-26291 on org.apache.maven/maven-compat@2.2.1",
      "description": "Apache Maven will follow repositories that are defined in a dependency’s Project Object Model (pom) which may be surprising to some users, resulting in potential risk if a malicious actor takes over that repository or is able to insert themselves into a position to pretend to be that repository. Maven is changing the default behavior in 3.8.1+ to no longer follow http (non-SSL) repository references by default. More details available in the referenced urls. If you are currently using a repository manager to govern the repositories used by your builds, you are unaffected by the risks present in the legacy behavior, and are unaffected by this vulnerability and change to default behavior. See this link for more information about repository management: https://maven.apache.org/repository-management.html",
      "cve": "CVE-2021-26291",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.maven/maven-compat@2.2.1 to 3.8.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.maven/maven-compat@2.2.1"
          },
          "version": "2.2.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-26291",
          "value": "CVE-2021-26291",
          "url": "https://scout.docker.com/v/CVE-2021-26291?s=github&n=maven-compat&ns=org.apache.maven&t=maven&vr=%3C3.8.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-26291?s=github&n=maven-compat&ns=org.apache.maven&t=maven&vr=%3C3.8.1"
        }
      ]
    },
    {
      "id": "c2036ec4242ffdcd60272988fa5f1ff507d4f8b12a9fef850cd55f82ded17ffa",
      "category": "container_scanning",
      "message": "CVE-2022-23806 on stdlib@1.16.10",
      "description": "Some big.Int values that are not valid field elements (negative or overflowing) might cause Curve.IsOnCurve to incorrectly return true. Operating on those values may cause a panic or an invalid curve operation. Note that Unmarshal will never return such values.",
      "cve": "CVE-2022-23806",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.16.14",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-23806",
          "value": "CVE-2022-23806",
          "url": "https://scout.docker.com/v/CVE-2022-23806?s=golang&n=stdlib&t=golang&vr=%3C1.16.14"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-23806?s=golang&n=stdlib&t=golang&vr=%3C1.16.14"
        }
      ]
    },
    {
      "id": "f873f9838245a46ac2f84d59e39cc7448e432c94c4b45e2fa358c6e253ed5dff",
      "category": "container_scanning",
      "message": "CVE-2022-23806 on stdlib@1.16.12",
      "description": "Some big.Int values that are not valid field elements (negative or overflowing) might cause Curve.IsOnCurve to incorrectly return true. Operating on those values may cause a panic or an invalid curve operation. Note that Unmarshal will never return such values.",
      "cve": "CVE-2022-23806",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.16.14",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-23806",
          "value": "CVE-2022-23806",
          "url": "https://scout.docker.com/v/CVE-2022-23806?s=golang&n=stdlib&t=golang&vr=%3C1.16.14"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-23806?s=golang&n=stdlib&t=golang&vr=%3C1.16.14"
        }
      ]
    },
    {
      "id": "45fb58865bb251ced3a55bd9710739a8f12583f25c17bcd8107375b90a2b2da9",
      "category": "container_scanning",
      "message": "CVE-2023-20860 on org.springframework/spring@5.3.18",
      "description": "Spring Framework running version 6.0.0 - 6.0.6 or 5.3.0 - 5.3.25 using \"**\" as a pattern in Spring Security configuration with the mvcRequestMatcher creates a mismatch in pattern matching between Spring Security and Spring MVC, and the potential for a security bypass.",
      "cve": "CVE-2023-20860",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework/spring@5.3.18 to 5.3.26",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring@5.3.18"
          },
          "version": "5.3.18"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-20860",
          "value": "CVE-2023-20860",
          "url": "https://scout.docker.com/v/CVE-2023-20860?s=github&n=spring&ns=org.springframework&t=maven&vr=%3E%3D5.3.0%2C%3C5.3.26"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-20860?s=github&n=spring&ns=org.springframework&t=maven&vr=%3E%3D5.3.0%2C%3C5.3.26"
        }
      ]
    },
    {
      "id": "2723ad6f575af2bd0ddca6d4f1e7bf085d521515a1c594dbdf166d8779de59b7",
      "category": "container_scanning",
      "message": "CVE-2024-0057 on NuGet.Packaging@6.0.0.278",
      "description": "### Description\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability. \n\nA security feature bypass vulnerability exists when Microsoft .NET Framework-based applications use X.509 chain building APIs but do not completely validate the X.509 certificate due to a logic flaw. An attacker could present an arbitrary untrusted certificate with malformed signatures, triggering a bug in the framework. The framework will correctly report that X.509 chain building failed, but it will return an incorrect reason code for the failure. Applications which utilize this reason code to make their own chain building trust decisions may inadvertently treat this scenario as a successful chain build. This could allow an adversary to subvert the app's typical authentication logic. \n\n### Affected software\n#### NuGet & NuGet Packages\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.8.0 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.7.0 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.6.1 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.4.2 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.3.3 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.0.5 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 5.11.5 version or earlier. \n\n#### .NET SDK(s)\n- Any .NET SDK 6.0.126 or earlier, or 6.0.418 or earlier.\n- Any .NET SDK 7.0.115 or earlier, or 7.0.312 or earlier, or 7.0.405 or earlier.\n- Any .NET SDK 8.0.101 or earlier.\n \n### Patches\nTo fix the issue, please install the latest version of .NET 6.0, .NET 7.0 or .NET 8.0 and NuGet (NuGet.exe, NuGet.CommandLine, NuGet. Packaging versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs. \n- If you're using NuGet.exe 6.8.0 or lower, you should download and install 6.8.1 from https://dist.nuget.org/win-x86-commandline/v6.8.1/nuget.exe. \n- If you're using NuGet.exe 6.7.0 or lower, you should download and install 6.7.1 from https://dist.nuget.org/win-x86-commandline/v6.7.1/nuget.exe. \n- If you're using NuGet.exe 6.6.1 or lower, you should download and install 6.6.2 from https://dist.nuget.org/win-x86-commandline/v6.6.2/nuget.exe. \n- If you're using NuGet.exe 6.4.2 or lower, you should download and install 6.4.3 from https://dist.nuget.org/win-x86-commandline/v6.4.3/nuget.exe. \n- If you're using NuGet.exe 6.3.3 or lower, you should download and install 6.3.4 from https://dist.nuget.org/win-x86-commandline/v6.3.4/nuget.exe. \n- If you're using NuGet.exe 6.0.5 or lower, you should download and install 6.0.6 from https://dist.nuget.org/win-x86-commandline/v6.0.6/nuget.exe. \n- If you're using NuGet.exe 5.11.5 or lower, you should download and install 5.11.6 from https://dist.nuget.org/win-x86-commandline/v5.11.6/nuget.exe. \n- If you're using .NET 8.0, you should download and install .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0 . \n- If you're using .NET 7.0, you should download and install SDK 7.0.116 (for Visual Studio 2022 v17.4), or SDK 7.0.313 (for Visual Studio 2022 v17.6), or 7.0.406 (for Visual Studio 2022 v17.7) from https://dotnet.microsoft.com/download/dotnet-core/7.0 . \n- If you're using .NET 6.0, you should download and install SDK 6.0.127 or SDK 6.0.419 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0 . \n\n### Other details\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/71 \n\nMSRC details for this can be found at [CVE-2024-0057 - Security Update Guide - Microsoft - NET, .NET Framework, and Visual Studio Security Feature Bypass Vulnerability](https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-0057)\n",
      "cve": "CVE-2024-0057",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Packaging@6.0.0.278 to 6.0.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Packaging@6.0.0.278"
          },
          "version": "6.0.0.278"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-0057",
          "value": "CVE-2024-0057",
          "url": "https://scout.docker.com/v/CVE-2024-0057?s=github&n=NuGet.Packaging&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-0057?s=github&n=NuGet.Packaging&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.6"
        }
      ]
    },
    {
      "id": "5d875d4b99a758013d9574cdd7f59dbad30a2007b5db08fc6da68f018731532f",
      "category": "container_scanning",
      "message": "CVE-2024-0057 on NuGet.Packaging@5.2.0",
      "description": "### Description\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability. \n\nA security feature bypass vulnerability exists when Microsoft .NET Framework-based applications use X.509 chain building APIs but do not completely validate the X.509 certificate due to a logic flaw. An attacker could present an arbitrary untrusted certificate with malformed signatures, triggering a bug in the framework. The framework will correctly report that X.509 chain building failed, but it will return an incorrect reason code for the failure. Applications which utilize this reason code to make their own chain building trust decisions may inadvertently treat this scenario as a successful chain build. This could allow an adversary to subvert the app's typical authentication logic. \n\n### Affected software\n#### NuGet & NuGet Packages\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.8.0 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.7.0 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.6.1 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.4.2 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.3.3 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.0.5 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 5.11.5 version or earlier. \n\n#### .NET SDK(s)\n- Any .NET SDK 6.0.126 or earlier, or 6.0.418 or earlier.\n- Any .NET SDK 7.0.115 or earlier, or 7.0.312 or earlier, or 7.0.405 or earlier.\n- Any .NET SDK 8.0.101 or earlier.\n \n### Patches\nTo fix the issue, please install the latest version of .NET 6.0, .NET 7.0 or .NET 8.0 and NuGet (NuGet.exe, NuGet.CommandLine, NuGet. Packaging versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs. \n- If you're using NuGet.exe 6.8.0 or lower, you should download and install 6.8.1 from https://dist.nuget.org/win-x86-commandline/v6.8.1/nuget.exe. \n- If you're using NuGet.exe 6.7.0 or lower, you should download and install 6.7.1 from https://dist.nuget.org/win-x86-commandline/v6.7.1/nuget.exe. \n- If you're using NuGet.exe 6.6.1 or lower, you should download and install 6.6.2 from https://dist.nuget.org/win-x86-commandline/v6.6.2/nuget.exe. \n- If you're using NuGet.exe 6.4.2 or lower, you should download and install 6.4.3 from https://dist.nuget.org/win-x86-commandline/v6.4.3/nuget.exe. \n- If you're using NuGet.exe 6.3.3 or lower, you should download and install 6.3.4 from https://dist.nuget.org/win-x86-commandline/v6.3.4/nuget.exe. \n- If you're using NuGet.exe 6.0.5 or lower, you should download and install 6.0.6 from https://dist.nuget.org/win-x86-commandline/v6.0.6/nuget.exe. \n- If you're using NuGet.exe 5.11.5 or lower, you should download and install 5.11.6 from https://dist.nuget.org/win-x86-commandline/v5.11.6/nuget.exe. \n- If you're using .NET 8.0, you should download and install .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0 . \n- If you're using .NET 7.0, you should download and install SDK 7.0.116 (for Visual Studio 2022 v17.4), or SDK 7.0.313 (for Visual Studio 2022 v17.6), or 7.0.406 (for Visual Studio 2022 v17.7) from https://dotnet.microsoft.com/download/dotnet-core/7.0 . \n- If you're using .NET 6.0, you should download and install SDK 6.0.127 or SDK 6.0.419 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0 . \n\n### Other details\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/71 \n\nMSRC details for this can be found at [CVE-2024-0057 - Security Update Guide - Microsoft - NET, .NET Framework, and Visual Studio Security Feature Bypass Vulnerability](https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-0057)\n",
      "cve": "CVE-2024-0057",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Packaging@5.2.0 to 5.11.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Packaging@5.2.0"
          },
          "version": "5.2.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-0057",
          "value": "CVE-2024-0057",
          "url": "https://scout.docker.com/v/CVE-2024-0057?s=github&n=NuGet.Packaging&t=nuget&vr=%3E%3D4.6.0%2C%3C5.11.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-0057?s=github&n=NuGet.Packaging&t=nuget&vr=%3E%3D4.6.0%2C%3C5.11.6"
        }
      ]
    },
    {
      "id": "850660819f6442677ab732917e998f3b94a1c47724acd61979bcae2c5e80821a",
      "category": "container_scanning",
      "message": "CVE-2024-0057 on NuGet.Packaging@6.0.0",
      "description": "### Description\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability. \n\nA security feature bypass vulnerability exists when Microsoft .NET Framework-based applications use X.509 chain building APIs but do not completely validate the X.509 certificate due to a logic flaw. An attacker could present an arbitrary untrusted certificate with malformed signatures, triggering a bug in the framework. The framework will correctly report that X.509 chain building failed, but it will return an incorrect reason code for the failure. Applications which utilize this reason code to make their own chain building trust decisions may inadvertently treat this scenario as a successful chain build. This could allow an adversary to subvert the app's typical authentication logic. \n\n### Affected software\n#### NuGet & NuGet Packages\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.8.0 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.7.0 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.6.1 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.4.2 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.3.3 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.0.5 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 5.11.5 version or earlier. \n\n#### .NET SDK(s)\n- Any .NET SDK 6.0.126 or earlier, or 6.0.418 or earlier.\n- Any .NET SDK 7.0.115 or earlier, or 7.0.312 or earlier, or 7.0.405 or earlier.\n- Any .NET SDK 8.0.101 or earlier.\n \n### Patches\nTo fix the issue, please install the latest version of .NET 6.0, .NET 7.0 or .NET 8.0 and NuGet (NuGet.exe, NuGet.CommandLine, NuGet. Packaging versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs. \n- If you're using NuGet.exe 6.8.0 or lower, you should download and install 6.8.1 from https://dist.nuget.org/win-x86-commandline/v6.8.1/nuget.exe. \n- If you're using NuGet.exe 6.7.0 or lower, you should download and install 6.7.1 from https://dist.nuget.org/win-x86-commandline/v6.7.1/nuget.exe. \n- If you're using NuGet.exe 6.6.1 or lower, you should download and install 6.6.2 from https://dist.nuget.org/win-x86-commandline/v6.6.2/nuget.exe. \n- If you're using NuGet.exe 6.4.2 or lower, you should download and install 6.4.3 from https://dist.nuget.org/win-x86-commandline/v6.4.3/nuget.exe. \n- If you're using NuGet.exe 6.3.3 or lower, you should download and install 6.3.4 from https://dist.nuget.org/win-x86-commandline/v6.3.4/nuget.exe. \n- If you're using NuGet.exe 6.0.5 or lower, you should download and install 6.0.6 from https://dist.nuget.org/win-x86-commandline/v6.0.6/nuget.exe. \n- If you're using NuGet.exe 5.11.5 or lower, you should download and install 5.11.6 from https://dist.nuget.org/win-x86-commandline/v5.11.6/nuget.exe. \n- If you're using .NET 8.0, you should download and install .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0 . \n- If you're using .NET 7.0, you should download and install SDK 7.0.116 (for Visual Studio 2022 v17.4), or SDK 7.0.313 (for Visual Studio 2022 v17.6), or 7.0.406 (for Visual Studio 2022 v17.7) from https://dotnet.microsoft.com/download/dotnet-core/7.0 . \n- If you're using .NET 6.0, you should download and install SDK 6.0.127 or SDK 6.0.419 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0 . \n\n### Other details\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/71 \n\nMSRC details for this can be found at [CVE-2024-0057 - Security Update Guide - Microsoft - NET, .NET Framework, and Visual Studio Security Feature Bypass Vulnerability](https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-0057)\n",
      "cve": "CVE-2024-0057",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Packaging@6.0.0 to 6.0.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Packaging@6.0.0"
          },
          "version": "6.0.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-0057",
          "value": "CVE-2024-0057",
          "url": "https://scout.docker.com/v/CVE-2024-0057?s=github&n=NuGet.Packaging&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-0057?s=github&n=NuGet.Packaging&t=nuget&vr=%3E%3D6.0.0%2C%3C6.0.6"
        }
      ]
    },
    {
      "id": "d40649bbbee2b046f9b065e2e3a9849495c3798d46037ef09544dc8445f5eefd",
      "category": "container_scanning",
      "message": "CVE-2024-0057 on NuGet.Packaging@4.9.4.5839",
      "description": "### Description\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability. \n\nA security feature bypass vulnerability exists when Microsoft .NET Framework-based applications use X.509 chain building APIs but do not completely validate the X.509 certificate due to a logic flaw. An attacker could present an arbitrary untrusted certificate with malformed signatures, triggering a bug in the framework. The framework will correctly report that X.509 chain building failed, but it will return an incorrect reason code for the failure. Applications which utilize this reason code to make their own chain building trust decisions may inadvertently treat this scenario as a successful chain build. This could allow an adversary to subvert the app's typical authentication logic. \n\n### Affected software\n#### NuGet & NuGet Packages\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.8.0 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.7.0 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.6.1 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.4.2 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.3.3 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.0.5 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 5.11.5 version or earlier. \n\n#### .NET SDK(s)\n- Any .NET SDK 6.0.126 or earlier, or 6.0.418 or earlier.\n- Any .NET SDK 7.0.115 or earlier, or 7.0.312 or earlier, or 7.0.405 or earlier.\n- Any .NET SDK 8.0.101 or earlier.\n \n### Patches\nTo fix the issue, please install the latest version of .NET 6.0, .NET 7.0 or .NET 8.0 and NuGet (NuGet.exe, NuGet.CommandLine, NuGet. Packaging versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs. \n- If you're using NuGet.exe 6.8.0 or lower, you should download and install 6.8.1 from https://dist.nuget.org/win-x86-commandline/v6.8.1/nuget.exe. \n- If you're using NuGet.exe 6.7.0 or lower, you should download and install 6.7.1 from https://dist.nuget.org/win-x86-commandline/v6.7.1/nuget.exe. \n- If you're using NuGet.exe 6.6.1 or lower, you should download and install 6.6.2 from https://dist.nuget.org/win-x86-commandline/v6.6.2/nuget.exe. \n- If you're using NuGet.exe 6.4.2 or lower, you should download and install 6.4.3 from https://dist.nuget.org/win-x86-commandline/v6.4.3/nuget.exe. \n- If you're using NuGet.exe 6.3.3 or lower, you should download and install 6.3.4 from https://dist.nuget.org/win-x86-commandline/v6.3.4/nuget.exe. \n- If you're using NuGet.exe 6.0.5 or lower, you should download and install 6.0.6 from https://dist.nuget.org/win-x86-commandline/v6.0.6/nuget.exe. \n- If you're using NuGet.exe 5.11.5 or lower, you should download and install 5.11.6 from https://dist.nuget.org/win-x86-commandline/v5.11.6/nuget.exe. \n- If you're using .NET 8.0, you should download and install .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0 . \n- If you're using .NET 7.0, you should download and install SDK 7.0.116 (for Visual Studio 2022 v17.4), or SDK 7.0.313 (for Visual Studio 2022 v17.6), or 7.0.406 (for Visual Studio 2022 v17.7) from https://dotnet.microsoft.com/download/dotnet-core/7.0 . \n- If you're using .NET 6.0, you should download and install SDK 6.0.127 or SDK 6.0.419 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0 . \n\n### Other details\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/71 \n\nMSRC details for this can be found at [CVE-2024-0057 - Security Update Guide - Microsoft - NET, .NET Framework, and Visual Studio Security Feature Bypass Vulnerability](https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-0057)\n",
      "cve": "CVE-2024-0057",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Packaging@4.9.4.5839 to 5.11.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Packaging@4.9.4.5839"
          },
          "version": "4.9.4.5839"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-0057",
          "value": "CVE-2024-0057",
          "url": "https://scout.docker.com/v/CVE-2024-0057?s=github&n=NuGet.Packaging&t=nuget&vr=%3E%3D4.6.0%2C%3C5.11.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-0057?s=github&n=NuGet.Packaging&t=nuget&vr=%3E%3D4.6.0%2C%3C5.11.6"
        }
      ]
    },
    {
      "id": "e40a9286c863cd858ddd5cf0bf097213ef25bf1b333c48afdba6d55d06ffa7a2",
      "category": "container_scanning",
      "message": "CVE-2024-0057 on NuGet.Packaging@4.9.4",
      "description": "### Description\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET 6.0, .NET 7.0 and .NET 8.0. This advisory also provides guidance on what developers can do to update their applications to address this vulnerability. \n\nA security feature bypass vulnerability exists when Microsoft .NET Framework-based applications use X.509 chain building APIs but do not completely validate the X.509 certificate due to a logic flaw. An attacker could present an arbitrary untrusted certificate with malformed signatures, triggering a bug in the framework. The framework will correctly report that X.509 chain building failed, but it will return an incorrect reason code for the failure. Applications which utilize this reason code to make their own chain building trust decisions may inadvertently treat this scenario as a successful chain build. This could allow an adversary to subvert the app's typical authentication logic. \n\n### Affected software\n#### NuGet & NuGet Packages\n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.8.0 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.7.0 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.6.1 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.4.2 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.3.3 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 6.0.5 version or earlier. \n- Any NuGet.exe, NuGet.CommandLine, NuGet.Packaging 5.11.5 version or earlier. \n\n#### .NET SDK(s)\n- Any .NET SDK 6.0.126 or earlier, or 6.0.418 or earlier.\n- Any .NET SDK 7.0.115 or earlier, or 7.0.312 or earlier, or 7.0.405 or earlier.\n- Any .NET SDK 8.0.101 or earlier.\n \n### Patches\nTo fix the issue, please install the latest version of .NET 6.0, .NET 7.0 or .NET 8.0 and NuGet (NuGet.exe, NuGet.CommandLine, NuGet. Packaging versions). If you have installed one or more .NET SDKs through Visual Studio, Visual Studio will prompt you to update Visual Studio, which will also update your .NET SDKs. \n- If you're using NuGet.exe 6.8.0 or lower, you should download and install 6.8.1 from https://dist.nuget.org/win-x86-commandline/v6.8.1/nuget.exe. \n- If you're using NuGet.exe 6.7.0 or lower, you should download and install 6.7.1 from https://dist.nuget.org/win-x86-commandline/v6.7.1/nuget.exe. \n- If you're using NuGet.exe 6.6.1 or lower, you should download and install 6.6.2 from https://dist.nuget.org/win-x86-commandline/v6.6.2/nuget.exe. \n- If you're using NuGet.exe 6.4.2 or lower, you should download and install 6.4.3 from https://dist.nuget.org/win-x86-commandline/v6.4.3/nuget.exe. \n- If you're using NuGet.exe 6.3.3 or lower, you should download and install 6.3.4 from https://dist.nuget.org/win-x86-commandline/v6.3.4/nuget.exe. \n- If you're using NuGet.exe 6.0.5 or lower, you should download and install 6.0.6 from https://dist.nuget.org/win-x86-commandline/v6.0.6/nuget.exe. \n- If you're using NuGet.exe 5.11.5 or lower, you should download and install 5.11.6 from https://dist.nuget.org/win-x86-commandline/v5.11.6/nuget.exe. \n- If you're using .NET 8.0, you should download and install .NET 8.0.102 SDK (for Visual Studio 2022 v17.8) from https://dotnet.microsoft.com/download/dotnet-core/8.0 . \n- If you're using .NET 7.0, you should download and install SDK 7.0.116 (for Visual Studio 2022 v17.4), or SDK 7.0.313 (for Visual Studio 2022 v17.6), or 7.0.406 (for Visual Studio 2022 v17.7) from https://dotnet.microsoft.com/download/dotnet-core/7.0 . \n- If you're using .NET 6.0, you should download and install SDK 6.0.127 or SDK 6.0.419 (for Visual Studio 2022 v17.3) from https://dotnet.microsoft.com/download/dotnet-core/6.0 . \n\n### Other details\nAnnouncement for this issue can be found at https://github.com/NuGet/Announcements/issues/71 \n\nMSRC details for this can be found at [CVE-2024-0057 - Security Update Guide - Microsoft - NET, .NET Framework, and Visual Studio Security Feature Bypass Vulnerability](https://msrc.microsoft.com/update-guide/vulnerability/CVE-2024-0057)\n",
      "cve": "CVE-2024-0057",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade NuGet.Packaging@4.9.4 to 5.11.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/NuGet.Packaging@4.9.4"
          },
          "version": "4.9.4"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-0057",
          "value": "CVE-2024-0057",
          "url": "https://scout.docker.com/v/CVE-2024-0057?s=github&n=NuGet.Packaging&t=nuget&vr=%3E%3D4.6.0%2C%3C5.11.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-0057?s=github&n=NuGet.Packaging&t=nuget&vr=%3E%3D4.6.0%2C%3C5.11.6"
        }
      ]
    },
    {
      "id": "e470e1da94d9e004df15838fe50c0a595078d88dc3e8c58aa5527b9c54a3744a",
      "category": "container_scanning",
      "message": "CVE-2025-22871 on stdlib@1.18.9",
      "description": "The net/http package improperly accepts a bare LF as a line terminator in chunked data chunk-size lines. This can permit request smuggling if a net/http server is used in conjunction with a server that incorrectly accepts a bare LF as part of a chunk-ext.",
      "cve": "CVE-2025-22871",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.23.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22871",
          "value": "CVE-2025-22871",
          "url": "https://scout.docker.com/v/CVE-2025-22871?s=golang&n=stdlib&t=golang&vr=%3C1.23.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22871?s=golang&n=stdlib&t=golang&vr=%3C1.23.8"
        }
      ]
    },
    {
      "id": "a362c54b4540d289bd31e74de06c3979711d5cb2fd2194fd60a7f43593b47216",
      "category": "container_scanning",
      "message": "CVE-2025-22871 on stdlib@1.20.6",
      "description": "The net/http package improperly accepts a bare LF as a line terminator in chunked data chunk-size lines. This can permit request smuggling if a net/http server is used in conjunction with a server that incorrectly accepts a bare LF as part of a chunk-ext.",
      "cve": "CVE-2025-22871",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.23.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22871",
          "value": "CVE-2025-22871",
          "url": "https://scout.docker.com/v/CVE-2025-22871?s=golang&n=stdlib&t=golang&vr=%3C1.23.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22871?s=golang&n=stdlib&t=golang&vr=%3C1.23.8"
        }
      ]
    },
    {
      "id": "8cff7d1d2206e071b5bcd30d308a9ca23c41f8d2f09eaa4b18683fcc2af07286",
      "category": "container_scanning",
      "message": "CVE-2025-22871 on stdlib@1.16.10",
      "description": "The net/http package improperly accepts a bare LF as a line terminator in chunked data chunk-size lines. This can permit request smuggling if a net/http server is used in conjunction with a server that incorrectly accepts a bare LF as part of a chunk-ext.",
      "cve": "CVE-2025-22871",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.23.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22871",
          "value": "CVE-2025-22871",
          "url": "https://scout.docker.com/v/CVE-2025-22871?s=golang&n=stdlib&t=golang&vr=%3C1.23.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22871?s=golang&n=stdlib&t=golang&vr=%3C1.23.8"
        }
      ]
    },
    {
      "id": "45392c184734d5a5c13b8d65c64d4c77f3ccd81e9b360b51b0872f312a0ccee3",
      "category": "container_scanning",
      "message": "CVE-2025-22871 on stdlib@1.16.12",
      "description": "The net/http package improperly accepts a bare LF as a line terminator in chunked data chunk-size lines. This can permit request smuggling if a net/http server is used in conjunction with a server that incorrectly accepts a bare LF as part of a chunk-ext.",
      "cve": "CVE-2025-22871",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.23.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22871",
          "value": "CVE-2025-22871",
          "url": "https://scout.docker.com/v/CVE-2025-22871?s=golang&n=stdlib&t=golang&vr=%3C1.23.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22871?s=golang&n=stdlib&t=golang&vr=%3C1.23.8"
        }
      ]
    },
    {
      "id": "694656c0997c62515b439941a424020769f2e9b3e5eb2b25236c3c23ce4ef7bd",
      "category": "container_scanning",
      "message": "CVE-2024-41110 on github.com/docker/docker@20.10.17+incompatible",
      "description": "A security vulnerability has been detected in certain versions of Docker Engine, which could allow an attacker to bypass [authorization plugins (AuthZ)](https://docs.docker.com/engine/extend/plugins_authorization/) under specific circumstances. The base likelihood of this being exploited is low. This advisory outlines the issue, identifies the affected versions, and provides remediation steps for impacted users.\n\n### Impact\n\nUsing a specially-crafted API request, an Engine API client could make the daemon forward the request or response to an [authorization plugin](https://docs.docker.com/engine/extend/plugins_authorization/) without the body. In certain circumstances, the authorization plugin may allow a request which it would have otherwise denied if the body had been forwarded to it.\n\n\nA security issue was discovered In 2018,  where an attacker could bypass AuthZ plugins using a specially crafted API request. This could lead to unauthorized actions, including privilege escalation. Although this issue was fixed in Docker Engine [v18.09.1](https://docs.docker.com/engine/release-notes/18.09/#security-fixes-1) in January 2019, the fix was not carried forward to later major versions, resulting in a regression. Anyone who depends on authorization plugins that introspect the request and/or response body to make access control decisions is potentially impacted.\n\nDocker EE v19.03.x and all versions of Mirantis Container Runtime **are not vulnerable.**\n\n### Vulnerability details\n\n- **AuthZ bypass and privilege escalation:** An attacker could exploit a bypass using an API request with Content-Length set to 0, causing the Docker daemon to forward the request without the body to the AuthZ plugin, which might approve the request incorrectly.\n- **Initial fix:** The issue was fixed in Docker Engine [v18.09.1](https://docs.docker.com/engine/release-notes/18.09/#security-fixes-1) January 2019..\n- **Regression:** The fix was not included in Docker Engine v19.03 or newer versions. This was identified in April 2024 and patches were released for the affected versions on July 23, 2024. The issue was assigned [CVE-2024-41110](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-41110).\n\n### Patches\n\n- docker-ce v27.1.1 containes patches to fix the vulnerability.\n- Patches have also been merged into the master, 19.0, 20.0, 23.0, 24.0, 25.0, 26.0, and 26.1 release branches.\n\n### Remediation steps\n\n- If you are running an affected version, update to the most recent patched version.\n- Mitigation if unable to update immediately:\n    - Avoid using AuthZ plugins.\n    - Restrict access to the Docker API to trusted parties, following the principle of least privilege.\n\n\n### References\n\n- https://github.com/moby/moby/commit/fc274cd2ff4cf3b48c91697fb327dd1fb95588fb\n- https://github.com/moby/moby/commit/a79fabbfe84117696a19671f4aa88b82d0f64fc1\n- https://www.docker.com/blog/docker-security-advisory-docker-engine-authz-plugin/",
      "cve": "CVE-2024-41110",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/docker/docker@20.10.17+incompatible to 23.0.15",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/docker/docker@20.10.17%2Bincompatible"
          },
          "version": "20.10.17+incompatible"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-41110",
          "value": "CVE-2024-41110",
          "url": "https://scout.docker.com/v/CVE-2024-41110?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D19.03.0%2C%3C23.0.15"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-41110?s=github&n=docker&ns=github.com%2Fdocker&t=golang&vr=%3E%3D19.03.0%2C%3C23.0.15"
        }
      ]
    },
    {
      "id": "9a0530e1816bb1701224bb5f2c2e8ce3cb80580969a9e81de280a30eb3654476",
      "category": "container_scanning",
      "message": "CVE-2017-1000487 on org.codehaus.plexus/plexus-utils@1.5.15",
      "description": "Plexus-utils before 3.0.16 is vulnerable to command injection because it does not correctly process the contents of double quoted strings.",
      "cve": "CVE-2017-1000487",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade org.codehaus.plexus/plexus-utils@1.5.15 to 3.0.16",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.codehaus.plexus/plexus-utils@1.5.15"
          },
          "version": "1.5.15"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2017-1000487",
          "value": "CVE-2017-1000487",
          "url": "https://scout.docker.com/v/CVE-2017-1000487?s=github&n=plexus-utils&ns=org.codehaus.plexus&t=maven&vr=%3C3.0.16"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2017-1000487?s=github&n=plexus-utils&ns=org.codehaus.plexus&t=maven&vr=%3C3.0.16"
        }
      ]
    },
    {
      "id": "0a190b0eb599428c7c631eb5cedc67cec23e1146f99b329fdc23b4562dd12c6c",
      "category": "container_scanning",
      "message": "CVE-2018-1285 on log4net@1.2.10.0",
      "description": "Apache log4net before 2.0.10 does not disable XML external entities when parsing log4net configuration files. This could allow for XXE-based attacks in applications that accept arbitrary configuration files from users.",
      "cve": "CVE-2018-1285",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade log4net@1.2.10.0 to 2.0.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/log4net@1.2.10.0"
          },
          "version": "1.2.10.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2018-1285",
          "value": "CVE-2018-1285",
          "url": "https://scout.docker.com/v/CVE-2018-1285?s=github&n=log4net&t=nuget&vr=%3C2.0.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2018-1285?s=github&n=log4net&t=nuget&vr=%3C2.0.10"
        }
      ]
    },
    {
      "id": "5e4f440200b765321e4082941a3761d5618e10398ba689a042cc381ccbaa938b",
      "category": "container_scanning",
      "message": "CVE-2018-20433 on com.mchange/c3p0@0.9.5.2",
      "description": "c3p0 0.9.5.2 allows XXE in extractXmlConfigFromInputStream in com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.java during initialization.",
      "cve": "CVE-2018-20433",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade com.mchange/c3p0@0.9.5.2 to 0.9.5.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.mchange/c3p0@0.9.5.2"
          },
          "version": "0.9.5.2"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2018-20433",
          "value": "CVE-2018-20433",
          "url": "https://scout.docker.com/v/CVE-2018-20433?s=github&n=c3p0&ns=com.mchange&t=maven&vr=%3C%3D0.9.5.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2018-20433?s=github&n=c3p0&ns=com.mchange&t=maven&vr=%3C%3D0.9.5.2"
        }
      ]
    },
    {
      "id": "531d39583eda70f549e2fac8732f52b5a20f68c21ca0b22b260aeeeacdcf6663",
      "category": "container_scanning",
      "message": "CVE-2020-10683 on org.dom4j/dom4j@1.4",
      "description": "dom4j before 2.1.3 allows external DTDs and External Entities by default, which might enable XXE attacks. However, there is popular external documentation from OWASP showing how to enable the safe, non-default behavior in any application that uses dom4j.\n\nNote: This advisory applies to `dom4j:dom4j` version 1.x legacy artifacts.  To resolve this a change to the latest version of `org.dom4j:dom4j` is recommended.",
      "cve": "CVE-2020-10683",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade org.dom4j/dom4j@1.4 to 2.0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.dom4j/dom4j@1.4"
          },
          "version": "1.4"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-10683",
          "value": "CVE-2020-10683",
          "url": "https://scout.docker.com/v/CVE-2020-10683?s=github&n=dom4j&ns=org.dom4j&t=maven&vr=%3C2.0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-10683?s=github&n=dom4j&ns=org.dom4j&t=maven&vr=%3C2.0.3"
        }
      ]
    },
    {
      "id": "4d113281fe79c4411fce0d30cc8815fcfffe1b2f0e12b248686c999aec869c5e",
      "category": "container_scanning",
      "message": "CVE-2021-24112 on System.Drawing.Common@4.7.0",
      "description": "A remote code execution vulnerability exists when parsing certain types of graphics files. This vulnerability only exists on systems running on MacOS or Linux. This CVE ID is unique from CVE-2021-26701.",
      "cve": "CVE-2021-24112",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade System.Drawing.Common@4.7.0 to 4.7.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:nuget/System.Drawing.Common@4.7.0"
          },
          "version": "4.7.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-24112",
          "value": "CVE-2021-24112",
          "url": "https://scout.docker.com/v/CVE-2021-24112?s=github&n=System.Drawing.Common&t=nuget&vr=%3E%3D4.0.0%2C%3C4.7.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-24112?s=github&n=System.Drawing.Common&t=nuget&vr=%3E%3D4.0.0%2C%3C4.7.2"
        }
      ]
    },
    {
      "id": "df3ecd9f7f213bfed85577a63984d4109ba01ea932c43ae00e1f1117174e6009",
      "category": "container_scanning",
      "message": "CVE-2021-42575 on com.googlecode.owasp-java-html-sanitizer/owasp-java-html-sanitizer@20211018.1",
      "description": "The OWASP Java HTML Sanitizer does not properly enforce policies associated with the SELECT, STYLE, and OPTION elements.",
      "cve": "CVE-2021-42575",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade com.googlecode.owasp-java-html-sanitizer/owasp-java-html-sanitizer@20211018.1 to 20211018.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.googlecode.owasp-java-html-sanitizer/owasp-java-html-sanitizer@20211018.1"
          },
          "version": "20211018.1"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-42575",
          "value": "CVE-2021-42575",
          "url": "https://scout.docker.com/v/CVE-2021-42575?s=gitlab&n=owasp-java-html-sanitizer&ns=com.googlecode.owasp-java-html-sanitizer&t=maven&vr=%3C20211018.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-42575?s=gitlab&n=owasp-java-html-sanitizer&ns=com.googlecode.owasp-java-html-sanitizer&t=maven&vr=%3C20211018.2"
        }
      ]
    },
    {
      "id": "3060d0552b244b0da40baea80d9aaaa619120699790a44b34992c56251f4adb7",
      "category": "container_scanning",
      "message": "CVE-2022-29599 on org.apache.maven.shared/maven-shared-utils@3.1.0",
      "description": "In Apache Maven maven-shared-utils prior to version 3.3.3, the Commandline class can emit double-quoted strings without proper escaping, allowing shell injection attacks.",
      "cve": "CVE-2022-29599",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.maven.shared/maven-shared-utils@3.1.0 to 3.3.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.maven.shared/maven-shared-utils@3.1.0"
          },
          "version": "3.1.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-29599",
          "value": "CVE-2022-29599",
          "url": "https://scout.docker.com/v/CVE-2022-29599?s=github&n=maven-shared-utils&ns=org.apache.maven.shared&t=maven&vr=%3C3.3.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-29599?s=github&n=maven-shared-utils&ns=org.apache.maven.shared&t=maven&vr=%3C3.3.3"
        }
      ]
    },
    {
      "id": "855f99f97033414da1c0f3841fb19d78eb3a01e18af73df29e97274aaf9fe189",
      "category": "container_scanning",
      "message": "CVE-2022-45047 on org.apache.sshd/sshd-common@2.8.0",
      "description": "Class org.apache.sshd.server.keyprovider.SimpleGeneratorHostKeyProvider in Apache MINA SSHD <= 2.9.1 uses Java deserialization to load a serialized java.security.PrivateKey. The class is one of several implementations that an implementor using Apache MINA SSHD can choose for loading the host keys of an SSH server.\n\nUntil version 2.1.0, the code affected by this vulnerability appeared in `org.apache.sshd:sshd-core`. Version 2.1.0 contains a [commit](https://github.com/apache/mina-sshd/commit/10de190e7d3f9189deb76b8d08c72334a1fe2df0) where the code was moved to the package `org.apache.sshd:sshd-common`, which did not exist until version 2.1.0.",
      "cve": "CVE-2022-45047",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.sshd/sshd-common@2.8.0 to 2.9.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.sshd/sshd-common@2.8.0"
          },
          "version": "2.8.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-45047",
          "value": "CVE-2022-45047",
          "url": "https://scout.docker.com/v/CVE-2022-45047?s=github&n=sshd-common&ns=org.apache.sshd&t=maven&vr=%3C2.9.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-45047?s=github&n=sshd-common&ns=org.apache.sshd&t=maven&vr=%3C2.9.2"
        }
      ]
    },
    {
      "id": "c5a2bd1b03b36d8fc1271dd973cea9abd3ed3fdc775e0c91568c2e6c0890f87b",
      "category": "container_scanning",
      "message": "CVE-2023-24538 on stdlib@1.16.10",
      "description": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected.\n\nBackticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template.\n\nAs ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml.\n\nWith fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21.\n\nUsers who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
      "cve": "CVE-2023-24538",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.19.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24538",
          "value": "CVE-2023-24538",
          "url": "https://scout.docker.com/v/CVE-2023-24538?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24538?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ]
    },
    {
      "id": "4d1751477dfc81258f28149dc96acb1836cc5f475cac315be6aa7d24581631d6",
      "category": "container_scanning",
      "message": "CVE-2023-24538 on stdlib@1.18.9",
      "description": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected.\n\nBackticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template.\n\nAs ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml.\n\nWith fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21.\n\nUsers who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
      "cve": "CVE-2023-24538",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.19.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24538",
          "value": "CVE-2023-24538",
          "url": "https://scout.docker.com/v/CVE-2023-24538?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24538?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ]
    },
    {
      "id": "ae1d9dffc33771f584b0f23ac088ed7d4b7b4e167af490b3b777fd1d56a6e02f",
      "category": "container_scanning",
      "message": "CVE-2023-24538 on stdlib@1.16.12",
      "description": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected.\n\nBackticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template.\n\nAs ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml.\n\nWith fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21.\n\nUsers who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
      "cve": "CVE-2023-24538",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.19.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24538",
          "value": "CVE-2023-24538",
          "url": "https://scout.docker.com/v/CVE-2023-24538?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24538?s=golang&n=stdlib&t=golang&vr=%3C1.19.8"
        }
      ]
    },
    {
      "id": "b0a640d957e337cb4dc74965f7bd47f92b528c8da901925e68a5ffd0d8366755",
      "category": "container_scanning",
      "message": "CVE-2023-24540 on stdlib@1.16.10",
      "description": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
      "cve": "CVE-2023-24540",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.19.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24540",
          "value": "CVE-2023-24540",
          "url": "https://scout.docker.com/v/CVE-2023-24540?s=golang&n=stdlib&t=golang&vr=%3C1.19.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24540?s=golang&n=stdlib&t=golang&vr=%3C1.19.9"
        }
      ]
    },
    {
      "id": "612c4da773ee632f50d4f3877a038409227c7abeef7c17a097b208b233053328",
      "category": "container_scanning",
      "message": "CVE-2023-24540 on stdlib@1.16.12",
      "description": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
      "cve": "CVE-2023-24540",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.19.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24540",
          "value": "CVE-2023-24540",
          "url": "https://scout.docker.com/v/CVE-2023-24540?s=golang&n=stdlib&t=golang&vr=%3C1.19.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24540?s=golang&n=stdlib&t=golang&vr=%3C1.19.9"
        }
      ]
    },
    {
      "id": "c42a92ecb7ce201c8891e0b42d3ea8c1e4365a1f0f952d93c0ecbee556c260e6",
      "category": "container_scanning",
      "message": "CVE-2023-24540 on stdlib@1.18.9",
      "description": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
      "cve": "CVE-2023-24540",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.19.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24540",
          "value": "CVE-2023-24540",
          "url": "https://scout.docker.com/v/CVE-2023-24540?s=golang&n=stdlib&t=golang&vr=%3C1.19.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24540?s=golang&n=stdlib&t=golang&vr=%3C1.19.9"
        }
      ]
    },
    {
      "id": "fd530974b09a5db73c2b19b1f64ae1f912dab2800290842db1e886370c144db3",
      "category": "container_scanning",
      "message": "CVE-2023-37895 on org.apache.jackrabbit/jackrabbit-webdav@1.5.0",
      "description": "Java object deserialization issue in Jackrabbit webapp/standalone on all platforms allows attacker to remotely execute code via RMIVersions up to (including) 2.20.10 (stable branch) and 2.21.17 (unstable branch) use the component \"commons-beanutils\", which contains a class that can be used for remote code execution over RMI.\n\nUsers are advised to immediately update to versions 2.20.11 or 2.21.18. Note that earlier stable branches (1.0.x .. 2.18.x) have been EOLd already and do not receive updates anymore.\n\nIn general, RMI support can expose vulnerabilities by the mere presence of an exploitable class on the classpath. Even if Jackrabbit itself does not contain any code known to be exploitable anymore, adding other components to your server can expose the same type of problem. We therefore recommend to disable RMI access altogether (see further below), and will discuss deprecating RMI support in future Jackrabbit releases.\n\nHow to check whether RMI support is enabledRMI support can be over an RMI-specific TCP port, and over an HTTP binding. Both are by default enabled in Jackrabbit webapp/standalone.\n\nThe native RMI protocol by default uses port 1099. To check whether it is enabled, tools like \"netstat\" can be used to check.\n\nRMI-over-HTTP in Jackrabbit by default uses the path \"/rmi\". So when running standalone on port 8080, check whether an HTTP GET request on localhost:8080/rmi returns 404 (not enabled) or 200 (enabled). Note that the HTTP path may be different when the webapp is deployed in a container as non-root context, in which case the prefix is under the user's control.\n\nTurning off RMIFind web.xml (either in JAR/WAR file or in unpacked web application folder), and remove the declaration and the mapping definition for the RemoteBindingServlet: <servlet> <servlet-name>RMI</servlet-name> <servlet-class>org.apache.jackrabbit.servlet.remote.RemoteBindingServlet</servlet-class> </servlet>\n<servlet-mapping> <servlet-name>RMI</servlet-name> <url-pattern>/rmi</url-pattern> </servlet-mapping>\nFind the bootstrap.properties file (in $REPOSITORY_HOME), and set rmi.enabled=false and also remove  rmi.host  rmi.port rmi.url-pattern\nIf there is no file named bootstrap.properties in $REPOSITORY_HOME, it is located  somewhere in the classpath. In this case, place a copy in $REPOSITORY_HOME  and modify it as explained.",
      "cve": "CVE-2023-37895",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade org.apache.jackrabbit/jackrabbit-webdav@1.5.0 to 2.20.11, 2.21.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.apache.jackrabbit/jackrabbit-webdav@1.5.0"
          },
          "version": "1.5.0"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-37895",
          "value": "CVE-2023-37895",
          "url": "https://scout.docker.com/v/CVE-2023-37895?s=gitlab&n=jackrabbit-webdav&ns=org.apache.jackrabbit&t=maven&vr=%3E%3D1.0.0%2C%3C2.20.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-37895?s=gitlab&n=jackrabbit-webdav&ns=org.apache.jackrabbit&t=maven&vr=%3E%3D1.0.0%2C%3C2.20.11"
        }
      ]
    },
    {
      "id": "c727f1365f4cf0be026c0db478a836ff1064099b46ba83ec4913d8bdd8f586a4",
      "category": "container_scanning",
      "message": "CVE-2024-23653 on github.com/moby/buildkit@0.9.1-0.20211019185819-8778943ac3da",
      "description": "### Impact\nIn addition to running containers as build steps, BuildKit also provides APIs for running interactive containers based on built images. It was possible to use these APIs to ask BuildKit to run a container with elevated privileges. Normally, running such containers is only allowed if special `security.insecure` entitlement is enabled both by buildkitd configuration and allowed by the user initializing the build request.\n\n### Patches\nThe issue has been fixed in v0.12.5 .\n\n### Workarounds\nAvoid using BuildKit frontends from untrusted sources. A frontend image is usually specified as the `#syntax` line on your Dockerfile, or with `--frontend` flag when using `buildctl build` command.\n\n### References\n\n",
      "cve": "CVE-2024-23653",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/moby/buildkit@0.9.1-0.20211019185819-8778943ac3da to 0.12.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/moby/buildkit@0.9.1-0.20211019185819-8778943ac3da"
          },
          "version": "0.9.1-0.20211019185819-8778943ac3da"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-23653",
          "value": "CVE-2024-23653",
          "url": "https://scout.docker.com/v/CVE-2024-23653?s=github&n=buildkit&ns=github.com%2Fmoby&t=golang&vr=%3C0.12.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-23653?s=github&n=buildkit&ns=github.com%2Fmoby&t=golang&vr=%3C0.12.5"
        }
      ]
    },
    {
      "id": "749983b39327b4d35a2e9967a68ce0c53a44f4da5d2cd8727a66eea5daf0def5",
      "category": "container_scanning",
      "message": "CVE-2024-24790 on stdlib@1.16.12",
      "description": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.",
      "cve": "CVE-2024-24790",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.12 to 1.21.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.12"
          },
          "version": "1.16.12"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24790",
          "value": "CVE-2024-24790",
          "url": "https://scout.docker.com/v/CVE-2024-24790?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24790?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ]
    },
    {
      "id": "0cda8144895e3f8af93d1aeef365f284cffb1f7c6d0f8c14f7d56f28e60a8e45",
      "category": "container_scanning",
      "message": "CVE-2024-24790 on stdlib@1.16.10",
      "description": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.",
      "cve": "CVE-2024-24790",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.16.10 to 1.21.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.16.10"
          },
          "version": "1.16.10"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24790",
          "value": "CVE-2024-24790",
          "url": "https://scout.docker.com/v/CVE-2024-24790?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24790?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ]
    },
    {
      "id": "3a73504dbe9170fc341521a00d2c128306a78d38ade9f43bf69c7b7a13fa03d5",
      "category": "container_scanning",
      "message": "CVE-2024-24790 on stdlib@1.18.9",
      "description": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.",
      "cve": "CVE-2024-24790",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.18.9 to 1.21.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.18.9"
          },
          "version": "1.18.9"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24790",
          "value": "CVE-2024-24790",
          "url": "https://scout.docker.com/v/CVE-2024-24790?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24790?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ]
    },
    {
      "id": "28911de3f006581a74ba2de8b848a4933fb0f74914d6ab05d26a337fa54d569e",
      "category": "container_scanning",
      "message": "CVE-2024-24790 on stdlib@1.20.6",
      "description": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.",
      "cve": "CVE-2024-24790",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade stdlib@1.20.6 to 1.21.11",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/stdlib@1.20.6"
          },
          "version": "1.20.6"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-24790",
          "value": "CVE-2024-24790",
          "url": "https://scout.docker.com/v/CVE-2024-24790?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-24790?s=golang&n=stdlib&t=golang&vr=%3C1.21.11"
        }
      ]
    },
    {
      "id": "2c07a1fb7077b7150091eb87e99811574bd6264d6742900796f7b3f33d5d111e",
      "category": "container_scanning",
      "message": "CVE-2024-23652 on github.com/moby/buildkit@0.9.1-0.20211019185819-8778943ac3da",
      "description": "### Impact\nA malicious BuildKit frontend or Dockerfile using `RUN --mount` could trick the feature that removes empty files created for the mountpoints into removing a file outside the container, from the host system.\n\n### Patches\nThe issue has been fixed in v0.12.5\n\n### Workarounds\nAvoid using BuildKit frontend from an untrusted source or building an untrusted Dockerfile containing `RUN --mount` feature.\n\n### References\n\n",
      "cve": "CVE-2024-23652",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade github.com/moby/buildkit@0.9.1-0.20211019185819-8778943ac3da to 0.12.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:golang/github.com/moby/buildkit@0.9.1-0.20211019185819-8778943ac3da"
          },
          "version": "0.9.1-0.20211019185819-8778943ac3da"
        },
        "operating_system": "ubuntu 20.04",
        "image": "jetbrains/teamcity-agent:2023.05.3"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-23652",
          "value": "CVE-2024-23652",
          "url": "https://scout.docker.com/v/CVE-2024-23652?s=github&n=buildkit&ns=github.com%2Fmoby&t=golang&vr=%3C0.12.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-23652?s=github&n=buildkit&ns=github.com%2Fmoby&t=golang&vr=%3C0.12.5"
        }
      ]
    }
  ],
  "remediations": [],
  "scan": {
    "start_time": "2025-09-28T12:34:40",
    "end_time": "2025-09-28T12:34:40",
    "status": "success",
    "type": "container_scanning",
    "scanner": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    },
    "analyzer": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    }
  }
}
