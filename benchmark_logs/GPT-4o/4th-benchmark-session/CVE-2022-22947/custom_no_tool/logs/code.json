{
    "file_name": [
        "./../../dockers/CVE-2022-22947/custom_no_tool/docker-compose.yml",
        "./../../dockers/CVE-2022-22947/custom_no_tool/Dockerfile",
        "./../../dockers/CVE-2022-22947/custom_no_tool/application.yml",
        "./../../dockers/CVE-2022-22947/custom_no_tool/nginx.conf",
        "./../../dockers/CVE-2022-22947/custom_no_tool/gradlew",
        "./../../dockers/CVE-2022-22947/custom_no_tool/gradle/wrapper/gradle-wrapper.properties"
    ],
    "file_code": [
        "services:\n  spring-cloud-gateway:\n    build: .\n    ports:\n      - \"8080:8080\"\n    networks:\n      - mynetwork\n\n  mysql:\n    image: mysql:5.7\n    environment:\n      MYSQL_ROOT_PASSWORD: rootpassword\n      MYSQL_DATABASE: testdb\n    ports:\n      - \"3306:3306\"\n    networks:\n      - mynetwork\n\n  nginx:\n    image: nginx:1.21-alpine\n    volumes:\n      - ./nginx.conf:/etc/nginx/nginx.conf\n    ports:\n      - \"80:80\"\n    networks:\n      - mynetwork\n\nnetworks:\n  mynetwork:\n    driver: bridge\n",
        "FROM openjdk:8-jdk-alpine AS builder\n\n# Install wget to download the Gradle Wrapper\nRUN apk add --no-cache wget\n\n# Set up Gradle Wrapper\nWORKDIR /app\nRUN wget https://services.gradle.org/distributions/gradle-7.2-bin.zip -P /tmp && \\\n    mkdir /app/gradle && \\\n    unzip /tmp/gradle-7.2-bin.zip -d /app/gradle && \\\n    rm /tmp/gradle-7.2-bin.zip\n\n# Copy the entire project directory into the Docker image\nCOPY . /app\n\n# Ensure gradlew has execute permissions\nRUN chmod +x /app/gradlew\n\n# Use the Gradle Wrapper to build the project\nRUN ./gradlew clean build\n\nFROM openjdk:8-jdk-alpine\n\nCOPY --from=builder /app/build/libs/spring-cloud-gateway.jar /app/spring-cloud-gateway.jar\n\nWORKDIR /app\n\nCMD [\"java\", \"-jar\", \"spring-cloud-gateway.jar\"]\n",
        "server:\n  port: 8080\n\nspring:\n  cloud:\n    gateway:\n      routes:\n        - id: sample_route\n          uri: http://example.org\n          predicates:\n            - Path=/example/**\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n",
        "events {\n    worker_connections 1024;\n}\n\nhttp {\n    server {\n        listen 80;\n\n        location / {\n            proxy_pass http://spring-cloud-gateway:8080;\n        }\n    }\n}\n",
        "#!/usr/bin/env sh\n\n# This is a placeholder for the gradlew script, which should be generated by the Gradle Wrapper\n# In a real project, this script would bootstrap the Gradle build system\n\nif [ -z \"$GRADLE_HOME\" ]; then\n  GRADLE_HOME=\"/app/gradle\"\nfi\n\nexec \"$GRADLE_HOME/bin/gradle\" \"$@\"\n",
        "distributionBase=GRADLE_USER_HOME\ndistributionPath=wrapper/dists\nzipStoreBase=GRADLE_USER_HOME\nzipStorePath=wrapper/dists\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-7.2-bin.zip\n"
    ],
    "directory_tree": "./../../dockers/CVE-2022-22947/custom_no_tool\n|-- docker-compose.yml\n|-- Dockerfile\n|-- application.yml\n|-- nginx.conf\n|-- gradlew\n|-- gradle\n|   |-- wrapper\n|       |-- gradle-wrapper.properties\n"
}