{
  "version": "15.0.6",
  "vulnerabilities": [
    {
      "id": "981d544affbb95d265d23199c97965ba90bed20307302da2abfb57e60531f804",
      "category": "container_scanning",
      "message": "CVE-2014-1624 on pyxdg@0.25",
      "description": "Race condition in the `xdg.BaseDirectory.get_runtime_dir` function in pyxdg 0.25 allows local users to overwrite arbitrary files by pre-creating `/tmp/pyxdg-runtime-dir-fallback-victim` to point to a victim-owned location, then replacing it with a symlink to an attacker-controlled location once the `get_runtime_dir` function is called.",
      "cve": "CVE-2014-1624",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade pyxdg@0.25 to 0.26",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/pyxdg@0.25"
          },
          "version": "0.25"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2014-1624",
          "value": "CVE-2014-1624",
          "url": "https://scout.docker.com/v/CVE-2014-1624?s=github&n=pyxdg&t=pypi&vr=%3C%3D0.25"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2014-1624?s=github&n=pyxdg&t=pypi&vr=%3C%3D0.25"
        }
      ]
    },
    {
      "id": "3051b3b0e4b0df0a51e58046da99c0ba3f3bc42b214ff3715ed0e70bb6f1a9a5",
      "category": "container_scanning",
      "message": "CVE-2024-39689 on certifi@2021.10.8",
      "description": "Certifi 2024.07.04 removes root certificates from \"GLOBALTRUST\" from the root store. These are in the process of being removed from Mozilla's trust store.\n\nGLOBALTRUST's root certificates are being removed pursuant to an investigation which identified \"long-running and unresolved compliance issues\". Conclusions of Mozilla's investigation can be found [here]( https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/XpknYMPO8dI).",
      "cve": "CVE-2024-39689",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade certifi@2021.10.8 to 2024.7.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/certifi@2021.10.8"
          },
          "version": "2021.10.8"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-39689",
          "value": "CVE-2024-39689",
          "url": "https://scout.docker.com/v/CVE-2024-39689?s=github&n=certifi&t=pypi&vr=%3E%3D2021.5.30%2C%3C2024.7.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-39689?s=github&n=certifi&t=pypi&vr=%3E%3D2021.5.30%2C%3C2024.7.4"
        }
      ]
    },
    {
      "id": "615140d496c890201d592d4cff486839c93fd150079f64e7f0a71640a26a22ea",
      "category": "container_scanning",
      "message": "GHSA-5cpq-8wj7-hf2v on cryptography@2.1.4",
      "description": "pyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 0.5-40.0.2 are vulnerable to a security issue. More details about the vulnerability itself can be found in https://www.openssl.org/news/secadv/20230530.txt.\n\nIf you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions.",
      "cve": "GHSA-5cpq-8wj7-hf2v",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade cryptography@2.1.4 to 41.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/cryptography@2.1.4"
          },
          "version": "2.1.4"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-5cpq-8wj7-hf2v",
          "value": "GHSA-5cpq-8wj7-hf2v",
          "url": "https://scout.docker.com/v/GHSA-5cpq-8wj7-hf2v?s=github&n=cryptography&t=pypi&vr=%3E%3D0.5%2C%3C%3D40.0.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-5cpq-8wj7-hf2v?s=github&n=cryptography&t=pypi&vr=%3E%3D0.5%2C%3C%3D40.0.2"
        }
      ]
    },
    {
      "id": "1bf31ca4130401ae2fb8a8736cbe485b0c9ebd49930c7d57df36bd25cff3c00b",
      "category": "container_scanning",
      "message": "GHSA-jm77-qphf-c4w8 on cryptography@2.1.4",
      "description": "pyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 0.8-41.0.2 are vulnerable to several security issues. More details about the vulnerabilities themselves can be found in https://www.openssl.org/news/secadv/20230731.txt, https://www.openssl.org/news/secadv/20230719.txt, and https://www.openssl.org/news/secadv/20230714.txt.\n\nIf you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions.",
      "cve": "GHSA-jm77-qphf-c4w8",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade cryptography@2.1.4 to 41.0.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/cryptography@2.1.4"
          },
          "version": "2.1.4"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-jm77-qphf-c4w8",
          "value": "GHSA-jm77-qphf-c4w8",
          "url": "https://scout.docker.com/v/GHSA-jm77-qphf-c4w8?s=github&n=cryptography&t=pypi&vr=%3E%3D0.8%2C%3C41.0.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-jm77-qphf-c4w8?s=github&n=cryptography&t=pypi&vr=%3E%3D0.8%2C%3C41.0.3"
        }
      ]
    },
    {
      "id": "0a3b78893f9f21ae53bd5e60ff27422ec37bcf336928ac45af8bb804e2f4c1e2",
      "category": "container_scanning",
      "message": "CVE-2022-22935 on salt@3000.1",
      "description": "An issue was discovered in SaltStack Salt in versions before 3002.8, 3003.4, 3004.1. A minion authentication denial of service can cause a MiTM attacker to force a minion process to stop by impersonating a master.",
      "cve": "CVE-2022-22935",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3002.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-22935",
          "value": "CVE-2022-22935",
          "url": "https://scout.docker.com/v/CVE-2022-22935?s=github&n=salt&t=pypi&vr=%3C3002.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-22935?s=github&n=salt&t=pypi&vr=%3C3002.8"
        }
      ]
    },
    {
      "id": "4c7f3840ada88063d02e632eba8881e7ebfc6844f324e95312938ed11c55a5e3",
      "category": "container_scanning",
      "message": "CVE-2023-20898 on salt@3000.1",
      "description": "Git Providers can read from the wrong environment because they get the same cache directory base name in Salt masters prior to 3005.2 or 3006.2. Anything that uses Git Providers with different environments can get garbage data or the wrong data, which can lead to wrongful data disclosure, wrongful executions, data corruption and/or crash.",
      "cve": "CVE-2023-20898",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3005.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-20898",
          "value": "CVE-2023-20898",
          "url": "https://scout.docker.com/v/CVE-2023-20898?s=github&n=salt&t=pypi&vr=%3C3005.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-20898?s=github&n=salt&t=pypi&vr=%3C3005.2"
        }
      ]
    },
    {
      "id": "7b058bb107da7922c8dc7e78015f9f6c79f5987918714dfc5a929e132609c82e",
      "category": "container_scanning",
      "message": "CVE-2021-25284 on salt@3000.1",
      "description": "An issue was discovered in through SaltStack Salt before 3002.5. `salt.modules.cmdmod` can log credentials to the info or error log level.",
      "cve": "CVE-2021-25284",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3000.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-25284",
          "value": "CVE-2021-25284",
          "url": "https://scout.docker.com/v/CVE-2021-25284?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-25284?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ]
    },
    {
      "id": "a55681bcf6f5f5606484707db8d387f7449e44ec808fe83c48a710b215c26eba",
      "category": "container_scanning",
      "message": "CVE-2024-22231 on salt@3000.1",
      "description": "Syndic cache directory creation is vulnerable to a directory traversal attack in salt project which can lead a malicious attacker to create an arbitrary directory on a Salt master.",
      "cve": "CVE-2024-22231",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3005.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-22231",
          "value": "CVE-2024-22231",
          "url": "https://scout.docker.com/v/CVE-2024-22231?s=github&n=salt&t=pypi&vr=%3C3005.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-22231?s=github&n=salt&t=pypi&vr=%3C3005.5"
        }
      ]
    },
    {
      "id": "cd804916b95787e381eb496c7b6b0846adee4dd7509c034daeac301f6caa8098",
      "category": "container_scanning",
      "message": "CVE-2023-20897 on salt@3000.1",
      "description": "Salt masters prior to 3005.2 or 3006.2 contain a DOS in minion return. After receiving several bad packets on the request server equal to the number of worker threads, the master will become unresponsive to return requests until restarted.",
      "cve": "CVE-2023-20897",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3005.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-20897",
          "value": "CVE-2023-20897",
          "url": "https://scout.docker.com/v/CVE-2023-20897?s=github&n=salt&t=pypi&vr=%3C3005.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-20897?s=github&n=salt&t=pypi&vr=%3C3005.2"
        }
      ]
    },
    {
      "id": "2e39adf172abf39f2f13f2e3140425ce3c9933644b765d77413ef272778dd7db",
      "category": "container_scanning",
      "message": "CVE-2024-47081 on requests@2.27.1",
      "description": "### Impact\n\nDue to a URL parsing issue, Requests releases prior to 2.32.4 may leak .netrc credentials to third parties for specific maliciously-crafted URLs.\n\n### Workarounds\nFor older versions of Requests, use of the .netrc file can be disabled with `trust_env=False` on your Requests Session ([docs](https://requests.readthedocs.io/en/latest/api/#requests.Session.trust_env)).\n\n### References\nhttps://github.com/psf/requests/pull/6965\nhttps://seclists.org/fulldisclosure/2025/Jun/2",
      "cve": "CVE-2024-47081",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade requests@2.27.1 to 2.32.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/requests@2.27.1"
          },
          "version": "2.27.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47081",
          "value": "CVE-2024-47081",
          "url": "https://scout.docker.com/v/CVE-2024-47081?s=github&n=requests&t=pypi&vr=%3C2.32.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47081?s=github&n=requests&t=pypi&vr=%3C2.32.4"
        }
      ]
    },
    {
      "id": "0f96078d5b49193bb4db45b60c2c85a6f5e59636b0ec7a31f1ce4f4ffa43ec49",
      "category": "container_scanning",
      "message": "CVE-2025-50181 on urllib3@1.26.20",
      "description": "urllib3 handles redirects and retries using the same mechanism, which is controlled by the `Retry` object. The most common way to disable redirects is at the request level, as follows:\n\n```python\nresp = urllib3.request(\"GET\", \"https://httpbin.org/redirect/1\", redirect=False)\nprint(resp.status)\n# 302\n```\n\nHowever, it is also possible to disable redirects, for all requests, by instantiating a `PoolManager` and specifying `retries` in a way that disable redirects:\n\n```python\nimport urllib3\n\nhttp = urllib3.PoolManager(retries=0)  # should raise MaxRetryError on redirect\nhttp = urllib3.PoolManager(retries=urllib3.Retry(redirect=0))  # equivalent to the above\nhttp = urllib3.PoolManager(retries=False)  # should return the first response\n\nresp = http.request(\"GET\", \"https://httpbin.org/redirect/1\")\n```\n\nHowever, the `retries` parameter is currently ignored, which means all the above examples don't disable redirects.\n\n## Affected usages\n\nPassing `retries` on `PoolManager` instantiation to disable redirects or restrict their number.\n\nBy default, requests and botocore users are not affected.\n\n## Impact\n\nRedirects are often used to exploit SSRF vulnerabilities. An application attempting to mitigate SSRF or open redirect vulnerabilities by disabling redirects at the PoolManager level will remain vulnerable.\n\n## Remediation\n\nYou can remediate this vulnerability with the following steps:\n\n * Upgrade to a patched version of urllib3. If your organization would benefit from the continued support of urllib3 1.x, please contact [sethmichaellarson@gmail.com](mailto:sethmichaellarson@gmail.com) to discuss sponsorship or contribution opportunities.\n * Disable redirects at the `request()` level instead of the `PoolManager()` level.",
      "cve": "CVE-2025-50181",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade urllib3@1.26.20 to 2.5.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/urllib3@1.26.20"
          },
          "version": "1.26.20"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-50181",
          "value": "CVE-2025-50181",
          "url": "https://scout.docker.com/v/CVE-2025-50181?s=github&n=urllib3&t=pypi&vr=%3C2.5.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-50181?s=github&n=urllib3&t=pypi&vr=%3C2.5.0"
        }
      ]
    },
    {
      "id": "674c760e99de2c7ed409d9c13555a12a6ce7b04060f2069e08f363b1f3a4df1a",
      "category": "container_scanning",
      "message": "CVE-2024-22195 on jinja2@2.11.3",
      "description": "The `xmlattr` filter in affected versions of Jinja accepts keys containing spaces. XML/HTML attributes cannot contain spaces, as each would then be interpreted as a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. Note that accepting keys as user input is not common or a particularly intended use case of the `xmlattr` filter, and an application doing so should already be verifying what keys are provided regardless of this fix.",
      "cve": "CVE-2024-22195",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade jinja2@2.11.3 to 3.1.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/jinja2@2.11.3"
          },
          "version": "2.11.3"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-22195",
          "value": "CVE-2024-22195",
          "url": "https://scout.docker.com/v/CVE-2024-22195?s=github&n=jinja2&t=pypi&vr=%3C3.1.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-22195?s=github&n=jinja2&t=pypi&vr=%3C3.1.3"
        }
      ]
    },
    {
      "id": "0c6664c83858b63af77f36536238f96b67454a8088f3060c0c8a1d2943b1e09c",
      "category": "container_scanning",
      "message": "CVE-2024-34064 on jinja2@2.11.3",
      "description": "The `xmlattr` filter in affected versions of Jinja accepts keys containing non-attribute characters. XML/HTML attributes cannot contain spaces, `/`, `>`, or `=`, as each would then be interpreted as starting a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. The fix for the previous GHSA-h5c8-rqwp-cp95 CVE-2024-22195 only addressed spaces but not other characters.\n\nAccepting keys as user input is now explicitly considered an unintended use case of the `xmlattr` filter, and code that does so without otherwise validating the input should be flagged as insecure, regardless of Jinja version. Accepting _values_ as user input continues to be safe.",
      "cve": "CVE-2024-34064",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade jinja2@2.11.3 to 3.1.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/jinja2@2.11.3"
          },
          "version": "2.11.3"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-34064",
          "value": "CVE-2024-34064",
          "url": "https://scout.docker.com/v/CVE-2024-34064?s=github&n=jinja2&t=pypi&vr=%3C3.1.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-34064?s=github&n=jinja2&t=pypi&vr=%3C3.1.4"
        }
      ]
    },
    {
      "id": "052b04a5072bd4c51c50b23370fb411e86872056f7f233a01d4066cefe4ec168",
      "category": "container_scanning",
      "message": "CVE-2024-56326 on jinja2@2.11.3",
      "description": "An oversight in how the Jinja sandboxed environment detects calls to `str.format` allows an attacker that controls the content of a template to execute arbitrary Python code.\n\nTo exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates.\n\nJinja's sandbox does catch calls to `str.format` and ensures they don't escape the sandbox. However, it's possible to store a reference to a malicious string's `format` method, then pass that to a filter that calls it. No such filters are built-in to Jinja, but could be present through custom filters in an application. After the fix, such indirect calls are also handled by the sandbox.",
      "cve": "CVE-2024-56326",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade jinja2@2.11.3 to 3.1.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/jinja2@2.11.3"
          },
          "version": "2.11.3"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-56326",
          "value": "CVE-2024-56326",
          "url": "https://scout.docker.com/v/CVE-2024-56326?s=github&n=jinja2&t=pypi&vr=%3C%3D3.1.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-56326?s=github&n=jinja2&t=pypi&vr=%3C%3D3.1.4"
        }
      ]
    },
    {
      "id": "e9d010ef316f444029527b7aeb499e868c9030af9ba758ce8ebf07adc68ac8be",
      "category": "container_scanning",
      "message": "CVE-2025-27516 on jinja2@2.11.3",
      "description": "An oversight in how the Jinja sandboxed environment interacts with the `|attr` filter allows an attacker that controls the content of a template to execute arbitrary Python code.\n\nTo exploit the vulnerability, an attacker needs to control the content of a template. Whether that is the case depends on the type of application using Jinja. This vulnerability impacts users of applications which execute untrusted templates.\n\nJinja's sandbox does catch calls to `str.format` and ensures they don't escape the sandbox. However, it's possible to use the `|attr` filter to get a reference to a string's plain format method, bypassing the sandbox. After the fix, the `|attr` filter no longer bypasses the environment's attribute lookup.",
      "cve": "CVE-2025-27516",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade jinja2@2.11.3 to 3.1.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/jinja2@2.11.3"
          },
          "version": "2.11.3"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-27516",
          "value": "CVE-2025-27516",
          "url": "https://scout.docker.com/v/CVE-2025-27516?s=github&n=jinja2&t=pypi&vr=%3C%3D3.1.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-27516?s=github&n=jinja2&t=pypi&vr=%3C%3D3.1.5"
        }
      ]
    },
    {
      "id": "3cd66270653036805290d741cc150dae1844cc17f3abbdebebf982495c7fac8c",
      "category": "container_scanning",
      "message": "CVE-2020-17490 on salt@3000.1",
      "description": "The TLS module within SaltStack Salt through 3002 creates certificates with weak file permissions.",
      "cve": "CVE-2020-17490",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3000.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-17490",
          "value": "CVE-2020-17490",
          "url": "https://scout.docker.com/v/CVE-2020-17490?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-17490?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.4"
        }
      ]
    },
    {
      "id": "3b1b86c7a2e64196859f59e060b8d7c1d64c609484b4113074ecd2ebf660918a",
      "category": "container_scanning",
      "message": "CVE-2024-0727 on cryptography@2.1.4",
      "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
      "cve": "CVE-2024-0727",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade cryptography@2.1.4 to 42.0.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/cryptography@2.1.4"
          },
          "version": "2.1.4"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-0727",
          "value": "CVE-2024-0727",
          "url": "https://scout.docker.com/v/CVE-2024-0727?s=github&n=cryptography&t=pypi&vr=%3C42.0.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-0727?s=github&n=cryptography&t=pypi&vr=%3C42.0.2"
        }
      ]
    },
    {
      "id": "d6269a904c7077a018e74e6aeff8e0939274e8fc4f624ce0a0aee23f29f0f952",
      "category": "container_scanning",
      "message": "CVE-2024-35195 on requests@2.27.1",
      "description": "When making requests through a Requests `Session`, if the first request is made with `verify=False` to disable cert verification, all subsequent requests to the same origin will continue to ignore cert verification regardless of changes to the value of `verify`. This behavior will continue for the lifecycle of the connection in the connection pool.\n\n### Remediation\nAny of these options can be used to remediate the current issue, we highly recommend upgrading as the preferred mitigation.\n\n* Upgrade to `requests>=2.32.0`.\n* For `requests<2.32.0`, avoid setting `verify=False` for the first request to a host while using a Requests Session.\n* For `requests<2.32.0`, call `close()` on `Session` objects to clear existing connections if `verify=False` is used.\n\n### Related Links\n* https://github.com/psf/requests/pull/6655",
      "cve": "CVE-2024-35195",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade requests@2.27.1 to 2.32.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/requests@2.27.1"
          },
          "version": "2.27.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-35195",
          "value": "CVE-2024-35195",
          "url": "https://scout.docker.com/v/CVE-2024-35195?s=github&n=requests&t=pypi&vr=%3C2.32.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-35195?s=github&n=requests&t=pypi&vr=%3C2.32.0"
        }
      ]
    },
    {
      "id": "04ccb62d67de91629091ded4388b993419be09d54aa635e835e654f15d6c4c59",
      "category": "container_scanning",
      "message": "CVE-2022-23491 on certifi@2021.10.8",
      "description": "Certifi 2022.12.07 removes root certificates from \"TrustCor\" from the root store. These are in the process of being removed from Mozilla's trust store.\n\nTrustCor's root certificates are being removed pursuant to an investigation prompted by media reporting that TrustCor's ownership also operated a business that produced spyware. Conclusions of Mozilla's investigation can be found [here](https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/oxX69KFvsm4/m/yLohoVqtCgAJ).",
      "cve": "CVE-2022-23491",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade certifi@2021.10.8 to 2022.12.07",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/certifi@2021.10.8"
          },
          "version": "2021.10.8"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-23491",
          "value": "CVE-2022-23491",
          "url": "https://scout.docker.com/v/CVE-2022-23491?s=github&n=certifi&t=pypi&vr=%3E%3D2017.11.05%2C%3C2022.12.07"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-23491?s=github&n=certifi&t=pypi&vr=%3E%3D2017.11.05%2C%3C2022.12.07"
        }
      ]
    },
    {
      "id": "ed5d40e49315cf56376805633f976a7918e114b65c5f1904212861ef84422aae",
      "category": "container_scanning",
      "message": "CVE-2025-8869 on pip@9.0.1",
      "description": "When extracting a tar archive pip may not check symbolic links point into the extraction directory if the tarfile module doesn't implement PEP 706.\nNote that upgrading pip to a \"fixed\" version for this vulnerability doesn't fix all known vulnerabilities that are remediated by using a Python version that implements PEP 706.\n\nNote that this is a vulnerability in pip's fallback implementation of tar extraction for Python versions that don't implement PEP 706\nand therefore are not secure to all vulnerabilities in the Python 'tarfile' module. If you're using a Python version that implements PEP 706\nthen pip doesn't use the \"vulnerable\" fallback code.\n\nMitigations include upgrading to a version of pip that includes the fix, upgrading to a Python version that implements PEP 706 (Python >=3.9.17, >=3.10.12, >=3.11.4, or >=3.12), applying the linked patch, or inspecting source distributions (sdists) before installation as is already a best-practice.",
      "cve": "CVE-2025-8869",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade pip@9.0.1 to 25.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/pip@9.0.1"
          },
          "version": "9.0.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-8869",
          "value": "CVE-2025-8869",
          "url": "https://scout.docker.com/v/CVE-2025-8869?s=github&n=pip&t=pypi&vr=%3C25.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-8869?s=github&n=pip&t=pypi&vr=%3C25.2"
        }
      ]
    },
    {
      "id": "1ca914469c3deb5d44c68cc62172bf624d5daa478406156ffb60d613830cd92c",
      "category": "container_scanning",
      "message": "CVE-2023-32681 on requests@2.27.1",
      "description": "### Impact\n\nSince Requests v2.3.0, Requests has been vulnerable to potentially leaking `Proxy-Authorization` headers to destination servers, specifically during redirects to an HTTPS origin. This is a product of how `rebuild_proxies` is used to recompute and [reattach the `Proxy-Authorization` header](https://github.com/psf/requests/blob/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773/requests/sessions.py#L319-L328) to requests when redirected. Note this behavior has _only_ been observed to affect proxied requests when credentials are supplied in the URL user information component (e.g. `https://username:password@proxy:8080`).\n\n**Current vulnerable behavior(s):**\n\n1. HTTP → HTTPS: **leak**\n2. HTTPS → HTTP: **no leak**\n3. HTTPS → HTTPS: **leak**\n4. HTTP → HTTP: **no leak**\n\nFor HTTP connections sent through the proxy, the proxy will identify the header in the request itself and remove it prior to forwarding to the destination server. However when sent over HTTPS, the `Proxy-Authorization` header must be sent in the CONNECT request as the proxy has no visibility into further tunneled requests. This results in Requests forwarding the header to the destination server unintentionally, allowing a malicious actor to potentially exfiltrate those credentials.\n\nThe reason this currently works for HTTPS connections in Requests is the `Proxy-Authorization` header is also handled by urllib3 with our usage of the ProxyManager in adapters.py with [`proxy_manager_for`](https://github.com/psf/requests/blob/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773/requests/adapters.py#L199-L235). This will compute the required proxy headers in `proxy_headers` and pass them to the Proxy Manager, avoiding attaching them directly to the Request object. This will be our preferred option going forward for default usage.\n\n### Patches\nStarting in Requests v2.31.0, Requests will no longer attach this header to redirects with an HTTPS destination. This should have no negative impacts on the default behavior of the library as the proxy credentials are already properly being handled by urllib3's ProxyManager.\n\nFor users with custom adapters, this _may_ be potentially breaking if you were already working around this behavior. The previous functionality of `rebuild_proxies` doesn't make sense in any case, so we would encourage any users impacted to migrate any handling of Proxy-Authorization directly into their custom adapter.\n\n### Workarounds\nFor users who are not able to update Requests immediately, there is one potential workaround.\n\nYou may disable redirects by setting `allow_redirects` to `False` on all calls through Requests top-level APIs. Note that if you're currently relying on redirect behaviors, you will need to capture the 3xx response codes and ensure a new request is made to the redirect destination.\n```\nimport requests\nr = requests.get('http://github.com/', allow_redirects=False)\n```\n\n### Credits\n\nThis vulnerability was discovered and disclosed by the following individuals.\n\nDennis Brinkrolf, Haxolot (https://haxolot.com/)\nTobias Funke, (tobiasfunke93@gmail.com)",
      "cve": "CVE-2023-32681",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade requests@2.27.1 to 2.31.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/requests@2.27.1"
          },
          "version": "2.27.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-32681",
          "value": "CVE-2023-32681",
          "url": "https://scout.docker.com/v/CVE-2023-32681?s=github&n=requests&t=pypi&vr=%3E%3D2.3.0%2C%3C2.31.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-32681?s=github&n=requests&t=pypi&vr=%3E%3D2.3.0%2C%3C2.31.0"
        }
      ]
    },
    {
      "id": "e455c0d22161ad1c7235f40fa9f289cd423bc18013e389cbd420edce6af198dc",
      "category": "container_scanning",
      "message": "CVE-2023-34049 on salt@3000.1",
      "description": "The Salt-SSH pre-flight option copies the script to the target at a predictable path, which allows an attacker to force Salt-SSH to run their script. If an attacker has access to the target VM and knows the path to the pre-flight script before it runs they can ensure Salt-SSH runs their script with the privileges of the user running Salt-SSH. Do not make the copy path on the target predictable and ensure we check return codes of the scp command if the copy fails.",
      "cve": "CVE-2023-34049",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3005.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-34049",
          "value": "CVE-2023-34049",
          "url": "https://scout.docker.com/v/CVE-2023-34049?s=github&n=salt&t=pypi&vr=%3C3005.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-34049?s=github&n=salt&t=pypi&vr=%3C3005.4"
        }
      ]
    },
    {
      "id": "508db234804f804fe2962aa88229d09fb1692a880afd23cfabac4db1a6a32a1e",
      "category": "container_scanning",
      "message": "CVE-2023-5752 on pip@9.0.1",
      "description": "When installing a package from a Mercurial VCS URL, e.g. `pip install hg+...`, with pip prior to v23.3, the specified Mercurial revision could be used to inject arbitrary configuration options to the `hg clone` call (e.g. `--config`). Controlling the Mercurial configuration can modify how and which repository is installed. This vulnerability does not affect users who aren't installing from Mercurial.",
      "cve": "CVE-2023-5752",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade pip@9.0.1 to 23.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/pip@9.0.1"
          },
          "version": "9.0.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-5752",
          "value": "CVE-2023-5752",
          "url": "https://scout.docker.com/v/CVE-2023-5752?s=github&n=pip&t=pypi&vr=%3C23.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-5752?s=github&n=pip&t=pypi&vr=%3C23.3"
        }
      ]
    },
    {
      "id": "d6bc551abf9d2408e2aaa2a59fb48d0e58a976688fc34834dcb56b2c1b7f0931",
      "category": "container_scanning",
      "message": "CVE-2023-23931 on cryptography@2.1.4",
      "description": "Previously, `Cipher.update_into` would accept Python objects which implement the buffer protocol, but provide only immutable buffers:\n\n```pycon\n>>> outbuf = b\"\\x00\" * 32\n>>> c = ciphers.Cipher(AES(b\"\\x00\" * 32), modes.ECB()).encryptor()\n>>> c.update_into(b\"\\x00\" * 16, outbuf)\n16\n>>> outbuf\nb'\\xdc\\x95\\xc0x\\xa2@\\x89\\x89\\xadH\\xa2\\x14\\x92\\x84 \\x87\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n```\n\nThis would allow immutable objects (such as `bytes`) to be mutated, thus violating fundamental rules of Python. This is a soundness bug -- it allows programmers to misuse an API, it cannot be exploited by attacker controlled data alone.\n\nThis now correctly raises an exception.\n\nThis issue has been present since `update_into` was originally introduced in cryptography 1.8.",
      "cve": "CVE-2023-23931",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade cryptography@2.1.4 to 39.0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/cryptography@2.1.4"
          },
          "version": "2.1.4"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-23931",
          "value": "CVE-2023-23931",
          "url": "https://scout.docker.com/v/CVE-2023-23931?s=github&n=cryptography&t=pypi&vr=%3E%3D1.8%2C%3C39.0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-23931?s=github&n=cryptography&t=pypi&vr=%3E%3D1.8%2C%3C39.0.1"
        }
      ]
    },
    {
      "id": "ee4023822704fafc2fa0196c644bd147d966191a6e85876e00a1e26e6c3a62bb",
      "category": "container_scanning",
      "message": "CVE-2024-3651 on idna@2.6",
      "description": "### Impact\nA specially crafted argument to the `idna.encode()` function could consume significant resources. This may lead to a denial-of-service.\n\n### Patches\nThe function has been refined to reject such strings without the associated resource consumption in version 3.7.\n\n### Workarounds\nDomain names cannot exceed 253 characters in length, if this length limit is enforced prior to passing the domain to the `idna.encode()` function it should no longer consume significant resources. This is triggered by arbitrarily large inputs that would not occur in normal usage, but may be passed to the library assuming there is no preliminary input validation by the higher-level application.\n\n### References\n* https://huntr.com/bounties/93d78d07-d791-4b39-a845-cbfabc44aadb",
      "cve": "CVE-2024-3651",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade idna@2.6 to 3.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/idna@2.6"
          },
          "version": "2.6"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-3651",
          "value": "CVE-2024-3651",
          "url": "https://scout.docker.com/v/CVE-2024-3651?s=github&n=idna&t=pypi&vr=%3C3.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-3651?s=github&n=idna&t=pypi&vr=%3C3.7"
        }
      ]
    },
    {
      "id": "9ad4fa9eb7c2f50077c52ba2e62fd62dea20cbc8e6a86ca3d527178a7e4a6e71",
      "category": "container_scanning",
      "message": "CVE-2023-24329 on ubuntu/python2.7@2.7.17-1~18.04ubuntu1.11",
      "description": "An issue in the urllib.parse component of Python before 3.11.4 allows attackers to bypass blocklisting methods by supplying a URL that starts with blank characters.",
      "cve": "CVE-2023-24329",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ubuntu/python2.7@2.7.17-1~18.04ubuntu1.11 to 2.7.17-1~18.04ubuntu1.13",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:deb/ubuntu/python2.7@2.7.17-1~18.04ubuntu1.11?os_distro=bionic&os_name=ubuntu&os_version=18.04"
          },
          "version": "2.7.17-1~18.04ubuntu1.11"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-24329",
          "value": "CVE-2023-24329",
          "url": "https://scout.docker.com/v/CVE-2023-24329?s=ubuntu&n=python2.7&ns=ubuntu&t=deb&osn=ubuntu&osv=18.04&vr=%3C2.7.17-1%7E18.04ubuntu1.13"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-24329?s=ubuntu&n=python2.7&ns=ubuntu&t=deb&osn=ubuntu&osv=18.04&vr=%3C2.7.17-1%7E18.04ubuntu1.13"
        }
      ]
    },
    {
      "id": "35f9d8d64edad17c2ff09d912628aa955bde71930e26c98f37cfbd19452034f6",
      "category": "container_scanning",
      "message": "CVE-2020-11652 on salt@3000.1",
      "description": "An issue was discovered in SaltStack Salt before 2019.2.4 and 3000 before 3000.2. The salt-master process ClearFuncs class allows access to some methods that improperly sanitize paths. These methods allow arbitrary directory access to authenticated users.",
      "cve": "CVE-2020-11652",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3000.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-11652",
          "value": "CVE-2020-11652",
          "url": "https://scout.docker.com/v/CVE-2020-11652?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-11652?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.2"
        }
      ]
    },
    {
      "id": "5862e1c773d48a9da1da21db5b5261e5f694fe7fe7ebc07d93df2dc6309ba7fc",
      "category": "container_scanning",
      "message": "CVE-2021-3572 on pip@9.0.1",
      "description": "A flaw was found in python-pip in the way it handled Unicode separators in git references. A remote attacker could possibly use this issue to install a different revision on a repository. The highest threat from this vulnerability is to data integrity. This is fixed in python-pip version 21.1.",
      "cve": "CVE-2021-3572",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade pip@9.0.1 to 21.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/pip@9.0.1"
          },
          "version": "9.0.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-3572",
          "value": "CVE-2021-3572",
          "url": "https://scout.docker.com/v/CVE-2021-3572?s=github&n=pip&t=pypi&vr=%3C21.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-3572?s=github&n=pip&t=pypi&vr=%3C21.1"
        }
      ]
    },
    {
      "id": "8de879f832d1570f6ea779c3fe03348f3fbf341d814884b949346fab23979881",
      "category": "container_scanning",
      "message": "CVE-2020-35662 on salt@3000.1",
      "description": "In SaltStack Salt before 3002.5, when authenticating to services using certain modules, the SSL certificate is not always validated.",
      "cve": "CVE-2020-35662",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3000.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-35662",
          "value": "CVE-2020-35662",
          "url": "https://scout.docker.com/v/CVE-2020-35662?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-35662?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ]
    },
    {
      "id": "dc8b64b7fda1e0be83aed04a6c542e8f08da25d9668b08768a4aa1a69f1ff0fc",
      "category": "container_scanning",
      "message": "CVE-2023-0286 on cryptography@2.1.4",
      "description": "pyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 0.8.1-39.0.0  are vulnerable to a security issue. More details about the vulnerabilities themselves can be found in https://www.openssl.org/news/secadv/20221213.txt and https://www.openssl.org/news/secadv/20230207.txt.\n\nIf you are building cryptography source (\"sdist\") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions.",
      "cve": "CVE-2023-0286",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade cryptography@2.1.4 to 39.0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/cryptography@2.1.4"
          },
          "version": "2.1.4"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-0286",
          "value": "CVE-2023-0286",
          "url": "https://scout.docker.com/v/CVE-2023-0286?s=github&n=cryptography&t=pypi&vr=%3E%3D0.8.1%2C%3C39.0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-0286?s=github&n=cryptography&t=pypi&vr=%3E%3D0.8.1%2C%3C39.0.1"
        }
      ]
    },
    {
      "id": "89d9f357ce72991d12ce91b9ca5997c02dc9d0b411f997b47833a699a6be2d48",
      "category": "container_scanning",
      "message": "CVE-2019-12761 on pyxdg@0.25",
      "description": "A code injection issue was discovered in PyXDG before 0.26 via crafted Python code in a Category element of a Menu XML document in a .menu file. XDG_CONFIG_DIRS must be set up to trigger xdg.Menu.parse parsing within the directory containing this file. This is due to a lack of sanitization in xdg/Menu.py before an eval call.",
      "cve": "CVE-2019-12761",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade pyxdg@0.25 to 0.26",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/pyxdg@0.25"
          },
          "version": "0.25"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-12761",
          "value": "CVE-2019-12761",
          "url": "https://scout.docker.com/v/CVE-2019-12761?s=github&n=pyxdg&t=pypi&vr=%3C0.26"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-12761?s=github&n=pyxdg&t=pypi&vr=%3C0.26"
        }
      ]
    },
    {
      "id": "79fd3f6401745f815a1a00bcb7ca52f052b6c4016aef8c6475d23c54e0a8f386",
      "category": "container_scanning",
      "message": "CVE-2021-21996 on salt@3000.1",
      "description": "An issue was discovered in SaltStack Salt before 3003.3. A user who has control of the source, and source_hash URLs can gain full file system access as root on a salt minion.",
      "cve": "CVE-2021-21996",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3003.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-21996",
          "value": "CVE-2021-21996",
          "url": "https://scout.docker.com/v/CVE-2021-21996?s=github&n=salt&t=pypi&vr=%3C3003.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-21996?s=github&n=salt&t=pypi&vr=%3C3003.3"
        }
      ]
    },
    {
      "id": "7fbaa5e23931c5173fe76d14dd90bd84d499528c03bf468624b6dd308d6c479c",
      "category": "container_scanning",
      "message": "CVE-2021-22004 on salt@3000.1",
      "description": "An issue was discovered in SaltStack Salt before 3003.3. The salt minion installer will accept and use a minion config file at C:\\salt\\conf if that file is in place before the installer is run. This allows for a malicious actor to subvert the proper behaviour of the given minion software.",
      "cve": "CVE-2021-22004",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3003.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-22004",
          "value": "CVE-2021-22004",
          "url": "https://scout.docker.com/v/CVE-2021-22004?s=github&n=salt&t=pypi&vr=%3C3003.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-22004?s=github&n=salt&t=pypi&vr=%3C3003.3"
        }
      ]
    },
    {
      "id": "e9a69b35dfcaa42598d410df71f99bb932d7be2592c8c63ed7c65d36e242206b",
      "category": "container_scanning",
      "message": "CVE-2022-40898 on wheel@0.30.0",
      "description": "Python Packaging Authority (PyPA) Wheel is a reference implementation of the Python wheel packaging standard. Wheel 0.37.1 and earlier are vulnerable to a Regular Expression denial of service via attacker controlled input to the wheel cli. The vulnerable regex is used to verify the validity of Wheel file names. This has been patched in version 0.38.1.",
      "cve": "CVE-2022-40898",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade wheel@0.30.0 to 0.38.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/wheel@0.30.0"
          },
          "version": "0.30.0"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-40898",
          "value": "CVE-2022-40898",
          "url": "https://scout.docker.com/v/CVE-2022-40898?s=github&n=wheel&t=pypi&vr=%3C0.38.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-40898?s=github&n=wheel&t=pypi&vr=%3C0.38.1"
        }
      ]
    },
    {
      "id": "028cd7b2b12aa34fd6536a07d1fdb245beb7bb4e3ec9724698fba21969c50c89",
      "category": "container_scanning",
      "message": "CVE-2023-37920 on certifi@2021.10.8",
      "description": "Certifi 2023.07.22 removes root certificates from \"e-Tugra\" from the root store. These are in the process of being removed from Mozilla's trust store.\n\n e-Tugra's root certificates are being removed pursuant to an investigation prompted by reporting of security issues in their systems. Conclusions of Mozilla's investigation can be found [here](https://groups.google.com/a/mozilla.org/g/dev-security-policy/c/C-HrP1SEq1A).",
      "cve": "CVE-2023-37920",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade certifi@2021.10.8 to 2023.7.22",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/certifi@2021.10.8"
          },
          "version": "2021.10.8"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-37920",
          "value": "CVE-2023-37920",
          "url": "https://scout.docker.com/v/CVE-2023-37920?s=github&n=certifi&t=pypi&vr=%3E%3D2015.4.28%2C%3C2023.7.22"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-37920?s=github&n=certifi&t=pypi&vr=%3E%3D2015.4.28%2C%3C2023.7.22"
        }
      ]
    },
    {
      "id": "053cca2e20f9d70d83eb22a44b285e30784f1d4ccfc608b7791ab769eaddc40d",
      "category": "container_scanning",
      "message": "CVE-2024-6345 on setuptools@39.0.1",
      "description": "A vulnerability in the `package_index` module of pypa/setuptools versions up to 69.1.1 allows for remote code execution via its download functions. These functions, which are used to download packages from URLs provided by users or retrieved from package index servers, are susceptible to code injection. If these functions are exposed to user-controlled inputs, such as package URLs, they can execute arbitrary commands on the system. The issue is fixed in version 70.0.",
      "cve": "CVE-2024-6345",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade setuptools@39.0.1 to 70.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/setuptools@39.0.1"
          },
          "version": "39.0.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-6345",
          "value": "CVE-2024-6345",
          "url": "https://scout.docker.com/v/CVE-2024-6345?s=github&n=setuptools&t=pypi&vr=%3C70.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-6345?s=github&n=setuptools&t=pypi&vr=%3C70.0.0"
        }
      ]
    },
    {
      "id": "b82bce0ffc18b0c619554b212d38f89af2ccc687e3a3b34d553d85e34488da69",
      "category": "container_scanning",
      "message": "CVE-2022-22967 on salt@3000.1",
      "description": "An issue was discovered in SaltStack Salt in versions before 3002.9, 3003.5, 3004.2. PAM auth fails to reject locked accounts, which allows a previously authorized user whose account is locked still run Salt commands when their account is locked. This affects both local shell accounts with an active session and salt-api users that authenticate via PAM eauth.",
      "cve": "CVE-2022-22967",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3002.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-22967",
          "value": "CVE-2022-22967",
          "url": "https://scout.docker.com/v/CVE-2022-22967?s=github&n=salt&t=pypi&vr=%3C3002.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-22967?s=github&n=salt&t=pypi&vr=%3C3002.9"
        }
      ]
    },
    {
      "id": "ed4aaafa811bc6f34f14d630b6ad03ede22299ed51693f4e4677ad899697624f",
      "category": "container_scanning",
      "message": "CVE-2024-22232 on salt@3000.1",
      "description": "A specially crafted url can be created which leads to a directory traversal in the salt file server.\nA malicious user can read an arbitrary file from a Salt master’s filesystem.",
      "cve": "CVE-2024-22232",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3005.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-22232",
          "value": "CVE-2024-22232",
          "url": "https://scout.docker.com/v/CVE-2024-22232?s=github&n=salt&t=pypi&vr=%3C3005.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-22232?s=github&n=salt&t=pypi&vr=%3C3005.5"
        }
      ]
    },
    {
      "id": "a42faa6b99d7d946773b730db37df0320b07d04c1fa42394b31e7a92e9523a99",
      "category": "container_scanning",
      "message": "CVE-2025-47273 on setuptools@39.0.1",
      "description": "### Summary \nA path traversal vulnerability in `PackageIndex` was fixed in setuptools version 78.1.1\n\n### Details\n```\n    def _download_url(self, url, tmpdir):\n        # Determine download filename\n        #\n        name, _fragment = egg_info_for_url(url)\n        if name:\n            while '..' in name:\n                name = name.replace('..', '.').replace('\\\\', '_')\n        else:\n            name = \"__downloaded__\"  # default if URL has no path contents\n\n        if name.endswith('.[egg.zip](http://egg.zip/)'):\n            name = name[:-4]  # strip the extra .zip before download\n\n -->       filename = os.path.join(tmpdir, name)\n```\n\nHere: https://github.com/pypa/setuptools/blob/6ead555c5fb29bc57fe6105b1bffc163f56fd558/setuptools/package_index.py#L810C1-L825C88\n\n`os.path.join()` discards the first argument `tmpdir` if the second begins with a slash or drive letter.\n`name` is derived from a URL without sufficient sanitization. While there is some attempt to sanitize by replacing instances of '..' with '.', it is insufficient.\n\n### Risk Assessment\nAs easy_install and package_index are deprecated, the exploitation surface is reduced.\nHowever, it seems this could be exploited in a similar fashion like https://github.com/advisories/GHSA-r9hx-vwmv-q579, and as described by POC 4 in https://github.com/advisories/GHSA-cx63-2mw6-8hw5 report: via malicious URLs present on the pages of a package index.\n\n### Impact\nAn attacker would be allowed to write files to arbitrary locations on the filesystem with the permissions of the process running the Python code, which could escalate to RCE depending on the context.\n\n### References\nhttps://huntr.com/bounties/d6362117-ad57-4e83-951f-b8141c6e7ca5\nhttps://github.com/pypa/setuptools/issues/4946",
      "cve": "CVE-2025-47273",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade setuptools@39.0.1 to 78.1.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/setuptools@39.0.1"
          },
          "version": "39.0.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-47273",
          "value": "CVE-2025-47273",
          "url": "https://scout.docker.com/v/CVE-2025-47273?s=github&n=setuptools&t=pypi&vr=%3C78.1.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-47273?s=github&n=setuptools&t=pypi&vr=%3C78.1.1"
        }
      ]
    },
    {
      "id": "c842affab81119699be94a7bd64186ba683acf950b03b442cae75f322fdc426b",
      "category": "container_scanning",
      "message": "CVE-2020-28243 on salt@3000.1",
      "description": "An issue was discovered in SaltStack Salt before 3002.5. The minion's `restartcheck` is vulnerable to command injection via a crafted process name. This allows for a local privilege escalation by any user able to create a files on the minion in a non-blacklisted directory.",
      "cve": "CVE-2020-28243",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3000.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-28243",
          "value": "CVE-2020-28243",
          "url": "https://scout.docker.com/v/CVE-2020-28243?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-28243?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ]
    },
    {
      "id": "a2e93dfea1d6aa7d0d5f834ec8ccd49cdd01809f097509a88ed470fdcabaa098",
      "category": "container_scanning",
      "message": "CVE-2021-25315 on salt@3000.1",
      "description": "A Incorrect Implementation of Authentication Algorithm vulnerability in of SUSE SUSE Linux Enterprise Server 15 SP 3; openSUSE Tumbleweed allows local attackers to execute arbitrary code via salt without the need to specify valid credentials. This issue affects: SUSE SUSE Linux Enterprise Server 15 SP 3 salt versions prior to 3002.2-3. openSUSE Tumbleweed salt version 3002.2-2.1 and prior versions.",
      "cve": "CVE-2021-25315",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3002.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-25315",
          "value": "CVE-2021-25315",
          "url": "https://scout.docker.com/v/CVE-2021-25315?s=github&n=salt&t=pypi&vr=%3C3002.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-25315?s=github&n=salt&t=pypi&vr=%3C3002.2"
        }
      ]
    },
    {
      "id": "4fbcf404ad24a18399e5ffd5c65979de8dfc63c68d2dbf9f8c4ce5f75e866211",
      "category": "container_scanning",
      "message": "CVE-2021-31607 on salt@3000.1",
      "description": "In SaltStack Salt 2016.9 through 3002.6, a command injection vulnerability exists in the snapper module that allows for local privilege escalation on a minion. The attack requires that a file is created with a pathname that is backed up by snapper, and that the master calls the snapper.diff function (which executes popen unsafely).",
      "cve": "CVE-2021-31607",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3003rc1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-31607",
          "value": "CVE-2021-31607",
          "url": "https://scout.docker.com/v/CVE-2021-31607?s=github&n=salt&t=pypi&vr=%3E%3D2016.11.0%2C%3C%3D3002.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-31607?s=github&n=salt&t=pypi&vr=%3E%3D2016.11.0%2C%3C%3D3002.6"
        }
      ]
    },
    {
      "id": "d4f04f963cb22faf03926b2ead785b6d5cc532cbc3c340ae47474ad360f7e737",
      "category": "container_scanning",
      "message": "CVE-2020-25659 on cryptography@2.1.4",
      "description": "RSA decryption was vulnerable to Bleichenbacher timing vulnerabilities, which would impact people using RSA decryption in online scenarios. This is fixed in cryptography 3.2. ",
      "cve": "CVE-2020-25659",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade cryptography@2.1.4 to 3.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/cryptography@2.1.4"
          },
          "version": "2.1.4"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-25659",
          "value": "CVE-2020-25659",
          "url": "https://scout.docker.com/v/CVE-2020-25659?s=github&n=cryptography&t=pypi&vr=%3C3.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-25659?s=github&n=cryptography&t=pypi&vr=%3C3.2"
        }
      ]
    },
    {
      "id": "7367e4d4f42752c40b5ce15fc0a504d95eeee83ed4508b4d05c373f98f86434f",
      "category": "container_scanning",
      "message": "CVE-2020-28972 on salt@3000.1",
      "description": "In SaltStack Salt before 3002.5, authentication to VMware vcenter, vsphere, and esxi servers (in the `vmware.py` files) does not always validate the SSL/TLS certificate.",
      "cve": "CVE-2020-28972",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3000.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-28972",
          "value": "CVE-2020-28972",
          "url": "https://scout.docker.com/v/CVE-2020-28972?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-28972?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ]
    },
    {
      "id": "46aad2399bfdec80e8235446677a6804d47a3cb7221225df01660fb744bfc0f2",
      "category": "container_scanning",
      "message": "CVE-2018-10903 on cryptography@2.1.4",
      "description": "A flaw was found in python-cryptography versions between >=1.9.0 and <2.3. The finalize_with_tag API did not enforce a minimum tag length. If a user did not validate the input length prior to passing it to finalize_with_tag an attacker could craft an invalid payload with a shortened tag (e.g. 1 byte) such that they would have a 1 in 256 chance of passing the MAC check. GCM tag forgeries can cause key leakage.",
      "cve": "CVE-2018-10903",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade cryptography@2.1.4 to 2.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/cryptography@2.1.4"
          },
          "version": "2.1.4"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2018-10903",
          "value": "CVE-2018-10903",
          "url": "https://scout.docker.com/v/CVE-2018-10903?s=github&n=cryptography&t=pypi&vr=%3E%3D1.9.0%2C%3C2.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2018-10903?s=github&n=cryptography&t=pypi&vr=%3E%3D1.9.0%2C%3C2.3"
        }
      ]
    },
    {
      "id": "8e144da9a112a3da7ab6da934024076fd7d3f637113e464b0179999d851cc84c",
      "category": "container_scanning",
      "message": "CVE-2018-6594 on pycrypto@2.6.1",
      "description": "lib/Crypto/PublicKey/ElGamal.py in PyCrypto through 2.6.1 generates weak ElGamal key parameters, which allows attackers to obtain sensitive information by reading ciphertext data (i.e., it does not have semantic security in face of a ciphertext-only attack). The Decisional Diffie-Hellman (DDH) assumption does not hold for PyCrypto's ElGamal implementation.",
      "cve": "CVE-2018-6594",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/pycrypto@2.6.1"
          },
          "version": "2.6.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2018-6594",
          "value": "CVE-2018-6594",
          "url": "https://scout.docker.com/v/CVE-2018-6594?s=github&n=pycrypto&t=pypi&vr=%3C%3D2.6.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2018-6594?s=github&n=pycrypto&t=pypi&vr=%3C%3D2.6.1"
        }
      ]
    },
    {
      "id": "45ea502ae01b2bc23b351b28990e159bfa0d3ae2eb39ed449ff559c6007aa611",
      "category": "container_scanning",
      "message": "CVE-2019-20916 on pip@9.0.1",
      "description": "The pip package before 19.2 for Python allows Directory Traversal when a URL is given in an install command, because a Content-Disposition header can have ../ in a filename, as demonstrated by overwriting the /root/.ssh/authorized_keys file. This occurs in _download_http_url in _internal/download.py. A fix was committed 6704f2ace.",
      "cve": "CVE-2019-20916",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade pip@9.0.1 to 19.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/pip@9.0.1"
          },
          "version": "9.0.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2019-20916",
          "value": "CVE-2019-20916",
          "url": "https://scout.docker.com/v/CVE-2019-20916?s=github&n=pip&t=pypi&vr=%3C19.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2019-20916?s=github&n=pip&t=pypi&vr=%3C19.2"
        }
      ]
    },
    {
      "id": "845ffbbffe2306ea632bbd292e48ac4aab6c7eef8f18a93519a4e91be6abba83",
      "category": "container_scanning",
      "message": "CVE-2022-22934 on salt@3000.1",
      "description": "An issue was discovered in SaltStack Salt in versions before 3002.8, 3003.4, 3004.1. Salt Masters do not sign pillar data with the minion’s public key, which can result in attackers substituting arbitrary pillar data.",
      "cve": "CVE-2022-22934",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3002.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-22934",
          "value": "CVE-2022-22934",
          "url": "https://scout.docker.com/v/CVE-2022-22934?s=github&n=salt&t=pypi&vr=%3C3002.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-22934?s=github&n=salt&t=pypi&vr=%3C3002.8"
        }
      ]
    },
    {
      "id": "0f04a61469d8c667921c098394dba1984e6ddcf4e6c3cadd9a77f85aab52622c",
      "category": "container_scanning",
      "message": "CVE-2022-40897 on setuptools@39.0.1",
      "description": "Python Packaging Authority (PyPA)'s setuptools is a library designed to facilitate packaging Python projects. Setuptools version 65.5.0 and earlier could allow remote attackers to cause a denial of service by fetching malicious HTML from a PyPI package or custom PackageIndex page due to a vulnerable Regular Expression in `package_index`. This has been patched in version 65.5.1.",
      "cve": "CVE-2022-40897",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade setuptools@39.0.1 to 65.5.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/setuptools@39.0.1"
          },
          "version": "39.0.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-40897",
          "value": "CVE-2022-40897",
          "url": "https://scout.docker.com/v/CVE-2022-40897?s=github&n=setuptools&t=pypi&vr=%3C65.5.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-40897?s=github&n=setuptools&t=pypi&vr=%3C65.5.1"
        }
      ]
    },
    {
      "id": "a97a0ac3bb3489c419a2cae2950989dd904b075fcd28c8863cc9ffc10b192709",
      "category": "container_scanning",
      "message": "CVE-2023-50782 on cryptography@2.1.4",
      "description": "A flaw was found in the python-cryptography package. This issue may allow a remote attacker to decrypt captured messages in TLS servers that use RSA key exchanges, which may lead to exposure of confidential or sensitive data.",
      "cve": "CVE-2023-50782",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade cryptography@2.1.4 to 42.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/cryptography@2.1.4"
          },
          "version": "2.1.4"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-50782",
          "value": "CVE-2023-50782",
          "url": "https://scout.docker.com/v/CVE-2023-50782?s=github&n=cryptography&t=pypi&vr=%3C42.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-50782?s=github&n=cryptography&t=pypi&vr=%3C42.0.0"
        }
      ]
    },
    {
      "id": "8b412dd7a26dfb8fb71df3f80aa3c4650e6cfb813f3abff6105f5699e6179cdf",
      "category": "container_scanning",
      "message": "CVE-2021-25282 on salt@3000.1",
      "description": "An issue was discovered in through SaltStack Salt before 3002.5. The `salt.wheel.pillar_roots.write` method is vulnerable to directory traversal.",
      "cve": "CVE-2021-25282",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3000.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-25282",
          "value": "CVE-2021-25282",
          "url": "https://scout.docker.com/v/CVE-2021-25282?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-25282?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ]
    },
    {
      "id": "4d6ed090094d3193cf4d0477b688ff815edb088d1897f6b7ce36611aa38a0804",
      "category": "container_scanning",
      "message": "CVE-2022-22936 on salt@3000.1",
      "description": "An issue was discovered in SaltStack Salt in versions before 3002.8, 3003.4, 3004.1. Job publishes and file server replies are susceptible to replay attacks, which can result in an attacker replaying job publishes causing minions to run old jobs. File server replies can also be re-played. A sufficient craft attacker could gain root access on minion under certain scenarios.",
      "cve": "CVE-2022-22936",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3002.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-22936",
          "value": "CVE-2022-22936",
          "url": "https://scout.docker.com/v/CVE-2022-22936?s=github&n=salt&t=pypi&vr=%3C3002.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-22936?s=github&n=salt&t=pypi&vr=%3C3002.8"
        }
      ]
    },
    {
      "id": "80196fa95766efc39acb185f3b96c626ee1d4028d7a5e2a0630ec86521e3f16b",
      "category": "container_scanning",
      "message": "CVE-2022-22941 on salt@3000.1",
      "description": "An issue was discovered in SaltStack Salt in versions before 3002.8, 3003.4, 3004.1. When configured as a Master-of-Masters, with a publisher_acl, if a user configured in the publisher_acl targets any minion connected to the Syndic, the Salt Master incorrectly interpreted no valid targets as valid, allowing configured users to target any of the minions connected to the syndic with their configured commands. This requires a syndic master combined with publisher_acl configured on the Master-of-Masters, allowing users specified in the publisher_acl to bypass permissions, publishing authorized commands to any configured minion.",
      "cve": "CVE-2022-22941",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3002.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-22941",
          "value": "CVE-2022-22941",
          "url": "https://scout.docker.com/v/CVE-2022-22941?s=github&n=salt&t=pypi&vr=%3C3002.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-22941?s=github&n=salt&t=pypi&vr=%3C3002.8"
        }
      ]
    },
    {
      "id": "b463189559d5cda4748f41729f680f04d367e3114b2906b10bd2fa84b37da59e",
      "category": "container_scanning",
      "message": "CVE-2021-3144 on salt@3000.1",
      "description": "In SaltStack Salt before 3002.5, eauth tokens can be used once after expiration. (They might be used to run command against the salt master or minions.)",
      "cve": "CVE-2021-3144",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3000.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-3144",
          "value": "CVE-2021-3144",
          "url": "https://scout.docker.com/v/CVE-2021-3144?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-3144?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ]
    },
    {
      "id": "86481e8080bcaa918d23e55c729380385d78d259b75d47c165de72c7713abf0c",
      "category": "container_scanning",
      "message": "CVE-2013-7459 on pycrypto@2.6.1",
      "description": "Heap-based buffer overflow in the ALGnew function in block_templace.c in Python Cryptography Toolkit (aka pycrypto) allows remote attackers to execute arbitrary code as demonstrated by a crafted iv parameter to cryptmsg.py.",
      "cve": "CVE-2013-7459",
      "severity": "Critical",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/pycrypto@2.6.1"
          },
          "version": "2.6.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2013-7459",
          "value": "CVE-2013-7459",
          "url": "https://scout.docker.com/v/CVE-2013-7459?s=github&n=pycrypto&t=pypi&vr=%3C%3D2.6.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2013-7459?s=github&n=pycrypto&t=pypi&vr=%3C%3D2.6.1"
        }
      ]
    },
    {
      "id": "e26a8781b059f494b350bcee88cbcbf12881dd58e297693e1f581e9b1312cb6a",
      "category": "container_scanning",
      "message": "CVE-2020-11651 on salt@3000.1",
      "description": "An issue was discovered in SaltStack Salt before 2019.2.4 and 3000 before 3000.2. The salt-master process ClearFuncs class does not properly validate method calls. This allows a remote user to access some methods without authentication. These methods can be used to retrieve user tokens from the salt master and/or run arbitrary commands on salt minions.",
      "cve": "CVE-2020-11651",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3000.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-11651",
          "value": "CVE-2020-11651",
          "url": "https://scout.docker.com/v/CVE-2020-11651?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-11651?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.2"
        }
      ]
    },
    {
      "id": "01ed77acedc25e552684e84facd5c05b1d7a2d0b8f33e89bb7581f0de4fcfa4d",
      "category": "container_scanning",
      "message": "CVE-2020-16846 on salt@3000.1",
      "description": "An issue was discovered in SaltStack Salt through 3002. Sending crafted web requests to the Salt API, with the SSH client enabled, can result in shell injection.",
      "cve": "CVE-2020-16846",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3000.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-16846",
          "value": "CVE-2020-16846",
          "url": "https://scout.docker.com/v/CVE-2020-16846?s=github&n=salt&t=pypi&vr=%3E%3D3000.0%2C%3C3000.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-16846?s=github&n=salt&t=pypi&vr=%3E%3D3000.0%2C%3C3000.4"
        }
      ]
    },
    {
      "id": "b49d8582aaa174f5117e8d4b91cfe048c94e00cad5a3a82e0f678f59ee25901b",
      "category": "container_scanning",
      "message": "CVE-2020-25592 on salt@3000.1",
      "description": "In SaltStack the salt-netapi improperly validates eauth credentials and tokens. A user can bypass authentication and invoke Salt SSH.",
      "cve": "CVE-2020-25592",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3000.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2020-25592",
          "value": "CVE-2020-25592",
          "url": "https://scout.docker.com/v/CVE-2020-25592?s=github&n=salt&t=pypi&vr=%3E%3D3000.0%2C%3C3000.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2020-25592?s=github&n=salt&t=pypi&vr=%3E%3D3000.0%2C%3C3000.5"
        }
      ]
    },
    {
      "id": "485a67dbf9bf54597c0050a38a47e274b16530d7198839322e82765138c6c28e",
      "category": "container_scanning",
      "message": "CVE-2021-25281 on salt@3000.1",
      "description": "An issue was discovered in through SaltStack Salt before 3002.5. salt-api does not honor eauth credentials for the wheel_async client. Thus, an attacker can remotely run any wheel modules on the master.",
      "cve": "CVE-2021-25281",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3000.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-25281",
          "value": "CVE-2021-25281",
          "url": "https://scout.docker.com/v/CVE-2021-25281?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-25281?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ]
    },
    {
      "id": "06a27ae81d60d92247124a1fbba9370a15c4627ea9ecd9573c5c77556468d10e",
      "category": "container_scanning",
      "message": "CVE-2021-25283 on salt@3000.1",
      "description": "An issue was discovered in through SaltStack Salt before 3002.5. The jinja renderer does not protect against server side template injection attacks.",
      "cve": "CVE-2021-25283",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3000.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-25283",
          "value": "CVE-2021-25283",
          "url": "https://scout.docker.com/v/CVE-2021-25283?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-25283?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ]
    },
    {
      "id": "7d5a4e61d8ec04b758e33990d510b8fb317c953b3819308de8b83d899afa4fdb",
      "category": "container_scanning",
      "message": "CVE-2021-3148 on salt@3000.1",
      "description": "An issue was discovered in SaltStack Salt before 3002.5. Sending crafted web requests to the Salt API can result in `salt.utils.thin.gen_thin()` command injection because of different handling of single versus double quotes. This is related to `salt/utils/thin.py`.",
      "cve": "CVE-2021-3148",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3000.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-3148",
          "value": "CVE-2021-3148",
          "url": "https://scout.docker.com/v/CVE-2021-3148?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-3148?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ]
    },
    {
      "id": "3049f58c818721baec81cfef7533b416dd3541367af4d6c94044ed0ef8466514",
      "category": "container_scanning",
      "message": "CVE-2021-3197 on salt@3000.1",
      "description": "An issue was discovered in SaltStack Salt before 3002.5. The salt-api's ssh client is vulnerable to a shell injection by including ProxyCommand in an argument, or via ssh_options provided in an API request.",
      "cve": "CVE-2021-3197",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3000.7",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-3197",
          "value": "CVE-2021-3197",
          "url": "https://scout.docker.com/v/CVE-2021-3197?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-3197?s=github&n=salt&t=pypi&vr=%3E%3D3000%2C%3C3000.7"
        }
      ]
    },
    {
      "id": "cf3c306847fff435f96185aeb16484b0b1f97348189c1fc68beb654712c5b391",
      "category": "container_scanning",
      "message": "CVE-2021-33226 on salt@3000.1",
      "description": "Buffer Overflow vulnerability in Saltstack v.3003 and before allows attacker to execute arbitrary code via the func variable in salt/salt/modules/status.py file.",
      "cve": "CVE-2021-33226",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade salt@3000.1 to 3003.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:pypi/salt@3000.1"
          },
          "version": "3000.1"
        },
        "operating_system": "ubuntu 18.04",
        "image": "custom_no_tool-salt-master:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-33226",
          "value": "CVE-2021-33226",
          "url": "https://scout.docker.com/v/CVE-2021-33226?s=pypa&n=salt&t=pypi&vr=%3C3003.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-33226?s=pypa&n=salt&t=pypi&vr=%3C3003.1"
        }
      ]
    }
  ],
  "remediations": [],
  "scan": {
    "start_time": "2025-09-26T11:21:39",
    "end_time": "2025-09-26T11:21:39",
    "status": "success",
    "type": "container_scanning",
    "scanner": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    },
    "analyzer": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    }
  }
}
