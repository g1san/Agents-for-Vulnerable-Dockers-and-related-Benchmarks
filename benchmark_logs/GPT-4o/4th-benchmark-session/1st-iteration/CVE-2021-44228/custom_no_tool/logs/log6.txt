time="2025-09-26T11:48:37+02:00" level=warning msg="/home/gabriele/thesis-project/Agents-for-Vulnerable-Dockers-and-related-Benchmarks/dockers/CVE-2021-44228/custom_no_tool/docker-compose.yml: the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion"
#1 [internal] load local bake definitions
#1 reading from stdin 721B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 186B done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/openjdk:8-jdk-alpine
#3 DONE 0.9s

#4 [internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.48kB done
#5 DONE 0.0s

#6 [1/5] FROM docker.io/library/openjdk:8-jdk-alpine@sha256:94792824df2df33402f201713f932b58cb9de94a0cd524164a0f2283343547b3
#6 resolve docker.io/library/openjdk:8-jdk-alpine@sha256:94792824df2df33402f201713f932b58cb9de94a0cd524164a0f2283343547b3 0.0s done
#6 CACHED

#7 [2/5] COPY . /usr/src/myapp
#7 DONE 0.0s

#8 [3/5] WORKDIR /usr/src/myapp
#8 DONE 0.0s

#9 [4/5] RUN chmod +x mvnw
#9 DONE 0.2s

#10 [5/5] RUN ./mvnw package
#10 0.298 Usage: java [-options] class [args...]
#10 0.298            (to execute a class)
#10 0.298    or  java [-options] -jar jarfile [args...]
#10 0.298            (to execute a jar file)
#10 0.298 where options include:
#10 0.298     -d32	  use a 32-bit data model if available
#10 0.298     -d64	  use a 64-bit data model if available
#10 0.298     -server	  to select the "server" VM
#10 0.298                   The default VM is server,
#10 0.298                   because you are running on a server-class machine.
#10 0.298 
#10 0.298 
#10 0.298     -cp <class search path of directories and zip/jar files>
#10 0.298     -classpath <class search path of directories and zip/jar files>
#10 0.298                   A : separated list of directories, JAR archives,
#10 0.298                   and ZIP archives to search for class files.
#10 0.298     -D<name>=<value>
#10 0.298                   set a system property
#10 0.298     -verbose:[class|gc|jni]
#10 0.298                   enable verbose output
#10 0.298     -version      print product version and exit
#10 0.298     -version:<value>
#10 0.298                   Warning: this feature is deprecated and will be removed
#10 0.298                   in a future release.
#10 0.298                   require the specified version to run
#10 0.298     -showversion  print product version and continue
#10 0.298     -jre-restrict-search | -no-jre-restrict-search
#10 0.298                   Warning: this feature is deprecated and will be removed
#10 0.298                   in a future release.
#10 0.298                   include/exclude user private JREs in the version search
#10 0.298     -? -help      print this help message
#10 0.298     -X            print help on non-standard options
#10 0.298     -ea[:<packagename>...|:<classname>]
#10 0.298     -enableassertions[:<packagename>...|:<classname>]
#10 0.298                   enable assertions with specified granularity
#10 0.298     -da[:<packagename>...|:<classname>]
#10 0.298     -disableassertions[:<packagename>...|:<classname>]
#10 0.298                   disable assertions with specified granularity
#10 0.298     -esa | -enablesystemassertions
#10 0.298                   enable system assertions
#10 0.298     -dsa | -disablesystemassertions
#10 0.298                   disable system assertions
#10 0.298     -agentlib:<libname>[=<options>]
#10 0.298                   load native agent library <libname>, e.g. -agentlib:hprof
#10 0.298                   see also, -agentlib:jdwp=help and -agentlib:hprof=help
#10 0.298     -agentpath:<pathname>[=<options>]
#10 0.298                   load native agent library by full pathname
#10 0.298     -javaagent:<jarpath>[=<options>]
#10 0.298                   load Java programming language agent, see java.lang.instrument
#10 0.298     -splash:<imagepath>
#10 0.298                   show splash screen with specified image
#10 0.298 See http://www.oracle.com/technetwork/java/javase/documentation/index.html for more details.
#10 ERROR: process "/bin/sh -c ./mvnw package" did not complete successfully: exit code: 1
------
 > [5/5] RUN ./mvnw package:
0.298     -agentlib:<libname>[=<options>]
0.298                   load native agent library <libname>, e.g. -agentlib:hprof
0.298                   see also, -agentlib:jdwp=help and -agentlib:hprof=help
0.298     -agentpath:<pathname>[=<options>]
0.298                   load native agent library by full pathname
0.298     -javaagent:<jarpath>[=<options>]
0.298                   load Java programming language agent, see java.lang.instrument
0.298     -splash:<imagepath>
0.298                   show splash screen with specified image
0.298 See http://www.oracle.com/technetwork/java/javase/documentation/index.html for more details.
------
Dockerfile:5

--------------------

   3 |     WORKDIR /usr/src/myapp

   4 |     RUN chmod +x mvnw

   5 | >>> RUN ./mvnw package

   6 |     CMD ["java", "-jar", "target/app.jar"]

   7 |     

--------------------

failed to solve: process "/bin/sh -c ./mvnw package" did not complete successfully: exit code: 1

