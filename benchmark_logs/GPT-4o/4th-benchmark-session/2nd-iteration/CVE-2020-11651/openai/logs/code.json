{
    "file_name": [
        "docker-compose.yml",
        "salt-master/Dockerfile",
        "salt-master/master.conf",
        "salt-minion/Dockerfile",
        "salt-minion/minion.conf",
        "redis/Dockerfile"
    ],
    "file_code": [
        "version: '3.8'\\n\\nservices:\\n  salt-master:\\n    build:\\n      context: ./salt-master\\n    ports:\\n      - \"4505:4505\"\\n      - \"4506:4506\"\\n    volumes:\\n      - ./salt-master/master.conf:/etc/salt/master\\n    networks:\\n      - salt-net\\n\\n  salt-minion:\\n    build:\\n      context: ./salt-minion\\n    volumes:\\n      - ./salt-minion/minion.conf:/etc/salt/minion\\n    networks:\\n      - salt-net\\n\\n  redis:\\n    build:\\n      context: ./redis\\n    ports:\\n      - \"6379:6379\"\\n    networks:\\n      - salt-net\\n\\nnetworks:\\n  salt-net:\\n    driver: bridge\\n",
        "FROM python:3.7-slim\\n\\nRUN apt-get update && \\\\\\n    apt-get install -y build-essential && \\\\\\n    pip install salt==3000.2 pycryptodome jinja2==2.11.3 markupsafe==2.0.1\\n\\nCOPY master.conf /etc/salt/master\\n\\nCMD [\"salt-master\", \"-l\", \"debug\"]\\n",
        "interface: 0.0.0.0\\n\\n# External job cache configuration\\necache:\\n  redis:\\n    host: redis\\n    port: 6379\\n    db: 0\\n\\n# Set ZeroMQ high water mark\\nzmq_hwm: 1000\\n",
        "FROM python:3.7-slim\\n\\nRUN apt-get update && \\\\\\n    apt-get install -y build-essential && \\\\\\n    pip install salt==3000.2 pycryptodome jinja2==2.11.3 markupsafe==2.0.1\\n\\nCOPY minion.conf /etc/salt/minion\\n\\nCMD [\"salt-minion\", \"-l\", \"debug\"]\\n",
        "# Sample minion configuration file for Salt\\nmaster: salt-master\\n",
        "FROM redis:5.0\\n\\nCMD [\"redis-server\"]\\n"
    ],
    "directory_tree": "./../../dockers/CVE-2020-11651/openai"
}