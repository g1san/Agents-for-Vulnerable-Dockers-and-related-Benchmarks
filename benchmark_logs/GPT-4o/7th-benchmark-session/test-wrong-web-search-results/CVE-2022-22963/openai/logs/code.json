{
    "files": [
        {
            "location": "./../../dockers/CVE-2022-22963/openai/docker-compose.yml",
            "content": "services:\n  spring-cloud-function:\n    build: ./spring-cloud-function\n    ports:\n      - \"8080:8080\"\n    depends_on:\n      - mysql\n\n  mysql:\n    image: mysql:5.7\n    environment:\n      MYSQL_ROOT_PASSWORD: example\n      MYSQL_DATABASE: testdb\n    ports:\n      - \"3306:3306\"\n    volumes:\n      - db_data:/var/lib/mysql\n    command: --default-authentication-plugin=mysql_native_password\n\n  nginx:\n    image: nginx:1.21.3\n    ports:\n      - \"80:80\"\n    volumes:\n      - ./nginx/nginx.conf:/etc/nginx/nginx.conf\n    depends_on:\n      - spring-cloud-function\n\nvolumes:\n  db_data:\n    driver: local\n"
        },
        {
            "location": "./../../dockers/CVE-2022-22963/openai/spring-cloud-function/Dockerfile",
            "content": "FROM openjdk:8-jdk\n\nWORKDIR /app\n\nCOPY . .\n\nRUN chmod +x mvnw\nRUN chmod +x .mvn/wrapper/maven-wrapper.jar\nRUN ./mvnw clean package\n\nCMD [\"java\", \"-jar\", \"target/spring-cloud-function-demo.jar\"]\n"
        },
        {
            "location": "./../../dockers/CVE-2022-22963/openai/spring-cloud-function/pom.xml",
            "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.example</groupId>\n    <artifactId>spring-cloud-function-demo</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <properties>\n        <java.version>1.8</java.version>\n        <spring-cloud.version>Hoxton.SR8</spring-cloud.version>\n    </properties>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.springframework.cloud</groupId>\n                <artifactId>spring-cloud-dependencies</artifactId>\n                <version>${spring-cloud.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-function-web</artifactId>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n"
        },
        {
            "location": "./../../dockers/CVE-2022-22963/openai/spring-cloud-function/src/main/java/com/example/FunctionApplication.java",
            "content": "package com.example;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.function.Function;\n\n@SpringBootApplication\npublic class FunctionApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(FunctionApplication.class, args);\n    }\n\n    @Bean\n    public Function<String, String> uppercase() {\n        return value -> value.toUpperCase();\n    }\n\n    @RestController\n    class DemoController {\n        @GetMapping(\"/\")\n        public String home() {\n            return \"Spring Cloud Function Demo\";\n        }\n    }\n}\n"
        },
        {
            "location": "./../../dockers/CVE-2022-22963/openai/nginx/nginx.conf",
            "content": "events {}\n\nhttp {\n    server {\n        listen 80;\n\n        location / {\n            proxy_pass http://spring-cloud-function:8080;\n        }\n    }\n}\n"
        },
        {
            "location": "./../../dockers/CVE-2022-22963/openai/spring-cloud-function/src/main/resources/application.properties",
            "content": "spring.cloud.function.routing-expression=spelExpression\n"
        },
        {
            "location": "./../../dockers/CVE-2022-22963/openai/spring-cloud-function/mvnw",
            "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Maven Start Up Batch script\n#\n# Required ENV vars:\n#\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n#\n#   M2_HOME - location of maven2's installed home dir\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ] ; then\n  if [ -f /etc/mavenrc ] ; then\n    . /etc/mavenrc\n  fi\n  if [ -f \"$HOME/.mavenrc\" ] ; then\n    . \"$HOME/.mavenrc\"\n  fi\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false\nmingw=false\nmsys=false\ncase \"`uname`\" in\n  CYGWIN*) cygwin=true ;;\n  MINGW*) mingw=true ;;\n  MSYS*) msys=true ;;\nesac\n\nif [ -z \"$MAVEN_PROJECTBASEDIR\" ] ; then\n  # get the absolute path of the current directory\n  if [ \"$cygwin\" = \"true\" ]; then\n    MAVEN_PROJECTBASEDIR=`cygpath -am \"$(pwd)\"`\n  else\n    if [ \"$mingw\" = \"true\" ] || [ \"$msys\" = \"true\" ] ; then\n      MAVEN_PROJECTBASEDIR=`(cd \"$(dirname \"$0\")\"; pwd -W)`\n    else\n      MAVEN_PROJECTBASEDIR=`(cd \"$(dirname \"$0\")\"; pwd -P)`\n    fi\n  fi\nfi\n\nif [ -f \"$MAVEN_PROJECTBASEDIR/.mvn/maven.config\" ] ; then\n  MAVEN_CONFIG=\"`cat \"$MAVEN_PROJECTBASEDIR/.mvn/maven.config\" | grep -v '^#'`\"\nfi\n\nexec \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \"$@\"\n"
        },
        {
            "location": "./../../dockers/CVE-2022-22963/openai/spring-cloud-function/mvnw.cmd",
            "content": "@echo off\n\nsetlocal\n\nset MAVEN_HOME=%~dp0\n\nif \"%MAVEN_SKIP_RC%\"==\"\" (\n  if exist \"%USERPROFILE%\\.mavenrc\" call \"%USERPROFILE%\\.mavenrc\"\n  if exist \"%MAVEN_HOME%\\mavenrc_pre.bat\" call \"%MAVEN_HOME%\\mavenrc_pre.bat\"\n  if exist \"%MAVEN_HOME%\\mavenrc_post.bat\" call \"%MAVEN_HOME%\\mavenrc_post.bat\"\n)\n\nset MAVEN_PROJECTBASEDIR=%MAVEN_HOME%\n\nif exist \"%MAVEN_PROJECTBASEDIR%\\.mvn\\maven.config\" (\n  set MAVEN_CONFIG=-Dmaven.multiModuleProjectDirectory=\"%MAVEN_PROJECTBASEDIR%\" -Dmaven.home=\"%MAVEN_HOME%\" @%MAVEN_PROJECTBASEDIR%\\.mvn\\maven.config\n) else (\n  set MAVEN_CONFIG=-Dmaven.multiModuleProjectDirectory=\"%MAVEN_PROJECTBASEDIR%\" -Dmaven.home=\"%MAVEN_HOME%\"\n)\n\n\"%JAVA_HOME%\\bin\\java\" %MAVEN_CONFIG% -jar \"%MAVEN_HOME%\\.mvn\\wrapper\\maven-wrapper.jar\" %*\n"
        },
        {
            "location": "./../../dockers/CVE-2022-22963/openai/spring-cloud-function/.mvn/wrapper/maven-wrapper.properties",
            "content": "distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.8.1/apache-maven-3.8.1-bin.zip\nwrapperUrl=https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.8.1/maven-wrapper-3.8.1.jar\n"
        }
    ],
    "directory_tree": "CVE-2022-22963/\n|-- docker-compose.yml\n|-- nginx\n|   `-- nginx.conf\n`-- spring-cloud-function\n    |-- Dockerfile\n    |-- mvnw\n    |-- mvnw.cmd\n    |-- pom.xml\n    |-- src\n    |   |-- main\n    |   |   |-- java\n    |   |   |   `-- com\n    |   |   |       `-- example\n    |   |   |           `-- FunctionApplication.java\n    |   |   `-- resources\n    |   |       `-- application.properties\n    |   `-- test\n    `-- .mvn\n        `-- wrapper\n            `-- maven-wrapper.properties\n"
}