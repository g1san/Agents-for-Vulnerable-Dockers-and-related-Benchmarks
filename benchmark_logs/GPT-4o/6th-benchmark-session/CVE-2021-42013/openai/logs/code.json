{
    "files": [
        {
            "location": "./../../dockers/CVE-2021-42013/openai/docker-compose.yml",
            "content": "version: '3.8'\nservices:\n  web:\n    image: httpd:2.4.50\n    ports:\n      - \"8080:80\"\n    volumes:\n      - ./html:/usr/local/apache2/htdocs/\n      - ./conf:/usr/local/apache2/conf/\n    depends_on:\n      - db\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n\n  db:\n    image: mysql:5.7.32\n    environment:\n      MYSQL_ROOT_PASSWORD: rootpassword\n      MYSQL_DATABASE: testdb\n      MYSQL_USER: testuser\n      MYSQL_PASSWORD: testpassword\n    volumes:\n      - db_data:/var/lib/mysql\n    command: --default-authentication-plugin=mysql_native_password\n    healthcheck:\n      test: [\"CMD\", \"mysqladmin\", \"ping\", \"-h\", \"localhost\"]\n      interval: 10s\n      timeout: 5s\n      retries: 3\n\nvolumes:\n  db_data:\n"
        },
        {
            "location": "./../../dockers/CVE-2021-42013/openai/html/index.php",
            "content": "<?php\n$servername = \"db\";\n$username = \"testuser\";\n$password = \"testpassword\";\n$dbname = \"testdb\";\n\n// Create connection\n$conn = new mysqli($servername, $username, $password, $dbname);\n\n// Check connection\nif ($conn->connect_error) {\n  die(\"Connection failed: \" . $conn->connect_error);\n}\necho \"Connected successfully\";\n\n$sql = \"SELECT id, name FROM test_table\";\n$result = $conn->query($sql);\n\nif ($result->num_rows > 0) {\n  // output data of each row\n  while($row = $result->fetch_assoc()) {\n    echo \"id: \" . $row[\"id\"]. \" - Name: \" . $row[\"name\"]. \"<br>\";\n  }\n} else {\n  echo \"0 results\";\n}\n$conn->close();\n?>\n"
        },
        {
            "location": "./../../dockers/CVE-2021-42013/openai/conf/httpd.conf",
            "content": "ServerRoot \"/usr/local/apache2\"\nListen 80\n\nLoadModule mpm_event_module modules/mod_mpm_event.so\nLoadModule authn_core_module modules/mod_authn_core.so\nLoadModule authz_core_module modules/mod_authz_core.so\nLoadModule authz_host_module modules/mod_authz_host.so\nLoadModule dir_module modules/mod_dir.so\nLoadModule alias_module modules/mod_alias.so\nLoadModule rewrite_module modules/mod_rewrite.so\n\nServerName localhost\n\n<Directory />\n    AllowOverride none\n    Require all denied\n</Directory>\n\n<Directory \"/usr/local/apache2/htdocs\">\n    Options Indexes FollowSymLinks\n    AllowOverride All\n    Require all granted\n</Directory>\n\nDocumentRoot \"/usr/local/apache2/htdocs\"\n\n<IfModule dir_module>\n    DirectoryIndex index.php index.html\n</IfModule>\n\nAlias /cgi-bin/ \"/usr/local/apache2/cgi-bin/\"\n\n<Directory \"/usr/local/apache2/cgi-bin\">\n    AllowOverride None\n    Options None\n    Require all denied\n</Directory>\n\nInclude conf/extra/httpd-vhosts.conf\n"
        },
        {
            "location": "./../../dockers/CVE-2021-42013/openai/html/.htaccess",
            "content": "Options +Indexes\nOptions +FollowSymLinks\n\nRewriteEngine on\nRewriteRule ^(.*)$ /$1 [L]\n"
        },
        {
            "location": "./../../dockers/CVE-2021-42013/openai/db/init.sql",
            "content": "CREATE TABLE IF NOT EXISTS test_table (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL\n);\n\nINSERT INTO test_table (name) VALUES ('Alice'), ('Bob'), ('Charlie');\n"
        },
        {
            "location": "./../../dockers/CVE-2021-42013/openai/conf/extra/httpd-vhosts.conf",
            "content": "<VirtualHost *:80>\n    DocumentRoot \"/usr/local/apache2/htdocs\"\n    ServerName localhost\n\n    <Directory \"/usr/local/apache2/htdocs\">\n        AllowOverride All\n        Options Indexes FollowSymLinks\n        Require all granted\n    </Directory>\n</VirtualHost>\n"
        }
    ],
    "directory_tree": "CVE-2021-42013/\n|-- conf\n|   |-- extra\n|   |   `-- httpd-vhosts.conf\n|   `-- httpd.conf\n|-- db\n|   `-- init.sql\n|-- docker-compose.yml\n`-- html\n    |-- .htaccess\n    `-- index.php\n"
}