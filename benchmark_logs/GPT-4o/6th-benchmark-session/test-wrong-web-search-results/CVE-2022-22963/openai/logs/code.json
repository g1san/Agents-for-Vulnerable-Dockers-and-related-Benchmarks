{
    "files": [
        {
            "location": "./../../dockers/CVE-2022-22963/openai/docker-compose.yml",
            "content": "services:\n  web:\n    image: nginx:1.21.3\n    ports:\n      - \"8080:80\"\n    volumes:\n      - ./nginx.conf:/etc/nginx/nginx.conf\n    depends_on:\n      - app\n\n  app:\n    build:\n      context: ./app\n      dockerfile: Dockerfile\n    ports:\n      - \"8081:8081\"\n    environment:\n      - SPRING_PROFILES_ACTIVE=default\n\n  app-db:\n    image: postgres:13\n    environment:\n      POSTGRES_USER: springuser\n      POSTGRES_PASSWORD: password\n      POSTGRES_DB: springdb\n    volumes:\n      - db-data:/var/lib/postgresql/data\n\nvolumes:\n  db-data:\n"
        },
        {
            "location": "./../../dockers/CVE-2022-22963/openai/nginx.conf",
            "content": "events {}\n\nhttp {\n    server {\n        listen 80;\n\n        location / {\n            proxy_pass http://app:8081;\n        }\n    }\n}\n"
        },
        {
            "location": "./../../dockers/CVE-2022-22963/openai/app/Dockerfile",
            "content": "# Use OpenJDK 8 as the base image\nFROM openjdk:8-jdk-alpine\n\n# Set the working directory\nWORKDIR /app\n\n# Copy the Maven project files\nCOPY pom.xml .\nCOPY mvnw .\n# Removed COPY .mvn .mvn as it is not necessary\nCOPY src ./src\n\n# Ensure the Maven wrapper is executable\nRUN chmod +x ./mvnw\n\n# Run the Maven build to create the JAR file\nRUN ./mvnw clean package -DskipTests\n\n# Copy the generated JAR file to the working directory\nCOPY target/spring-cloud-function-app-1.0-SNAPSHOT.jar ./spring-cloud-function-app.jar\n\n# Command to run the application\nCMD [\"java\", \"-jar\", \"spring-cloud-function-app.jar\"]\n"
        },
        {
            "location": "./../../dockers/CVE-2022-22963/openai/app/pom.xml",
            "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.example</groupId>\n    <artifactId>spring-cloud-function-app</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <properties>\n        <java.version>1.8</java.version>\n        <spring-cloud.version>2020.0.2</spring-cloud.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-function-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-function-web</artifactId>\n            <version>3.1.6</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-data-jpa</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.postgresql</groupId>\n            <artifactId>postgresql</artifactId>\n            <version>42.2.23</version>\n        </dependency>\n    </dependencies>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.springframework.cloud</groupId>\n                <artifactId>spring-cloud-dependencies</artifactId>\n                <version>${spring-cloud.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n"
        },
        {
            "location": "./../../dockers/CVE-2022-22963/openai/app/src/main/java/com/example/demo/DemoApplication.java",
            "content": "package com.example.demo;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class DemoApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(DemoApplication.class, args);\n    }\n\n}\n"
        },
        {
            "location": "./../../dockers/CVE-2022-22963/openai/app/src/main/java/com/example/demo/FunctionController.java",
            "content": "package com.example.demo;\n\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.cloud.function.context.FunctionCatalog;\nimport org.springframework.beans.factory.annotation.Autowired;\n\nimport java.util.function.Function;\n\n@RestController\npublic class FunctionController {\n\n    @Autowired\n    private FunctionCatalog functionCatalog;\n\n    @PostMapping(\"/function\")\n    public String function(String input) {\n        Function<String, String> function = functionCatalog.lookup(Function.class, \"uppercase\");\n        return function.apply(input);\n    }\n\n}\n"
        },
        {
            "location": "./../../dockers/CVE-2022-22963/openai/app/src/main/java/com/example/demo/UppercaseFunction.java",
            "content": "package com.example.demo;\n\nimport org.springframework.stereotype.Component;\n\nimport java.util.function.Function;\n\n@Component(\"uppercase\")\npublic class UppercaseFunction implements Function<String, String> {\n\n    @Override\n    public String apply(String input) {\n        return input.toUpperCase();\n    }\n\n}\n"
        },
        {
            "location": "./../../dockers/CVE-2022-22963/openai/app/mvnw",
            "content": "#!/bin/sh\n\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_PROJECTBASEDIR\" ] ; then\n  # get the absolute path of the current directory\n  case \"$0\" in\n    /*) scriptdir=\"$0\" ;;\n    *) scriptdir=\"./$0\" ;;\n  esac\n\n  # resolve the symlink to the actual script\n  while [ -h \"$scriptdir\" ] ; do\n    ls=`ls -ld \"$scriptdir\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n      scriptdir=\"$link\"\n    else\n      scriptdir=`dirname \"$scriptdir\"`\"/$link\"\n    fi\n  done\n\n  MAVEN_PROJECTBASEDIR=`dirname \"$scriptdir\"`/..\n  MAVEN_PROJECTBASEDIR=`cd \"$MAVEN_PROJECTBASEDIR\" > /dev/null && pwd`\nfi\n\nif [ -z \"$MAVEN_HOME\" ]; then\n  MAVEN_HOME=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper\"\nfi\n\nexec \"$MAVEN_HOME/maven-wrapper.jar\" \"$@\"\n"
        }
    ],
    "directory_tree": "CVE-2022-22963/\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 nginx.conf\n\u2514\u2500\u2500 app\n    \u251c\u2500\u2500 Dockerfile\n    \u251c\u2500\u2500 pom.xml\n    \u251c\u2500\u2500 mvnw\n    \u2514\u2500\u2500 src\n        \u2514\u2500\u2500 main\n            \u2514\u2500\u2500 java\n                \u2514\u2500\u2500 com\n                    \u2514\u2500\u2500 example\n                        \u2514\u2500\u2500 demo\n                            \u251c\u2500\u2500 DemoApplication.java\n                            \u251c\u2500\u2500 FunctionController.java\n                            \u2514\u2500\u2500 UppercaseFunction.java\n"
}