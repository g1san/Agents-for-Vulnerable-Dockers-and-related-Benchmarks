{
    "files": [
        {
            "location": "./../../dockers/CVE-2022-24706/custom_no_tool/docker-compose.yml",
            "content": "version: '3.8'\nservices:\n  couchdb:\n    build: .\n    container_name: fixed_couchdb\n    environment:\n      - COUCHDB_USER=admin\n      - COUCHDB_PASSWORD=password\n    ports:\n      - \"5984:5984\"\n    networks:\n      - couchdb_net\n    volumes:\n      - couchdb_data:/opt/couchdb/data\n    command: bash -c \"epmd -daemon && /opt/couchdb/bin/couchdb\"\n\nnetworks:\n  couchdb_net:\n    driver: bridge\n\nvolumes:\n  couchdb_data:\n    driver: local\n"
        },
        {
            "location": "./../../dockers/CVE-2022-24706/custom_no_tool/init-couchdb.sh",
            "content": "#!/bin/bash\n\n# Function to check if a database exists\ncheck_db_exists() {\n  local db_name=$1\n  curl -s -o /dev/null -w \"%{http_code}\" http://admin:password@localhost:5984/$db_name\n}\n\n# Wait for CouchDB to start\nuntil [ $(curl -s -o /dev/null -w \"%{http_code}\" http://admin:password@localhost:5984/_up) -eq 200 ]; do\n  echo \"Waiting for CouchDB to start...\"\n  sleep 2\ndone\n\n# Ensure system databases are created\nfor db in _users _replicator _global_changes _nodes _dbs; do\n  until [ $(check_db_exists $db) -eq 200 ]; do\n    echo \"Creating $db database...\"\n    curl -X PUT http://admin:password@localhost:5984/$db\n    sleep 1\n  done\ndone\n\n# Create a test database\ncurl -X PUT http://admin:password@localhost:5984/test_db\n\n# Add some test data\ncurl -X POST http://admin:password@localhost:5984/test_db -H \"Content-Type: application/json\" -d '{\"name\": \"test_user\", \"role\": \"tester\"}'\n"
        },
        {
            "location": "./../../dockers/CVE-2022-24706/custom_no_tool/Dockerfile",
            "content": "FROM apache/couchdb:3.2.1\n\n# Install Erlang to get epmd\nRUN apt-get update && \\\n    apt-get install -y erlang && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY local.ini /opt/couchdb/etc/local.d/\nCOPY init-couchdb.sh /docker-entrypoint-initdb.d/\nRUN chmod +x /docker-entrypoint-initdb.d/init-couchdb.sh\n"
        },
        {
            "location": "./../../dockers/CVE-2022-24706/custom_no_tool/local.ini",
            "content": "[admins]\nadmin = password\n\n[chttpd]\nport = 5984\nbind_address = 0.0.0.0\n\n[httpd]\nbind_address = 0.0.0.0\n"
        }
    ],
    "directory_tree": "CVE-2022-24706/\n\u2514\u2500\u2500 custom_no_tool/\n    \u251c\u2500\u2500 docker-compose.yml\n    \u251c\u2500\u2500 init-couchdb.sh\n    \u251c\u2500\u2500 Dockerfile\n    \u2514\u2500\u2500 local.ini\n"
}