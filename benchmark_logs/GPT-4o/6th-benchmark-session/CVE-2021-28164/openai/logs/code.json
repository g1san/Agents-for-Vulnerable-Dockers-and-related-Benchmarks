{
    "files": [
        {
            "location": "./../../dockers/CVE-2021-28164/openai/docker-compose.yml",
            "content": "services:\n  jetty:\n    build: .\n    container_name: jetty-vulnerable\n    volumes:\n      - ./webapps:/var/lib/jetty/webapps\n    ports:\n      - \"8080:8080\"\n\nnetworks:\n  default:\n    name: cve-2021-28164-net\n"
        },
        {
            "location": "./../../dockers/CVE-2021-28164/openai/nginx.conf",
            "content": "events {}\n\nhttp {\n    server {\n        listen 80;\n\n        location / {\n            proxy_pass http://jetty:8080;\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        }\n    }\n}\n"
        },
        {
            "location": "./../../dockers/CVE-2021-28164/openai/webapps/ROOT/index.html",
            "content": "<html>\n<head>\n    <title>Welcome to Jetty</title>\n</head>\n<body>\n    <h1>Jetty Server</h1>\n    <p>This is a test page for Jetty.</p>\n</body>\n</html>\n"
        },
        {
            "location": "./../../dockers/CVE-2021-28164/openai/webapps/ROOT/WEB-INF/web.xml",
            "content": "<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee \n         http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"\n         version=\"3.1\">\n\n    <servlet>\n        <servlet-name>TestServlet</servlet-name>\n        <servlet-class>com.example.TestServlet</servlet-class>\n    </servlet>\n    <servlet-mapping>\n        <servlet-name>TestServlet</servlet-name>\n        <url-pattern>/test</url-pattern>\n    </servlet-mapping>\n\n</web-app>\n"
        },
        {
            "location": "./../../dockers/CVE-2021-28164/openai/webapps/ROOT/WEB-INF/classes/com/example/TestServlet.java",
            "content": "package com.example;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\n\npublic class TestServlet extends HttpServlet {\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n        resp.getWriter().write(\"Hello, this is a test servlet response!\");\n    }\n}\n"
        },
        {
            "location": "./../../dockers/CVE-2021-28164/openai/Dockerfile",
            "content": "FROM jetty:9.4.38-jdk11-slim\n\n# Switch to root to install required packages\nUSER root\n\n# Install gnupg and curl, update sources, and clean up\nRUN apt-get update && apt-get install -y gnupg curl && rm -rf /var/lib/apt/lists/*\n\n# Add missing public keys and update sources\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0E98404D386FA1D9 6ED0E7B82643E131 605C66F00D6C9793 && \\\n    sed -i 's/buster/bullseye/g' /etc/apt/sources.list && \\\n    apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*\n\n# Switch back to jetty user\nUSER jetty\n\n# Download servlet-api jar\nRUN mkdir -p /tmp/lib && \\\n    curl -o /tmp/lib/servlet-api.jar https://repo1.maven.org/maven2/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar\n\nCOPY ./webapps /var/lib/jetty/webapps\n\nRUN mkdir -p /var/lib/jetty/webapps/ROOT/WEB-INF/classes/com/example\nCOPY ./webapps/ROOT/WEB-INF/classes/com/example/TestServlet.java /var/lib/jetty/webapps/ROOT/WEB-INF/classes/com/example/TestServlet.java\n\n# Compile the servlet with the servlet-api jar\nRUN javac -cp /tmp/lib/servlet-api.jar /var/lib/jetty/webapps/ROOT/WEB-INF/classes/com/example/TestServlet.java\n"
        }
    ],
    "directory_tree": "CVE-2021-28164/\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 nginx.conf\n\u251c\u2500\u2500 Dockerfile\n\u2514\u2500\u2500 webapps/\n    \u2514\u2500\u2500 ROOT/\n        \u251c\u2500\u2500 index.html\n        \u2514\u2500\u2500 WEB-INF/\n            \u251c\u2500\u2500 web.xml\n            \u2514\u2500\u2500 classes/\n                \u2514\u2500\u2500 com/\n                    \u2514\u2500\u2500 example/\n                        \u2514\u2500\u2500 TestServlet.java\n"
}