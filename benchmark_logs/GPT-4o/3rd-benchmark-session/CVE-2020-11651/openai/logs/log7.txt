time="2025-09-20T10:50:37+02:00" level=warning msg="/home/gabriele/thesis-project/Agents-for-Vulnerable-Dockers-and-related-Benchmarks/dockers/CVE-2020-11651/openai/docker-compose.yml: the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion"
#1 [internal] load local bake definitions
#1 reading from stdin 1.95kB done
#1 DONE 0.0s

#2 [salt-master internal] load build definition from Dockerfile
#2 transferring dockerfile: 505B done
#2 DONE 0.0s

#3 [salt-minion internal] load build definition from Dockerfile
#3 transferring dockerfile: 505B done
#3 DONE 0.0s

#4 [redis internal] load build definition from Dockerfile
#4 transferring dockerfile: 74B done
#4 DONE 0.0s

#5 [salt-master internal] load metadata for docker.io/library/python:3.7-slim
#5 ...

#6 [redis internal] load metadata for docker.io/library/redis:5.0
#6 DONE 0.5s

#7 [redis internal] load .dockerignore
#7 transferring context: 2B done
#7 DONE 0.0s

#5 [salt-minion internal] load metadata for docker.io/library/python:3.7-slim
#5 DONE 0.5s

#8 [salt-master internal] load .dockerignore
#8 transferring context: 2B done
#8 DONE 0.0s

#9 [salt-minion internal] load .dockerignore
#9 transferring context: 2B done
#9 DONE 0.0s

#10 [redis 1/1] FROM docker.io/library/redis:5.0@sha256:fc5ecd863862f89f04334b7cbb57e93c9790478ea8188a49f6e57b0967d38c75
#10 resolve docker.io/library/redis:5.0@sha256:fc5ecd863862f89f04334b7cbb57e93c9790478ea8188a49f6e57b0967d38c75 0.0s done
#10 CACHED

#11 [salt-master internal] load build context
#11 transferring context: 142B done
#11 DONE 0.0s

#12 [salt-minion internal] load build context
#12 transferring context: 75B done
#12 DONE 0.0s

#13 [salt-master 1/7] FROM docker.io/library/python:3.7-slim@sha256:b53f496ca43e5af6994f8e316cf03af31050bf7944e0e4a308ad86c001cf028b
#13 resolve docker.io/library/python:3.7-slim@sha256:b53f496ca43e5af6994f8e316cf03af31050bf7944e0e4a308ad86c001cf028b 0.0s done
#13 DONE 0.0s

#14 [salt-master 2/7] RUN apt-get update && apt-get install -y build-essential && rm -rf /var/lib/apt/lists/*
#14 CACHED

#15 [salt-master 5/7] RUN pip install pyzmq==19.0.2
#15 CACHED

#16 [salt-master 3/7] RUN pip install jinja2==2.11.3
#16 CACHED

#17 [salt-master 4/7] RUN pip install markupsafe==2.0.1
#17 CACHED

#18 [salt-minion 7/7] COPY minion.conf /etc/salt/minion
#18 CACHED

#19 [salt-master 6/7] RUN pip install salt==3000.1
#19 CACHED

#20 [salt-minion] exporting to image
#20 exporting layers done
#20 ...

#21 [salt-master 7/7] COPY master.conf /etc/salt/master
#21 DONE 0.1s

#20 [salt-minion] exporting to image
#20 exporting manifest sha256:4d3f1c421d51cc8c084707388f15121ac30b4f47a14bd27169bdcba1e51698b0 done
#20 exporting config sha256:3969bf0ea13685876cbeabf4040bee04d22d6e140d9a9a620098a8691ee64327 done
#20 exporting attestation manifest sha256:a53976c674eb559bb1701c24dd081e62cfe3628828e0b8a2318c7fcac4078b45 0.0s done
#20 exporting manifest list sha256:cc82d4202dd54ef5dded1e05f4e5d791adef19b2456c0924a397711aa2aa05ae 0.0s done
#20 naming to docker.io/library/openai-salt-minion:latest
#20 naming to docker.io/library/openai-salt-minion:latest done
#20 unpacking to docker.io/library/openai-salt-minion:latest 0.0s done
#20 DONE 0.2s

#22 [redis] exporting to image
#22 exporting layers 0.0s done
#22 exporting manifest sha256:1e82ed79b0fce8a05aeca791b6e5d39c5392a2935f98a9119bbbfbbbcf38949b done
#22 exporting config sha256:f03fec45ae9fd5cfc8c82cb90cf4d9ee5d0b75bd4ddf3be9e2dcdad8299a754a done
#22 exporting attestation manifest sha256:4c0225dca5bae35238b5c98298d6535bed7faf6327b22ba0639068d4b8d9f3b9 0.0s done
#22 exporting manifest list sha256:7d82ee7ea909dd7a1f36a46d61b784123d632a2e29da54f7208c525dfcebe131 0.0s done
#22 naming to docker.io/library/openai-redis:latest done
#22 unpacking to docker.io/library/openai-redis:latest 0.0s done
#22 DONE 0.2s

#23 [salt-master] exporting to image
#23 exporting layers 0.2s done
#23 exporting manifest sha256:ffb525e34e604b6d6ecd52e38bdab4b77939bdcffa580b05fbff2a2764f27049 0.0s done
#23 exporting config sha256:9cd2c04764c59d06c623acf9a7531e34a65d88e145cea0afc78200e247c212f1 0.0s done
#23 exporting attestation manifest sha256:6fb8a3bbc90236d5c618126a65bd433e65fc1bb5cc7e886664c7daa80ef91e36 0.0s done
#23 exporting manifest list sha256:ec9f71b2ef7351ab4e51292a4e62f87ec0351506979c738245b6e5054649b81c 0.0s done
#23 naming to docker.io/library/openai-salt-master:latest done
#23 unpacking to docker.io/library/openai-salt-master:latest 0.0s done
#23 DONE 0.3s

#24 [redis] resolving provenance for metadata file
#24 DONE 0.0s

#25 [salt-minion] resolving provenance for metadata file
#25 DONE 0.0s

#26 [salt-master] resolving provenance for metadata file
#26 DONE 0.0s
 openai-salt-master  Built
 openai-salt-minion  Built
 openai-redis  Built
 Network openai_salt-network  Creating
 Network openai_salt-network  Created
 Container openai-redis-1  Creating
 Container openai-salt-minion-1  Creating
 Container openai-salt-master-1  Creating
 Container openai-salt-minion-1  Created
 Container openai-redis-1  Created
 Container openai-salt-master-1  Created
 Container openai-salt-minion-1  Starting
 Container openai-redis-1  Starting
 Container openai-salt-master-1  Starting
 Container openai-salt-master-1  Started
 Container openai-salt-minion-1  Started
 Container openai-redis-1  Started


sudo docker logs 1c5c80b09e8df27430fc292771724cf408add2a46a4b3189ff50e15c3bf0ae90 --details
STDOUT:  1:C 20 Sep 2025 08:50:39.099 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
 1:C 20 Sep 2025 08:50:39.099 # Redis version=5.0.14, bits=64, commit=00000000, modified=0, pid=1, just started
 1:C 20 Sep 2025 08:50:39.099 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf
 1:M 20 Sep 2025 08:50:39.101 * Running mode=standalone, port=6379.
 1:M 20 Sep 2025 08:50:39.101 # Server initialized
 1:M 20 Sep 2025 08:50:39.101 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
 1:M 20 Sep 2025 08:50:39.101 * Ready to accept connections

STDERR: 



sudo docker logs 9c5014d2dfef8f7693d050defd6f91c46b359273bb959e0939cf21cb4247cf0e --details
STDOUT: 
STDERR:  /usr/local/lib/python3.7/site-packages/salt/ext/tornado/httputil.py:107: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
   class HTTPHeaders(collections.MutableMapping):
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Configuration file path: /etc/salt/master
 [WARNING ] Insecure logging configuration detected! Sensitive data may be logged.
 [INFO    ] Setting up the Salt Master
 [INFO    ] Generating master keys: /etc/salt/pki/master
 [DEBUG   ] salt.crypt.get_rsa_key: Loading private key
 [DEBUG   ] salt.crypt._get_key_with_evict: Loading private key
 [DEBUG   ] Loaded master key: /etc/salt/pki/master/master.pem
 [INFO    ] Preparing the root key for local communication
 [PROFILE ] Beginning pwd.getpwall() call in masterapi access_keys function
 [PROFILE ] End pwd.getpwall() call in masterapi access_keys function
 [DEBUG   ] Created pidfile: /var/run/salt-master.pid
 [INFO    ] Starting up the Salt Master
 [DEBUG   ] LazyLoaded roots.envs
 [DEBUG   ] Could not LazyLoad roots.init: 'roots.init' is not available.
 [INFO    ] salt-master is starting as user 'root'
 [INFO    ] Current values for max open files soft/hard setting: 1048576/1048576
 [INFO    ] Creating master process manager
 [INFO    ] Creating master publisher process
 [DEBUG   ] Started 'salt.transport.zeromq.<class 'method'>._publish_daemon' with pid 11
 [INFO    ] Creating master event publisher process
 [INFO    ] Starting the Salt Publisher on tcp://0.0.0.0:4505
 [INFO    ] Starting the Salt Puller on ipc:///var/run/salt/master/publish_pull.ipc
 [DEBUG   ] Publish daemon getting data from puller ipc:///var/run/salt/master/publish_pull.ipc
 [DEBUG   ] Started 'salt.utils.event.<class 'type'>.EventPublisher' with pid 14
 [INFO    ] Creating master maintenance process
 [DEBUG   ] Started 'salt.master.<class 'type'>.Maintenance' with pid 15
 [INFO    ] Creating master request server process
 [DEBUG   ] Initializing new Schedule
 [DEBUG   ] Started 'ReqServer' with pid 16
 [DEBUG   ] Started 'salt.transport.zeromq.<class 'method'>.zmq_device' with pid 17
 [INFO    ] Setting up the master communication server
 [DEBUG   ] Started 'MWorker-0' with pid 24
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] LazyLoaded roots.envs
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Started 'MWorker-1' with pid 25
 [DEBUG   ] Could not LazyLoad roots.update_intervals: 'roots.update_intervals' is not available.
 [DEBUG   ] Missing configuration file: /root/.saltrc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Started 'salt.master.<class 'type'>.FileserverUpdate' with pid 27
 [DEBUG   ] Started 'MWorker-2' with pid 26
 [DEBUG   ] Process Manager starting!
 [DEBUG   ] Performing fileserver updates for items with an update interval of 60
 [DEBUG   ] Updating roots fileserver cache
 [DEBUG   ] Completed fileserver updates for items with an update interval of 60, waiting 60 seconds
 [DEBUG   ] Missing configuration file: /root/.saltrc
 [DEBUG   ] Started 'MWorker-3' with pid 29
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Missing configuration file: /root/.saltrc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Started 'MWorker-4' with pid 30
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Process Manager starting!
 [DEBUG   ] Missing configuration file: /root/.saltrc
 [DEBUG   ] Missing configuration file: /root/.saltrc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] Could not LazyLoad timezone.get_offset: 'timezone.get_offset' is not available.
 [DEBUG   ] Could not LazyLoad config.merge: 'config.merge' is not available.
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] This salt-master instance has accepted 0 minion keys.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [WARNING ] /usr/local/lib/python3.7/site-packages/salt/utils/dictdiffer.py:16: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
   from collections import Mapping
 
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [WARNING ] /usr/local/lib/python3.7/site-packages/salt/utils/dictdiffer.py:16: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
   from collections import Mapping
 
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [WARNING ] /usr/local/lib/python3.7/site-packages/salt/utils/dictdiffer.py:16: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
   from collections import Mapping
 
 [WARNING ] /usr/local/lib/python3.7/site-packages/salt/utils/dictdiffer.py:16: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
   from collections import Mapping
 
 [WARNING ] /usr/local/lib/python3.7/site-packages/salt/utils/dictdiffer.py:16: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
   from collections import Mapping
 
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Missing configuration file: /root/.saltrc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Missing configuration file: /root/.saltrc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Missing configuration file: /root/.saltrc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Missing configuration file: /root/.saltrc
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Missing configuration file: /root/.saltrc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [INFO    ] Worker binding to socket ipc:///var/run/salt/master/workers.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] salt.crypt.get_rsa_key: Loading private key
 [DEBUG   ] Loaded master key: /etc/salt/pki/master/master.pem
 [INFO    ] Authentication request from salt-minion
 [INFO    ] Authentication accepted from salt-minion
 [DEBUG   ] salt.crypt.get_rsa_pub_key: Loading public key
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] Sending event: tag = salt/auth; data = {'result': True, 'act': 'accept', 'id': 'salt-minion', 'pub': '-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt8Ijpiw65PQR8F65xnZl\nQxg5+t7gBqy4KzBPSWa1s83LKwtWDauBi6HUrBBNHIPtJyP4qoMvuef3aQqEnMrm\nY4n1ibGn9S29p2vXk4d80tvxUR/uJ4MtDzkeU0oVvI4O/QRgtEOYgaE91QUNwGFa\ngRsDmAS4McTNkHTz50SL+mXo4cSTp4YHRfscUffsHJOq3BtMsnXXX/P2oQhlQCzt\nfZAFyTvBcDdhaE+Qwj9h9SjsSxDGx3sLjcvKmLseM8Kbtk7zmOmef5iqHH6gyQiq\n4OqS/5IGaQss0jY2vqkx7DvXem48B52RmC8XfJUwmo9oqIeA/0D0tt0bkbG8OVeb\nTwIDAQAB\n-----END PUBLIC KEY-----', '_stamp': '2025-09-20T08:50:43.400675'}
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [DEBUG   ] Determining pillar cache
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] LazyLoaded jinja.render
 [DEBUG   ] LazyLoaded yaml.render
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] LazyLoaded localfs.init_kwargs
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] Sending event: tag = minion/refresh/salt-minion; data = {'Minion data cache refresh': 'salt-minion', '_stamp': '2025-09-20T08:50:43.505881'}
 [DEBUG   ] salt.crypt.get_rsa_pub_key: Loading public key
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [INFO    ] Worker binding to socket ipc:///var/run/salt/master/workers.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] salt.crypt.get_rsa_key: Loading private key
 [DEBUG   ] Loaded master key: /etc/salt/pki/master/master.pem
 [INFO    ] Worker binding to socket ipc:///var/run/salt/master/workers.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] salt.crypt.get_rsa_key: Loading private key
 [DEBUG   ] Loaded master key: /etc/salt/pki/master/master.pem
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] Guessing ID. The id can be explicitly set in /etc/salt/minion
 [DEBUG   ] Found minion id from generate_minion_id(): salt-master
 [INFO    ] Worker binding to socket ipc:///var/run/salt/master/workers.ipc
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/master
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] salt.crypt.get_rsa_key: Loading private key
 [DEBUG   ] Loaded master key: /etc/salt/pki/master/master.pem
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-master -l debug)
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] salt.crypt.get_rsa_pub_key: Loading public key
 [DEBUG   ] Sending event: tag = minion_start; data = {'id': 'salt-minion', 'cmd': '_minion_event', 'pretag': None, 'data': 'Minion salt-minion started at Sat Sep 20 08:50:43 2025', 'tag': 'minion_start', '_stamp': '2025-09-20T08:50:43.680027'}
 [DEBUG   ] salt.crypt.get_rsa_pub_key: Loading public key
 [INFO    ] Worker binding to socket ipc:///var/run/salt/master/workers.ipc
 [DEBUG   ] MasterEvent PUB socket URI: /var/run/salt/master/master_event_pub.ipc
 [DEBUG   ] MasterEvent PULL socket URI: /var/run/salt/master/master_event_pull.ipc
 [DEBUG   ] salt.crypt.get_rsa_key: Loading private key
 [DEBUG   ] Loaded master key: /etc/salt/pki/master/master.pem
 [DEBUG   ] Sending event: tag = salt/minion/salt-minion/start; data = {'id': 'salt-minion', 'cmd': '_minion_event', 'pretag': None, 'data': 'Minion salt-minion started at Sat Sep 20 08:50:43 2025', 'tag': 'salt/minion/salt-minion/start', '_stamp': '2025-09-20T08:50:43.703544'}




sudo docker logs 0a9b72ad8b52ad66bf822ba8fa1501424119c336bfc4fac520e09881d4d8efaf --details
STDOUT: 
STDERR:  /usr/local/lib/python3.7/site-packages/salt/ext/tornado/httputil.py:107: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
   class HTTPHeaders(collections.MutableMapping):
 [DEBUG   ] Reading configuration from /etc/salt/minion
 [DEBUG   ] Configuration file path: /etc/salt/minion
 [WARNING ] Insecure logging configuration detected! Sensitive data may be logged.
 [INFO    ] Setting up the Salt Minion "salt-minion"
 [DEBUG   ] Created pidfile: /var/run/salt-minion.pid
 [INFO    ] Starting up the Salt Minion
 [DEBUG   ] AsyncEventPublisher PUB socket URI: /var/run/salt/minion/minion_event_4b832e873d_pub.ipc
 [DEBUG   ] AsyncEventPublisher PULL socket URI: /var/run/salt/minion/minion_event_4b832e873d_pull.ipc
 [INFO    ] Starting pull socket on /var/run/salt/minion/minion_event_4b832e873d_pull.ipc
 [DEBUG   ] SaltEvent PUB socket URI: /var/run/salt/minion/minion_event_4b832e873d_pub.ipc
 [DEBUG   ] SaltEvent PULL socket URI: /var/run/salt/minion/minion_event_4b832e873d_pull.ipc
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/minion
 [WARNING ] /usr/local/lib/python3.7/site-packages/salt/utils/dictdiffer.py:16: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
   from collections import Mapping
 
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-minion -l debug)
 [DEBUG   ] The `lspci` binary is not available on the system. GPU grains will not be available.
 [DEBUG   ] LazyLoaded zfs.is_supported
 [INFO    ] Creating minion process manager
 [DEBUG   ] Process Manager starting!
 [DEBUG   ] Process Manager starting!
 [DEBUG   ] Connecting to master. Attempt 1 of 1
 [DEBUG   ] "salt-master" Not an IP address? Assuming it is a hostname.
 [DEBUG   ] Master URI: tcp://172.18.0.2:4506
 [DEBUG   ] Initializing new AsyncAuth for ('/etc/salt/pki/minion', 'salt-minion', 'tcp://172.18.0.2:4506')
 [INFO    ] Generating keys: /etc/salt/pki/minion
 [DEBUG   ] salt.crypt.get_rsa_key: Loading private key
 [DEBUG   ] salt.crypt._get_key_with_evict: Loading private key
 [DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
 [DEBUG   ] Generated random reconnect delay between '1000ms' and '11000ms' (3872)
 [DEBUG   ] Setting zmq_reconnect_ivl to '3872ms'
 [DEBUG   ] Setting zmq_reconnect_ivl_max to '11000ms'
 [DEBUG   ] Initializing new AsyncZeroMQReqChannel for ('/etc/salt/pki/minion', 'salt-minion', 'tcp://172.18.0.2:4506', 'clear')
 [DEBUG   ] Connecting the Minion to the Master URI (for the return server): tcp://172.18.0.2:4506
 [DEBUG   ] Trying to connect to: tcp://172.18.0.2:4506
 [DEBUG   ] salt.crypt.get_rsa_pub_key: Loading public key
 [DEBUG   ] Decrypting the current master AES key
 [DEBUG   ] salt.crypt.get_rsa_key: Loading private key
 [DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
 [DEBUG   ] salt.crypt.get_rsa_pub_key: Loading public key
 [DEBUG   ] Closing AsyncZeroMQReqChannel instance
 [DEBUG   ] Connecting the Minion to the Master publish port, using the URI: tcp://172.18.0.2:4505
 [DEBUG   ] salt.crypt.get_rsa_key: Loading private key
 [DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
 [DEBUG   ] Initializing new AsyncZeroMQReqChannel for ('/etc/salt/pki/minion', 'salt-minion', 'tcp://172.18.0.2:4506', 'aes')
 [DEBUG   ] Re-using AsyncAuth for ('/etc/salt/pki/minion', 'salt-minion', 'tcp://172.18.0.2:4506')
 [DEBUG   ] Connecting the Minion to the Master URI (for the return server): tcp://172.18.0.2:4506
 [DEBUG   ] Trying to connect to: tcp://172.18.0.2:4506
 [DEBUG   ] salt.crypt.get_rsa_key: Loading private key
 [DEBUG   ] Loaded minion key: /etc/salt/pki/minion/minion.pem
 [DEBUG   ] Closing AsyncZeroMQReqChannel instance
 [DEBUG   ] Grains refresh requested. Refreshing grains.
 [DEBUG   ] Reading configuration from /etc/salt/minion
 [DEBUG   ] Could not determine init system from command line: (/usr/local/bin/python /usr/local/bin/salt-minion -l debug)
 [DEBUG   ] The `lspci` binary is not available on the system. GPU grains will not be available.
 [DEBUG   ] LazyLoaded zfs.is_supported
 [DEBUG   ] Initializing new Schedule
 [DEBUG   ] LazyLoaded timezone.get_offset
 [DEBUG   ] LazyLoaded cmd.run
 [INFO    ] Executing command ['date', '+%z'] in directory '/root'
 [DEBUG   ] stdout: +0000
 [DEBUG   ] output: +0000
 [DEBUG   ] LazyLoaded config.merge
 [DEBUG   ] SaltEvent PUB socket URI: /var/run/salt/minion/minion_event_4b832e873d_pub.ipc
 [DEBUG   ] SaltEvent PULL socket URI: /var/run/salt/minion/minion_event_4b832e873d_pull.ipc
 [DEBUG   ] Sending event: tag = /salt/minion/minion_schedule_delete_complete; data = {'complete': True, 'schedule': {}, '_stamp': '2025-09-20T08:50:43.667299'}
 [DEBUG   ] Closing IPCMessageClient instance
 [DEBUG   ] Persisting schedule
 [DEBUG   ] LazyLoaded mine.update
 [INFO    ] Added new job __mine_interval to scheduler
 [DEBUG   ] SaltEvent PUB socket URI: /var/run/salt/minion/minion_event_4b832e873d_pub.ipc
 [DEBUG   ] SaltEvent PULL socket URI: /var/run/salt/minion/minion_event_4b832e873d_pull.ipc
 [DEBUG   ] Sending event: tag = /salt/minion/minion_schedule_add_complete; data = {'complete': True, 'schedule': {'__mine_interval': {'function': 'mine.update', 'minutes': 60, 'jid_include': True, 'maxrunning': 2, 'run_on_start': True, 'return_job': False, 'enabled': True}}, '_stamp': '2025-09-20T08:50:43.670436'}
 [DEBUG   ] Closing IPCMessageClient instance
 [DEBUG   ] Persisting schedule
 [INFO    ] Added mine.update to scheduler
 [DEBUG   ] SaltEvent PUB socket URI: /var/run/salt/minion/minion_event_4b832e873d_pub.ipc
 [DEBUG   ] SaltEvent PULL socket URI: /var/run/salt/minion/minion_event_4b832e873d_pull.ipc
 [DEBUG   ] Sending event: tag = /salt/minion/minion_schedule_delete_complete; data = {'complete': True, 'schedule': {'__mine_interval': {'function': 'mine.update', 'minutes': 60, 'jid_include': True, 'maxrunning': 2, 'run_on_start': True, 'return_job': False, 'enabled': True}}, '_stamp': '2025-09-20T08:50:43.672333'}
 [DEBUG   ] Closing IPCMessageClient instance
 [DEBUG   ] Persisting schedule
 [DEBUG   ] SaltEvent PUB socket URI: /var/run/salt/minion/minion_event_4b832e873d_pub.ipc
 [DEBUG   ] SaltEvent PULL socket URI: /var/run/salt/minion/minion_event_4b832e873d_pull.ipc
 [DEBUG   ] Sending event: tag = /salt/minion/minion_schedule_delete_complete; data = {'complete': True, 'schedule': {'__mine_interval': {'function': 'mine.update', 'minutes': 60, 'jid_include': True, 'maxrunning': 2, 'run_on_start': True, 'return_job': False, 'enabled': True}}, '_stamp': '2025-09-20T08:50:43.674215'}
 [DEBUG   ] Closing IPCMessageClient instance
 [DEBUG   ] Persisting schedule
 [INFO    ] Minion is starting as user 'root'
 [DEBUG   ] Minion 'salt-minion' trying to tune in
 [DEBUG   ] Initializing new AsyncZeroMQReqChannel for ('/etc/salt/pki/minion', 'salt-minion', 'tcp://172.18.0.2:4506', 'aes')
 [DEBUG   ] Initializing new AsyncAuth for ('/etc/salt/pki/minion', 'salt-minion', 'tcp://172.18.0.2:4506')
 [DEBUG   ] Connecting the Minion to the Master URI (for the return server): tcp://172.18.0.2:4506
 [DEBUG   ] Trying to connect to: tcp://172.18.0.2:4506
 [DEBUG   ] Closing AsyncZeroMQReqChannel instance
 [DEBUG   ] Initializing new AsyncZeroMQReqChannel for ('/etc/salt/pki/minion', 'salt-minion', 'tcp://172.18.0.2:4506', 'aes')
 [DEBUG   ] Initializing new AsyncAuth for ('/etc/salt/pki/minion', 'salt-minion', 'tcp://172.18.0.2:4506')
 [DEBUG   ] Connecting the Minion to the Master URI (for the return server): tcp://172.18.0.2:4506
 [DEBUG   ] Trying to connect to: tcp://172.18.0.2:4506
 [DEBUG   ] Closing AsyncZeroMQReqChannel instance
 [INFO    ] Minion is ready to receive requests!
 [DEBUG   ] Minion of 'salt-master' is handling event tag '/salt/minion/minion_schedule_delete_complete'
 [DEBUG   ] Minion of 'salt-master' is handling event tag '/salt/minion/minion_schedule_add_complete'
 [DEBUG   ] Minion of 'salt-master' is handling event tag '/salt/minion/minion_schedule_delete_complete'
 [DEBUG   ] Minion of 'salt-master' is handling event tag '/salt/minion/minion_schedule_delete_complete'
 [DEBUG   ] schedule: Job __mine_interval was scheduled with jid_include, adding to cache (jid_include defaults to True)
 [DEBUG   ] schedule: Job __mine_interval was scheduled with a max number of 2
 [INFO    ] Running scheduled job: __mine_interval
 [DEBUG   ] Subprocess SignalHandlingProcess-1:2-Schedule-__mine_interval added
 [DEBUG   ] schedule.handle_func: adding this job to the jobcache with data {'id': 'salt-minion', 'fun': 'mine.update', 'fun_args': [], 'schedule': '__mine_interval', 'jid': '20250920085044734024', 'pid': 35}
 [DEBUG   ] LazyLoaded mine.update
 [DEBUG   ] LazyLoaded config.merge
 [DEBUG   ] schedule.handle_func: Removing /var/cache/salt/minion/proc/20250920085044734024
 [DEBUG   ] Subprocess SignalHandlingProcess-1:2-Schedule-__mine_interval cleaned up




sudo docker inspect 1c5c80b09e8df27430fc292771724cf408add2a46a4b3189ff50e15c3bf0ae90
[{'Id': '1c5c80b09e8df27430fc292771724cf408add2a46a4b3189ff50e15c3bf0ae90', 'Created': '2025-09-20T08:50:38.697418368Z', 'Path': 'docker-entrypoint.sh', 'Args': ['redis-server'], 'State': {'Status': 'running', 'Running': True, 'Paused': False, 'Restarting': False, 'OOMKilled': False, 'Dead': False, 'Pid': 26264, 'ExitCode': 0, 'Error': '', 'StartedAt': '2025-09-20T08:50:38.868113618Z', 'FinishedAt': '0001-01-01T00:00:00Z'}, 'Image': 'sha256:7d82ee7ea909dd7a1f36a46d61b784123d632a2e29da54f7208c525dfcebe131', 'ResolvConfPath': '/var/lib/docker/containers/1c5c80b09e8df27430fc292771724cf408add2a46a4b3189ff50e15c3bf0ae90/resolv.conf', 'HostnamePath': '/var/lib/docker/containers/1c5c80b09e8df27430fc292771724cf408add2a46a4b3189ff50e15c3bf0ae90/hostname', 'HostsPath': '/var/lib/docker/containers/1c5c80b09e8df27430fc292771724cf408add2a46a4b3189ff50e15c3bf0ae90/hosts', 'LogPath': '/var/lib/docker/containers/1c5c80b09e8df27430fc292771724cf408add2a46a4b3189ff50e15c3bf0ae90/1c5c80b09e8df27430fc292771724cf408add2a46a4b3189ff50e15c3bf0ae90-json.log', 'Name': '/openai-redis-1', 'RestartCount': 0, 'Driver': 'overlayfs', 'Platform': 'linux', 'MountLabel': '', 'ProcessLabel': '', 'AppArmorProfile': '', 'ExecIDs': None, 'HostConfig': {'Binds': None, 'ContainerIDFile': '', 'LogConfig': {'Type': 'json-file', 'Config': {}}, 'NetworkMode': 'openai_salt-network', 'PortBindings': {}, 'RestartPolicy': {'Name': 'no', 'MaximumRetryCount': 0}, 'AutoRemove': False, 'VolumeDriver': '', 'VolumesFrom': None, 'ConsoleSize': [0, 0], 'CapAdd': None, 'CapDrop': None, 'CgroupnsMode': 'private', 'Dns': None, 'DnsOptions': None, 'DnsSearch': None, 'ExtraHosts': [], 'GroupAdd': None, 'IpcMode': 'private', 'Cgroup': '', 'Links': None, 'OomScoreAdj': 0, 'PidMode': '', 'Privileged': False, 'PublishAllPorts': False, 'ReadonlyRootfs': False, 'SecurityOpt': None, 'UTSMode': '', 'UsernsMode': '', 'ShmSize': 67108864, 'Runtime': 'runc', 'Isolation': '', 'CpuShares': 0, 'Memory': 0, 'NanoCpus': 0, 'CgroupParent': '', 'BlkioWeight': 0, 'BlkioWeightDevice': None, 'BlkioDeviceReadBps': None, 'BlkioDeviceWriteBps': None, 'BlkioDeviceReadIOps': None, 'BlkioDeviceWriteIOps': None, 'CpuPeriod': 0, 'CpuQuota': 0, 'CpuRealtimePeriod': 0, 'CpuRealtimeRuntime': 0, 'CpusetCpus': '', 'CpusetMems': '', 'Devices': None, 'DeviceCgroupRules': None, 'DeviceRequests': None, 'MemoryReservation': 0, 'MemorySwap': 0, 'MemorySwappiness': None, 'OomKillDisable': None, 'PidsLimit': None, 'Ulimits': None, 'CpuCount': 0, 'CpuPercent': 0, 'IOMaximumIOps': 0, 'IOMaximumBandwidth': 0, 'MaskedPaths': ['/proc/asound', '/proc/acpi', '/proc/interrupts', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/proc/scsi', '/sys/firmware', '/sys/devices/virtual/powercap'], 'ReadonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}, 'GraphDriver': {'Data': None, 'Name': 'overlayfs'}, 'Mounts': [{'Type': 'volume', 'Name': '3f92fe42a5851461d5eb04d66fabf8ba54aae50866d2344ea382f5931fdbdbe9', 'Source': '/var/lib/docker/volumes/3f92fe42a5851461d5eb04d66fabf8ba54aae50866d2344ea382f5931fdbdbe9/_data', 'Destination': '/data', 'Driver': 'local', 'Mode': '', 'RW': True, 'Propagation': ''}], 'Config': {'Hostname': '1c5c80b09e8d', 'Domainname': '', 'User': '', 'AttachStdin': False, 'AttachStdout': True, 'AttachStderr': True, 'ExposedPorts': {'6379/tcp': {}}, 'Tty': False, 'OpenStdin': False, 'StdinOnce': False, 'Env': ['PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'GOSU_VERSION=1.14', 'REDIS_VERSION=5.0.14', 'REDIS_DOWNLOAD_URL=http://download.redis.io/releases/redis-5.0.14.tar.gz', 'REDIS_DOWNLOAD_SHA=3ea5024766d983249e80d4aa9457c897a9f079957d0fb1f35682df233f997f32'], 'Cmd': ['redis-server'], 'Image': 'openai-redis', 'Volumes': {'/data': {}}, 'WorkingDir': '/data', 'Entrypoint': ['docker-entrypoint.sh'], 'OnBuild': None, 'Labels': {'com.docker.compose.config-hash': '86f0ac1370587d89c8bd13acd7ac863066ed4b9cdccf39f3e3a29d8c26ddccc3', 'com.docker.compose.container-number': '1', 'com.docker.compose.depends_on': '', 'com.docker.compose.image': 'sha256:7d82ee7ea909dd7a1f36a46d61b784123d632a2e29da54f7208c525dfcebe131', 'com.docker.compose.oneoff': 'False', 'com.docker.compose.project': 'openai', 'com.docker.compose.project.config_files': '/home/gabriele/thesis-project/Agents-for-Vulnerable-Dockers-and-related-Benchmarks/dockers/CVE-2020-11651/openai/docker-compose.yml', 'com.docker.compose.project.working_dir': '/home/gabriele/thesis-project/Agents-for-Vulnerable-Dockers-and-related-Benchmarks/dockers/CVE-2020-11651/openai', 'com.docker.compose.service': 'redis', 'com.docker.compose.version': '2.39.2', 'desktop.docker.io/wsl-distro': 'Ubuntu'}}, 'NetworkSettings': {'Bridge': '', 'SandboxID': '3cee53cd1dcffdc39c1b216b81f69c994ba97c15665ebecf5ed4caf5950a4fc9', 'SandboxKey': '/var/run/docker/netns/3cee53cd1dcf', 'Ports': {'6379/tcp': None}, 'HairpinMode': False, 'LinkLocalIPv6Address': '', 'LinkLocalIPv6PrefixLen': 0, 'SecondaryIPAddresses': None, 'SecondaryIPv6Addresses': None, 'EndpointID': '', 'Gateway': '', 'GlobalIPv6Address': '', 'GlobalIPv6PrefixLen': 0, 'IPAddress': '', 'IPPrefixLen': 0, 'IPv6Gateway': '', 'MacAddress': '', 'Networks': {'openai_salt-network': {'IPAMConfig': None, 'Links': None, 'Aliases': ['openai-redis-1', 'redis'], 'MacAddress': 'da:05:37:70:f1:73', 'DriverOpts': None, 'GwPriority': 0, 'NetworkID': '1327fe50be28a9fdb6af04799cfb6f67fe76ebeed6a1e785fb53e80fed053f55', 'EndpointID': 'c9ad0002d20ad7fe992f9a54648bf7e53d7c3fb8c8383bb6c0a9ba2f4621cfaa', 'Gateway': '172.18.0.1', 'IPAddress': '172.18.0.3', 'IPPrefixLen': 16, 'IPv6Gateway': '', 'GlobalIPv6Address': '', 'GlobalIPv6PrefixLen': 0, 'DNSNames': ['openai-redis-1', 'redis', '1c5c80b09e8d']}}}, 'ImageManifestDescriptor': {'mediaType': 'application/vnd.oci.image.manifest.v1+json', 'digest': 'sha256:1e82ed79b0fce8a05aeca791b6e5d39c5392a2935f98a9119bbbfbbbcf38949b', 'size': 1431, 'platform': {'architecture': 'amd64', 'os': 'linux'}}}]



sudo docker inspect 9c5014d2dfef8f7693d050defd6f91c46b359273bb959e0939cf21cb4247cf0e
[{'Id': '9c5014d2dfef8f7693d050defd6f91c46b359273bb959e0939cf21cb4247cf0e', 'Created': '2025-09-20T08:50:38.703966668Z', 'Path': 'salt-master', 'Args': ['-l', 'debug'], 'State': {'Status': 'running', 'Running': True, 'Paused': False, 'Restarting': False, 'OOMKilled': False, 'Dead': False, 'Pid': 26263, 'ExitCode': 0, 'Error': '', 'StartedAt': '2025-09-20T08:50:38.888685268Z', 'FinishedAt': '0001-01-01T00:00:00Z'}, 'Image': 'sha256:ec9f71b2ef7351ab4e51292a4e62f87ec0351506979c738245b6e5054649b81c', 'ResolvConfPath': '/var/lib/docker/containers/9c5014d2dfef8f7693d050defd6f91c46b359273bb959e0939cf21cb4247cf0e/resolv.conf', 'HostnamePath': '/var/lib/docker/containers/9c5014d2dfef8f7693d050defd6f91c46b359273bb959e0939cf21cb4247cf0e/hostname', 'HostsPath': '/var/lib/docker/containers/9c5014d2dfef8f7693d050defd6f91c46b359273bb959e0939cf21cb4247cf0e/hosts', 'LogPath': '/var/lib/docker/containers/9c5014d2dfef8f7693d050defd6f91c46b359273bb959e0939cf21cb4247cf0e/9c5014d2dfef8f7693d050defd6f91c46b359273bb959e0939cf21cb4247cf0e-json.log', 'Name': '/openai-salt-master-1', 'RestartCount': 0, 'Driver': 'overlayfs', 'Platform': 'linux', 'MountLabel': '', 'ProcessLabel': '', 'AppArmorProfile': '', 'ExecIDs': None, 'HostConfig': {'Binds': ['/home/gabriele/thesis-project/Agents-for-Vulnerable-Dockers-and-related-Benchmarks/dockers/CVE-2020-11651/openai/salt-master/master.conf:/etc/salt/master:rw'], 'ContainerIDFile': '', 'LogConfig': {'Type': 'json-file', 'Config': {}}, 'NetworkMode': 'openai_salt-network', 'PortBindings': {'4505/tcp': [{'HostIp': '', 'HostPort': '4505'}], '4506/tcp': [{'HostIp': '', 'HostPort': '4506'}]}, 'RestartPolicy': {'Name': 'no', 'MaximumRetryCount': 0}, 'AutoRemove': False, 'VolumeDriver': '', 'VolumesFrom': None, 'ConsoleSize': [0, 0], 'CapAdd': None, 'CapDrop': None, 'CgroupnsMode': 'private', 'Dns': None, 'DnsOptions': None, 'DnsSearch': None, 'ExtraHosts': [], 'GroupAdd': None, 'IpcMode': 'private', 'Cgroup': '', 'Links': None, 'OomScoreAdj': 0, 'PidMode': '', 'Privileged': False, 'PublishAllPorts': False, 'ReadonlyRootfs': False, 'SecurityOpt': None, 'UTSMode': '', 'UsernsMode': '', 'ShmSize': 67108864, 'Runtime': 'runc', 'Isolation': '', 'CpuShares': 0, 'Memory': 0, 'NanoCpus': 0, 'CgroupParent': '', 'BlkioWeight': 0, 'BlkioWeightDevice': None, 'BlkioDeviceReadBps': None, 'BlkioDeviceWriteBps': None, 'BlkioDeviceReadIOps': None, 'BlkioDeviceWriteIOps': None, 'CpuPeriod': 0, 'CpuQuota': 0, 'CpuRealtimePeriod': 0, 'CpuRealtimeRuntime': 0, 'CpusetCpus': '', 'CpusetMems': '', 'Devices': None, 'DeviceCgroupRules': None, 'DeviceRequests': None, 'MemoryReservation': 0, 'MemorySwap': 0, 'MemorySwappiness': None, 'OomKillDisable': None, 'PidsLimit': None, 'Ulimits': None, 'CpuCount': 0, 'CpuPercent': 0, 'IOMaximumIOps': 0, 'IOMaximumBandwidth': 0, 'MaskedPaths': ['/proc/asound', '/proc/acpi', '/proc/interrupts', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/proc/scsi', '/sys/firmware', '/sys/devices/virtual/powercap'], 'ReadonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}, 'GraphDriver': {'Data': None, 'Name': 'overlayfs'}, 'Mounts': [{'Type': 'bind', 'Source': '/home/gabriele/thesis-project/Agents-for-Vulnerable-Dockers-and-related-Benchmarks/dockers/CVE-2020-11651/openai/salt-master/master.conf', 'Destination': '/etc/salt/master', 'Mode': 'rw', 'RW': True, 'Propagation': 'rprivate'}], 'Config': {'Hostname': 'salt-master', 'Domainname': '', 'User': '', 'AttachStdin': False, 'AttachStdout': True, 'AttachStderr': True, 'ExposedPorts': {'4505/tcp': {}, '4506/tcp': {}}, 'Tty': False, 'OpenStdin': False, 'StdinOnce': False, 'Env': ['PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'LANG=C.UTF-8', 'GPG_KEY=0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D', 'PYTHON_VERSION=3.7.17', 'PYTHON_PIP_VERSION=23.0.1', 'PYTHON_SETUPTOOLS_VERSION=57.5.0', 'PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/9af82b715db434abb94a0a6f3569f43e72157346/public/get-pip.py', 'PYTHON_GET_PIP_SHA256=45a2bb8bf2bb5eff16fdd00faef6f29731831c7c59bd9fc2bf1f3bed511ff1fe'], 'Cmd': ['salt-master', '-l', 'debug'], 'Image': 'openai-salt-master', 'Volumes': None, 'WorkingDir': '', 'Entrypoint': None, 'OnBuild': None, 'Labels': {'com.docker.compose.config-hash': '931206aad0e0e701fa03c7d274e07296d1c8abaa063422e26ad7d6c512f2292f', 'com.docker.compose.container-number': '1', 'com.docker.compose.depends_on': '', 'com.docker.compose.image': 'sha256:ec9f71b2ef7351ab4e51292a4e62f87ec0351506979c738245b6e5054649b81c', 'com.docker.compose.oneoff': 'False', 'com.docker.compose.project': 'openai', 'com.docker.compose.project.config_files': '/home/gabriele/thesis-project/Agents-for-Vulnerable-Dockers-and-related-Benchmarks/dockers/CVE-2020-11651/openai/docker-compose.yml', 'com.docker.compose.project.working_dir': '/home/gabriele/thesis-project/Agents-for-Vulnerable-Dockers-and-related-Benchmarks/dockers/CVE-2020-11651/openai', 'com.docker.compose.service': 'salt-master', 'com.docker.compose.version': '2.39.2', 'desktop.docker.io/wsl-distro': 'Ubuntu'}}, 'NetworkSettings': {'Bridge': '', 'SandboxID': 'a685335c2f686d0ddf44d61353aa425512d0cb990415f7ac96e6fb36e413797c', 'SandboxKey': '/var/run/docker/netns/a685335c2f68', 'Ports': {'4505/tcp': [{'HostIp': '0.0.0.0', 'HostPort': '4505'}, {'HostIp': '::', 'HostPort': '4505'}], '4506/tcp': [{'HostIp': '0.0.0.0', 'HostPort': '4506'}, {'HostIp': '::', 'HostPort': '4506'}]}, 'HairpinMode': False, 'LinkLocalIPv6Address': '', 'LinkLocalIPv6PrefixLen': 0, 'SecondaryIPAddresses': None, 'SecondaryIPv6Addresses': None, 'EndpointID': '', 'Gateway': '', 'GlobalIPv6Address': '', 'GlobalIPv6PrefixLen': 0, 'IPAddress': '', 'IPPrefixLen': 0, 'IPv6Gateway': '', 'MacAddress': '', 'Networks': {'openai_salt-network': {'IPAMConfig': None, 'Links': None, 'Aliases': ['openai-salt-master-1', 'salt-master'], 'MacAddress': 'd2:64:ef:29:6a:9e', 'DriverOpts': None, 'GwPriority': 0, 'NetworkID': '1327fe50be28a9fdb6af04799cfb6f67fe76ebeed6a1e785fb53e80fed053f55', 'EndpointID': 'a80530a431dd1db61bbef3b51e8261094a94f22473f18ab72968a49e736ef63a', 'Gateway': '172.18.0.1', 'IPAddress': '172.18.0.2', 'IPPrefixLen': 16, 'IPv6Gateway': '', 'GlobalIPv6Address': '', 'GlobalIPv6PrefixLen': 0, 'DNSNames': ['openai-salt-master-1', 'salt-master', '9c5014d2dfef']}}}, 'ImageManifestDescriptor': {'mediaType': 'application/vnd.oci.image.manifest.v1+json', 'digest': 'sha256:ffb525e34e604b6d6ecd52e38bdab4b77939bdcffa580b05fbff2a2764f27049', 'size': 2397, 'platform': {'architecture': 'amd64', 'os': 'linux'}}}]



sudo docker inspect 0a9b72ad8b52ad66bf822ba8fa1501424119c336bfc4fac520e09881d4d8efaf
[{'Id': '0a9b72ad8b52ad66bf822ba8fa1501424119c336bfc4fac520e09881d4d8efaf', 'Created': '2025-09-20T08:50:38.703241952Z', 'Path': 'salt-minion', 'Args': ['-l', 'debug'], 'State': {'Status': 'running', 'Running': True, 'Paused': False, 'Restarting': False, 'OOMKilled': False, 'Dead': False, 'Pid': 26262, 'ExitCode': 0, 'Error': '', 'StartedAt': '2025-09-20T08:50:38.869619793Z', 'FinishedAt': '0001-01-01T00:00:00Z'}, 'Image': 'sha256:cc82d4202dd54ef5dded1e05f4e5d791adef19b2456c0924a397711aa2aa05ae', 'ResolvConfPath': '/var/lib/docker/containers/0a9b72ad8b52ad66bf822ba8fa1501424119c336bfc4fac520e09881d4d8efaf/resolv.conf', 'HostnamePath': '/var/lib/docker/containers/0a9b72ad8b52ad66bf822ba8fa1501424119c336bfc4fac520e09881d4d8efaf/hostname', 'HostsPath': '/var/lib/docker/containers/0a9b72ad8b52ad66bf822ba8fa1501424119c336bfc4fac520e09881d4d8efaf/hosts', 'LogPath': '/var/lib/docker/containers/0a9b72ad8b52ad66bf822ba8fa1501424119c336bfc4fac520e09881d4d8efaf/0a9b72ad8b52ad66bf822ba8fa1501424119c336bfc4fac520e09881d4d8efaf-json.log', 'Name': '/openai-salt-minion-1', 'RestartCount': 0, 'Driver': 'overlayfs', 'Platform': 'linux', 'MountLabel': '', 'ProcessLabel': '', 'AppArmorProfile': '', 'ExecIDs': None, 'HostConfig': {'Binds': ['/home/gabriele/thesis-project/Agents-for-Vulnerable-Dockers-and-related-Benchmarks/dockers/CVE-2020-11651/openai/salt-minion/minion.conf:/etc/salt/minion:rw'], 'ContainerIDFile': '', 'LogConfig': {'Type': 'json-file', 'Config': {}}, 'NetworkMode': 'openai_salt-network', 'PortBindings': {}, 'RestartPolicy': {'Name': 'no', 'MaximumRetryCount': 0}, 'AutoRemove': False, 'VolumeDriver': '', 'VolumesFrom': None, 'ConsoleSize': [0, 0], 'CapAdd': None, 'CapDrop': None, 'CgroupnsMode': 'private', 'Dns': None, 'DnsOptions': None, 'DnsSearch': None, 'ExtraHosts': [], 'GroupAdd': None, 'IpcMode': 'private', 'Cgroup': '', 'Links': None, 'OomScoreAdj': 0, 'PidMode': '', 'Privileged': False, 'PublishAllPorts': False, 'ReadonlyRootfs': False, 'SecurityOpt': None, 'UTSMode': '', 'UsernsMode': '', 'ShmSize': 67108864, 'Runtime': 'runc', 'Isolation': '', 'CpuShares': 0, 'Memory': 0, 'NanoCpus': 0, 'CgroupParent': '', 'BlkioWeight': 0, 'BlkioWeightDevice': None, 'BlkioDeviceReadBps': None, 'BlkioDeviceWriteBps': None, 'BlkioDeviceReadIOps': None, 'BlkioDeviceWriteIOps': None, 'CpuPeriod': 0, 'CpuQuota': 0, 'CpuRealtimePeriod': 0, 'CpuRealtimeRuntime': 0, 'CpusetCpus': '', 'CpusetMems': '', 'Devices': None, 'DeviceCgroupRules': None, 'DeviceRequests': None, 'MemoryReservation': 0, 'MemorySwap': 0, 'MemorySwappiness': None, 'OomKillDisable': None, 'PidsLimit': None, 'Ulimits': None, 'CpuCount': 0, 'CpuPercent': 0, 'IOMaximumIOps': 0, 'IOMaximumBandwidth': 0, 'MaskedPaths': ['/proc/asound', '/proc/acpi', '/proc/interrupts', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/proc/scsi', '/sys/firmware', '/sys/devices/virtual/powercap'], 'ReadonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}, 'GraphDriver': {'Data': None, 'Name': 'overlayfs'}, 'Mounts': [{'Type': 'bind', 'Source': '/home/gabriele/thesis-project/Agents-for-Vulnerable-Dockers-and-related-Benchmarks/dockers/CVE-2020-11651/openai/salt-minion/minion.conf', 'Destination': '/etc/salt/minion', 'Mode': 'rw', 'RW': True, 'Propagation': 'rprivate'}], 'Config': {'Hostname': '0a9b72ad8b52', 'Domainname': '', 'User': '', 'AttachStdin': False, 'AttachStdout': True, 'AttachStderr': True, 'Tty': False, 'OpenStdin': False, 'StdinOnce': False, 'Env': ['MASTER=salt-master', 'PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'LANG=C.UTF-8', 'GPG_KEY=0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D', 'PYTHON_VERSION=3.7.17', 'PYTHON_PIP_VERSION=23.0.1', 'PYTHON_SETUPTOOLS_VERSION=57.5.0', 'PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/9af82b715db434abb94a0a6f3569f43e72157346/public/get-pip.py', 'PYTHON_GET_PIP_SHA256=45a2bb8bf2bb5eff16fdd00faef6f29731831c7c59bd9fc2bf1f3bed511ff1fe'], 'Cmd': ['salt-minion', '-l', 'debug'], 'Image': 'openai-salt-minion', 'Volumes': None, 'WorkingDir': '', 'Entrypoint': None, 'OnBuild': None, 'Labels': {'com.docker.compose.config-hash': 'aabd50c57344cc7b1f9af02bfec2853dfef72b53bef55862fb55a638ae99beea', 'com.docker.compose.container-number': '1', 'com.docker.compose.depends_on': '', 'com.docker.compose.image': 'sha256:cc82d4202dd54ef5dded1e05f4e5d791adef19b2456c0924a397711aa2aa05ae', 'com.docker.compose.oneoff': 'False', 'com.docker.compose.project': 'openai', 'com.docker.compose.project.config_files': '/home/gabriele/thesis-project/Agents-for-Vulnerable-Dockers-and-related-Benchmarks/dockers/CVE-2020-11651/openai/docker-compose.yml', 'com.docker.compose.project.working_dir': '/home/gabriele/thesis-project/Agents-for-Vulnerable-Dockers-and-related-Benchmarks/dockers/CVE-2020-11651/openai', 'com.docker.compose.service': 'salt-minion', 'com.docker.compose.version': '2.39.2', 'desktop.docker.io/wsl-distro': 'Ubuntu'}}, 'NetworkSettings': {'Bridge': '', 'SandboxID': '96c68961dd3c5a9ecfbcf4d41f6ed857411f85534db766ca94044d4fb899b95e', 'SandboxKey': '/var/run/docker/netns/96c68961dd3c', 'Ports': {}, 'HairpinMode': False, 'LinkLocalIPv6Address': '', 'LinkLocalIPv6PrefixLen': 0, 'SecondaryIPAddresses': None, 'SecondaryIPv6Addresses': None, 'EndpointID': '', 'Gateway': '', 'GlobalIPv6Address': '', 'GlobalIPv6PrefixLen': 0, 'IPAddress': '', 'IPPrefixLen': 0, 'IPv6Gateway': '', 'MacAddress': '', 'Networks': {'openai_salt-network': {'IPAMConfig': None, 'Links': None, 'Aliases': ['openai-salt-minion-1', 'salt-minion'], 'MacAddress': '6e:ad:c4:a5:af:cb', 'DriverOpts': None, 'GwPriority': 0, 'NetworkID': '1327fe50be28a9fdb6af04799cfb6f67fe76ebeed6a1e785fb53e80fed053f55', 'EndpointID': '64b31888e481b5ee73d5a4bf21848f5157c46e7d59143385f53cd63233710b67', 'Gateway': '172.18.0.1', 'IPAddress': '172.18.0.4', 'IPPrefixLen': 16, 'IPv6Gateway': '', 'GlobalIPv6Address': '', 'GlobalIPv6PrefixLen': 0, 'DNSNames': ['openai-salt-minion-1', 'salt-minion', '0a9b72ad8b52']}}}, 'ImageManifestDescriptor': {'mediaType': 'application/vnd.oci.image.manifest.v1+json', 'digest': 'sha256:4d3f1c421d51cc8c084707388f15121ac30b4f47a14bd27169bdcba1e51698b0', 'size': 2397, 'platform': {'architecture': 'amd64', 'os': 'linux'}}}]

