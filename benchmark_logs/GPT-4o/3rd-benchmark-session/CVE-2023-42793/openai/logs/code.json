{
    "file_name": [
        "docker-compose.yml",
        "Dockerfile",
        "init.sql"
    ],
    "file_code": [
        "version: '3.9'\nservices:\n  teamcity-server:\n    image: jetbrains/teamcity-server:2023.05.3\n    container_name: teamcity-server\n    ports:\n      - \"8111:8111\"\n    volumes:\n      - teamcity_data:/data/teamcity_server/datadir\n      - teamcity_logs:/opt/teamcity/logs\n    environment:\n      TEAMCITY_SERVER_OPTS: -Dteamcity.server.port=8111\n\n  postgres:\n    image: postgres:14.5\n    container_name: teamcity-postgres\n    environment:\n      POSTGRES_USER: teamcity\n      POSTGRES_PASSWORD: teamcity\n      POSTGRES_DB: teamcity\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n    networks:\n      - teamcity-network\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U teamcity\"]\n      interval: 10s\n      retries: 5\n\n  teamcity-agent:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    container_name: teamcity-agent\n    environment:\n      - SERVER_URL=http://teamcity-server:8111\n    depends_on:\n      - teamcity-server\n    networks:\n      - teamcity-network\n\nvolumes:\n  teamcity_data:\n  teamcity_logs:\n  postgres_data:\n\nnetworks:\n  teamcity-network:\n    driver: bridge",
        "FROM jetbrains/teamcity-agent:2023.05.3\n\n# Agent setup\nENV SERVER_URL=http://teamcity-server:8111\n\nCMD [\"/run-services.sh\"]\n\n# Run TeamCity agent\nENTRYPOINT [\"/run-agent.sh\"]",
        "-- SQL script to initialize the TeamCity database\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";\n"
    ],
    "directory_tree": "./../../dockers/CVE-2023-42793/openai/\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 docker-compose.yml\n\u2514\u2500\u2500 init.sql\n"
}