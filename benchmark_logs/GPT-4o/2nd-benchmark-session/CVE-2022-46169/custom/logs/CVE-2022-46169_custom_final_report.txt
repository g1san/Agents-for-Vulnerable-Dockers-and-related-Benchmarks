========== Generated Code (First Version) ==========
Directory tree:
./../../dockers/CVE-2022-46169/custom/
|-- docker-compose.yml
|-- cacti
|   |-- Dockerfile
|   |-- config.php
|   |-- remote_agent.php
|-- mysql
    |-- init.sql


---------- docker-compose.yml ----------
version: '3.8'

services:
  cacti:
    build: ./cacti
    image: cacti:CVE-2022-46169
    ports:
      - "8080:80"
    depends_on:
      - mysql
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_DATABASE=cacti
      - MYSQL_USER=cacti
      - MYSQL_PASSWORD=cacti

  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cacti
      MYSQL_USER: cacti
      MYSQL_PASSWORD: cacti
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql


---------- cacti/Dockerfile ----------
FROM php:7.4-apache

RUN apt-get update && \
    apt-get install -y librrd-dev libxml2-dev libsnmp-dev libpng-dev && \
    docker-php-ext-install mysqli && \
    docker-php-ext-enable mysqli && \
    docker-php-ext-install sockets

COPY config.php /var/www/html/config.php
COPY remote_agent.php /var/www/html/remote_agent.php

RUN chown -R www-data:www-data /var/www/html

CMD ["apache2-foreground"]


---------- cacti/config.php ----------
<?php
// Cacti configuration file
$database_type = "mysql";
$database_default = "cacti";
$database_hostname = getenv('MYSQL_HOST');
$database_username = getenv('MYSQL_USER');
$database_password = getenv('MYSQL_PASSWORD');
$database_port = "3306";
$database_ssl = false;
$database_ssl_key = "";
$database_ssl_cert = "";
$database_ssl_ca = "";
$database_persistent = false;
$database_ssl_verify = false;

$url_path = "/";

?>


---------- cacti/remote_agent.php ----------
<?php
// Vulnerable remote_agent.php for CVE-2022-46169 demonstration

if (isset($_REQUEST['action']) && $_REQUEST['action'] === 'polldata') {
    $poller_id = $_REQUEST['poller_id'];
    $host_id = $_REQUEST['host_id'];
    $local_data_ids = $_REQUEST['local_data_ids'];

    // Vulnerable command injection
    $command = "echo $poller_id $host_id $local_data_ids";
    system($command);
}
?>


---------- mysql/init.sql ----------
CREATE DATABASE IF NOT EXISTS cacti;
USE cacti;

CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL
);

INSERT INTO users (username, password) VALUES ('admin', 'admin');




========== Test Passed! Generated Code (Final Version) ==========
Directory tree:
./../../dockers/CVE-2022-46169/custom/
|-- docker-compose.yml
|-- cacti
|   |-- Dockerfile
|   |-- config.php
|   |-- remote_agent.php
|-- mysql
    |-- init.sql


---------- docker-compose.yml ----------
version: '3.8'

services:
  cacti:
    build: ./cacti
    image: cacti:CVE-2022-46169
    ports:
      - "8080:80"
    depends_on:
      - mysql
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_DATABASE=cacti
      - MYSQL_USER=cacti
      - MYSQL_PASSWORD=cacti

  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cacti
      MYSQL_USER: cacti
      MYSQL_PASSWORD: cacti
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql


---------- cacti/Dockerfile ----------
FROM php:7.4-apache

RUN apt-get update && \
    apt-get install -y librrd-dev libxml2-dev libsnmp-dev libpng-dev && \
    docker-php-ext-install mysqli && \
    docker-php-ext-enable mysqli && \
    docker-php-ext-install sockets

COPY config.php /var/www/html/config.php
COPY remote_agent.php /var/www/html/remote_agent.php

RUN chown -R www-data:www-data /var/www/html

CMD ["apache2-foreground"]


---------- cacti/config.php ----------
<?php
// Cacti configuration file
$database_type = "mysql";
$database_default = "cacti";
$database_hostname = getenv('MYSQL_HOST');
$database_username = getenv('MYSQL_USER');
$database_password = getenv('MYSQL_PASSWORD');
$database_port = "3306";
$database_ssl = false;
$database_ssl_key = "";
$database_ssl_cert = "";
$database_ssl_ca = "";
$database_persistent = false;
$database_ssl_verify = false;

$url_path = "/";

?>


---------- cacti/remote_agent.php ----------
<?php
// Vulnerable remote_agent.php for CVE-2022-46169 demonstration

if (isset($_REQUEST['action']) && $_REQUEST['action'] === 'polldata') {
    $poller_id = $_REQUEST['poller_id'];
    $host_id = $_REQUEST['host_id'];
    $local_data_ids = $_REQUEST['local_data_ids'];

    // Vulnerable command injection
    $command = "echo $poller_id $host_id $local_data_ids";
    system($command);
}
?>


---------- mysql/init.sql ----------
CREATE DATABASE IF NOT EXISTS cacti;
USE cacti;

CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL
);

INSERT INTO users (username, password) VALUES ('admin', 'admin');


