import os
from flask import Flask, request, redirect, url_for, send_from_directory, render_template_string
import mysql.connector

UPLOAD_FOLDER = '/app/uploads'
os.makedirs(UPLOAD_FOLDER, exist_ok=True)

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

# Database connection (no pooling for simplicity)
def get_db():
    return mysql.connector.connect(
        host='db',
        user='user',
        password='userpw',
        database='testdb'
    )

@app.route('/')
def index():
    db = get_db()
    cursor = db.cursor(dictionary=True)
    cursor.execute('SELECT id, filename FROM files')
    rows = cursor.fetchall()
    cursor.close()
    db.close()
    html = """
    <h1>File Upload</h1>
    <form method=post enctype=multipart/form-data action='/upload'>
      <input type=file name=file>
      <input type=submit value=Upload>
    </form>
    <h2>Uploaded Files</h2>
    <ul>
    {% for row in rows %}
      <li><a href="/files/{{ row.id }}">{{ row.filename }}</a></li>
    {% endfor %}
    </ul>
    """
    return render_template_string(html, rows=rows)

@app.route('/upload', methods=['POST'])
def upload_file():
    if 'file' not in request.files:
        return 'No file part', 400
    file = request.files['file']
    if file.filename == '':
        return 'No selected file', 400
    # Save uploaded file securely
    filename = os.path.basename(file.filename)
    filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
    file.save(filepath)
    db = get_db()
    cursor = db.cursor()
    cursor.execute('INSERT INTO files (filename) VALUES (%s)', (filename,))
    db.commit()
    cursor.close()
    db.close()
    return redirect(url_for('index'))

@app.route('/files/<int:file_id>')
def serve_file(file_id):
    db = get_db()
    cursor = db.cursor(dictionary=True)
    cursor.execute('SELECT filename FROM files WHERE id = %s', (file_id,))
    row = cursor.fetchone()
    cursor.close()
    db.close()
    if row:
        return send_from_directory(app.config['UPLOAD_FOLDER'], row['filename'])
    else:
        return 'File not found', 404

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
