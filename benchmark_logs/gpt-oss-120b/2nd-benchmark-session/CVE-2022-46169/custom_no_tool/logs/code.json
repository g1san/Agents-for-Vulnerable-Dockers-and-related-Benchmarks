{
    "files": [
        {
            "location": "./../../dockers/CVE-2022-46169/custom_no_tool/docker-compose.yml",
            "content": "services:\n  vulnerable_app:\n    build:\n      context: ./app\n    ports:\n      - \"5000:5000\"\n    environment:\n      - FLASK_APP=app.py\n      - FLASK_RUN_HOST=0.0.0.0\n      - DB_HOST=db\n      - DB_USER=root\n      - DB_PASSWORD=example\n      - DB_NAME=testdb\n    depends_on:\n      - db\n  db:\n    image: mysql:8.0\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: example\n      MYSQL_DATABASE: testdb\n    ports:\n      - \"3306:3306\"\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql\nvolumes:\n  db_data:"
        },
        {
            "location": "./../../dockers/CVE-2022-46169/custom_no_tool/app/Dockerfile",
            "content": "FROM python:3.8-slim\n# Install required system packages (compiler, SSL libs, Python headers, certificates)\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        gcc \\\n        libssl-dev \\\n        python3.8-dev \\\n        ca-certificates && \\\n    rm -rf /var/lib/apt/lists/*\nWORKDIR /app\nCOPY app.py /app/app.py\nENV FLASK_APP=app.py\nENV FLASK_RUN_HOST=0.0.0.0\n# Install Flask and the pure\u2011Python MySQL connector\nRUN pip install --no-cache-dir \"flask>=2.2\" mysql-connector-python==8.0.27\nEXPOSE 5000\nCMD [\"flask\", \"run\"]"
        },
        {
            "location": "./../../dockers/CVE-2022-46169/custom_no_tool/app/app.py",
            "content": "from flask import Flask, request, render_template_string\nimport mysql.connector\nimport os\n\napp = Flask(__name__)\n\ndef get_db_connection():\n    conn = mysql.connector.connect(\n        host=os.getenv('DB_HOST', 'db'),\n        user=os.getenv('DB_USER', 'root'),\n        password=os.getenv('DB_PASSWORD', 'example'),\n        database=os.getenv('DB_NAME', 'testdb')\n    )\n    return conn\n\n@app.route('/')\ndef index():\n    name = request.args.get('name', 'world')\n    template = \"<h1>Hello {{ name }}</h1>\"\n    return render_template_string(template, name=name)\n\n@app.route('/users')\ndef list_users():\n    conn = get_db_connection()\n    cursor = conn.cursor(dictionary=True)\n    cursor.execute('SELECT id, username FROM users')\n    rows = cursor.fetchall()\n    cursor.close()\n    conn.close()\n    return {'users': rows}\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5005)  # optional change to avoid port clash; can keep 5000 if desired"
        },
        {
            "location": "./../../dockers/CVE-2022-46169/custom_no_tool/db/init.sql",
            "content": "CREATE DATABASE IF NOT EXISTS testdb;\nUSE testdb;\nCREATE TABLE IF NOT EXISTS users (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    username VARCHAR(50) NOT NULL,\n    password VARCHAR(255) NOT NULL\n);\nINSERT INTO users (username, password) VALUES\n('alice', 'password1'),\n('bob', 'password2'),\n('charlie', 'password3');"
        }
    ],
    "directory_tree": "./../../dockers/CVE-2022-46169/custom_no_tool"
}