{
  "version": "15.0.6",
  "vulnerabilities": [
    {
      "id": "42e2929116d6b78ec701b9d4544625dcbf19db45265c570ffed510f0856c623a",
      "category": "container_scanning",
      "message": "CVE-2025-58056 on io.netty/netty-codec-http@4.1.82.Final",
      "description": "## Summary\nA flaw in netty's parsing of chunk extensions in HTTP/1.1 messages with chunked encoding can lead to request smuggling issues with some reverse proxies.\n\n## Details\nWhen encountering a newline character (LF) while parsing a chunk extension, netty interprets the newline as the end of the chunk-size line regardless of whether a preceding carriage return (CR) was found. This is in violation of the HTTP 1.1 standard which specifies that the chunk extension is terminated by a CRLF sequence (see the [RFC](https://datatracker.ietf.org/doc/html/rfc9112#name-chunked-transfer-coding)).\n\nThis is by itself harmless, but consider an intermediary with a similar parsing flaw: while parsing a chunk extension, the intermediary interprets an LF without a preceding CR as simply part of the chunk extension (this is also in violation of the RFC, because whitespace characters are not allowed in chunk extensions). We can use this discrepancy to construct an HTTP request that the intermediary will interpret as one request but netty will interpret as two (all lines ending with CRLF, notice the LFs in the chunk extension):\n\n```\nPOST /one HTTP/1.1\nHost: localhost:8080\nTransfer-Encoding: chunked\n\n48;\\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\n0\n\nPOST /two HTTP/1.1\nHost: localhost:8080\nTransfer-Encoding: chunked\n\n0\n\n```\n\nThe intermediary will interpret this as a single request. Once forwarded to netty, netty will interpret it as two separate requests. This is a problem, because attackers can then the intermediary, as well as perform standard request smuggling attacks against other live users (see [this Portswigger article](https://portswigger.net/web-security/request-smuggling/exploiting)).\n\n## Impact\nThis is a request smuggling issue which can be exploited for bypassing front-end access control rules as well as corrupting the responses served to other live clients.\n\nThe impact is high, but it only affects setups that use a front-end which:\n1. Interprets LF characters (without preceding CR) in chunk extensions as part of the chunk extension.\n2. Forwards chunk extensions without normalization.\n\n## Disclosure\n\n - This vulnerability was disclosed on June 18th, 2025 here: https://w4ke.info/2025/06/18/funky-chunks.html\n\n## Discussion\nDiscussion for this vulnerability can be found here:\n - https://github.com/netty/netty/issues/15522\n - https://github.com/JLLeitschuh/unCVEed/issues/1\n\n## Credit\n\n - Credit to @JeppW for uncovering this vulnerability.\n - Credit to @JLLeitschuh at [Socket](https://socket.dev/) for coordinating the vulnerability disclosure.",
      "cve": "CVE-2025-58056",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-codec-http@4.1.82.Final to 4.1.125.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-codec-http@4.1.82.Final"
          },
          "version": "4.1.82.Final"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58056",
          "value": "CVE-2025-58056",
          "url": "https://scout.docker.com/v/CVE-2025-58056?s=github&n=netty-codec-http&ns=io.netty&t=maven&vr=%3C4.1.125.Final"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58056?s=github&n=netty-codec-http&ns=io.netty&t=maven&vr=%3C4.1.125.Final"
        }
      ]
    },
    {
      "id": "51a684fd71f163fc5374b0e571c360e72fb66e8fe6e7992f33918317f0856241",
      "category": "container_scanning",
      "message": "CVE-2024-12801 on ch.qos.logback/logback-core@1.2.11",
      "description": "Server-Side Request Forgery (SSRF) in SaxEventRecorder by QOS.CH logback version 1.5.12 on the Java platform, allows an attacker to forge requests by compromising logback configuration files in XML.\n \nThe attacks involves the modification of DOCTYPE declaration in  XML configuration files.",
      "cve": "CVE-2024-12801",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ch.qos.logback/logback-core@1.2.11 to 1.3.15",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/ch.qos.logback/logback-core@1.2.11"
          },
          "version": "1.2.11"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-12801",
          "value": "CVE-2024-12801",
          "url": "https://scout.docker.com/v/CVE-2024-12801?s=github&n=logback-core&ns=ch.qos.logback&t=maven&vr=%3C1.3.15"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-12801?s=github&n=logback-core&ns=ch.qos.logback&t=maven&vr=%3C1.3.15"
        }
      ]
    },
    {
      "id": "0991459f8821867f6da28fac6ab8b8f1eecf6e14671b9c0d3064c4382215327a",
      "category": "container_scanning",
      "message": "CVE-2024-58251 on alpine/busybox@1.37.0-r19",
      "cve": "CVE-2024-58251",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/busybox@1.37.0-r19?os_name=alpine&os_version=3.22"
          },
          "version": "1.37.0-r19"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-58251",
          "value": "CVE-2024-58251",
          "url": "https://scout.docker.com/v/CVE-2024-58251?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.22&vr=%3C%3D1.37.0-r19"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-58251?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.22&vr=%3C%3D1.37.0-r19"
        }
      ]
    },
    {
      "id": "78f76f3b9811949792f94eab796c07a0e95229bc8b307fc2612cdfce8bde02c0",
      "category": "container_scanning",
      "message": "CVE-2025-30258 on alpine/gnupg@2.4.7-r0",
      "cve": "CVE-2025-30258",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/gnupg@2.4.7-r0?os_name=alpine&os_version=3.22"
          },
          "version": "2.4.7-r0"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-30258",
          "value": "CVE-2025-30258",
          "url": "https://scout.docker.com/v/CVE-2025-30258?s=alpine&n=gnupg&ns=alpine&t=apk&osn=alpine&osv=3.22&vr=%3C%3D2.4.7-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-30258?s=alpine&n=gnupg&ns=alpine&t=apk&osn=alpine&osv=3.22&vr=%3C%3D2.4.7-r0"
        }
      ]
    },
    {
      "id": "910adf3701b643b1dd7f7140a726f498b768c02f9c5550a83a8c11be87957ec4",
      "category": "container_scanning",
      "message": "CVE-2025-22233 on org.springframework/spring-context@5.3.23",
      "description": "CVE-2024-38820 ensured Locale-independent, lowercase conversion for both the configured disallowedFields patterns and for request parameter names. However, there are still cases where it is possible to bypass the disallowedFields checks.\n\nAffected Spring Products and Versions\n\nSpring Framework:\n  *  6.2.0 - 6.2.6\n\n  *  6.1.0 - 6.1.19\n\n  *  6.0.0 - 6.0.27\n\n  *  5.3.0 - 5.3.42\n  *  Older, unsupported versions are also affected\n\n\n\nMitigation\n\nUsers of affected versions should upgrade to the corresponding fixed version.\n\n| Affected version(s) | Fix Version | Availability |\n| - | - | - |\n| 6.2.x |  6.2.7 | OSS |\n| 6.1.x |  6.1.20 | OSS |\n| 6.0.x |  6.0.28 |  Commercial https://enterprise.spring.io/ |\n| 5.3.x |  5.3.43 | Commercial https://enterprise.spring.io/  |\n\nNo further mitigation steps are necessary.\n\n\nGenerally, we recommend using a dedicated model object with properties only for data binding, or using constructor binding since constructor arguments explicitly declare what to bind together with turning off setter binding through the declarativeBinding flag. See the Model Design section in the reference documentation.\n\nFor setting binding, prefer the use of allowedFields (an explicit list) over disallowedFields.\n\nCredit\n\nThis issue was responsibly reported by the TERASOLUNA Framework Development Team from NTT DATA Group Corporation.",
      "cve": "CVE-2025-22233",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-context@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22233",
          "value": "CVE-2025-22233",
          "url": "https://scout.docker.com/v/CVE-2025-22233?s=github&n=spring-context&ns=org.springframework&t=maven&vr=%3C%3D5.3.39"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22233?s=github&n=spring-context&ns=org.springframework&t=maven&vr=%3C%3D5.3.39"
        }
      ]
    },
    {
      "id": "c93e700a14ce8d2e6bcc97b7d7697488f3d3dddbc6b199d2fa748f5e198c8142",
      "category": "container_scanning",
      "message": "CVE-2025-46394 on alpine/busybox@1.37.0-r19",
      "cve": "CVE-2025-46394",
      "severity": "Low",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/busybox@1.37.0-r19?os_name=alpine&os_version=3.22"
          },
          "version": "1.37.0-r19"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-46394",
          "value": "CVE-2025-46394",
          "url": "https://scout.docker.com/v/CVE-2025-46394?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.22&vr=%3C%3D1.37.0-r19"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-46394?s=alpine&n=busybox&ns=alpine&t=apk&osn=alpine&osv=3.22&vr=%3C%3D1.37.0-r19"
        }
      ]
    },
    {
      "id": "da909719ef218bdec8cf24c9451aece6ca527772eb857cb8168e4191d1c062de",
      "category": "container_scanning",
      "message": "CVE-2022-31684 on io.projectreactor.netty/reactor-netty-http@1.0.23",
      "description": "Reactor Netty HTTP Server, in versions 1.0.11 - 1.0.23, may request log headers in some cases of invalid HTTP requests. The logged headers may reveal valid access tokens to those with access to server logs. This may affect only invalid HTTP requests where logging at WARN level is enabled.",
      "cve": "CVE-2022-31684",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade io.projectreactor.netty/reactor-netty-http@1.0.23 to 1.0.24",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.projectreactor.netty/reactor-netty-http@1.0.23"
          },
          "version": "1.0.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-31684",
          "value": "CVE-2022-31684",
          "url": "https://scout.docker.com/v/CVE-2022-31684?s=github&n=reactor-netty-http&ns=io.projectreactor.netty&t=maven&vr=%3E%3D1.0.11%2C%3C1.0.24"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-31684?s=github&n=reactor-netty-http&ns=io.projectreactor.netty&t=maven&vr=%3E%3D1.0.11%2C%3C1.0.24"
        }
      ]
    },
    {
      "id": "f6ffcd0c2b09c5743960dd2d3644d3cee2243bdc061aae21c1d628655e1f5391",
      "category": "container_scanning",
      "message": "CVE-2016-2781 on alpine/coreutils@9.7-r1",
      "cve": "CVE-2016-2781",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/coreutils@9.7-r1?os_name=alpine&os_version=3.22"
          },
          "version": "9.7-r1"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2016-2781",
          "value": "CVE-2016-2781",
          "url": "https://scout.docker.com/v/CVE-2016-2781?s=alpine&n=coreutils&ns=alpine&t=apk&osn=alpine&osv=3.22&vr=%3C%3D9.7-r1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2016-2781?s=alpine&n=coreutils&ns=alpine&t=apk&osn=alpine&osv=3.22&vr=%3C%3D9.7-r1"
        }
      ]
    },
    {
      "id": "11d706ce82b3bb5c3578c360c9864ea866ed17c6272e8675b6a144baaf25b575",
      "category": "container_scanning",
      "message": "CVE-2024-38827 on org.springframework/spring-expression@5.3.23",
      "description": "The usage of String.toLowerCase() and String.toUpperCase() has some Locale dependent exceptions that could potentially result in authorization rules not working properly.",
      "cve": "CVE-2024-38827",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework/spring-expression@5.3.23 to 6.1.14",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-expression@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-38827",
          "value": "CVE-2024-38827",
          "url": "https://scout.docker.com/v/CVE-2024-38827?s=gitlab&n=spring-expression&ns=org.springframework&t=maven&vr=%3C6.1.14"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-38827?s=gitlab&n=spring-expression&ns=org.springframework&t=maven&vr=%3C6.1.14"
        }
      ]
    },
    {
      "id": "e2db5cef123c122dbfe961a9839234603433e19f7a81b0ce951f4c4080aace61",
      "category": "container_scanning",
      "message": "CVE-2024-38827 on org.springframework/spring-core@5.3.23",
      "description": "The usage of String.toLowerCase() and String.toUpperCase() has some Locale dependent exceptions that could potentially result in authorization rules not working properly.",
      "cve": "CVE-2024-38827",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework/spring-core@5.3.23 to 6.1.14",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-core@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-38827",
          "value": "CVE-2024-38827",
          "url": "https://scout.docker.com/v/CVE-2024-38827?s=gitlab&n=spring-core&ns=org.springframework&t=maven&vr=%3C6.1.14"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-38827?s=gitlab&n=spring-core&ns=org.springframework&t=maven&vr=%3C6.1.14"
        }
      ]
    },
    {
      "id": "47889cf48f6861191f74733ee3639950725b5177f54f9670b2714c52ba1179c0",
      "category": "container_scanning",
      "message": "CVE-2024-38827 on org.springframework/spring-beans@5.3.23",
      "description": "The usage of String.toLowerCase() and String.toUpperCase() has some Locale dependent exceptions that could potentially result in authorization rules not working properly.",
      "cve": "CVE-2024-38827",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework/spring-beans@5.3.23 to 6.1.14",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-beans@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-38827",
          "value": "CVE-2024-38827",
          "url": "https://scout.docker.com/v/CVE-2024-38827?s=gitlab&n=spring-beans&ns=org.springframework&t=maven&vr=%3C6.1.14"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-38827?s=gitlab&n=spring-beans&ns=org.springframework&t=maven&vr=%3C6.1.14"
        }
      ]
    },
    {
      "id": "32916afe6fa6d60b90669644460c5fcf60e05a8664059a198cb9707f415d87da",
      "category": "container_scanning",
      "message": "CVE-2024-38827 on org.springframework/spring-context@5.3.23",
      "description": "The usage of String.toLowerCase() and String.toUpperCase() has some Locale dependent exceptions that could potentially result in authorization rules not working properly.",
      "cve": "CVE-2024-38827",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework/spring-context@5.3.23 to 6.1.14",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-context@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-38827",
          "value": "CVE-2024-38827",
          "url": "https://scout.docker.com/v/CVE-2024-38827?s=gitlab&n=spring-context&ns=org.springframework&t=maven&vr=%3C6.1.14"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-38827?s=gitlab&n=spring-context&ns=org.springframework&t=maven&vr=%3C6.1.14"
        }
      ]
    },
    {
      "id": "e5634d742032b615874fb6e4d8f529ea9ea2cfbe6df01c8d74f7e17bd8c09c65",
      "category": "container_scanning",
      "message": "CVE-2024-38808 on org.springframework/spring-expression@5.3.23",
      "description": "In Spring Framework versions 5.3.0 - 5.3.38 and older unsupported versions, it is possible for a user to provide a specially crafted Spring Expression Language (SpEL) expression that may cause a denial of service (DoS) condition. Older, unsupported versions are also affected.\n\nSpecifically, an application is vulnerable when the following is true:\n\n  *  The application evaluates user-supplied SpEL expressions.",
      "cve": "CVE-2024-38808",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework/spring-expression@5.3.23 to 5.3.39",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-expression@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-38808",
          "value": "CVE-2024-38808",
          "url": "https://scout.docker.com/v/CVE-2024-38808?s=github&n=spring-expression&ns=org.springframework&t=maven&vr=%3C5.3.39"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-38808?s=github&n=spring-expression&ns=org.springframework&t=maven&vr=%3C5.3.39"
        }
      ]
    },
    {
      "id": "68eafd64a0007b5863ff4c0a1e2d148687c294ea3cbca15f0307ed58fa2ef75e",
      "category": "container_scanning",
      "message": "CVE-2023-33201 on org.bouncycastle/bcprov-jdk15on@1.69",
      "description": "Bouncy Castle provides the `X509LDAPCertStoreSpi.java` class which can be used in conjunction with the CertPath API for validating certificate paths. Pre-1.73 the implementation did not check the X.500 name of any certificate, subject, or issuer being passed in for LDAP wild cards, meaning the presence of a wild car may lead to Information Disclosure.\n\nA potential attack would be to generate a self-signed certificate with a subject name that contains special characters, e.g: `CN=Subject*)(objectclass=`. This will be included into the filter and provides the attacker ability to specify additional attributes in the search query. This can be exploited as a blind LDAP injection: an attacker can enumerate valid attribute values using the boolean blind injection technique. The exploitation depends on the structure of the target LDAP directory, as well as what kind of errors are exposed to the user.\n\nChanges to the `X509LDAPCertStoreSpi.java` class add the additional checking of any X.500 name used to correctly escape wild card characters.",
      "cve": "CVE-2023-33201",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.bouncycastle/bcprov-jdk15on@1.69"
          },
          "version": "1.69"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-33201",
          "value": "CVE-2023-33201",
          "url": "https://scout.docker.com/v/CVE-2023-33201?s=github&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3E%3D1.49%2C%3C%3D1.70"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-33201?s=github&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3E%3D1.49%2C%3C%3D1.70"
        }
      ]
    },
    {
      "id": "707a58c6dd8683bffc4655c8a7e9f221fbe1e2e5d7c821855fe8ce14842d2679",
      "category": "container_scanning",
      "message": "CVE-2023-34055 on org.springframework.boot/spring-boot@2.6.12",
      "description": "In Spring Boot versions 2.7.0 - 2.7.17, 3.0.0-3.0.12 and 3.1.0-3.1.5, it is possible for a user to provide specially crafted HTTP requests that may cause a denial-of-service (DoS) condition.\n\nSpecifically, an application is vulnerable when all of the following are true:\n\n*  the application uses Spring MVC or Spring WebFlux\n*  `org.springframework.boot:spring-boot-actuator` is on the classpath",
      "cve": "CVE-2023-34055",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework.boot/spring-boot@2.6.12 to 2.7.18, 3.0.13, 3.1.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework.boot/spring-boot@2.6.12"
          },
          "version": "2.6.12"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-34055",
          "value": "CVE-2023-34055",
          "url": "https://scout.docker.com/v/CVE-2023-34055?s=gitlab&n=spring-boot&ns=org.springframework.boot&t=maven&vr=%3C2.7.18"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-34055?s=gitlab&n=spring-boot&ns=org.springframework.boot&t=maven&vr=%3C2.7.18"
        }
      ]
    },
    {
      "id": "d6bc802b986df4871dd7306994d72350c43cf16ab9c5cac07e88fe98e339ff17",
      "category": "container_scanning",
      "message": "CVE-2023-34055 on org.springframework.boot/spring-boot-actuator@2.6.12",
      "description": "In Spring Boot versions 2.7.0 - 2.7.17, 3.0.0-3.0.12 and 3.1.0-3.1.5, it is possible for a user to provide specially crafted HTTP requests that may cause a denial-of-service (DoS) condition.\n\nSpecifically, an application is vulnerable when all of the following are true:\n\n  *  the application uses Spring MVC or Spring WebFlux\n  *  `org.springframework.boot:spring-boot-actuator` is on the classpath",
      "cve": "CVE-2023-34055",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework.boot/spring-boot-actuator@2.6.12 to 2.7.18",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework.boot/spring-boot-actuator@2.6.12"
          },
          "version": "2.6.12"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-34055",
          "value": "CVE-2023-34055",
          "url": "https://scout.docker.com/v/CVE-2023-34055?s=github&n=spring-boot-actuator&ns=org.springframework.boot&t=maven&vr=%3C2.7.18"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-34055?s=github&n=spring-boot-actuator&ns=org.springframework.boot&t=maven&vr=%3C2.7.18"
        }
      ]
    },
    {
      "id": "bde6ceb26f7613d2189ddd13c50fd7dd720320855e484f05558958fbe9ace24b",
      "category": "container_scanning",
      "message": "CVE-2024-29025 on io.netty/netty-codec-http@4.1.82.Final",
      "description": "### Summary\nThe `HttpPostRequestDecoder` can be tricked to accumulate data. I have spotted currently two attack vectors \n\n### Details\n1. While the decoder can store items on the disk if configured so, there are no limits to the number of fields the form can have, an attacher can send a chunked post consisting of many small fields that will be accumulated in the `bodyListHttpData` list.\n2. The decoder cumulates bytes in the `undecodedChunk` buffer until it can decode a field, this field can cumulate data without limits\n\n### PoC\n\nHere is a Netty branch that provides a fix + tests : https://github.com/vietj/netty/tree/post-request-decoder\n\n\nHere is a reproducer with Vert.x (which uses this decoder) https://gist.github.com/vietj/f558b8ea81ec6505f1e9a6ca283c9ae3\n\n### Impact\nAny Netty based HTTP server that uses the `HttpPostRequestDecoder` to decode a form.",
      "cve": "CVE-2024-29025",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-codec-http@4.1.82.Final to 4.1.108.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-codec-http@4.1.82.Final"
          },
          "version": "4.1.82.Final"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-29025",
          "value": "CVE-2024-29025",
          "url": "https://scout.docker.com/v/CVE-2024-29025?s=github&n=netty-codec-http&ns=io.netty&t=maven&vr=%3C4.1.108.Final"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-29025?s=github&n=netty-codec-http&ns=io.netty&t=maven&vr=%3C4.1.108.Final"
        }
      ]
    },
    {
      "id": "80746e6620289d38a9a1f8a75bdbd99bfec0cad62f0f0af1e8700d64a6be3947",
      "category": "container_scanning",
      "message": "CVE-2024-29857 on org.bouncycastle/bcprov-jdk15on@1.69",
      "description": "An issue was discovered in ECCurve.java and ECCurve.cs in Bouncy Castle Java (BC Java) before 1.78, BC Java LTS before 2.73.6, BC-FJA before 1.0.2.5, and BC C# .Net before 2.3.1. Importing an EC certificate with crafted F2m parameters can lead to excessive CPU consumption during the evaluation of the curve parameters.",
      "cve": "CVE-2024-29857",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.bouncycastle/bcprov-jdk15on@1.69 to 1.78",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.bouncycastle/bcprov-jdk15on@1.69"
          },
          "version": "1.69"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-29857",
          "value": "CVE-2024-29857",
          "url": "https://scout.docker.com/v/CVE-2024-29857?s=github&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3C1.78"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-29857?s=github&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3C1.78"
        }
      ]
    },
    {
      "id": "83f196f33f9fdb1eb7007b79b9445e200f0adf95fad89962f03e34917f5f2e6d",
      "category": "container_scanning",
      "message": "CVE-2024-30172 on org.bouncycastle/bcprov-jdk15on@1.69",
      "description": "An issue was discovered in Bouncy Castle Java Cryptography APIs before 1.78. An Ed25519 verification code infinite loop can occur via a crafted signature and public key.",
      "cve": "CVE-2024-30172",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.bouncycastle/bcprov-jdk15on@1.69 to 1.78",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.bouncycastle/bcprov-jdk15on@1.69"
          },
          "version": "1.69"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-30172",
          "value": "CVE-2024-30172",
          "url": "https://scout.docker.com/v/CVE-2024-30172?s=gitlab&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3C1.78"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-30172?s=gitlab&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3C1.78"
        }
      ]
    },
    {
      "id": "c582876f9c7de888cec087fadcddb58da95f3eb07ddd8c80150c16f3e6c417ee",
      "category": "container_scanning",
      "message": "CVE-2024-38809 on org.springframework/spring-web@5.3.23",
      "description": "### Description\nApplications that parse ETags from `If-Match` or `If-None-Match` request headers are vulnerable to DoS attack.\n\n### Affected Spring Products and Versions\norg.springframework:spring-web in versions \n\n6.1.0 through 6.1.11\n6.0.0 through 6.0.22\n5.3.0 through 5.3.37\n\nOlder, unsupported versions are also affected\n\n### Mitigation\nUsers of affected versions should upgrade to the corresponding fixed version.\n6.1.x -> 6.1.12\n6.0.x -> 6.0.23\n5.3.x -> 5.3.38\nNo other mitigation steps are necessary.\n\nUsers of older, unsupported versions could enforce a size limit on `If-Match` and `If-None-Match` headers, e.g. through a Filter.",
      "cve": "CVE-2024-38809",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework/spring-web@5.3.23 to 5.3.38",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-web@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-38809",
          "value": "CVE-2024-38809",
          "url": "https://scout.docker.com/v/CVE-2024-38809?s=github&n=spring-web&ns=org.springframework&t=maven&vr=%3C5.3.38"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-38809?s=github&n=spring-web&ns=org.springframework&t=maven&vr=%3C5.3.38"
        }
      ]
    },
    {
      "id": "a74d246b07edf6a4b691115f9d526a45b667e69869000ecbf9976cd9dce89aec",
      "category": "container_scanning",
      "message": "CVE-2024-38820 on org.springframework/spring-context@5.3.23",
      "description": "The fix for CVE-2022-22968 made disallowedFields patterns in DataBinder case insensitive. However, String.toLowerCase() has some Locale dependent exceptions that could potentially result in fields not protected as expected.",
      "cve": "CVE-2024-38820",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-context@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-38820",
          "value": "CVE-2024-38820",
          "url": "https://scout.docker.com/v/CVE-2024-38820?s=github&n=spring-context&ns=org.springframework&t=maven&vr=%3C%3D5.3.40"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-38820?s=github&n=spring-context&ns=org.springframework&t=maven&vr=%3C%3D5.3.40"
        }
      ]
    },
    {
      "id": "4518d35247cff32dcd87f4a784331922b22bbe42d38bd7c30c11189e8e1edd3b",
      "category": "container_scanning",
      "message": "CVE-2024-38820 on org.springframework/spring-web@5.3.23",
      "description": "The fix for CVE-2022-22968 made disallowedFields patterns in DataBinder case insensitive. However, String.toLowerCase() has some Locale dependent exceptions that could potentially result in fields not protected as expected.",
      "cve": "CVE-2024-38820",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-web@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-38820",
          "value": "CVE-2024-38820",
          "url": "https://scout.docker.com/v/CVE-2024-38820?s=github&n=spring-web&ns=org.springframework&t=maven&vr=%3C%3D5.3.40"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-38820?s=github&n=spring-web&ns=org.springframework&t=maven&vr=%3C%3D5.3.40"
        }
      ]
    },
    {
      "id": "2a7b123ff1fabc9d1f1c8265ad0912b697b93a39d10890082131451f85c4c708",
      "category": "container_scanning",
      "message": "CVE-2024-47535 on io.netty/netty-common@4.1.82.Final",
      "description": "### Summary\n\nAn unsafe reading of environment file could potentially cause a denial of service in Netty.\nWhen loaded on an Windows application, Netty attemps to load a file that does not exist. If an attacker creates such a large file, the Netty application crash.\n\n\n### Details\n\nWhen the library netty is loaded in a java windows application, the library tries to identify the system environnement in which it is executed.\n\nAt this stage, Netty tries to load both `/etc/os-release` and `/usr/lib/os-release` even though it is in a Windows environment. \n\n<img width=\"364\" alt=\"1\" src=\"https://github.com/user-attachments/assets/9466b181-9394-45a3-b0e3-1dcf105def59\">\n\nIf netty finds this files, it reads them and loads them into memory.\n\nBy default :\n\n- The JVM maximum memory size is set to 1 GB,\n- A non-privileged user can create a directory at `C:\\` and create files within it.\n\n<img width=\"340\" alt=\"2\" src=\"https://github.com/user-attachments/assets/43b359a2-5871-4592-ae2b-ffc40ac76831\">\n\n<img width=\"523\" alt=\"3\" src=\"https://github.com/user-attachments/assets/ad5c6eed-451c-4513-92d5-ba0eee7715c1\">\n\nthe source code identified :\nhttps://github.com/netty/netty/blob/4.1/common/src/main/java/io/netty/util/internal/PlatformDependent.java\n\nDespite the implementation of the function `normalizeOs()` the source code not verify the OS before reading `C:\\etc\\os-release` and `C:\\usr\\lib\\os-release`.\n\n### PoC\n\nCreate a file larger than 1 GB of data in `C:\\etc\\os-release` or `C:\\usr\\lib\\os-release` on a Windows environnement and start your Netty application.\n\nTo observe what the application does with the file, the security analyst used \"Process Monitor\" from the \"Windows SysInternals\" suite. (https://learn.microsoft.com/en-us/sysinternals/)\n\n```\ncd C:\\etc\nfsutil file createnew os-release 3000000000\n```\n\n<img width=\"519\" alt=\"4\" src=\"https://github.com/user-attachments/assets/39df22a3-462b-4fd0-af9a-aa30077ec08f\">\n\n<img width=\"517\" alt=\"5\" src=\"https://github.com/user-attachments/assets/129dbd50-fc36-4da5-8eb1-582123fb528f\">\n\nThe source code used is the Netty website code example : [Echo ‐ the very basic client and server](https://netty.io/4.1/xref/io/netty/example/echo/package-summary.html).\n\nThe vulnerability was tested on the 4.1.112.Final version.\n\nThe security analyst tried the same technique for `C:\\proc\\sys\\net\\core\\somaxconn` with a lot of values to impact Netty but the only things that works is the \"larger than 1 GB file\" technique. https://github.com/netty/netty/blob/c0fdb8e9f8f256990e902fcfffbbe10754d0f3dd/common/src/main/java/io/netty/util/NetUtil.java#L186\n\n### Impact\n\nBy loading the \"file larger than 1 GB\" into the memory, the Netty library exceeds the JVM memory limit and causes a crash in the java Windows application.\n\nThis behaviour occurs 100% of the time in both Server mode and Client mode if the large file exists.\n\nClient mode :\n\n<img width=\"449\" alt=\"6\" src=\"https://github.com/user-attachments/assets/f8fe1ed0-1a42-4490-b9ed-dbc9af7804be\">\n\nServer mode :\n\n<img width=\"464\" alt=\"7\" src=\"https://github.com/user-attachments/assets/b34b42bd-4fbd-4170-b93a-d29ba87b88eb\">\n\nsomaxconn :\n\n<img width=\"532\" alt=\"8\" src=\"https://github.com/user-attachments/assets/0656b3bb-32c6-4ae2-bff7-d93babba08a3\">\n\n### Severity\n\n- Attack vector : \"Local\" because the attacker needs to be on the system where the Netty application is running.\n- Attack complexity : \"Low\" because the attacker only need to create a massive file (regardless of its contents).\n- Privileges required : \"Low\" because the attacker requires a user account to exploit the vulnerability.\n- User intercation : \"None\" because the administrator don't need to accidentally click anywhere to trigger the vulnerability. Furthermore, the exploitation works with defaults windows/AD settings.\n- Scope : \"Unchanged\" because only Netty is affected by the vulnerability.\n- Confidentiality : \"None\" because no data is exposed through exploiting the vulnerability.\n- Integrity : \"None\" because the explotation of the vulnerability does not allow editing, deleting or adding data elsewhere.\n- Availability : \"High\" because the exploitation of this vulnerability crashes the entire java application.",
      "cve": "CVE-2024-47535",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-common@4.1.82.Final to 4.1.115.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-common@4.1.82.Final"
          },
          "version": "4.1.82.Final"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47535",
          "value": "CVE-2024-47535",
          "url": "https://scout.docker.com/v/CVE-2024-47535?s=github&n=netty-common&ns=io.netty&t=maven&vr=%3C%3D4.1.114.Final"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47535?s=github&n=netty-common&ns=io.netty&t=maven&vr=%3C%3D4.1.114.Final"
        }
      ]
    },
    {
      "id": "bd78bc754ab42f68d03d8e7d336287542ce2751bdfa2e46d5b2dfbdb4a5477e3",
      "category": "container_scanning",
      "message": "CVE-2022-38750 on org.yaml/snakeyaml@1.29",
      "description": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
      "cve": "CVE-2022-38750",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.yaml/snakeyaml@1.29 to 1.31",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.yaml/snakeyaml@1.29"
          },
          "version": "1.29"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-38750",
          "value": "CVE-2022-38750",
          "url": "https://scout.docker.com/v/CVE-2022-38750?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.31"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-38750?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.31"
        }
      ]
    },
    {
      "id": "81d27531f203fc16e25b14be782ded243f0491ccb2d2eb86bed77a996d4f2e23",
      "category": "container_scanning",
      "message": "CVE-2023-33202 on org.bouncycastle/bcprov-jdk15on@1.69",
      "description": "Bouncy Castle for Java before 1.73 contains a potential Denial of Service (DoS) issue within the Bouncy Castle org.bouncycastle.openssl.PEMParser class. This class parses OpenSSL PEM encoded streams containing X.509 certificates, PKCS8 encoded keys, and PKCS7 objects. Parsing a file that has crafted ASN.1 data through the PEMParser causes an OutOfMemoryError, which can enable a denial of service attack.",
      "cve": "CVE-2023-33202",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.bouncycastle/bcprov-jdk15on@1.69"
          },
          "version": "1.69"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-33202",
          "value": "CVE-2023-33202",
          "url": "https://scout.docker.com/v/CVE-2023-33202?s=github&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3C1.70"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-33202?s=github&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3C1.70"
        }
      ]
    },
    {
      "id": "cfb9c6a5906b14107d44cd53fe19028cede5479ba29eb893120296e8d7411c6d",
      "category": "container_scanning",
      "message": "CVE-2025-25193 on io.netty/netty-common@4.1.82.Final",
      "description": "### Summary\nAn unsafe reading of environment file could potentially cause a denial of service in Netty.\nWhen loaded on an Windows application, Netty attemps to load a file that does not exist. If an attacker creates such a large file, the Netty application crash.\n\n### Details\nA similar issue was previously reported in https://github.com/netty/netty/security/advisories/GHSA-xq3w-v528-46rv\nThis issue was fixed, but the fix was incomplete in that null-bytes were not counted against the input limit.\n\n\n### PoC\nThe PoC is the same as for https://github.com/netty/netty/security/advisories/GHSA-xq3w-v528-46rv with the detail that the file should only contain null-bytes; 0x00.\nWhen the null-bytes are encountered by the `InputStreamReader`, it will issue replacement characters in its charset decoding, which will fill up the line-buffer in the `BufferedReader.readLine()`, because the replacement character is not a line-break character.\n\n### Impact\nImpact is the same as https://github.com/netty/netty/security/advisories/GHSA-xq3w-v528-46rv",
      "cve": "CVE-2025-25193",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-common@4.1.82.Final to 4.1.118.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-common@4.1.82.Final"
          },
          "version": "4.1.82.Final"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-25193",
          "value": "CVE-2025-25193",
          "url": "https://scout.docker.com/v/CVE-2025-25193?s=github&n=netty-common&ns=io.netty&t=maven&vr=%3C4.1.118.Final"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-25193?s=github&n=netty-common&ns=io.netty&t=maven&vr=%3C4.1.118.Final"
        }
      ]
    },
    {
      "id": "682c235330d610b01c4a0e685d30c220b36507deec702e4eb6b566bada449397",
      "category": "container_scanning",
      "message": "CVE-2024-12798 on ch.qos.logback/logback-core@1.2.11",
      "description": "ACE vulnerability in JaninoEventEvaluator by QOS.CH logback-core up to and including version 1.5.12 in Java applications allows attackers to execute arbitrary code by compromising an existing logback configuration file or by injecting an environment variable before program execution.\n\nMalicious logback configuration files can allow the attacker to execute arbitrary code using the JaninoEventEvaluator extension.\n\nA successful attack requires the user to have write access to a configuration file. Alternatively, the attacker could inject a malicious environment variable pointing to a malicious configuration file. In both cases, the attack requires existing privilege.",
      "cve": "CVE-2024-12798",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade ch.qos.logback/logback-core@1.2.11 to 1.3.15",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/ch.qos.logback/logback-core@1.2.11"
          },
          "version": "1.2.11"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-12798",
          "value": "CVE-2024-12798",
          "url": "https://scout.docker.com/v/CVE-2024-12798?s=github&n=logback-core&ns=ch.qos.logback&t=maven&vr=%3C1.3.15"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-12798?s=github&n=logback-core&ns=ch.qos.logback&t=maven&vr=%3C1.3.15"
        }
      ]
    },
    {
      "id": "34129bd88c7fd6026b8a7af5e298b7efb313a787b5b4d1e655d706fc73b7fef5",
      "category": "container_scanning",
      "message": "CVE-2024-30171 on org.bouncycastle/bcprov-jdk15on@1.69",
      "description": "An issue was discovered in Bouncy Castle Java TLS API and JSSE Provider before 1.78. Timing-based leakage may occur in RSA based handshakes because of exception processing.",
      "cve": "CVE-2024-30171",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.bouncycastle/bcprov-jdk15on@1.69 to 1.78",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.bouncycastle/bcprov-jdk15on@1.69"
          },
          "version": "1.69"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-30171",
          "value": "CVE-2024-30171",
          "url": "https://scout.docker.com/v/CVE-2024-30171?s=github&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3C1.78"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-30171?s=github&n=bcprov-jdk15on&ns=org.bouncycastle&t=maven&vr=%3C1.78"
        }
      ]
    },
    {
      "id": "517c83a81c3bc3151f05093c421513b5336275fdf06c1d7d59a8fd3d6bcd1572",
      "category": "container_scanning",
      "message": "CVE-2025-22227 on io.projectreactor.netty/reactor-netty-http@1.0.23",
      "description": "In some specific scenarios with chained redirects, Reactor Netty HTTP client leaks credentials. In order for this to happen, the HTTP client must have been explicitly configured to follow redirects.",
      "cve": "CVE-2025-22227",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade io.projectreactor.netty/reactor-netty-http@1.0.23 to 1.2.8",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.projectreactor.netty/reactor-netty-http@1.0.23"
          },
          "version": "1.0.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22227",
          "value": "CVE-2025-22227",
          "url": "https://scout.docker.com/v/CVE-2025-22227?s=github&n=reactor-netty-http&ns=io.projectreactor.netty&t=maven&vr=%3C1.2.8"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22227?s=github&n=reactor-netty-http&ns=io.projectreactor.netty&t=maven&vr=%3C1.2.8"
        }
      ]
    },
    {
      "id": "87acb58c84888a86585d40adba199acbe4d3e4483519f5751b8d0484c8077113",
      "category": "container_scanning",
      "message": "CVE-2025-8916 on org.bouncycastle/bcpkix-jdk15on@1.69",
      "description": "Allocation of Resources Without Limits or Throttling vulnerability in Legion of the Bouncy Castle Inc. Bouncy Castle for Java bcpkix, bcprov, bcpkix-fips on All (API modules) allows Excessive Allocation. This vulnerability is associated with program files  https://github.Com/bcgit/bc-java/blob/main/pkix/src/main/java/org/bouncycastle/pkix/jcajce/PKIXCertP... https://github.Com/bcgit/bc-java/blob/main/pkix/src/main/java/org/bouncycastle/pkix/jcajce/PKIXCertPathReviewer.java ,  https://github.Com/bcgit/bc-java/blob/main/prov/src/main/java/org/bouncycastle/x509/PKIXCertPathRevi... https://github.Com/bcgit/bc-java/blob/main/prov/src/main/java/org/bouncycastle/x509/PKIXCertPathReviewer.java .\n\nThis issue affects Bouncy Castle for Java: from BC 1.44 through 1.78, from BCPKIX FIPS 1.0.0 through 1.0.7, from BCPKIX FIPS 2.0.0 through 2.0.7.",
      "cve": "CVE-2025-8916",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.bouncycastle/bcpkix-jdk15on@1.69 to 1.79",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.bouncycastle/bcpkix-jdk15on@1.69"
          },
          "version": "1.69"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-8916",
          "value": "CVE-2025-8916",
          "url": "https://scout.docker.com/v/CVE-2025-8916?s=github&n=bcpkix-jdk15on&ns=org.bouncycastle&t=maven&vr=%3E%3D1.44%2C%3C%3D1.78"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-8916?s=github&n=bcpkix-jdk15on&ns=org.bouncycastle&t=maven&vr=%3E%3D1.44%2C%3C%3D1.78"
        }
      ]
    },
    {
      "id": "083f18c959eb5954e75c27200eae5eebc569e3ec583b23ebc31b19c9f610b7fb",
      "category": "container_scanning",
      "message": "CVE-2022-38749 on org.yaml/snakeyaml@1.29",
      "description": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
      "cve": "CVE-2022-38749",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.yaml/snakeyaml@1.29 to 1.31",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.yaml/snakeyaml@1.29"
          },
          "version": "1.29"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-38749",
          "value": "CVE-2022-38749",
          "url": "https://scout.docker.com/v/CVE-2022-38749?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.31"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-38749?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.31"
        }
      ]
    },
    {
      "id": "986dc65966aeecd66e6f0d68f6ed2f5b7d535c801f11b4367f1c4f6fab3b8773",
      "category": "container_scanning",
      "message": "CVE-2022-38751 on org.yaml/snakeyaml@1.29",
      "description": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",
      "cve": "CVE-2022-38751",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.yaml/snakeyaml@1.29 to 1.31",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.yaml/snakeyaml@1.29"
          },
          "version": "1.29"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-38751",
          "value": "CVE-2022-38751",
          "url": "https://scout.docker.com/v/CVE-2022-38751?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.31"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-38751?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.31"
        }
      ]
    },
    {
      "id": "3bf0052236d97a6671732642a5839f757d16004a613170b09b339438e5efb9e9",
      "category": "container_scanning",
      "message": "CVE-2022-38752 on org.yaml/snakeyaml@1.29",
      "description": "Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DoS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack-overflow.",
      "cve": "CVE-2022-38752",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.yaml/snakeyaml@1.29 to 1.32",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.yaml/snakeyaml@1.29"
          },
          "version": "1.29"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-38752",
          "value": "CVE-2022-38752",
          "url": "https://scout.docker.com/v/CVE-2022-38752?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.32"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-38752?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.32"
        }
      ]
    },
    {
      "id": "0946c6da598de0494cfa1d9ccee47aef4b368fb60df679379225ba17252c2aa5",
      "category": "container_scanning",
      "message": "CVE-2022-41854 on org.yaml/snakeyaml@1.29",
      "description": "Those using Snakeyaml to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack.",
      "cve": "CVE-2022-41854",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.yaml/snakeyaml@1.29 to 1.32",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.yaml/snakeyaml@1.29"
          },
          "version": "1.29"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-41854",
          "value": "CVE-2022-41854",
          "url": "https://scout.docker.com/v/CVE-2022-41854?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.32"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-41854?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.32"
        }
      ]
    },
    {
      "id": "f8a6566ffe79f1dad03686003dafc3a51a172ee8511bd176f8a19e31947ee690",
      "category": "container_scanning",
      "message": "CVE-2023-20861 on org.springframework/spring-core@5.3.23",
      "description": "In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",
      "cve": "CVE-2023-20861",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework/spring-core@5.3.23 to 5.3.26, 6.0.7, 5.2.23.RELEASE",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-core@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-20861",
          "value": "CVE-2023-20861",
          "url": "https://scout.docker.com/v/CVE-2023-20861?s=gitlab&n=spring-core&ns=org.springframework&t=maven&vr=%3E%3D5.3.0%2C%3C5.3.26"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-20861?s=gitlab&n=spring-core&ns=org.springframework&t=maven&vr=%3E%3D5.3.0%2C%3C5.3.26"
        }
      ]
    },
    {
      "id": "b14cc46508d483980a68a1d865060b4bb20f05579ce3907b91b1d6a9d80dc09a",
      "category": "container_scanning",
      "message": "CVE-2023-20861 on org.springframework/spring-expression@5.3.23",
      "description": "In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",
      "cve": "CVE-2023-20861",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework/spring-expression@5.3.23 to 5.3.26",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-expression@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-20861",
          "value": "CVE-2023-20861",
          "url": "https://scout.docker.com/v/CVE-2023-20861?s=github&n=spring-expression&ns=org.springframework&t=maven&vr=%3E%3D5.3.0%2C%3C5.3.26"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-20861?s=github&n=spring-expression&ns=org.springframework&t=maven&vr=%3E%3D5.3.0%2C%3C5.3.26"
        }
      ]
    },
    {
      "id": "4f9c05b7f609831deb4b2ed61161b75bbcf639c0f9676dd1f6f545ec1d08232b",
      "category": "container_scanning",
      "message": "CVE-2023-20863 on org.springframework/spring-core@5.3.23",
      "description": "In spring framework versions prior to 5.2.24 release+,5.3.27+ and 6.0.8+, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",
      "cve": "CVE-2023-20863",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework/spring-core@5.3.23 to 5.3.27, 6.0.8, 5.2.24.RELEASE",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-core@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-20863",
          "value": "CVE-2023-20863",
          "url": "https://scout.docker.com/v/CVE-2023-20863?s=gitlab&n=spring-core&ns=org.springframework&t=maven&vr=%3E%3D5.3.0%2C%3C5.3.27"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-20863?s=gitlab&n=spring-core&ns=org.springframework&t=maven&vr=%3E%3D5.3.0%2C%3C5.3.27"
        }
      ]
    },
    {
      "id": "c37ea9eee8e0ff99061be8b36e2d1625d86fb1f7734d0e0dccf74fc232667168",
      "category": "container_scanning",
      "message": "CVE-2023-34462 on io.netty/netty-handler@4.1.82.Final",
      "description": "### Summary\nThe `SniHandler` can allocate up to 16MB of heap for each channel during the TLS handshake. When the handler or the channel does not have an idle timeout, it can be used to make a TCP server using the `SniHandler` to allocate 16MB of heap.\n\n### Details\nThe `SniHandler` class is a handler that waits for the TLS handshake to configure a `SslHandler` according to the indicated server name by the `ClientHello` record. For this matter it allocates a `ByteBuf` using the value defined in the `ClientHello` record. \n\nNormally the value of the packet should be smaller than the handshake packet but there are not checks done here and the way the code is written, it is possible to craft a packet that makes the `SslClientHelloHandler`\n\n1/ allocate a 16MB `ByteBuf`\n2/ not fail `decode` method `in` buffer\n3/ get out of the loop without an exception\n\nThe combination of this without the use of a timeout makes  easy to connect to a TCP server and allocate 16MB of heap memory per connection.\n\n### Impact\nIf the user has no idle timeout handler configured it might be possible for a remote peer to send a client hello packet which lead the server to buffer up to 16MB of data per connection. This could lead to a OutOfMemoryError and so result in a DDOS.",
      "cve": "CVE-2023-34462",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-handler@4.1.82.Final to 4.1.94.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-handler@4.1.82.Final"
          },
          "version": "4.1.82.Final"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-34462",
          "value": "CVE-2023-34462",
          "url": "https://scout.docker.com/v/CVE-2023-34462?s=github&n=netty-handler&ns=io.netty&t=maven&vr=%3C4.1.94.Final"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-34462?s=github&n=netty-handler&ns=io.netty&t=maven&vr=%3C4.1.94.Final"
        }
      ]
    },
    {
      "id": "25b86b8bbd46d15fe8d04ee1410a750c1715c8987c5de68fbfedd79084758c6e",
      "category": "container_scanning",
      "message": "CVE-2025-32988 on alpine/gnutls@3.8.8-r0",
      "cve": "CVE-2025-32988",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/gnutls@3.8.8-r0?os_name=alpine&os_version=3.22"
          },
          "version": "3.8.8-r0"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-32988",
          "value": "CVE-2025-32988",
          "url": "https://scout.docker.com/v/CVE-2025-32988?s=alpine&n=gnutls&ns=alpine&t=apk&osn=alpine&osv=3.22&vr=%3C%3D3.8.8-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-32988?s=alpine&n=gnutls&ns=alpine&t=apk&osn=alpine&osv=3.22&vr=%3C%3D3.8.8-r0"
        }
      ]
    },
    {
      "id": "736fccc218b2a6929a0a94773fdb1c46f85d4c48ad4c5def743cbbc723f82fcf",
      "category": "container_scanning",
      "message": "CVE-2025-58057 on io.netty/netty-codec@4.1.82.Final",
      "description": "### Summary\n\nWith specially crafted input, `BrotliDecoder` and some other decompressing decoders will allocate a large number of reachable byte buffers, which can lead to denial of service.\n\n### Details\n\n`BrotliDecoder.decompress` has no limit in how often it calls `pull`, decompressing data 64K bytes at a time. The buffers are saved in the output list, and remain reachable until OOM is hit. This is basically a zip bomb.\n\nTested on 4.1.118, but there were no changes to the decoder since.\n\n### PoC\n\nRun this test case with `-Xmx1G`:\n\n```java\nimport io.netty.buffer.Unpooled;\nimport io.netty.channel.embedded.EmbeddedChannel;\n\nimport java.util.Base64;\n\npublic class T {\n    public static void main(String[] args) {\n        EmbeddedChannel channel = new EmbeddedChannel(new BrotliDecoder());\n        channel.writeInbound(Unpooled.wrappedBuffer(Base64.getDecoder().decode(\"aPpxD1tETigSAGj6cQ8vRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROKBIAaPpxD1tETigSAGj6cQ9bRE4oEgBo+nEPW0ROMBIAEgIaHwBETlQQVFcXlgA=\")));\n    }\n}\n```\n\nError:\n\n```\nException in thread \"main\" java.lang.OutOfMemoryError: Cannot reserve 4194304 bytes of direct buffer memory (allocated: 1069580289, limit: 1073741824)\n\tat java.base/java.nio.Bits.reserveMemory(Bits.java:178)\n\tat java.base/java.nio.DirectByteBuffer.<init>(DirectByteBuffer.java:121)\n\tat java.base/java.nio.ByteBuffer.allocateDirect(ByteBuffer.java:332)\n\tat io.netty.buffer.PoolArena$DirectArena.allocateDirect(PoolArena.java:718)\n\tat io.netty.buffer.PoolArena$DirectArena.newChunk(PoolArena.java:693)\n\tat io.netty.buffer.PoolArena.allocateNormal(PoolArena.java:213)\n\tat io.netty.buffer.PoolArena.tcacheAllocateNormal(PoolArena.java:195)\n\tat io.netty.buffer.PoolArena.allocate(PoolArena.java:137)\n\tat io.netty.buffer.PoolArena.allocate(PoolArena.java:127)\n\tat io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:403)\n\tat io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:188)\n\tat io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:179)\n\tat io.netty.buffer.AbstractByteBufAllocator.buffer(AbstractByteBufAllocator.java:116)\n\tat io.netty.handler.codec.compression.BrotliDecoder.pull(BrotliDecoder.java:70)\n\tat io.netty.handler.codec.compression.BrotliDecoder.decompress(BrotliDecoder.java:101)\n\tat io.netty.handler.codec.compression.BrotliDecoder.decode(BrotliDecoder.java:137)\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:530)\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:469)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1357)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:868)\n\tat io.netty.channel.embedded.EmbeddedChannel.writeInbound(EmbeddedChannel.java:348)\n\tat io.netty.handler.codec.compression.T.main(T.java:11)\n```\n\n### Impact\n\nDoS for anyone using `BrotliDecoder` on untrusted input.",
      "cve": "CVE-2025-58057",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-codec@4.1.82.Final to 4.1.125.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-codec@4.1.82.Final"
          },
          "version": "4.1.82.Final"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-58057",
          "value": "CVE-2025-58057",
          "url": "https://scout.docker.com/v/CVE-2025-58057?s=github&n=netty-codec&ns=io.netty&t=maven&vr=%3C4.1.125.Final"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-58057?s=github&n=netty-codec&ns=io.netty&t=maven&vr=%3C4.1.125.Final"
        }
      ]
    },
    {
      "id": "6a49cc75a7aa410cbfde7eb3df906a5c017e84d9ee93b546aeb348889f3c3b29",
      "category": "container_scanning",
      "message": "CVE-2023-6378 on ch.qos.logback/logback-core@1.2.11",
      "description": "A serialization vulnerability in logback receiver component part of logback allows an attacker to mount a Denial-Of-Service attack by sending poisoned data.\n\nThis is only exploitable if logback receiver component is deployed. See https://logback.qos.ch/manual/receivers.html",
      "cve": "CVE-2023-6378",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade ch.qos.logback/logback-core@1.2.11 to 1.2.13",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/ch.qos.logback/logback-core@1.2.11"
          },
          "version": "1.2.11"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-6378",
          "value": "CVE-2023-6378",
          "url": "https://scout.docker.com/v/CVE-2023-6378?s=github&n=logback-core&ns=ch.qos.logback&t=maven&vr=%3C1.2.13"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-6378?s=github&n=logback-core&ns=ch.qos.logback&t=maven&vr=%3C1.2.13"
        }
      ]
    },
    {
      "id": "d01e4a3047fa2fde63e2f7dbd97fae76b2ecf576f808cce50db272d93cf5a1b1",
      "category": "container_scanning",
      "message": "CVE-2023-6378 on ch.qos.logback/logback-classic@1.2.11",
      "description": "A serialization vulnerability in logback receiver component part of logback allows an attacker to mount a Denial-Of-Service attack by sending poisoned data.\n\nThis is only exploitable if logback receiver component is deployed. See https://logback.qos.ch/manual/receivers.html",
      "cve": "CVE-2023-6378",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade ch.qos.logback/logback-classic@1.2.11 to 1.2.13",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/ch.qos.logback/logback-classic@1.2.11"
          },
          "version": "1.2.11"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-6378",
          "value": "CVE-2023-6378",
          "url": "https://scout.docker.com/v/CVE-2023-6378?s=github&n=logback-classic&ns=ch.qos.logback&t=maven&vr=%3C1.2.13"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-6378?s=github&n=logback-classic&ns=ch.qos.logback&t=maven&vr=%3C1.2.13"
        }
      ]
    },
    {
      "id": "decd21bbc603a2b03fa25ea2a0b3a27e67b5c6b0a2a302f6776bf090f58184e7",
      "category": "container_scanning",
      "message": "CVE-2025-22235 on org.springframework.boot/spring-boot@2.6.12",
      "description": "EndpointRequest.to() creates a matcher for null/** if the actuator endpoint, for which the EndpointRequest has been created, is disabled or not exposed.\n\nYour application may be affected by this if all the following conditions are met:\n\n  *  You use Spring Security\n  *  EndpointRequest.to() has been used in a Spring Security chain configuration\n  *  The endpoint which EndpointRequest references is disabled or not exposed via web\n  *  Your application handles requests to /null and this path needs protection\n\n\nYou are not affected if any of the following is true:\n\n  *  You don't use Spring Security\n  *  You don't use EndpointRequest.to()\n  *  The endpoint which EndpointRequest.to() refers to is enabled and is exposed\n  *  Your application does not handle requests to /null or this path does not need protection",
      "cve": "CVE-2025-22235",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework.boot/spring-boot@2.6.12"
          },
          "version": "2.6.12"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22235",
          "value": "CVE-2025-22235",
          "url": "https://scout.docker.com/v/CVE-2025-22235?s=github&n=spring-boot&ns=org.springframework.boot&t=maven&vr=%3C%3D2.7.24.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22235?s=github&n=spring-boot&ns=org.springframework.boot&t=maven&vr=%3C%3D2.7.24.2"
        }
      ]
    },
    {
      "id": "2e038e51260857a27e93b059346cb1f0f3034d30a76ed2ec3a4822324726a3cf",
      "category": "container_scanning",
      "message": "CVE-2025-22228 on org.springframework.security/spring-security-crypto@5.6.7",
      "description": "BCryptPasswordEncoder.matches(CharSequence,String) will incorrectly return true for passwords larger than 72 characters as long as the first 72 characters are the same.",
      "cve": "CVE-2025-22228",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework.security/spring-security-crypto@5.6.7 to 5.7.16",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework.security/spring-security-crypto@5.6.7"
          },
          "version": "5.6.7"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-22228",
          "value": "CVE-2025-22228",
          "url": "https://scout.docker.com/v/CVE-2025-22228?s=github&n=spring-security-crypto&ns=org.springframework.security&t=maven&vr=%3C%3D5.7.15"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-22228?s=github&n=spring-security-crypto&ns=org.springframework.security&t=maven&vr=%3C%3D5.7.15"
        }
      ]
    },
    {
      "id": "7845f3cd03e7f585a0c0fbfa073db20244b8e4ff400ebfab06f8814fe9d6984b",
      "category": "container_scanning",
      "message": "CVE-2022-25857 on org.yaml/snakeyaml@1.29",
      "description": "The package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to Denial of Service (DoS) due missing to nested depth limitation for collections.",
      "cve": "CVE-2022-25857",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.yaml/snakeyaml@1.29 to 1.31",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.yaml/snakeyaml@1.29"
          },
          "version": "1.29"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-25857",
          "value": "CVE-2022-25857",
          "url": "https://scout.docker.com/v/CVE-2022-25857?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.31"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-25857?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C1.31"
        }
      ]
    },
    {
      "id": "54eff10c96838b54033f0a739ea4ba6501979eaf0dcc18a9b1a0d6c93a28bd4d",
      "category": "container_scanning",
      "message": "CVE-2022-42003 on com.fasterxml.jackson.core/jackson-databind@2.13.4",
      "description": "In FasterXML jackson-databind 2.4.0-rc1 until 2.12.7.1 and in 2.13.x before 2.13.4.2 resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled. This was patched in 2.12.7.1, 2.13.4.2, and 2.14.0.\n\nCommits that introduced vulnerable code are \nhttps://github.com/FasterXML/jackson-databind/commit/d499f2e7bbc5ebd63af11e1f5cf1989fa323aa45, https://github.com/FasterXML/jackson-databind/commit/0e37a39502439ecbaa1a5b5188387c01bf7f7fa1, and https://github.com/FasterXML/jackson-databind/commit/7ba9ac5b87a9d6ac0d2815158ecbeb315ad4dcdc.\n\nFix commits are https://github.com/FasterXML/jackson-databind/commit/cd090979b7ea78c75e4de8a4aed04f7e9fa8deea and https://github.com/FasterXML/jackson-databind/commit/d78d00ee7b5245b93103fef3187f70543d67ca33.\n\nThe `2.13.4.1` release does fix this issue, however it also references a non-existent jackson-bom which causes build failures for gradle users. See https://github.com/FasterXML/jackson-databind/issues/3627#issuecomment-1277957548 for details. This is fixed in `2.13.4.2` which is listed in the advisory metadata so that users are not subjected to unnecessary build failures",
      "cve": "CVE-2022-42003",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.fasterxml.jackson.core/jackson-databind@2.13.4 to 2.13.4.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.13.4"
          },
          "version": "2.13.4"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-42003",
          "value": "CVE-2022-42003",
          "url": "https://scout.docker.com/v/CVE-2022-42003?s=github&n=jackson-databind&ns=com.fasterxml.jackson.core&t=maven&vr=%3E%3D2.13.0%2C%3C2.13.4.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-42003?s=github&n=jackson-databind&ns=com.fasterxml.jackson.core&t=maven&vr=%3E%3D2.13.0%2C%3C2.13.4.2"
        }
      ]
    },
    {
      "id": "19f1b5b12415d006e89d98bb33d2a321b5bd3fecbf92b731dab7b6dc546cb829",
      "category": "container_scanning",
      "message": "CVE-2023-20863 on org.springframework/spring-expression@5.3.23",
      "description": "In Spring Framework versions prior to 5.2.24.release+ , 5.3.27+ and 6.0.8+ , it is possible for a user to provide a specially crafted Spring Expression Language (SpEL) expression that may cause a denial-of-service (DoS) condition.",
      "cve": "CVE-2023-20863",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework/spring-expression@5.3.23 to 5.3.27",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-expression@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-20863",
          "value": "CVE-2023-20863",
          "url": "https://scout.docker.com/v/CVE-2023-20863?s=github&n=spring-expression&ns=org.springframework&t=maven&vr=%3E%3D5.3.0%2C%3C5.3.27"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-20863?s=github&n=spring-expression&ns=org.springframework&t=maven&vr=%3E%3D5.3.0%2C%3C5.3.27"
        }
      ]
    },
    {
      "id": "9a5e0fbd5fa3ef33542fbe0c43ad3401efcb4c01ca28b1944467884f869cb18d",
      "category": "container_scanning",
      "message": "CVE-2023-20883 on org.springframework.boot/spring-boot-autoconfigure@2.6.12",
      "description": "In Spring Boot versions 3.0.0 - 3.0.6, 2.7.0 - 2.7.11, 2.6.0 - 2.6.14, 2.5.0 - 2.5.14 and older unsupported versions, there is potential for a denial-of-service (DoS) attack if Spring MVC is used together with a reverse proxy cache.\n\nSpecifically, an application is vulnerable if all of the conditions are true:\n\n* The application has Spring MVC auto-configuration enabled. This is the case by default if Spring MVC is on the classpath.\n* The application makes use of Spring Boot's welcome page support, either static or templated.\n* Your application is deployed behind a proxy which caches 404 responses.\n\nYour application is NOT vulnerable if any of the following are true:\n\n* Spring MVC auto-configuration is disabled. This is true if WebMvcAutoConfiguration is explicitly excluded, if Spring MVC is not on the classpath, or if spring.main.web-application-type is set to a value other than SERVLET.\n* The application does not use Spring Boot's welcome page support.\n* You do not have a proxy which caches 404 responses.\n\n\nAffected Spring Products and Versions\n\nSpring Boot\n\n3.0.0 to 3.0.6 2.7.0 to 2.7.11 2.6.0 to 2.6.14 2.5.0 to 2.5.14\n\nOlder, unsupported versions are also affected\nMitigation\n\nUsers of affected versions should apply the following mitigations:\n\n* 3.0.x users should upgrade to 3.0.7+\n* 2.7.x users should upgrade to 2.7.12+\n* 2.6.x users should upgrade to 2.6.15+\n* 2.5.x users should upgrade to 2.5.15+\n\nUsers of older, unsupported versions should upgrade to 3.0.7+ or 2.7.12+.\n\nWorkarounds: configure the reverse proxy not to cache 404 responses and/or not to cache responses to requests to the root (/) of the application.",
      "cve": "CVE-2023-20883",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework.boot/spring-boot-autoconfigure@2.6.12 to 2.6.15",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework.boot/spring-boot-autoconfigure@2.6.12"
          },
          "version": "2.6.12"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-20883",
          "value": "CVE-2023-20883",
          "url": "https://scout.docker.com/v/CVE-2023-20883?s=github&n=spring-boot-autoconfigure&ns=org.springframework.boot&t=maven&vr=%3E%3D2.6.0%2C%3C2.6.15"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-20883?s=github&n=spring-boot-autoconfigure&ns=org.springframework.boot&t=maven&vr=%3E%3D2.6.0%2C%3C2.6.15"
        }
      ]
    },
    {
      "id": "b1e684377db6dc6b500c72a861b66cf9f8db92df4441f174bb44a9b28534bfa1",
      "category": "container_scanning",
      "message": "CVE-2023-34054 on io.projectreactor.netty/reactor-netty-http@1.0.23",
      "description": "In Reactor Netty HTTP Server, versions 1.1.x prior to 1.1.13 and versions 1.0.x prior to 1.0.39, it is possible for a user to provide specially crafted HTTP requests that may cause a denial-of-service (DoS) condition.\n\nSpecifically, an application is vulnerable if Reactor Netty HTTP Server built-in integration with Micrometer is enabled.",
      "cve": "CVE-2023-34054",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade io.projectreactor.netty/reactor-netty-http@1.0.23 to 1.0.39, 1.1.13",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.projectreactor.netty/reactor-netty-http@1.0.23"
          },
          "version": "1.0.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-34054",
          "value": "CVE-2023-34054",
          "url": "https://scout.docker.com/v/CVE-2023-34054?s=gitlab&n=reactor-netty-http&ns=io.projectreactor.netty&t=maven&vr=%3E%3D1.0.0%2C%3C1.0.39"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-34054?s=gitlab&n=reactor-netty-http&ns=io.projectreactor.netty&t=maven&vr=%3E%3D1.0.0%2C%3C1.0.39"
        }
      ]
    },
    {
      "id": "760d8dbd01ded20a2a0f1b856fc3f5f141cd5a571e67bf8144aeb5224227d2cc",
      "category": "container_scanning",
      "message": "CVE-2023-34054 on io.projectreactor.netty/reactor-netty-core@1.0.23",
      "description": "In Reactor Netty HTTP Server, versions 1.1.x prior to 1.1.13 and versions 1.0.x prior to 1.0.39, it is possible for a user to provide specially crafted HTTP requests that may cause a denial-of-service (DoS) condition.\n\nSpecifically, an application is vulnerable if Reactor Netty HTTP Server built-in integration with Micrometer is enabled.",
      "cve": "CVE-2023-34054",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade io.projectreactor.netty/reactor-netty-core@1.0.23 to 1.0.39",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.projectreactor.netty/reactor-netty-core@1.0.23"
          },
          "version": "1.0.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-34054",
          "value": "CVE-2023-34054",
          "url": "https://scout.docker.com/v/CVE-2023-34054?s=github&n=reactor-netty-core&ns=io.projectreactor.netty&t=maven&vr=%3E%3D1.0.0%2C%3C1.0.39"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-34054?s=github&n=reactor-netty-core&ns=io.projectreactor.netty&t=maven&vr=%3E%3D1.0.0%2C%3C1.0.39"
        }
      ]
    },
    {
      "id": "fb5ccda995ac88918e22866747002224b2685e0bad43a4299b6412815d305833",
      "category": "container_scanning",
      "message": "CVE-2023-34062 on io.projectreactor.netty/reactor-netty-http@1.0.23",
      "description": "In Reactor Netty HTTP Server, versions 1.1.x prior to 1.1.13 and versions 1.0.x prior to 1.0.39, a malicious user can send a request using a specially crafted URL that can lead to a directory traversal attack.\n\nSpecifically, an application is vulnerable if Reactor Netty HTTP Server is configured to serve static resources.\n\n\n",
      "cve": "CVE-2023-34062",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade io.projectreactor.netty/reactor-netty-http@1.0.23 to 1.0.39",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.projectreactor.netty/reactor-netty-http@1.0.23"
          },
          "version": "1.0.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-34062",
          "value": "CVE-2023-34062",
          "url": "https://scout.docker.com/v/CVE-2023-34062?s=github&n=reactor-netty-http&ns=io.projectreactor.netty&t=maven&vr=%3E%3D1.0.0%2C%3C1.0.39"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-34062?s=github&n=reactor-netty-http&ns=io.projectreactor.netty&t=maven&vr=%3E%3D1.0.0%2C%3C1.0.39"
        }
      ]
    },
    {
      "id": "fda28e689d4424bb699df31ac8af2e0e9843c179c9c7df79c4e6a481898a6659",
      "category": "container_scanning",
      "message": "CVE-2023-44487 on io.netty/netty-codec-http2@4.1.82.Final",
      "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
      "cve": "CVE-2023-44487",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-codec-http2@4.1.82.Final to 4.1.100.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-codec-http2@4.1.82.Final"
          },
          "version": "4.1.82.Final"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-44487",
          "value": "CVE-2023-44487",
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=gitlab&n=netty-codec-http2&ns=io.netty&t=maven&vr=%3C4.1.100"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-44487?s=gitlab&n=netty-codec-http2&ns=io.netty&t=maven&vr=%3C4.1.100"
        }
      ]
    },
    {
      "id": "064ef3aeaf5170b7484fac385b3a74e6ccede5a68206f78c9434bee16aeb6e66",
      "category": "container_scanning",
      "message": "CVE-2024-38816 on org.springframework/spring-webflux@5.3.23",
      "description": "Applications serving static resources through the functional web frameworks WebMvc.fn or WebFlux.fn are vulnerable to path traversal attacks. An attacker can craft malicious HTTP requests and obtain any file on the file system that is also accessible to the process in which the Spring application is running.\n\nSpecifically, an application is vulnerable when both of the following are true:\n\n  *  the web application uses RouterFunctions to serve static resources\n  *  resource handling is explicitly configured with a FileSystemResource location\n\n\nHowever, malicious requests are blocked and rejected when any of the following is true:\n\n  *  the  Spring Security HTTP Firewall https://docs.spring.io/spring-security/reference/servlet/exploits/firewall.html  is in use\n  *  the application runs on Tomcat or Jetty",
      "cve": "CVE-2024-38816",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-webflux@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-38816",
          "value": "CVE-2024-38816",
          "url": "https://scout.docker.com/v/CVE-2024-38816?s=github&n=spring-webflux&ns=org.springframework&t=maven&vr=%3E%3D5.3.0%2C%3C%3D5.3.39"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-38816?s=github&n=spring-webflux&ns=org.springframework&t=maven&vr=%3E%3D5.3.0%2C%3C%3D5.3.39"
        }
      ]
    },
    {
      "id": "b0d60a30ea9a88f79617dc43915c835896f20d0bbe9486fb30e251fbde29308f",
      "category": "container_scanning",
      "message": "CVE-2024-38819 on org.springframework/spring-webflux@5.3.23",
      "description": "Applications serving static resources through the functional web frameworks WebMvc.fn or WebFlux.fn are vulnerable to path traversal attacks. An attacker can craft malicious HTTP requests and obtain any file on the file system that is also accessible to the process in which the Spring application is running.",
      "cve": "CVE-2024-38819",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-webflux@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-38819",
          "value": "CVE-2024-38819",
          "url": "https://scout.docker.com/v/CVE-2024-38819?s=github&n=spring-webflux&ns=org.springframework&t=maven&vr=%3C%3D5.3.39"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-38819?s=github&n=spring-webflux&ns=org.springframework&t=maven&vr=%3C%3D5.3.39"
        }
      ]
    },
    {
      "id": "4d99d2f4a39f09ae50c9d0553e50e3abd4497b4745b7a83becabcc9ed25ae707",
      "category": "container_scanning",
      "message": "CVE-2025-41249 on org.springframework/spring-core@5.3.23",
      "description": "The Spring Framework annotation detection mechanism may not correctly resolve annotations on methods within type hierarchies with a parameterized super type with unbounded generics. This can be an issue if such annotations are used for authorization decisions.\n\nYour application may be affected by this if you are using Spring Security's @EnableMethodSecurity feature.\n\nYou are not affected by this if you are not using @EnableMethodSecurity or if you do not use security annotations on methods in generic superclasses or generic interfaces.\n\nThis CVE is published in conjunction with  CVE-2025-41248 https://spring.io/security/cve-2025-41248 .",
      "cve": "CVE-2025-41249",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-core@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-41249",
          "value": "CVE-2025-41249",
          "url": "https://scout.docker.com/v/CVE-2025-41249?s=github&n=spring-core&ns=org.springframework&t=maven&vr=%3E%3D5.3.0%2C%3C%3D5.3.44"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-41249?s=github&n=spring-core&ns=org.springframework&t=maven&vr=%3E%3D5.3.0%2C%3C%3D5.3.44"
        }
      ]
    },
    {
      "id": "798a55b27094d78a31457b746d52c3115334fea19f8c0b30d3ce9699f96f8cf6",
      "category": "container_scanning",
      "message": "GHSA-xpw8-rcwv-8f8p on io.netty/netty-codec-http2@4.1.82.Final",
      "description": "A client might overload the server by issue frequent RST frames. This can cause a massive amount of load on the remote system and so cause a DDOS attack. \n\n### Impact\nThis is a DDOS attack, any http2 server is affected and so you should update as soon as possible.\n\n### Patches\nThis is patched in version 4.1.100.Final.\n\n### Workarounds\nA user can limit the amount of RST frames that are accepted per connection over a timeframe manually using either an own `Http2FrameListener` implementation or an `ChannelInboundHandler` implementation (depending which http2 API is used).\n\n### References\n- https://www.cve.org/CVERecord?id=CVE-2023-44487\n- https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/\n- https://cloud.google.com/blog/products/identity-security/google-cloud-mitigated-largest-ddos-attack-peaking-above-398-million-rps/",
      "cve": "GHSA-xpw8-rcwv-8f8p",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-codec-http2@4.1.82.Final to 4.1.100.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-codec-http2@4.1.82.Final"
          },
          "version": "4.1.82.Final"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GHSA-xpw8-rcwv-8f8p",
          "value": "GHSA-xpw8-rcwv-8f8p",
          "url": "https://scout.docker.com/v/GHSA-xpw8-rcwv-8f8p?s=github&n=netty-codec-http2&ns=io.netty&t=maven&vr=%3C4.1.100.Final"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GHSA-xpw8-rcwv-8f8p?s=github&n=netty-codec-http2&ns=io.netty&t=maven&vr=%3C4.1.100.Final"
        }
      ]
    },
    {
      "id": "4a764195bc744c1c48ea30b703a30ab689bb58f87b818f567d16b32afe30c238",
      "category": "container_scanning",
      "message": "CVE-2024-22243 on org.springframework/spring-web@5.3.23",
      "description": "Applications that use UriComponentsBuilder to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect attack or to a SSRF attack if the URL is used after passing validation checks.",
      "cve": "CVE-2024-22243",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework/spring-web@5.3.23 to 5.3.32",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-web@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-22243",
          "value": "CVE-2024-22243",
          "url": "https://scout.docker.com/v/CVE-2024-22243?s=github&n=spring-web&ns=org.springframework&t=maven&vr=%3E%3D5.3.0%2C%3C5.3.32"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-22243?s=github&n=spring-web&ns=org.springframework&t=maven&vr=%3E%3D5.3.0%2C%3C5.3.32"
        }
      ]
    },
    {
      "id": "92c3c0d53f4ef03501e8be13c08f666d53fbb89fbe8595f4d1118185c54cdd11",
      "category": "container_scanning",
      "message": "CVE-2024-22259 on org.springframework/spring-web@5.3.23",
      "description": "Applications that use UriComponentsBuilder in Spring Framework to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect https://cwe.mitre.org/data/definitions/601.html  attack or to a SSRF attack if the URL is used after passing validation checks.\n\nThis is the same as  CVE-2024-22243 https://spring.io/security/cve-2024-22243, but with different input.",
      "cve": "CVE-2024-22259",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework/spring-web@5.3.23 to 5.3.33",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-web@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-22259",
          "value": "CVE-2024-22259",
          "url": "https://scout.docker.com/v/CVE-2024-22259?s=github&n=spring-web&ns=org.springframework&t=maven&vr=%3C5.3.33"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-22259?s=github&n=spring-web&ns=org.springframework&t=maven&vr=%3C5.3.33"
        }
      ]
    },
    {
      "id": "16449e87cbf39db70b1aea46c2ec3a8684f1195c04aa9f5c57c87407b107c5bc",
      "category": "container_scanning",
      "message": "CVE-2024-22262 on org.springframework/spring-web@5.3.23",
      "description": "Applications that use UriComponentsBuilder to parse an externally provided URL (e.g. through a query parameter) AND perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect https://cwe.mitre.org/data/definitions/601.html  attack or to a SSRF attack if the URL is used after passing validation checks.\n\nThis is the same as  CVE-2024-22259 https://spring.io/security/cve-2024-22259  and  CVE-2024-22243 https://spring.io/security/cve-2024-22243 , but with different input.",
      "cve": "CVE-2024-22262",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework/spring-web@5.3.23 to 5.3.34",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-web@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-22262",
          "value": "CVE-2024-22262",
          "url": "https://scout.docker.com/v/CVE-2024-22262?s=github&n=spring-web&ns=org.springframework&t=maven&vr=%3C5.3.34"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-22262?s=github&n=spring-web&ns=org.springframework&t=maven&vr=%3C5.3.34"
        }
      ]
    },
    {
      "id": "3e565ee1d6de66ec2dc0704aa32e44122427199cdf11e4dabf2a5e2b2df23936",
      "category": "container_scanning",
      "message": "CVE-2025-55163 on io.netty/netty-codec-http2@4.1.82.Final",
      "description": "Below is a technical explanation of a newly discovered vulnerability in HTTP/2, which we refer to as “MadeYouReset.”\n\n### MadeYouReset Vulnerability Summary\nThe MadeYouReset DDoS vulnerability is a logical vulnerability in the HTTP/2 protocol, that uses malformed HTTP/2 control frames in order to break the max concurrent streams limit - which results in resource exhaustion and distributed denial of service.\n\n### Mechanism\nThe vulnerability uses malformed HTTP/2 control frames, or malformed flow, in order to make the server reset streams created by the client (using the RST_STREAM frame). \nThe vulnerability could be triggered by several primitives, defined by the RFC of HTTP/2 (RFC 9113). The Primitives are:\n1. WINDOW_UPDATE frame with an increment of 0 or an increment that makes the window exceed 2^31 - 1. (section 6.9 + 6.9.1)\n2. HEADERS or DATA frames sent on a half-closed (remote) stream (which was closed using the END_STREAM flag). (note that for some implementations it's possible a CONTINUATION frame to trigger that as well - but it's very rare). (Section 5.1)\n3. PRIORITY frame with a length other than 5. (section 6.3)\nFrom our experience, the primitives are likely to exist in the decreasing order listed above.\nNote that based on the implementation of the library, other primitives (which are not defined by the RFC) might exist - meaning scenarios in which RST_STREAM is not supposed to be sent, but in the implementation it does. On the other hand - some RFC-defined primitives might not work, even though they are defined by the RFC (as some implementations are not fully complying with RFC). For example, some implementations we’ve seen discard the PRIORITY frame - and thus does not return RST_STREAM, and some implementations send GO_AWAY when receiving a WINDOW_UPDATE frame with increment of 0.\n\nThe vulnerability takes advantage of a design flaw in the HTTP/2 protocol - While HTTP/2 has a limit on the number of concurrently active streams per connection (which is usually 100, and is set by the parameter SETTINGS_MAX_CONCURRENT_STREAMS), the number of active streams is not counted correctly - when a stream is reset, it is immediately considered not active, and thus unaccounted for in the active streams counter. \nWhile the protocol does not count those streams as active, the server’s backend logic still processes and handles the requests that were canceled.\n\nThus, the attacker can exploit this vulnerability to cause the server to handle an unbounded number of concurrent streams from a client on the same connection. The exploitation is very simple: the client issues a request in a stream, and then sends the control frame that causes the server to send a RST_STREAM.\n\n### Attack Flow\nFor example, a possible attack scenario can be: \n1. Attacker opens an HTTP/2 connection to the server.\n2. Attacker sends HEADERS frame with END_STREAM flag on a new stream X.  \n3. Attacker sends WINDOW_UPDATE for stream X with flow-control window of 0.\n4. The server receives the WINDOW_UPDATE and immediately sends RST_STREAM for stream X to the client (+ decreases the active streams counter by 1).\n\nThe attacker can repeat steps 2+3 as rapidly as it is capable, since the active streams counter never exceeds 1 and the attacker does not need to wait for the response from the server.\nThis leads to resource exhaustion and distributed denial of service vulnerabilities with an impact of: CPU overload and/or memory exhaustion (implementation dependent)\n\n### Comparison to Rapid Reset\nThe vulnerability takes advantage of a design flow in the HTTP/2 protocol that was also used in the Rapid Reset vulnerability (CVE-2023-44487) which was exploited as a zero-day in the wild in August 2023 to October 2023, against multiple services and vendors.\nThe Rapid Reset vulnerability uses RST_STREAM frames sent from the client, in order to create an unbounded amount of concurrent streams - it was given a CVSS score of 7.5.\nRapid Reset was mostly mitigated by limiting the number/rate of RST_STREAM sent from the client, which does not mitigate the MadeYouReset attack - since it triggers the server to send a RST_STREAM.\n\n### Suggested Mitigations for MadeYouReset\nA quick and easy mitigation will be to limit the number/rate of RST_STREAMs sent from the server.\nIt is also possible to limit the number/rate of control frames sent by the client (e.g. WINDOW_UPDATE and PRIORITY), and treat protocol flow errors as a connection error.\n\nAs mentioned in our previous message, this is a protocol-level vulnerability that affects multiple vendors and implementations. Given its broad impact, it is the shared responsibility of all parties involved to handle the disclosure process carefully and coordinate mitigations effectively.\n\n\nIf you have any questions, we will be happy to clarify or schedule a Zoom call.\n\nGal, Anat and Yaniv.",
      "cve": "CVE-2025-55163",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade io.netty/netty-codec-http2@4.1.82.Final to 4.1.124.Final",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/io.netty/netty-codec-http2@4.1.82.Final"
          },
          "version": "4.1.82.Final"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-55163",
          "value": "CVE-2025-55163",
          "url": "https://scout.docker.com/v/CVE-2025-55163?s=github&n=netty-codec-http2&ns=io.netty&t=maven&vr=%3C%3D4.1.123.Final"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-55163?s=github&n=netty-codec-http2&ns=io.netty&t=maven&vr=%3C%3D4.1.123.Final"
        }
      ]
    },
    {
      "id": "251cfbe0d67a0d64d7e437f2aed5b42bf6d23903985abe29077a7616aaa64a82",
      "category": "container_scanning",
      "message": "CVE-2022-1471 on org.yaml/snakeyaml@1.29",
      "description": "### Summary\nSnakeYaml's `Constructor` class, which inherits from `SafeConstructor`, allows\nany type be deserialized given the following line:\n\nnew Yaml(new Constructor(TestDataClass.class)).load(yamlContent);\n\nTypes do not have to match the types of properties in the\ntarget class. A `ConstructorException` is thrown, but only after a malicious\npayload is deserialized.\n\n### Severity\nHigh, lack of type checks during deserialization allows remote code execution.\n\n### Proof of Concept\nExecute `bash run.sh`. The PoC uses Constructor to deserialize a payload\nfor RCE. RCE is demonstrated by using a payload which performs a http request to\nhttp://127.0.0.1:8000.\n\nExample output of successful run of proof of concept:\n\n```\n$ bash run.sh\n\n[+] Downloading snakeyaml if needed\n[+] Starting mock HTTP server on 127.0.0.1:8000 to demonstrate RCE\nnc: no process found\n[+] Compiling and running Proof of Concept, which a payload that sends a HTTP request to mock web server.\n[+] An exception is expected.\nException:\nCannot create property=payload for JavaBean=Main$TestDataClass@3cbbc1e0\n in 'string', line 1, column 1:\n    payload: !!javax.script.ScriptEn ... \n    ^\nCan not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n in 'string', line 1, column 10:\n    payload: !!javax.script.ScriptEngineManag ... \n             ^\n\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:291)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.construct(Constructor.java:172)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructYamlObject.construct(Constructor.java:332)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructObjectNoCheck(BaseConstructor.java:230)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructObject(BaseConstructor.java:220)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.constructDocument(BaseConstructor.java:174)\n\tat org.yaml.snakeyaml.constructor.BaseConstructor.getSingleData(BaseConstructor.java:158)\n\tat org.yaml.snakeyaml.Yaml.loadFromReader(Yaml.java:491)\n\tat org.yaml.snakeyaml.Yaml.load(Yaml.java:416)\n\tat Main.main(Main.java:37)\nCaused by: java.lang.IllegalArgumentException: Can not set java.lang.String field Main$TestDataClass.payload to javax.script.ScriptEngineManager\n\tat java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167)\n\tat java.base/jdk.internal.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171)\n\tat java.base/jdk.internal.reflect.UnsafeObjectFieldAccessorImpl.set(UnsafeObjectFieldAccessorImpl.java:81)\n\tat java.base/java.lang.reflect.Field.set(Field.java:780)\n\tat org.yaml.snakeyaml.introspector.FieldProperty.set(FieldProperty.java:44)\n\tat org.yaml.snakeyaml.constructor.Constructor$ConstructMapping.constructJavaBean2ndStep(Constructor.java:286)\n\t... 9 more\n[+] Dumping Received HTTP Request. Will not be empty if PoC worked\nGET /proof-of-concept HTTP/1.1\nUser-Agent: Java/11.0.14\nHost: localhost:8000\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\nConnection: keep-alive\n```\n\n### Further Analysis\nPotential mitigations include, leveraging SnakeYaml's SafeConstructor while parsing untrusted content.\n\nSee https://bitbucket.org/snakeyaml/snakeyaml/issues/561/cve-2022-1471-vulnerability-in#comment-64581479 for discussion on the subject.\n\n### Timeline\n**Date reported**: 4/11/2022\n**Date fixed**:  [30/12/2022](https://bitbucket.org/snakeyaml/snakeyaml/pull-requests/44)\n**Date disclosed**: 10/13/2022",
      "cve": "CVE-2022-1471",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.yaml/snakeyaml@1.29 to 2.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.yaml/snakeyaml@1.29"
          },
          "version": "1.29"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-1471",
          "value": "CVE-2022-1471",
          "url": "https://scout.docker.com/v/CVE-2022-1471?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C%3D1.33"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-1471?s=github&n=snakeyaml&ns=org.yaml&t=maven&vr=%3C%3D1.33"
        }
      ]
    },
    {
      "id": "e2eff98e49c9fa727bec8c21a2efe1400086587f2419deaf8450dd5a9964a0c2",
      "category": "container_scanning",
      "message": "CVE-2025-41235 on org.springframework.cloud/spring-cloud-gateway-server@3.1.4",
      "description": "Spring Cloud Gateway Server forwards the X-Forwarded-For and Forwarded headers from untrusted proxies.",
      "cve": "CVE-2025-41235",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework.cloud/spring-cloud-gateway-server@3.1.4 to 3.1.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework.cloud/spring-cloud-gateway-server@3.1.4"
          },
          "version": "3.1.4"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-41235",
          "value": "CVE-2025-41235",
          "url": "https://scout.docker.com/v/CVE-2025-41235?s=github&n=spring-cloud-gateway-server&ns=org.springframework.cloud&t=maven&vr=%3C3.1.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-41235?s=github&n=spring-cloud-gateway-server&ns=org.springframework.cloud&t=maven&vr=%3C3.1.10"
        }
      ]
    },
    {
      "id": "98410d99b04a1588679dc9d7b5be7489d675b5e40c0cf5b76d78d92f9f750331",
      "category": "container_scanning",
      "message": "CVE-2025-52999 on com.fasterxml.jackson.core/jackson-core@2.13.4",
      "description": "### Impact\nWith older versions  of jackson-core, if you parse an input file and it has deeply nested data, Jackson could end up throwing a StackoverflowError if the depth is particularly large.\n\n### Patches\njackson-core 2.15.0 contains a configurable limit for how deep Jackson will traverse in an input document, defaulting to an allowable depth of 1000. Change is in https://github.com/FasterXML/jackson-core/pull/943. jackson-core will throw a StreamConstraintsException if the limit is reached.\njackson-databind also benefits from this change because it uses jackson-core to parse JSON inputs.\n\n### Workarounds\nUsers should avoid parsing input files from untrusted sources.",
      "cve": "CVE-2025-52999",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade com.fasterxml.jackson.core/jackson-core@2.13.4 to 2.15.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/com.fasterxml.jackson.core/jackson-core@2.13.4"
          },
          "version": "2.13.4"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-52999",
          "value": "CVE-2025-52999",
          "url": "https://scout.docker.com/v/CVE-2025-52999?s=github&n=jackson-core&ns=com.fasterxml.jackson.core&t=maven&vr=%3C2.15.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-52999?s=github&n=jackson-core&ns=com.fasterxml.jackson.core&t=maven&vr=%3C2.15.0"
        }
      ]
    },
    {
      "id": "53550569f6b4e48d3d76d28faf2f7f0ec6bb3386a065638dc5d837fad4a07bfc",
      "category": "container_scanning",
      "message": "CVE-2016-1000027 on org.springframework/spring-web@5.3.23",
      "description": "Pivotal Spring Framework before 6.0.0 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required.\n\nMaintainers recommend investigating alternative components or a potential mitigating control. Version 4.2.6 and 3.2.17 contain [enhanced documentation](https://github.com/spring-projects/spring-framework/commit/5cbe90b2cd91b866a5a9586e460f311860e11cfa) advising users to take precautions against unsafe Java deserialization, version 5.3.0 [deprecate the impacted classes](https://github.com/spring-projects/spring-framework/issues/25379) and version 6.0.0 [removed it entirely](https://github.com/spring-projects/spring-framework/issues/27422).",
      "cve": "CVE-2016-1000027",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework/spring-web@5.3.23 to 6.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework/spring-web@5.3.23"
          },
          "version": "5.3.23"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2016-1000027",
          "value": "CVE-2016-1000027",
          "url": "https://scout.docker.com/v/CVE-2016-1000027?s=github&n=spring-web&ns=org.springframework&t=maven&vr=%3C6.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2016-1000027?s=github&n=spring-web&ns=org.springframework&t=maven&vr=%3C6.0.0"
        }
      ]
    },
    {
      "id": "562d29465b84723efbd0605f7fe923ebcaecc8e96a6493764c0bbab3fe249317",
      "category": "container_scanning",
      "message": "CVE-2023-20873 on org.springframework.boot/spring-boot-actuator-autoconfigure@2.6.12",
      "description": "In Spring Boot versions 3.0.0 - 3.0.5, 2.7.0 - 2.7.10, and older unsupported versions, an application that is deployed to Cloud Foundry could be susceptible to a security bypass. Users of affected versions should apply the following mitigation: 3.0.x users should upgrade to 3.0.6+. 2.7.x users should upgrade to 2.7.11+. Users of older, unsupported versions should upgrade to 3.0.6+ or 2.7.11+.",
      "cve": "CVE-2023-20873",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade org.springframework.boot/spring-boot-actuator-autoconfigure@2.6.12 to 2.6.15",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:maven/org.springframework.boot/spring-boot-actuator-autoconfigure@2.6.12"
          },
          "version": "2.6.12"
        },
        "operating_system": "alpine 3.22",
        "image": "custom-gateway:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-20873",
          "value": "CVE-2023-20873",
          "url": "https://scout.docker.com/v/CVE-2023-20873?s=github&n=spring-boot-actuator-autoconfigure&ns=org.springframework.boot&t=maven&vr=%3E%3D2.6.0%2C%3C2.6.15"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-20873?s=github&n=spring-boot-actuator-autoconfigure&ns=org.springframework.boot&t=maven&vr=%3E%3D2.6.0%2C%3C2.6.15"
        }
      ]
    }
  ],
  "remediations": [],
  "scan": {
    "start_time": "2025-10-16T21:19:22",
    "end_time": "2025-10-16T21:19:22",
    "status": "success",
    "type": "container_scanning",
    "scanner": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    },
    "analyzer": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    }
  }
}
