{
    "desc": "CVE\u20112024\u201123897 is a critical arbitrary file\u2011read vulnerability in the Jenkins continuous\u2011integration server. The Jenkins core command\u2011line interface (CLI) uses the args4j library to parse command arguments. By default the parser\u2019s **expandAtFiles** feature treats any argument that starts with the character **@** as a reference to a file on the Jenkins controller\u2019s filesystem and replaces the argument with the contents of that file. In all Jenkins releases up to 2.441 (and the Long\u2011Term Support releases up to 2.426.2), this feature is enabled and cannot be disabled without changing the source code or applying the official patch.\n\nAn attacker who can send CLI commands\u2014whether through the built\u2011in HTTP CLI endpoint, the WebSocket interface, or the SSH interface\u2014can supply an argument such as `@/etc/passwd`. The controller reads the specified file and returns its contents to the attacker. The impact varies with the attacker\u2019s permissions: with Overall\u202f/\u202fRead permission the full file is returned, while lower\u2011privilege users receive only the first few lines, which can nevertheless be increased by chaining commands. The disclosed file\u2011read can expose configuration files, private keys, credential stores, and other secrets. If binary secrets (for example the master key used to encrypt Jenkins credentials) are obtained, the attacker can forge authentication tokens and subsequently achieve remote code execution, credential theft, or other privilege\u2011escalation attacks.\n\nExploitation prerequisites are minimal: the target must be running a vulnerable Jenkins version and must allow access to the CLI. No authentication is required to trigger the file\u2011read, although higher\u2011privilege reads need appropriate Jenkins permissions. Mitigation consists of upgrading Jenkins to a version where the **expandAtFiles** feature is disabled by default (Jenkins\u202f2.442, LTS\u202f2.426.3, or 2.440.1) or disabling the CLI entirely. As a temporary workaround administrators can set the Java system property `hudson.cli.CLICommand.allowAtSyntax=true` to re\u2011enable the feature only if the risk is accepted, but this is strongly discouraged for any internet\u2011facing instance.",
    "attack_type": "arbitrary file read",
    "services": [
        {
            "name": "jenkins/jenkins",
            "version": [
                "2.441",
                "2.440",
                "2.439",
                "2.438",
                "2.437",
                "2.436",
                "2.435",
                "2.434",
                "2.433",
                "2.432",
                "2.431",
                "2.430",
                "2.429",
                "2.428",
                "2.427",
                "2.426.2",
                "2.426.1",
                "2.425",
                "2.424",
                "2.423",
                "2.422",
                "2.421",
                "2.420"
            ],
            "dependency_type": "HARD",
            "description": "Core Jenkins service containing the vulnerable CLI parser; required to demonstrate the CVE\u20112024\u201123897 arbitrary file\u2011read flaw."
        },
        {
            "name": "postgres",
            "version": [
                "15"
            ],
            "dependency_type": "SOFT-DB",
            "description": "Optional relational database used by Jenkins for storing build data; needed for a functional Jenkins instance inside Docker."
        }
    ],
    "input_tokens": 12932,
    "output_tokens": 2004,
    "query": "CVE-2024-23897 vulnerability details"
}