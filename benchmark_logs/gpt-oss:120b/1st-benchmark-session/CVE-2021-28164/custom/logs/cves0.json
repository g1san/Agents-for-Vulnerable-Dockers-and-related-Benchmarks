{
  "version": "15.0.6",
  "vulnerabilities": [
    {
      "id": "25400b7850ecb8ede20c417ff57d17d62565e4f4814ad4921aefd97e326d2072",
      "category": "container_scanning",
      "message": "CVE-2023-42282 on ip@1.1.5",
      "description": "The `isPublic()` function in the NPM package `ip` doesn't correctly identify certain private IP addresses in uncommon formats such as `0x7F.1` as private. Instead, it reports them as public by returning `true`. This can lead to security issues such as Server-Side Request Forgery (SSRF) if `isPublic()` is used to protect sensitive code paths when passed user input. Versions 1.1.9 and 2.0.1 fix the issue.",
      "cve": "CVE-2023-42282",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade ip@1.1.5 to 1.1.9",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/ip@1.1.5"
          },
          "version": "1.1.5"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-42282",
          "value": "CVE-2023-42282",
          "url": "https://scout.docker.com/v/CVE-2023-42282?s=github&n=ip&t=npm&vr=%3C1.1.9"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-42282?s=github&n=ip&t=npm&vr=%3C1.1.9"
        }
      ]
    },
    {
      "id": "27f4d462b524264284818ae3d5f913ea1f869f8cc9e355e524b5f5292a47d6ba",
      "category": "container_scanning",
      "message": "CVE-2024-47764 on cookie@0.3.1",
      "description": "### Impact\n\nThe cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. For example, `serialize(\"userName=<script>alert('XSS3')</script>; Max-Age=2592000; a\", value)` would result in `\"userName=<script>alert('XSS3')</script>; Max-Age=2592000; a=test\"`, setting `userName` cookie to `<script>` and ignoring `value`.\n\nA similar escape can be used for `path` and `domain`, which could be abused to alter other fields of the cookie.\n\n### Patches\n\nUpgrade to 0.7.0, which updates the validation for `name`, `path`, and `domain`.\n\n### Workarounds\n\nAvoid passing untrusted or arbitrary values for these fields, ensure they are set by the application instead of user input.\n\n### References\n\n* https://github.com/jshttp/cookie/pull/167",
      "cve": "CVE-2024-47764",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade cookie@0.3.1 to 0.7.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/cookie@0.3.1"
          },
          "version": "0.3.1"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-47764",
          "value": "CVE-2024-47764",
          "url": "https://scout.docker.com/v/CVE-2024-47764?s=github&n=cookie&t=npm&vr=%3C0.7.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-47764?s=github&n=cookie&t=npm&vr=%3C0.7.0"
        }
      ]
    },
    {
      "id": "76be4f32f5f64c28cc7bbd791e6a042dc6a77279b8d9a339660d056dd6961477",
      "category": "container_scanning",
      "message": "CVE-2025-5889 on brace-expansion@1.1.11",
      "description": "A vulnerability was found in juliangruber brace-expansion up to 1.1.11/2.0.1/3.0.0/4.0.0. It has been rated as problematic. Affected by this issue is the function expand of the file index.js. The manipulation leads to inefficient regular expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. Upgrading to version 1.1.12, 2.0.2, 3.0.1 and 4.0.1 is able to address this issue. The name of the patch is `a5b98a4f30d7813266b221435e1eaaf25a1b0ac5`. It is recommended to upgrade the affected component.",
      "cve": "CVE-2025-5889",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade brace-expansion@1.1.11 to 1.1.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/brace-expansion@1.1.11"
          },
          "version": "1.1.11"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-5889",
          "value": "CVE-2025-5889",
          "url": "https://scout.docker.com/v/CVE-2025-5889?s=github&n=brace-expansion&t=npm&vr=%3E%3D1.0.0%2C%3C%3D1.1.11"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-5889?s=github&n=brace-expansion&t=npm&vr=%3E%3D1.0.0%2C%3C%3D1.1.11"
        }
      ]
    },
    {
      "id": "7c3500ceb8ee91a3d2bd39c1b248f699704ef039cf0f68b8d0c226e639ed6f5d",
      "category": "container_scanning",
      "message": "CVE-2024-43796 on express@4.16.0",
      "description": "### Impact\n\nIn express <4.20.0, passing untrusted user input - even after sanitizing it - to `response.redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in express 4.20.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n",
      "cve": "CVE-2024-43796",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade express@4.16.0 to 4.20.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/express@4.16.0"
          },
          "version": "4.16.0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-43796",
          "value": "CVE-2024-43796",
          "url": "https://scout.docker.com/v/CVE-2024-43796?s=github&n=express&t=npm&vr=%3C4.20.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-43796?s=github&n=express&t=npm&vr=%3C4.20.0"
        }
      ]
    },
    {
      "id": "878abbb4942b6f8526b12dc93cc12a5ac4b315f8a8b9b15f7abd0bbe23e4791d",
      "category": "container_scanning",
      "message": "CVE-2024-43799 on send@0.16.0",
      "description": "### Impact\n\npassing untrusted user input - even after sanitizing it - to `SendStream.redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in send 0.19.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n",
      "cve": "CVE-2024-43799",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade send@0.16.0 to 0.19.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/send@0.16.0"
          },
          "version": "0.16.0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-43799",
          "value": "CVE-2024-43799",
          "url": "https://scout.docker.com/v/CVE-2024-43799?s=github&n=send&t=npm&vr=%3C0.19.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-43799?s=github&n=send&t=npm&vr=%3C0.19.0"
        }
      ]
    },
    {
      "id": "261ea6699042b106fdd9a36e878c2043ac9781a0e3ac04b1647272690012f2f3",
      "category": "container_scanning",
      "message": "CVE-2024-43800 on serve-static@1.13.0",
      "description": "### Impact\n\npassing untrusted user input - even after sanitizing it - to `redirect()` may execute untrusted code\n\n### Patches\n\nthis issue is patched in serve-static 1.16.0\n\n### Workarounds\n\nusers are encouraged to upgrade to the patched version of express, but otherwise can workaround this issue by making sure any untrusted inputs are safe, ideally by validating them against an explicit allowlist\n\n### Details\n\nsuccessful exploitation of this vector requires the following:\n\n1. The attacker MUST control the input to response.redirect()\n1. express MUST NOT redirect before the template appears\n1. the browser MUST NOT complete redirection before:\n1. the user MUST click on the link in the template\n",
      "cve": "CVE-2024-43800",
      "severity": "Low",
      "confidence": "Unknown",
      "solution": "Upgrade serve-static@1.13.0 to 1.16.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/serve-static@1.13.0"
          },
          "version": "1.13.0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-43800",
          "value": "CVE-2024-43800",
          "url": "https://scout.docker.com/v/CVE-2024-43800?s=github&n=serve-static&t=npm&vr=%3C1.16.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-43800?s=github&n=serve-static&t=npm&vr=%3C1.16.0"
        }
      ]
    },
    {
      "id": "2c71d0d45111e77aef681d12c10608d8b5dd97e84ba5eec09645637ab77c703d",
      "category": "container_scanning",
      "message": "CVE-2022-4304 on alpine/openssl@1.1.1n-r0",
      "description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\r\nwhich could be sufficient to recover a plaintext across a network in a\r\nBleichenbacher style attack. To achieve a successful decryption an attacker\r\nwould have to be able to send a very large number of trial messages for\r\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\r\nRSA-OEAP and RSASVE.\r\n\r\nFor example, in a TLS connection, RSA is commonly used by a client to send an\r\nencrypted pre-master secret to the server. An attacker that had observed a\r\ngenuine connection between a client and a server could use this flaw to send\r\ntrial messages to the server and record the time taken to process them. After a\r\nsufficiently large number of messages the attacker could recover the pre-master\r\nsecret used for the original connection and thus be able to decrypt the\r\napplication data sent over that connection.\r\n\r\nOpenSSL 3.0, 1.1.1 and 1.0.2 are vulnerable to this issue.\r\n\r\nOpenSSL 3.0 users should upgrade to OpenSSL 3.0.8.\r\nOpenSSL 1.1.1 users should upgrade to OpenSSL 1.1.1t.\r\nOpenSSL 1.0.2 users should upgrade to OpenSSL 1.0.2zg (premium support customers\r\nonly).\r\n\r\nAn initial report of a possible timing side channel was made on 14th July 2020\r\nby Hubert Kario (Red Hat). A refined report identifying a specific timing side\r\nchannel was made on 15th July 2022 by Hubert Kario.\r\nThe fix was developed by Dmitry Belyavsky (Red Hat) and Hubert Kario.",
      "cve": "CVE-2022-4304",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@1.1.1n-r0 to 1.1.1t-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@1.1.1n-r0?os_name=alpine&os_version=3.15"
          },
          "version": "1.1.1n-r0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-4304",
          "value": "CVE-2022-4304",
          "url": "https://scout.docker.com/v/CVE-2022-4304?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1t-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-4304?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1t-r0"
        }
      ]
    },
    {
      "id": "6540ac05390bf72978ccecff047e56907702b3ee61402e1c2d7ae8313d18cb3d",
      "category": "container_scanning",
      "message": "CVE-2022-4450 on alpine/openssl@1.1.1n-r0",
      "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\r\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\r\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\r\npopulated with pointers to buffers containing the relevant decoded data. The\r\ncaller is responsible for freeing those buffers. It is possible to construct a\r\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\r\nwill return a failure code but will populate the header argument with a pointer\r\nto a buffer that has already been freed. If the caller also frees this buffer\r\nthen a double free will occur. This will most likely lead to a crash. This\r\ncould be exploited by an attacker who has the ability to supply malicious PEM\r\nfiles for parsing to achieve a denial of service attack.\r\n\r\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\r\nPEM_read_bio_ex() and therefore these functions are also directly affected.\r\n\r\nThese functions are also called indirectly by a number of other OpenSSL\r\nfunctions including PEM_X509_INFO_read_bio_ex() and\r\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\r\nuses of these functions are not vulnerable because the caller does not free the\r\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\r\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\r\nOpenSSL 3.0.\r\n\r\nThe OpenSSL asn1parse command line application is also impacted by this issue.\r\n\r\nOpenSSL 3.0 and 1.1.1 are vulnerable to this issue.\r\n\r\nOpenSSL 3.0 users should upgrade to OpenSSL 3.0.8.\r\nOpenSSL 1.1.1 users should upgrade to OpenSSL 1.1.1t.\r\n\r\nOpenSSL 1.0.2 is not affected by this issue.\r\n\r\nThis issue was discovered by CarpetFuzz and reported on 8th December 2022 by\r\nDawei Wang. The fix was developed by Kurt Roeckx and Matt Caswell.",
      "cve": "CVE-2022-4450",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@1.1.1n-r0 to 1.1.1t-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@1.1.1n-r0?os_name=alpine&os_version=3.15"
          },
          "version": "1.1.1n-r0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-4450",
          "value": "CVE-2022-4450",
          "url": "https://scout.docker.com/v/CVE-2022-4450?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1t-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-4450?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1t-r0"
        }
      ]
    },
    {
      "id": "ef1178248745864509d06516889cd456f91db3e6874f1bfcfede900f79591263",
      "category": "container_scanning",
      "message": "CVE-2023-0215 on alpine/openssl@1.1.1n-r0",
      "description": "The public API function BIO_new_NDEF is a helper function used for streaming\r\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\r\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\r\nend user applications.\r\n\r\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\r\nBIO onto the front of it to form a BIO chain, and then returns the new head of\r\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\r\nrecipient public key is invalid, the new filter BIO is freed and the function\r\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\r\nis not properly cleaned up and the BIO passed by the caller still retains\r\ninternal pointers to the previously freed filter BIO. If the caller then goes on\r\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\r\nlikely result in a crash.\r\n\r\nThis scenario occurs directly in the internal function B64_write_ASN1() which\r\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\r\nthe BIO. This internal function is in turn called by the public API functions\r\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\r\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\r\n\r\nOther public API functions that may be impacted by this include\r\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\r\ni2d_PKCS7_bio_stream.\r\n\r\nThe OpenSSL cms and smime command line applications are similarly affected.\r\n\r\nOpenSSL 3.0, 1.1.1 and 1.0.2 are vulnerable to this issue.\r\n\r\nOpenSSL 3.0 users should upgrade to OpenSSL 3.0.8.\r\nOpenSSL 1.1.1 users should upgrade to OpenSSL 1.1.1t.\r\nOpenSSL 1.0.2 users should upgrade to OpenSSL 1.0.2zg (premium support customers\r\nonly).\r\n\r\nThis issue was reported on 29th November 2022 by Octavio Galland and\r\nMarcel Böhme (Max Planck Institute for Security and Privacy). The fix was\r\ndeveloped by Viktor Dukhovni and Matt Caswell.",
      "cve": "CVE-2023-0215",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@1.1.1n-r0 to 1.1.1t-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@1.1.1n-r0?os_name=alpine&os_version=3.15"
          },
          "version": "1.1.1n-r0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-0215",
          "value": "CVE-2023-0215",
          "url": "https://scout.docker.com/v/CVE-2023-0215?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1t-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-0215?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1t-r0"
        }
      ]
    },
    {
      "id": "1e61331294760e3a739e40cf0c62ab0604f1dc749ed78dfcaf65674fc3fd0955",
      "category": "container_scanning",
      "message": "CVE-2022-2097 on alpine/openssl@1.1.1n-r0",
      "cve": "CVE-2022-2097",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@1.1.1n-r0 to 1.1.1q-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@1.1.1n-r0?os_name=alpine&os_version=3.15"
          },
          "version": "1.1.1n-r0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-2097",
          "value": "CVE-2022-2097",
          "url": "https://scout.docker.com/v/CVE-2022-2097?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1q-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-2097?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1q-r0"
        }
      ]
    },
    {
      "id": "2bc7c8b9ff3d601159f1c5360bc8fdc100fd9319caf622a66c79df40efb01ad4",
      "category": "container_scanning",
      "message": "CVE-2022-33987 on got@6.7.1",
      "description": "The got package before 11.8.5 and 12.1.0 for Node.js allows a redirect to a UNIX socket.",
      "cve": "CVE-2022-33987",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade got@6.7.1 to 11.8.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/got@6.7.1"
          },
          "version": "6.7.1"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-33987",
          "value": "CVE-2022-33987",
          "url": "https://scout.docker.com/v/CVE-2022-33987?s=github&n=got&t=npm&vr=%3C11.8.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-33987?s=github&n=got&t=npm&vr=%3C11.8.5"
        }
      ]
    },
    {
      "id": "f46ce15c44885f282e925a4e670f709ca0bc670916ecf16497c7a41ed887a37f",
      "category": "container_scanning",
      "message": "CVE-2023-0465 on alpine/openssl@1.1.1n-r0",
      "cve": "CVE-2023-0465",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@1.1.1n-r0 to 1.1.1t-r2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@1.1.1n-r0?os_name=alpine&os_version=3.15"
          },
          "version": "1.1.1n-r0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-0465",
          "value": "CVE-2023-0465",
          "url": "https://scout.docker.com/v/CVE-2023-0465?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1t-r2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-0465?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1t-r2"
        }
      ]
    },
    {
      "id": "ff00afcf5509bc7bf1ee040fc21149b761b3d06423b54cfca60afd0ac233b782",
      "category": "container_scanning",
      "message": "CVE-2023-3446 on alpine/openssl@1.1.1n-r0",
      "cve": "CVE-2023-3446",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@1.1.1n-r0 to 1.1.1u-r2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@1.1.1n-r0?os_name=alpine&os_version=3.15"
          },
          "version": "1.1.1n-r0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-3446",
          "value": "CVE-2023-3446",
          "url": "https://scout.docker.com/v/CVE-2023-3446?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1u-r2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-3446?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1u-r2"
        }
      ]
    },
    {
      "id": "0fb1a19bb32559fb74a2aa21a89bad1870967f86039d52ea3752f21dfbb5ffdf",
      "category": "container_scanning",
      "message": "CVE-2023-3817 on alpine/openssl@1.1.1n-r0",
      "cve": "CVE-2023-3817",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@1.1.1n-r0 to 1.1.1v-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@1.1.1n-r0?os_name=alpine&os_version=3.15"
          },
          "version": "1.1.1n-r0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-3817",
          "value": "CVE-2023-3817",
          "url": "https://scout.docker.com/v/CVE-2023-3817?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1v-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-3817?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1v-r0"
        }
      ]
    },
    {
      "id": "00c61ea52cd6462bd086dc51ead3b50b2dd2425344198af045a9e3489c5cc5a5",
      "category": "container_scanning",
      "message": "CVE-2023-5678 on alpine/openssl@1.1.1n-r0",
      "cve": "CVE-2023-5678",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@1.1.1n-r0 to 1.1.1w-r1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@1.1.1n-r0?os_name=alpine&os_version=3.15"
          },
          "version": "1.1.1n-r0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-5678",
          "value": "CVE-2023-5678",
          "url": "https://scout.docker.com/v/CVE-2023-5678?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1w-r1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-5678?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1w-r1"
        }
      ]
    },
    {
      "id": "b4d4c6b8a5a7264c74bcf14b940492ddeea4157eef64ae5eb1d65f7920049986",
      "category": "container_scanning",
      "message": "CVE-2023-28155 on request@2.88.0",
      "description": "The `request` package through 2.88.2 for Node.js and the `@cypress/request` package prior to 3.0.0 allow a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP).\n\nNOTE: The `request` package is no longer supported by the maintainer.",
      "cve": "CVE-2023-28155",
      "severity": "Medium",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/request@2.88.0"
          },
          "version": "2.88.0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-28155",
          "value": "CVE-2023-28155",
          "url": "https://scout.docker.com/v/CVE-2023-28155?s=github&n=request&t=npm&vr=%3C%3D2.88.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-28155?s=github&n=request&t=npm&vr=%3C%3D2.88.2"
        }
      ]
    },
    {
      "id": "7373970ba5743808b3e860463d21b166a040dfc3b70c6550650b56da89f2dda7",
      "category": "container_scanning",
      "message": "CVE-2024-29041 on express@4.16.0",
      "description": "### Impact\n\nVersions of Express.js prior to 4.19.2 and pre-release alpha and beta versions before 5.0.0-beta.3 are affected by an open redirect vulnerability using malformed URLs.\n\nWhen a user of Express performs a redirect using a user-provided URL Express performs an encode [using `encodeurl`](https://github.com/pillarjs/encodeurl) on the contents before passing it to the `location` header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list.\n\nThe main method impacted is `res.location()` but this is also called from within `res.redirect()`.\n\n### Patches\n\nhttps://github.com/expressjs/express/commit/0867302ddbde0e9463d0564fea5861feb708c2dd\nhttps://github.com/expressjs/express/commit/0b746953c4bd8e377123527db11f9cd866e39f94\n\nAn initial fix went out with `express@4.19.0`, we then patched a feature regression in `4.19.1` and added improved handling for the bypass in `4.19.2`.\n\n### Workarounds\n\nThe fix for this involves pre-parsing the url string with either `require('node:url').parse` or `new URL`. These are steps you can take on your own before passing the user input string to `res.location` or `res.redirect`.\n\n### References\n\nhttps://github.com/expressjs/express/pull/5539\nhttps://github.com/koajs/koa/issues/1800\nhttps://expressjs.com/en/4x/api.html#res.location",
      "cve": "CVE-2024-29041",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade express@4.16.0 to 4.19.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/express@4.16.0"
          },
          "version": "4.16.0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-29041",
          "value": "CVE-2024-29041",
          "url": "https://scout.docker.com/v/CVE-2024-29041?s=github&n=express&t=npm&vr=%3C4.19.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-29041?s=github&n=express&t=npm&vr=%3C4.19.2"
        }
      ]
    },
    {
      "id": "7faf70879b29791b78a9c85ad389e6cc6f6e913aac63ae71912d13a144f3b04c",
      "category": "container_scanning",
      "message": "CVE-2022-38778 on decode-uri-component@0.2.0",
      "description": "A flaw (CVE-2022-38900) was discovered in one of Kibana’s third party dependencies, that could allow an authenticated user to perform a request that crashes the Kibana server process.",
      "cve": "CVE-2022-38778",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade decode-uri-component@0.2.0 to 0.2.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/decode-uri-component@0.2.0"
          },
          "version": "0.2.0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-38778",
          "value": "CVE-2022-38778",
          "url": "https://scout.docker.com/v/CVE-2022-38778?s=gitlab&n=decode-uri-component&t=npm&vr=%3C0.2.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-38778?s=gitlab&n=decode-uri-component&t=npm&vr=%3C0.2.1"
        }
      ]
    },
    {
      "id": "ddfd29c729f08175ed7da7fbfd0c412ef4bbc393bf5d69ed81182f7cac5b68a0",
      "category": "container_scanning",
      "message": "CVE-2023-26136 on tough-cookie@2.4.3",
      "description": "Versions of the package tough-cookie before 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in `rejectPublicSuffixes=false` mode. This issue arises from the manner in which the objects are initialized.",
      "cve": "CVE-2023-26136",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade tough-cookie@2.4.3 to 4.1.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/tough-cookie@2.4.3"
          },
          "version": "2.4.3"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-26136",
          "value": "CVE-2023-26136",
          "url": "https://scout.docker.com/v/CVE-2023-26136?s=github&n=tough-cookie&t=npm&vr=%3C4.1.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-26136?s=github&n=tough-cookie&t=npm&vr=%3C4.1.3"
        }
      ]
    },
    {
      "id": "32228568e173c16d795a0b813cdf0820f6070362052728ad6635426d36ddb4ea",
      "category": "container_scanning",
      "message": "CVE-2023-2650 on alpine/openssl@1.1.1n-r0",
      "cve": "CVE-2023-2650",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@1.1.1n-r0 to 1.1.1u-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@1.1.1n-r0?os_name=alpine&os_version=3.15"
          },
          "version": "1.1.1n-r0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-2650",
          "value": "CVE-2023-2650",
          "url": "https://scout.docker.com/v/CVE-2023-2650?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1u-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-2650?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1u-r0"
        }
      ]
    },
    {
      "id": "ab92b230667e7116fdb379982aa2e3df7bef9458473c02b5fd01b0258a41817f",
      "category": "container_scanning",
      "message": "CVE-2024-28863 on tar@4.4.19",
      "description": "## Description: \nDuring some analysis today on npm's `node-tar` package I came across the folder creation process, Basicly if you provide node-tar with a path like this `./a/b/c/foo.txt` it would create every folder and sub-folder here a, b and c until it reaches the last folder to create `foo.txt`, In-this case I noticed that there's no validation at all on the amount of folders being created, that said we're actually able to CPU and memory consume the system running node-tar and even crash the nodejs client within few seconds of running it using a path with too many sub-folders inside\n\n## Steps To Reproduce:\nYou can reproduce this issue by downloading the tar file I provided in the resources and using node-tar to extract it, you should get the same behavior as the video\n\n## Proof Of Concept:\nHere's a [video](https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/3i7uojw8s52psar6pg8zkdo4h9io?response-content-disposition=attachment%3B%20filename%3D%22tar-dos-poc.webm%22%3B%20filename%2A%3DUTF-8%27%27tar-dos-poc.webm&response-content-type=video%2Fwebm&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSWWGDXHA%2F20240312%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240312T080103Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDcaCXVzLXdlc3QtMiJHMEUCID3xYDc6emXVPOg8iVR5dVk0u3gguTPIDJ0OIE%2BKxj17AiEAi%2BGiay1gGMWhH%2F031fvMYnSsa8U7CnpZpxvFAYqNRwgqsQUIQBADGgwwMTM2MTkyNzQ4NDkiDAaj6OgUL3gg4hhLLCqOBUUrOgWSqaK%2FmxN6nKRvB4Who3LIyzswFKm9LV94GiSVFP3zXYA480voCmAHTg7eBL7%2BrYgV2RtXbhF4aCFMCN3qu7GeXkIdH7xwVMi9zXHkekviSKZ%2FsZtVVjn7RFqOCKhJl%2FCoiLQJuDuju%2FtfdTGZbEbGsPgKHoILYbRp81K51zeRL21okjsOehmypkZzq%2BoGrXIX0ynPOKujxw27uqdF4T%2BF9ynodq01vGgwgVBEjHojc4OKOfr1oW5b%2FtGVV59%2BOBVI1hqIKHRG0Ed4SWmp%2BLd1hazGuZPvp52szmegnOj5qr3ubppnKL242bX%2FuAnQKzKK0HpwolqXjsuEeFeM85lxhqHV%2B1BJqaqSHHDa0HUMLZistMRshRlntuchcFQCR6HBa2c8PSnhpVC31zMzvYMfKsI12h4HB6l%2FudrmNrvmH4LmNpi4dZFcio21DzKj%2FRjWmxjH7l8egDyG%2FIgPMY6Ls4IiN7aR1jijYTrBCgPUUHets3BFvqLzHtPFnG3B7%2FYRPnhCLu%2FgzvKN3F8l38KqeTNMHJaxkuhCvEjpFB2SJbi2QZqZZbLj3xASqXoogzbsyPp0Tzp0tH7EKDhPA7H6wwiZukXfFhhlYzP8on9fO2Ajz%2F%2BTDkDjbfWw4KNJ0cFeDsGrUspqQZb5TAKlUge7iOZEc2TZ5uagatSy9Mg08E4nImBSE5QUHDc7Daya1gyqrETMDZBBUHH2RFkGA9qMpEtNrtJ9G%2BPedz%2FpPY1hh9OCp9Pg1BrX97l3SfVzlAMRfNibhywq6qnE35rVnZi%2BEQ1UgBjs9jD%2FQrW49%2FaD0oUDojVeuFFryzRnQxDbKtYgonRcItTvLT5Y0xaK9P0u6H1197%2FMk3XxmjD9%2Fb%2BvBjqxAQWWkKiIxpC1oHEWK9Jt8UdJ39xszDBGpBqjB6Tvt5ePAXSyX8np%2FrBi%2BAPx06O0%2Ba7pU4NmH800EVXxxhgfj9nMw3CeoUIdxorVKtU2Mxw%2FLaAiPgxPS4rqkt65NF7eQYfegcSYDTm2Z%2BHPbz9HfCaVZ28Zqeko6sR%2F29ML4bguqVvHAM4mWPLNDXH33mjG%2BuzLi8e1BF7tNveg2X9G%2FRdcMkojwKYbu6xN3M6aX2alQg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=1e8235d885f1d61529b7d6b23ea3a0780c300c91d86e925dd8310d5b661ddbe2) show-casing the exploit: \n\n## Impact\n\nDenial of service by crashing the nodejs client when attempting to parse a tar archive, make it run out of heap memory and consuming server CPU and memory resources\n\n## Report resources\n[payload.txt](https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/1e83ayb5dd3350fvj3gst0mqixwk?response-content-disposition=attachment%3B%20filename%3D%22payload.txt%22%3B%20filename%2A%3DUTF-8%27%27payload.txt&response-content-type=text%2Fplain&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSWWGDXHA%2F20240312%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240312T080103Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDcaCXVzLXdlc3QtMiJHMEUCID3xYDc6emXVPOg8iVR5dVk0u3gguTPIDJ0OIE%2BKxj17AiEAi%2BGiay1gGMWhH%2F031fvMYnSsa8U7CnpZpxvFAYqNRwgqsQUIQBADGgwwMTM2MTkyNzQ4NDkiDAaj6OgUL3gg4hhLLCqOBUUrOgWSqaK%2FmxN6nKRvB4Who3LIyzswFKm9LV94GiSVFP3zXYA480voCmAHTg7eBL7%2BrYgV2RtXbhF4aCFMCN3qu7GeXkIdH7xwVMi9zXHkekviSKZ%2FsZtVVjn7RFqOCKhJl%2FCoiLQJuDuju%2FtfdTGZbEbGsPgKHoILYbRp81K51zeRL21okjsOehmypkZzq%2BoGrXIX0ynPOKujxw27uqdF4T%2BF9ynodq01vGgwgVBEjHojc4OKOfr1oW5b%2FtGVV59%2BOBVI1hqIKHRG0Ed4SWmp%2BLd1hazGuZPvp52szmegnOj5qr3ubppnKL242bX%2FuAnQKzKK0HpwolqXjsuEeFeM85lxhqHV%2B1BJqaqSHHDa0HUMLZistMRshRlntuchcFQCR6HBa2c8PSnhpVC31zMzvYMfKsI12h4HB6l%2FudrmNrvmH4LmNpi4dZFcio21DzKj%2FRjWmxjH7l8egDyG%2FIgPMY6Ls4IiN7aR1jijYTrBCgPUUHets3BFvqLzHtPFnG3B7%2FYRPnhCLu%2FgzvKN3F8l38KqeTNMHJaxkuhCvEjpFB2SJbi2QZqZZbLj3xASqXoogzbsyPp0Tzp0tH7EKDhPA7H6wwiZukXfFhhlYzP8on9fO2Ajz%2F%2BTDkDjbfWw4KNJ0cFeDsGrUspqQZb5TAKlUge7iOZEc2TZ5uagatSy9Mg08E4nImBSE5QUHDc7Daya1gyqrETMDZBBUHH2RFkGA9qMpEtNrtJ9G%2BPedz%2FpPY1hh9OCp9Pg1BrX97l3SfVzlAMRfNibhywq6qnE35rVnZi%2BEQ1UgBjs9jD%2FQrW49%2FaD0oUDojVeuFFryzRnQxDbKtYgonRcItTvLT5Y0xaK9P0u6H1197%2FMk3XxmjD9%2Fb%2BvBjqxAQWWkKiIxpC1oHEWK9Jt8UdJ39xszDBGpBqjB6Tvt5ePAXSyX8np%2FrBi%2BAPx06O0%2Ba7pU4NmH800EVXxxhgfj9nMw3CeoUIdxorVKtU2Mxw%2FLaAiPgxPS4rqkt65NF7eQYfegcSYDTm2Z%2BHPbz9HfCaVZ28Zqeko6sR%2F29ML4bguqVvHAM4mWPLNDXH33mjG%2BuzLi8e1BF7tNveg2X9G%2FRdcMkojwKYbu6xN3M6aX2alQg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=bad9fe731f05a63a950f99828125653a8c1254750fe0ca7be882e89ecdd449ae)\n[archeive.tar.gz](https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ymkuh4xnfdcf1soeyi7jc2x4yt2i?response-content-disposition=attachment%3B%20filename%3D%22archive.tar.gz%22%3B%20filename%2A%3DUTF-8%27%27archive.tar.gz&response-content-type=application%2Fx-tar&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSWWGDXHA%2F20240312%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240312T080103Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDcaCXVzLXdlc3QtMiJHMEUCID3xYDc6emXVPOg8iVR5dVk0u3gguTPIDJ0OIE%2BKxj17AiEAi%2BGiay1gGMWhH%2F031fvMYnSsa8U7CnpZpxvFAYqNRwgqsQUIQBADGgwwMTM2MTkyNzQ4NDkiDAaj6OgUL3gg4hhLLCqOBUUrOgWSqaK%2FmxN6nKRvB4Who3LIyzswFKm9LV94GiSVFP3zXYA480voCmAHTg7eBL7%2BrYgV2RtXbhF4aCFMCN3qu7GeXkIdH7xwVMi9zXHkekviSKZ%2FsZtVVjn7RFqOCKhJl%2FCoiLQJuDuju%2FtfdTGZbEbGsPgKHoILYbRp81K51zeRL21okjsOehmypkZzq%2BoGrXIX0ynPOKujxw27uqdF4T%2BF9ynodq01vGgwgVBEjHojc4OKOfr1oW5b%2FtGVV59%2BOBVI1hqIKHRG0Ed4SWmp%2BLd1hazGuZPvp52szmegnOj5qr3ubppnKL242bX%2FuAnQKzKK0HpwolqXjsuEeFeM85lxhqHV%2B1BJqaqSHHDa0HUMLZistMRshRlntuchcFQCR6HBa2c8PSnhpVC31zMzvYMfKsI12h4HB6l%2FudrmNrvmH4LmNpi4dZFcio21DzKj%2FRjWmxjH7l8egDyG%2FIgPMY6Ls4IiN7aR1jijYTrBCgPUUHets3BFvqLzHtPFnG3B7%2FYRPnhCLu%2FgzvKN3F8l38KqeTNMHJaxkuhCvEjpFB2SJbi2QZqZZbLj3xASqXoogzbsyPp0Tzp0tH7EKDhPA7H6wwiZukXfFhhlYzP8on9fO2Ajz%2F%2BTDkDjbfWw4KNJ0cFeDsGrUspqQZb5TAKlUge7iOZEc2TZ5uagatSy9Mg08E4nImBSE5QUHDc7Daya1gyqrETMDZBBUHH2RFkGA9qMpEtNrtJ9G%2BPedz%2FpPY1hh9OCp9Pg1BrX97l3SfVzlAMRfNibhywq6qnE35rVnZi%2BEQ1UgBjs9jD%2FQrW49%2FaD0oUDojVeuFFryzRnQxDbKtYgonRcItTvLT5Y0xaK9P0u6H1197%2FMk3XxmjD9%2Fb%2BvBjqxAQWWkKiIxpC1oHEWK9Jt8UdJ39xszDBGpBqjB6Tvt5ePAXSyX8np%2FrBi%2BAPx06O0%2Ba7pU4NmH800EVXxxhgfj9nMw3CeoUIdxorVKtU2Mxw%2FLaAiPgxPS4rqkt65NF7eQYfegcSYDTm2Z%2BHPbz9HfCaVZ28Zqeko6sR%2F29ML4bguqVvHAM4mWPLNDXH33mjG%2BuzLi8e1BF7tNveg2X9G%2FRdcMkojwKYbu6xN3M6aX2alQg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=5e2c0d4b4de40373ac0fe91908c2659141a6dd4ab850271cc26042a3885c82ea)\n\n## Note\nThis report was originally reported to GitHub bug bounty program, they asked me to report it to you a month ago",
      "cve": "CVE-2024-28863",
      "severity": "Medium",
      "confidence": "Unknown",
      "solution": "Upgrade tar@4.4.19 to 6.2.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/tar@4.4.19"
          },
          "version": "4.4.19"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-28863",
          "value": "CVE-2024-28863",
          "url": "https://scout.docker.com/v/CVE-2024-28863?s=github&n=tar&t=npm&vr=%3C6.2.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-28863?s=github&n=tar&t=npm&vr=%3C6.2.1"
        }
      ]
    },
    {
      "id": "6a41dd55d370a827afd0c24199b54e0b640488c44973d00e79ae9a55a204374d",
      "category": "container_scanning",
      "message": "CVE-2023-0286 on alpine/openssl@1.1.1n-r0",
      "description": "There is a type confusion vulnerability relating to X.400 address processing\r\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\r\nthe public structure definition for GENERAL_NAME incorrectly specified the type\r\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\r\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\r\nASN1_STRING.\r\n\r\nWhen CRL checking is enabled (i.e. the application sets the\r\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\r\narbitrary pointers to a memcmp call, enabling them to read memory contents or\r\nenact a denial of service. In most cases, the attack requires the attacker to\r\nprovide both the certificate chain and CRL, neither of which need to have a\r\nvalid signature. If the attacker only controls one of these inputs, the other\r\ninput must already contain an X.400 address as a CRL distribution point, which\r\nis uncommon. As such, this vulnerability is most likely to only affect\r\napplications which have implemented their own functionality for retrieving CRLs\r\nover a network.\r\n\r\nOpenSSL versions 3.0, 1.1.1 and 1.0.2 are vulnerable to this issue.\r\n\r\nOpenSSL 3.0 users should upgrade to OpenSSL 3.0.8.\r\nOpenSSL 1.1.1 users should upgrade to OpenSSL 1.1.1t.\r\nOpenSSL 1.0.2 users should upgrade to OpenSSL 1.0.2zg (premium support customers\r\nonly).\r\n\r\nThis issue was reported on 11th January 2023 by David Benjamin (Google).\r\nThe fix was developed by Hugo Landau.",
      "cve": "CVE-2023-0286",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@1.1.1n-r0 to 1.1.1t-r0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@1.1.1n-r0?os_name=alpine&os_version=3.15"
          },
          "version": "1.1.1n-r0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-0286",
          "value": "CVE-2023-0286",
          "url": "https://scout.docker.com/v/CVE-2023-0286?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1t-r0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-0286?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1t-r0"
        }
      ]
    },
    {
      "id": "382c70344e83bb90aff808422587616d3f9e56c7a37662e36705044a66a2d549",
      "category": "container_scanning",
      "message": "CVE-2021-3807 on ansi-regex@3.0.0",
      "description": "ansi-regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service when parsing invalid ANSI escape codes.\n\n**Proof of Concept**\n```js\nimport ansiRegex from 'ansi-regex';\nfor(var i = 1; i <= 50000; i++) {\n    var time = Date.now();\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\n    ansiRegex().test(attack_str)\n    var time_cost = Date.now() - time;\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\n}\n```\nThe ReDOS is mainly due to the sub-patterns `[[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`",
      "cve": "CVE-2021-3807",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade ansi-regex@3.0.0 to 3.0.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/ansi-regex@3.0.0"
          },
          "version": "3.0.0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-3807",
          "value": "CVE-2021-3807",
          "url": "https://scout.docker.com/v/CVE-2021-3807?s=github&n=ansi-regex&t=npm&vr=%3E%3D3.0.0%2C%3C3.0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-3807?s=github&n=ansi-regex&t=npm&vr=%3E%3D3.0.0%2C%3C3.0.1"
        }
      ]
    },
    {
      "id": "9a472637dfae5ab62b6634ab761c21c2aafd2d7c56bee3c1fecc59e293b39eea",
      "category": "container_scanning",
      "message": "CVE-2021-3807 on ansi-regex@4.1.0",
      "description": "ansi-regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service when parsing invalid ANSI escape codes.\n\n**Proof of Concept**\n```js\nimport ansiRegex from 'ansi-regex';\nfor(var i = 1; i <= 50000; i++) {\n    var time = Date.now();\n    var attack_str = \"\\u001B[\"+\";\".repeat(i*10000);\n    ansiRegex().test(attack_str)\n    var time_cost = Date.now() - time;\n    console.log(\"attack_str.length: \" + attack_str.length + \": \" + time_cost+\" ms\")\n}\n```\nThe ReDOS is mainly due to the sub-patterns `[[\\\\]()#;?]*` and `(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*`",
      "cve": "CVE-2021-3807",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade ansi-regex@4.1.0 to 4.1.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/ansi-regex@4.1.0"
          },
          "version": "4.1.0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-3807",
          "value": "CVE-2021-3807",
          "url": "https://scout.docker.com/v/CVE-2021-3807?s=github&n=ansi-regex&t=npm&vr=%3E%3D4.0.0%2C%3C4.1.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-3807?s=github&n=ansi-regex&t=npm&vr=%3E%3D4.0.0%2C%3C4.1.1"
        }
      ]
    },
    {
      "id": "3687ddddaa3b5b440dd1dd4c7ec2c535d4f3d61218c0b9c9dce4a6772198ce69",
      "category": "container_scanning",
      "message": "CVE-2022-24999 on qs@6.5.1",
      "description": "qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.",
      "cve": "CVE-2022-24999",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade qs@6.5.1 to 6.5.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/qs@6.5.1"
          },
          "version": "6.5.1"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-24999",
          "value": "CVE-2022-24999",
          "url": "https://scout.docker.com/v/CVE-2022-24999?s=github&n=qs&t=npm&vr=%3E%3D6.5.0%2C%3C6.5.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-24999?s=github&n=qs&t=npm&vr=%3E%3D6.5.0%2C%3C6.5.3"
        }
      ]
    },
    {
      "id": "4904148022c3e7298ce49562363fecb48eae8546dc8535a5b2812e5692ec4417",
      "category": "container_scanning",
      "message": "CVE-2022-24999 on express@4.16.0",
      "description": "qs before 6.10.3, as used in Express before 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an __ proto__ key can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as a[__proto__]=b&a[__proto__]&a[length]=100000000. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4 (and therefore Express 4.17.3, which has \"deps: qs@6.9.7\" in its release description, is not vulnerable).",
      "cve": "CVE-2022-24999",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade express@4.16.0 to 4.17.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/express@4.16.0"
          },
          "version": "4.16.0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-24999",
          "value": "CVE-2022-24999",
          "url": "https://scout.docker.com/v/CVE-2022-24999?s=gitlab&n=express&t=npm&vr=%3C4.17.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-24999?s=gitlab&n=express&t=npm&vr=%3C4.17.3"
        }
      ]
    },
    {
      "id": "66e3bdc9300ec481b981be5054c60c45f7b23989673335a994794c141ce3de84",
      "category": "container_scanning",
      "message": "CVE-2022-24999 on qs@6.5.2",
      "description": "qs before 6.10.3 allows attackers to cause a Node process hang because an `__ proto__` key can be used. In many typical web framework use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as `a[__proto__]=b&a[__proto__]&a[length]=100000000`. The fix was backported to qs 6.9.7, 6.8.3, 6.7.3, 6.6.1, 6.5.3, 6.4.1, 6.3.3, and 6.2.4.",
      "cve": "CVE-2022-24999",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade qs@6.5.2 to 6.5.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/qs@6.5.2"
          },
          "version": "6.5.2"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-24999",
          "value": "CVE-2022-24999",
          "url": "https://scout.docker.com/v/CVE-2022-24999?s=github&n=qs&t=npm&vr=%3E%3D6.5.0%2C%3C6.5.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-24999?s=github&n=qs&t=npm&vr=%3E%3D6.5.0%2C%3C6.5.3"
        }
      ]
    },
    {
      "id": "389dd29d43b7cda59b3e5307a6caa18a35c6a8dc096788f9d824ecaa03730a2e",
      "category": "container_scanning",
      "message": "CVE-2022-25881 on http-cache-semantics@3.8.1",
      "description": "http-cache semantics contains an Inefficient Regular Expression Complexity , leading to Denial of Service. This affects versions of the package http-cache-semantics before 4.1.1. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.",
      "cve": "CVE-2022-25881",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade http-cache-semantics@3.8.1 to 4.1.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/http-cache-semantics@3.8.1"
          },
          "version": "3.8.1"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-25881",
          "value": "CVE-2022-25881",
          "url": "https://scout.docker.com/v/CVE-2022-25881?s=github&n=http-cache-semantics&t=npm&vr=%3C4.1.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-25881?s=github&n=http-cache-semantics&t=npm&vr=%3C4.1.1"
        }
      ]
    },
    {
      "id": "8ebc85677640f2df28f709301eb03287b1b1856c778a4332778ee48b6c4b09ab",
      "category": "container_scanning",
      "message": "CVE-2022-25883 on semver@5.7.1",
      "description": "Versions of the package semver before 7.5.2 on the 7.x branch, before 6.3.1 on the 6.x branch, and all other versions before 5.7.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.",
      "cve": "CVE-2022-25883",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade semver@5.7.1 to 5.7.2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/semver@5.7.1"
          },
          "version": "5.7.1"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-25883",
          "value": "CVE-2022-25883",
          "url": "https://scout.docker.com/v/CVE-2022-25883?s=github&n=semver&t=npm&vr=%3C5.7.2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-25883?s=github&n=semver&t=npm&vr=%3C5.7.2"
        }
      ]
    },
    {
      "id": "622d8f02ea89c8c841d26c73c7426b925ed5eb7edf4d7f85400f3106e1b1bbaa",
      "category": "container_scanning",
      "message": "CVE-2022-3517 on minimatch@3.0.4",
      "description": "A vulnerability was found in the minimatch package. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the braceExpand function with specific arguments, resulting in a Denial of Service.",
      "cve": "CVE-2022-3517",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade minimatch@3.0.4 to 3.0.5",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/minimatch@3.0.4"
          },
          "version": "3.0.4"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-3517",
          "value": "CVE-2022-3517",
          "url": "https://scout.docker.com/v/CVE-2022-3517?s=github&n=minimatch&t=npm&vr=%3C3.0.5"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-3517?s=github&n=minimatch&t=npm&vr=%3C3.0.5"
        }
      ]
    },
    {
      "id": "0bf2035201fc44e323225c0b6ceffee6f1bd65e14c9821533d654fd058ef3731",
      "category": "container_scanning",
      "message": "CVE-2022-38900 on decode-uri-component@0.2.0",
      "description": "decode-uri-component 0.2.0 is vulnerable to Improper Input Validation resulting in DoS.",
      "cve": "CVE-2022-38900",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade decode-uri-component@0.2.0 to 0.2.1",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/decode-uri-component@0.2.0"
          },
          "version": "0.2.0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-38900",
          "value": "CVE-2022-38900",
          "url": "https://scout.docker.com/v/CVE-2022-38900?s=github&n=decode-uri-component&t=npm&vr=%3C0.2.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-38900?s=github&n=decode-uri-component&t=npm&vr=%3C0.2.1"
        }
      ]
    },
    {
      "id": "841b3072fecebddb30fb0414ddb1426dbdf8861e648a7eddfe9e1c50c002f756",
      "category": "container_scanning",
      "message": "CVE-2023-0464 on alpine/openssl@1.1.1n-r0",
      "cve": "CVE-2023-0464",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/openssl@1.1.1n-r0 to 1.1.1t-r2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/openssl@1.1.1n-r0?os_name=alpine&os_version=3.15"
          },
          "version": "1.1.1n-r0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2023-0464",
          "value": "CVE-2023-0464",
          "url": "https://scout.docker.com/v/CVE-2023-0464?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1t-r2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2023-0464?s=alpine&n=openssl&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.1.1t-r2"
        }
      ]
    },
    {
      "id": "508527478dc714f1b821eeef00a09abce7bed78e1884828fdc22284915c71ead",
      "category": "container_scanning",
      "message": "CVE-2024-21538 on cross-spawn@5.1.0",
      "description": "Versions of the package cross-spawn before 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.",
      "cve": "CVE-2024-21538",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade cross-spawn@5.1.0 to 6.0.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/cross-spawn@5.1.0"
          },
          "version": "5.1.0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-21538",
          "value": "CVE-2024-21538",
          "url": "https://scout.docker.com/v/CVE-2024-21538?s=github&n=cross-spawn&t=npm&vr=%3C6.0.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-21538?s=github&n=cross-spawn&t=npm&vr=%3C6.0.6"
        }
      ]
    },
    {
      "id": "8aa8ab3fce338c0eb7881996250323101fae55aadefc35452f2dcc669ee7263b",
      "category": "container_scanning",
      "message": "CVE-2024-45296 on path-to-regexp@0.1.7",
      "description": "### Impact\n\nA bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (`.`). For example, `/:a-:b`.\n\n### Patches\n\nFor users of 0.1, upgrade to `0.1.10`. All other users should upgrade to `8.0.0`.\n\nThese versions add backtrack protection when a custom regex pattern is not provided:\n\n- [0.1.10](https://github.com/pillarjs/path-to-regexp/releases/tag/v0.1.10)\n- [1.9.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v1.9.0)\n- [3.3.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v3.3.0)\n- [6.3.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v6.3.0)\n\nThey do not protect against vulnerable user supplied capture groups. Protecting against explicit user patterns is out of scope for old versions and not considered a vulnerability.\n\nVersion [7.1.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v7.1.0) can enable `strict: true` and get an error when the regular expression might be bad.\n\nVersion [8.0.0](https://github.com/pillarjs/path-to-regexp/releases/tag/v8.0.0) removes the features that can cause a ReDoS.\n\n### Workarounds\n\nAll versions can be patched by providing a custom regular expression for parameters after the first in a single segment. As long as the custom regular expression does not match the text before the parameter, you will be safe. For example, change `/:a-:b` to `/:a-:b([^-/]+)`.\n\nIf paths cannot be rewritten and versions cannot be upgraded, another alternative is to limit the URL length. For example, halving the attack string improves performance by 4x faster.\n\n### Details\n\nUsing `/:a-:b` will produce the regular expression `/^\\/([^\\/]+?)-([^\\/]+?)\\/?$/`. This can be exploited by a path such as `/a${'-a'.repeat(8_000)}/a`. [OWASP](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) has a good example of why this occurs, but the TL;DR is the `/a` at the end ensures this route would never match but due to naive backtracking it will still attempt every combination of the `:a-:b` on the repeated 8,000 `-a`.\n\nBecause JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and can lead to a DoS. In local benchmarks, exploiting the unsafe regex will result in performance that is over 1000x worse than the safe regex. In a more realistic environment using Express v4 and 10 concurrent connections, this translated to average latency of ~600ms vs 1ms.\n\n### References\n\n* [OWASP](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)\n* [Detailed blog post](https://blakeembrey.com/posts/2024-09-web-redos/)",
      "cve": "CVE-2024-45296",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade path-to-regexp@0.1.7 to 0.1.10",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/path-to-regexp@0.1.7"
          },
          "version": "0.1.7"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45296",
          "value": "CVE-2024-45296",
          "url": "https://scout.docker.com/v/CVE-2024-45296?s=github&n=path-to-regexp&t=npm&vr=%3C0.1.10"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45296?s=github&n=path-to-regexp&t=npm&vr=%3C0.1.10"
        }
      ]
    },
    {
      "id": "8ec0af69be6e899b9a5e433d536a18aa0388967c33046f3125951bb3d972537e",
      "category": "container_scanning",
      "message": "CVE-2024-52798 on path-to-regexp@0.1.7",
      "description": "### Impact\n\nThe regular expression that is vulnerable to backtracking can be generated in versions before 0.1.12 of `path-to-regexp`, originally reported in CVE-2024-45296\n\n### Patches\n\nUpgrade to 0.1.12.\n\n### Workarounds\n\nAvoid using two parameters within a single path segment, when the separator is not `.` (e.g. no `/:a-:b`). Alternatively, you can define the regex used for both parameters and ensure they do not overlap to allow backtracking.\n\n### References\n\n- https://github.com/advisories/GHSA-9wv6-86v2-598j\n- https://blakeembrey.com/posts/2024-09-web-redos/",
      "cve": "CVE-2024-52798",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade path-to-regexp@0.1.7 to 0.1.12",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/path-to-regexp@0.1.7"
          },
          "version": "0.1.7"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-52798",
          "value": "CVE-2024-52798",
          "url": "https://scout.docker.com/v/CVE-2024-52798?s=github&n=path-to-regexp&t=npm&vr=%3C0.1.12"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-52798?s=github&n=path-to-regexp&t=npm&vr=%3C0.1.12"
        }
      ]
    },
    {
      "id": "a8372de634738c9368f3a41ce08590dd90b712f2b85d971a771a8708a2be1129",
      "category": "container_scanning",
      "message": "CVE-2024-29415 on ip@1.1.5",
      "description": "The ip package through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via isPublic. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282.",
      "cve": "CVE-2024-29415",
      "severity": "High",
      "confidence": "Unknown",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/ip@1.1.5"
          },
          "version": "1.1.5"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-29415",
          "value": "CVE-2024-29415",
          "url": "https://scout.docker.com/v/CVE-2024-29415?s=github&n=ip&t=npm&vr=%3C%3D2.0.1"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-29415?s=github&n=ip&t=npm&vr=%3C%3D2.0.1"
        }
      ]
    },
    {
      "id": "0f83454fcf6e0d3735e9026a59215237766c1a18dff9b0068ba16926805fe4d9",
      "category": "container_scanning",
      "message": "CVE-2024-45590 on body-parser@1.18.2",
      "description": "### Impact\n\nbody-parser <1.20.3 is vulnerable to denial of service when url encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in denial of service.\n\n### Patches\n\nthis issue is patched in 1.20.3\n\n### References\n",
      "cve": "CVE-2024-45590",
      "severity": "High",
      "confidence": "Unknown",
      "solution": "Upgrade body-parser@1.18.2 to 1.20.3",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/body-parser@1.18.2"
          },
          "version": "1.18.2"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2024-45590",
          "value": "CVE-2024-45590",
          "url": "https://scout.docker.com/v/CVE-2024-45590?s=github&n=body-parser&t=npm&vr=%3C1.20.3"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2024-45590?s=github&n=body-parser&t=npm&vr=%3C1.20.3"
        }
      ]
    },
    {
      "id": "ec7dc93446b5eac008eb84f1c549930348abc306d5dca6ce37400fb781bfdebd",
      "category": "container_scanning",
      "message": "CVE-2025-7783 on form-data@2.3.2",
      "description": "### Summary\n\nform-data uses `Math.random()` to select a boundary value for multipart form-encoded data. This can lead to a security issue if an attacker:\n1. can observe other values produced by Math.random in the target application, and\n2. can control one field of a request made using form-data\n\nBecause the values of Math.random() are pseudo-random and predictable (see: https://blog.securityevaluators.com/hacking-the-javascript-lottery-80cc437e3b7f), an attacker who can observe a few sequential values can determine the state of the PRNG and predict future values, includes those used to generate form-data's boundary value. The allows the attacker to craft a value that contains a boundary value, allowing them to inject additional parameters into the request.\n\nThis is largely the same vulnerability as was [recently found in `undici`](https://hackerone.com/reports/2913312) by [`parrot409`](https://hackerone.com/parrot409?type=user) -- I'm not affiliated with that researcher but want to give credit where credit is due! My PoC is largely based on their work.\n\n### Details\n\nThe culprit is this line here: https://github.com/form-data/form-data/blob/426ba9ac440f95d1998dac9a5cd8d738043b048f/lib/form_data.js#L347\n\nAn attacker who is able to predict the output of Math.random() can predict this boundary value, and craft a payload that contains the boundary value, followed by another, fully attacker-controlled field. This is roughly equivalent to any sort of improper escaping vulnerability, with the caveat that the attacker must find a way to observe other Math.random() values generated by the application to solve for the state of the PRNG. However, Math.random() is used in all sorts of places that might be visible to an attacker (including by form-data itself, if the attacker can arrange for the vulnerable application to make a request to an attacker-controlled server using form-data, such as a user-controlled webhook -- the attacker could observe the boundary values from those requests to observe the Math.random() outputs). A common example would be a `x-request-id` header added by the server. These sorts of headers are often used for distributed tracing, to correlate errors across the frontend and backend. `Math.random()` is a fine place to get these sorts of IDs (in fact, [opentelemetry uses Math.random for this purpose](https://github.com/open-telemetry/opentelemetry-js/blob/2053f0d3a44631ade77ea04f656056a2c8a2ae76/packages/opentelemetry-sdk-trace-base/src/platform/node/RandomIdGenerator.ts#L22))\n\n### PoC\n\nPoC here: https://github.com/benweissmann/CVE-2025-7783-poc\n\nInstructions are in that repo. It's based on the PoC from https://hackerone.com/reports/2913312 but simplified somewhat; the vulnerable application has a more direct side-channel from which to observe Math.random() values (a separate endpoint that happens to include a randomly-generated request ID). \n\n### Impact\n\nFor an application to be vulnerable, it must:\n- Use `form-data` to send data including user-controlled data to some other system. The attacker must be able to do something malicious by adding extra parameters (that were not intended to be user-controlled) to this request. Depending on the target system's handling of repeated parameters, the attacker might be able to overwrite values in addition to appending values (some multipart form handlers deal with repeats by overwriting values instead of representing them as an array)\n- Reveal values of Math.random(). It's easiest if the attacker can observe multiple sequential values, but more complex math could recover the PRNG state to some degree of confidence with non-sequential values. \n\nIf an application is vulnerable, this allows an attacker to make arbitrary requests to internal systems.",
      "cve": "CVE-2025-7783",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade form-data@2.3.2 to 2.5.4",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/form-data@2.3.2"
          },
          "version": "2.3.2"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2025-7783",
          "value": "CVE-2025-7783",
          "url": "https://scout.docker.com/v/CVE-2025-7783?s=github&n=form-data&t=npm&vr=%3C2.5.4"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2025-7783?s=github&n=form-data&t=npm&vr=%3C2.5.4"
        }
      ]
    },
    {
      "id": "c7a5f40bf5049b186630b5349bd078cf4846c7f071cbbfc2a35e826ec658fca3",
      "category": "container_scanning",
      "message": "CVE-2021-44906 on minimist@1.2.5",
      "description": "Minimist prior to 1.2.6 and 0.2.4 is vulnerable to Prototype Pollution via file `index.js`, function `setKey()` (lines 69-95).",
      "cve": "CVE-2021-44906",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade minimist@1.2.5 to 1.2.6",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/minimist@1.2.5"
          },
          "version": "1.2.5"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2021-44906",
          "value": "CVE-2021-44906",
          "url": "https://scout.docker.com/v/CVE-2021-44906?s=github&n=minimist&t=npm&vr=%3E%3D1.0.0%2C%3C1.2.6"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2021-44906?s=github&n=minimist&t=npm&vr=%3E%3D1.0.0%2C%3C1.2.6"
        }
      ]
    },
    {
      "id": "2f80f6e156a287ede01e31cb13a04a7927ddae0f98fb578b781dff766ff03428",
      "category": "container_scanning",
      "message": "CVE-2022-37434 on alpine/zlib@1.2.12-r0",
      "cve": "CVE-2022-37434",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade alpine/zlib@1.2.12-r0 to 1.2.12-r2",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:apk/alpine/zlib@1.2.12-r0?os_name=alpine&os_version=3.15"
          },
          "version": "1.2.12-r0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "CVE-2022-37434",
          "value": "CVE-2022-37434",
          "url": "https://scout.docker.com/v/CVE-2022-37434?s=alpine&n=zlib&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.2.12-r2"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/CVE-2022-37434?s=alpine&n=zlib&ns=alpine&t=apk&osn=alpine&osv=3.15&vr=%3C1.2.12-r2"
        }
      ]
    },
    {
      "id": "5c22e5220215a6eff530cadbd9fab33430d060972085e780604d93dc178e9b0b",
      "category": "container_scanning",
      "message": "GMS-2020-2 on execa@0.7.0",
      "description": "Attackers could trick execa into executing arbitrary binaries. This behaviour is caused by the setting `preferLocal=true` which makes execa search for locally installed binaries and executes them. This vulnerability is usually only exploitable when using execa on a client-side LOCAL application.",
      "cve": "GMS-2020-2",
      "severity": "Critical",
      "confidence": "Unknown",
      "solution": "Upgrade execa@0.7.0 to 2.0.0",
      "scanner": {
        "id": "docker-scout",
        "name": "Docker Scout"
      },
      "location": {
        "dependency": {
          "package": {
            "name": "pkg:npm/execa@0.7.0"
          },
          "version": "0.7.0"
        },
        "operating_system": "alpine 3.15",
        "image": "custom-app:latest"
      },
      "identifiers": [
        {
          "type": "cve",
          "name": "GMS-2020-2",
          "value": "GMS-2020-2",
          "url": "https://scout.docker.com/v/GMS-2020-2?s=gitlab&n=execa&t=npm&vr=%3C2.0.0"
        }
      ],
      "links": [
        {
          "url": "https://scout.docker.com/v/GMS-2020-2?s=gitlab&n=execa&t=npm&vr=%3C2.0.0"
        }
      ]
    }
  ],
  "remediations": [],
  "scan": {
    "start_time": "2025-10-16T19:39:46",
    "end_time": "2025-10-16T19:39:46",
    "status": "success",
    "type": "container_scanning",
    "scanner": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    },
    "analyzer": {
      "id": "docker-scout",
      "name": "Docker Scout",
      "version": "1.18.3",
      "vendor": {
        "name": "Docker"
      }
    }
  }
}
