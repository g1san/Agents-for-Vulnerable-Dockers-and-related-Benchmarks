========== Generated Code (First Version) ==========
Directory tree:
./../../dockers/CVE-2023-42793/openai
├── docker-compose.yml
└── init.sql


---------- docker-compose.yml ----------
version: '3.8'

services:
  teamcity-server:
    image: jetbrains/teamcity-server:2023.05.3-CVE-2023-42793
    ports:
      - "8111:8111"
    environment:
      TEAMCITY_SERVER_OPTS: -Dteamcity.authorization.bypass=true
    depends_on:
      - db

  db:
    image: postgres:15.4
    environment:
      POSTGRES_USER: teamcity
      POSTGRES_PASSWORD: teamcity_pass
      POSTGRES_DB: teamcity_db
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "teamcity"]
      interval: 10s
      retries: 5

volumes:
  db_data:


---------- init.sql ----------
-- init.sql --
CREATE DATABASE teamcity_db;
CREATE USER teamcity WITH ENCRYPTED PASSWORD 'teamcity_pass';
GRANT ALL PRIVILEGES ON DATABASE teamcity_db TO teamcity;





Test iteration #0 failed!
	Error: The error is caused by the Docker image 'jetbrains/teamcity-server:2023.05.3-CVE-2023-42793' not being found in the Docker registry. This indicates that the specific tag with 'CVE-2023-42793' does not exist.
	Fix: To resolve the issue, we need to use the correct image tag that exists in the Docker registry. Since the 'CVE-2023-42793' tag does not exist, we'll use the available '2023.05.3' tag for 'jetbrains/teamcity-server'. We'll keep the 'postgres:15.4' image as it is valid.========== Test Passed! Generated Code (Final Version) ==========
Directory tree:
./../../dockers/CVE-2023-42793/openai
├── docker-compose.yml
└── init.sql


---------- docker-compose.yml ----------
version: '3.8'

services:
  teamcity-server:
    image: jetbrains/teamcity-server:2023.05.3
    ports:
      - "8111:8111"
    environment:
      TEAMCITY_SERVER_OPTS: -Dteamcity.authorization.bypass=true
    depends_on:
      - db

  db:
    image: postgres:15.4
    environment:
      POSTGRES_USER: teamcity
      POSTGRES_PASSWORD: teamcity_pass
      POSTGRES_DB: teamcity_db
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "teamcity"]
      interval: 10s
      retries: 5

volumes:
  db_data:


---------- init.sql ----------
-- init.sql --
CREATE DATABASE teamcity_db;
CREATE USER teamcity WITH ENCRYPTED PASSWORD 'teamcity_pass';
GRANT ALL PRIVILEGES ON DATABASE teamcity_db TO teamcity;


