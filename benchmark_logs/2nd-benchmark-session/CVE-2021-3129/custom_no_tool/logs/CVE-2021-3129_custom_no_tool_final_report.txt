========== Generated Code (First Version) ==========
Directory tree:
./../../dockers/CVE-2021-3129/custom_no_tool
├── docker-compose.yml
└── src
    ├── .env
    ├── Dockerfile
    ├── composer.json
    └── index.php


---------- docker-compose.yml ----------
version: '3.8'

services:
  app:
    image: php:8.0.3-fpm
    container_name: laravel_app
    working_dir: /var/www
    volumes:
      - ./src:/var/www
    depends_on:
      - db

  composer:
    image: composer:2.0
    container_name: composer
    working_dir: /var/www
    volumes:
      - ./src:/var/www
    command: ["composer", "install"]

  db:
    image: mysql:5.7
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql

volumes:
  db_data:


---------- src/.env ----------
APP_NAME=Laravel
APP_ENV=local
APP_KEY=base64:SomeRandomKey=
APP_DEBUG=true
APP_URL=http://localhost

LOG_CHANNEL=stack

DB_CONNECTION=mysql
DB_HOST=db
DB_PORT=3306
DB_DATABASE=laravel
DB_USERNAME=root
DB_PASSWORD=root

BROADCAST_DRIVER=log
CACHE_DRIVER=file
QUEUE_CONNECTION=sync
SESSION_DRIVER=file
SESSION_LIFETIME=120

REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=smtp
MAIL_HOST=mailhog
MAIL_PORT=1025
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=

PUSHER_APP_ID=
PUSHER_APP_KEY=
PUSHER_APP_SECRET=
PUSHER_APP_CLUSTER=mt1

MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"


---------- src/composer.json ----------
{
    "require": {
        "laravel/framework": "7.30.0",
        "facade/ignition": "2.5.1"
    }
}


---------- src/Dockerfile ----------
FROM php:8.0.3-fpm

RUN docker-php-ext-install pdo pdo_mysql

COPY . /var/www

WORKDIR /var/www

CMD ["php", "artisan", "serve", "--host", "0.0.0.0", "--port", "8000"]


---------- src/index.php ----------
<?php

require __DIR__.'/vendor/autoload.php';

$app = require_once __DIR__.'/bootstrap/app.php';

$app->make(Illuminate\Contracts\Http\Kernel::class)->handle(
    Illuminate\Http\Request::capture()
);

// This file is intentionally minimal to focus on the CVE setup.




========== Test Passed! Generated Code (Final Version) ==========
Directory tree:
./../../dockers/CVE-2021-3129/custom_no_tool
├── docker-compose.yml
└── src
    ├── .env
    ├── Dockerfile
    ├── composer.json
    └── index.php


---------- docker-compose.yml ----------
version: '3.8'

services:
  app:
    image: php:8.0.3-fpm
    container_name: laravel_app
    working_dir: /var/www
    volumes:
      - ./src:/var/www
    depends_on:
      - db

  composer:
    image: composer:2.0
    container_name: composer
    working_dir: /var/www
    volumes:
      - ./src:/var/www
    command: ["composer", "install"]

  db:
    image: mysql:5.7
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql

volumes:
  db_data:


---------- src/.env ----------
APP_NAME=Laravel
APP_ENV=local
APP_KEY=base64:SomeRandomKey=
APP_DEBUG=true
APP_URL=http://localhost

LOG_CHANNEL=stack

DB_CONNECTION=mysql
DB_HOST=db
DB_PORT=3306
DB_DATABASE=laravel
DB_USERNAME=root
DB_PASSWORD=root

BROADCAST_DRIVER=log
CACHE_DRIVER=file
QUEUE_CONNECTION=sync
SESSION_DRIVER=file
SESSION_LIFETIME=120

REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=smtp
MAIL_HOST=mailhog
MAIL_PORT=1025
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=

PUSHER_APP_ID=
PUSHER_APP_KEY=
PUSHER_APP_SECRET=
PUSHER_APP_CLUSTER=mt1

MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"


---------- src/composer.json ----------
{
    "require": {
        "laravel/framework": "7.30.0",
        "facade/ignition": "2.5.1"
    }
}


---------- src/Dockerfile ----------
FROM php:8.0.3-fpm

RUN docker-php-ext-install pdo pdo_mysql

COPY . /var/www

WORKDIR /var/www

CMD ["php", "artisan", "serve", "--host", "0.0.0.0", "--port", "8000"]


---------- src/index.php ----------
<?php

require __DIR__.'/vendor/autoload.php';

$app = require_once __DIR__.'/bootstrap/app.php';

$app->make(Illuminate\Contracts\Http\Kernel::class)->handle(
    Illuminate\Http\Request::capture()
);

// This file is intentionally minimal to focus on the CVE setup.


